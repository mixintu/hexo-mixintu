[{"title":"tmp","url":"/2020/04/18/tmp/","content":"\n\n\n\n\n```html\nv-model：双向绑定\nv-html：用于输出 html 代码\nv-bind：用于给html标签设置计算属性，内联字符串拼接，表达式，调用函数，使用对象，使用数组，class 属性绑定，绑定computed属性。\n\n\n\nvar vm = new Vue({\n  el: '#vue_det',\n\n\n  // 用于定义计算属性\n  data: {\n    site: \"菜鸟教程\",\n    url: \"www.runoob.com\",\n    alexa: \"10000\"\n  },\n\n\n\n  // 用于定义的函数,可以通过return来返回函数值。\n  methods: {\n    details: function() {\n      return  this.site + \" - 学的不仅是技术，更是梦想！\";\n    }\n  }\n});\n```\n\n","categories":["Vue"]},{"title":"Java-建造者模式2","url":"/2020/04/08/Java-建造者模式2/","content":"\n\n\n原文：https://www.liangzl.com/get-article-detail-169632.html\n原文：https://zhuanlan.zhihu.com/p/98450781\n\n\n![java设计模式说明](java设计模式说明.png)\n\n\n> 设计模式的六大原则\n>> 1.开闭原则（Open Close Principle）：对扩展开放，对修改关闭。\n>> 2.里氏代换原则（Liskov Substitution Principle）：只有当派生类可以替换掉基类，且软件单位的功能不受到影响时，基类才能真正被复用，而派生类也能够在基类的基础上增加新的行为。里氏代换原则是对开闭原则的补充。\n>> 3.依赖倒转原则（Dependence Inversion Principle）：针对对接口编程，依赖于抽象而不依赖于具体。\n>> 4.接口隔离原则（Interface Segregation Principle）：使用多个隔离的接口，比使用单个接口要好。\n>> 5.迪米特法则，又称最少知道原则（Demeter Principle）：一个实体应当尽量少地与其他实体之间发生相互作用，使得系统功能模块相对独立。\n>> 6.合成复用原则（Composite Reuse Principle）：尽量使用合成/聚合的方式，而不是使用继承。\n\n\n\n```java\npackage com.company;\n\nclass Fruit/*水果*/ {\n\n    private String clean;// 清洗干净的水果\n    private String quality;// 挑选优质的水果\n    private String packaged;// 精品包装的水果\n\n    // 以下是getter和setter方法-+-+-+-+-+-+-+-+-+-+-+-+\n    public String getClean() {\n        return clean;\n    }\n\n    public void setClean(String clean) {\n        this.clean = clean;\n    }\n\n    public String getQuality() {\n        return quality;\n    }\n\n    public void setQuality(String quality) {\n        this.quality = quality;\n    }\n\n    public String getPackaged() {\n        return packaged;\n    }\n\n    public void setPackaged(String packaged) {\n        this.packaged = packaged;\n    }\n}\n\nabstract class FruitBuilder/*创造水果生产线*/ {\n\n    protected Fruit fruit;// 限制其他类不能访问\n\n    public abstract void washFruit();// 清洗工艺\n\n    public abstract void selectionFruit();// 挑选规则\n\n    public abstract void packagedFruit();// 包装工艺\n\n    //构造函数赋值\n    public FruitBuilder() {\n        this.fruit = new Fruit();\n    }\n\n    // 以下是getter和setter方法-+-+-+-+-+-+-+-+-+-+-+-+\n    public Fruit getFruit() {\n        return fruit;\n    }\n\n    public void setFruit(Fruit fruit) {\n        this.fruit = fruit;\n    }\n}\n\nclass AppleBuilder/*苹果流水线*/ extends FruitBuilder {\n\n    @Override\n    public void washFruit() {\n        System.out.println(\"按照清洗工艺清洗苹果\");\n        fruit.setClean(\"清洗干净的苹果\");\n    }\n\n    @Override\n    public void selectionFruit() {\n        System.out.println(\"按照挑选规则挑选苹果\");\n        fruit.setQuality(\"挑选优质的苹果\");\n    }\n\n    @Override\n    public void packagedFruit() {\n        System.out.println(\"按照包装工艺包装苹果\");\n        fruit.setPackaged(\"精品包装的苹果\");\n    }\n}\n\nclass GrapeBuilder/*葡萄流水线*/ extends FruitBuilder {\n\n    @Override\n    public void washFruit() {\n        System.out.println(\"按照清洗工艺清洗葡萄\");\n        fruit.setClean(\"清洗干净的葡萄\");\n    }\n\n    @Override\n    public void selectionFruit() {\n        System.out.println(\"按照挑选规则挑选葡萄\");\n        fruit.setQuality(\"挑选优质的葡萄\");\n    }\n\n    @Override\n    public void packagedFruit() {\n        System.out.println(\"按照包装工艺包装葡萄\");\n        fruit.setPackaged(\"精品包装的葡萄\");\n    }\n}\n\nclass FruitDirector/*设定精良的生产线*/ {\n\n    // 启动水果流水线\n    public Fruit fruitProductionLine(FruitBuilder fruitBuilder) {\n        fruitBuilder.washFruit();\n        fruitBuilder.selectionFruit();\n        fruitBuilder.packagedFruit();\n        return fruitBuilder.getFruit();\n    }\n}\n\npublic class Main {\n    public static void main(String[] args) {\n        // 水果专门的生产线【生产线可以有多条流水线】\n        FruitDirector fruitDirector = new FruitDirector();\n\n\n        // 创建一条苹果流水线\n        AppleBuilder appleBuilder = new AppleBuilder();\n        // 启动苹果流水线\n        Fruit fruit1 = fruitDirector.fruitProductionLine(appleBuilder);\n        System.out.println(fruit1.getClean());// 查看清晰方式\n        System.out.println(fruit1.getQuality());// 查看挑选方式\n        System.out.println(fruit1.getPackaged());// 查看包装方式\n\n        // 创建一条葡萄流水线\n        GrapeBuilder grapeBuilder = new GrapeBuilder();\n        // 启动葡萄流水线\n        Fruit fruit2 = fruitDirector.fruitProductionLine(grapeBuilder);\n        System.out.println(fruit2.getClean());// 查看清晰方式\n        System.out.println(fruit2.getQuality());// 查看挑选方式\n        System.out.println(fruit2.getPackaged());// 查看包装方式\n    }\n\n}\n```\n\n\n### 输出结果：\n```java\n按照清洗工艺清洗苹果\n按照挑选规则挑选苹果\n按照包装工艺包装苹果\n清洗干净的苹果\n挑选优质的苹果\n精品包装的苹果\n按照清洗工艺清洗葡萄\n按照挑选规则挑选葡萄\n按照包装工艺包装葡萄\n清洗干净的葡萄\n挑选优质的葡萄\n精品包装的葡萄\n```","categories":["Java"]},{"title":"Java-建造者模式","url":"/2020/04/08/Java-建造者模式/","content":"\n\n\n原文：https://www.liangzl.com/get-article-detail-169632.html\n原文：https://www.runoob.com/design-pattern/builder-pattern.html\n\n\n![java设计模式说明](java设计模式说明.png)\n\n\n> 设计模式的六大原则\n>> 1.开闭原则（Open Close Principle）：对扩展开放，对修改关闭。\n>> 2.里氏代换原则（Liskov Substitution Principle）：只有当派生类可以替换掉基类，且软件单位的功能不受到影响时，基类才能真正被复用，而派生类也能够在基类的基础上增加新的行为。里氏代换原则是对开闭原则的补充。\n>> 3.依赖倒转原则（Dependence Inversion Principle）：针对对接口编程，依赖于抽象而不依赖于具体。\n>> 4.接口隔离原则（Interface Segregation Principle）：使用多个隔离的接口，比使用单个接口要好。\n>> 5.迪米特法则，又称最少知道原则（Demeter Principle）：一个实体应当尽量少地与其他实体之间发生相互作用，使得系统功能模块相对独立。\n>> 6.合成复用原则（Composite Reuse Principle）：尽量使用合成/聚合的方式，而不是使用继承。\n\n![Java建造者模式-图片方式](Java建造者模式.jpg)\n\n## 源码方式\n```java\npackage com.company;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\ninterface Packing/*食品包装*/ {\n\n    String pack();// 包装\n}\n\nclass Wrapper/*纸质包装*/ implements Packing {\n\n    @Override\n    public String pack() {\n        return \"纸装\";\n    }\n}\n\nclass Bottle/*瓶子包装*/ implements Packing {\n\n    @Override\n    public String pack() {\n        return \"瓶装\";\n    }\n}\n\n\ninterface Item /*食物条目*/ {\n\n    String name();// 食品名称\n\n    float price();// 食品价格\n\n    Packing packing();// 食品包装\n}\n\nabstract class Burger/*汉堡*/ implements Item {\n    /*\n    为什么是抽象类呢：1.想想汉堡的价格不是统一的价格吧，汉堡还是有分素食汉堡和荤食汉堡呢，嘻嘻。2.能实现普通方法功能\n     */\n\n    @Override\n    public abstract String name();\n\n    @Override\n    public abstract float price();\n\n    @Override\n    public Packing packing() {\n        return new Wrapper();\n    }\n}\n\nclass VegBurger/*1.蔬菜汉堡*/ extends Burger {\n\n    @Override\n    public String name() {\n        return \"蔬菜汉堡\";\n    }\n\n    @Override\n    public float price() {\n        return 25.0f;\n    }\n}\n\nclass ChickenBurger/*2.鸡肉汉堡*/ extends Burger {\n\n    @Override\n    public String name() {\n        return \"鸡肉汉堡\";\n    }\n\n    @Override\n    public float price() {\n        return 50.5f;\n    }\n}\n\nabstract class ColdDrink/*冷饮*/ implements Item {\n    /*\n    为什么是抽象类呢：1.想想冷饮的价格不是统一的价格吧，可口可乐和百事可乐也是有大有小的吧，嘻嘻。2.能实现普通方法功能\n     */\n\n    @Override\n    public abstract String name();\n\n    @Override\n    public abstract float price();\n\n    @Override\n    public Packing packing() {\n        return new Bottle();\n    }\n}\n\nclass Coke/*1.可乐冷饮*/ extends ColdDrink {\n\n    @Override\n    public String name() {\n        return \"可口可乐\";\n    }\n\n    @Override\n    public float price() {\n        return 30.0f;\n    }\n}\n\nclass Pepsi/*2.百事冷饮*/ extends ColdDrink {\n\n    @Override\n    public String name() {\n        return \"百事可乐\";\n    }\n\n    @Override\n    public float price() {\n        return 35.0f;\n    }\n}\n\n\nclass Meal/*套餐*/ {\n\n    private List<Item> items = new ArrayList<Item>();\n\n    // 添加一条食品条目\n    public void addItem(Item item) {\n        items.add(item);\n    }\n\n    // 记录套餐的总消费\n    public float getCost() {\n        float cost = 0.0f;\n        for (Item item : items) {\n            cost += item.price();\n        }\n        return cost;\n    }\n\n    // 显示套餐的全部食品条目\n    public void showItems() {\n        for (Item item : items) {\n            System.out.printf(\"\\t食物名称:%s \\t包装:%s \\t价格:%.2f元\\n\", item.name(), item.packing().pack(), item.price());\n        }\n    }\n}\n\nclass MealBuilder/*设定优惠的套餐*/ {\n\n    // 准备素食餐【蔬菜汉堡+可口可乐】\n    public Meal prepareVegMeal() {\n        Meal meal = new Meal();\n        meal.addItem(new VegBurger());\n        meal.addItem(new Coke());\n        return meal;\n    }\n\n    // 准备荤食餐【鸡肉汉堡+百事可乐】\n    public Meal prepareNonVegMeal() {\n        Meal meal = new Meal();\n        meal.addItem(new ChickenBurger());\n        meal.addItem(new Pepsi());\n        return meal;\n    }\n}\n\npublic class BuilderPatternDemo {\n\n    public static void main(String[] args) {\n\n        MealBuilder mealBuilder = new MealBuilder();// 套餐菜单\n\n        Meal vegMeal = mealBuilder.prepareVegMeal();// 素食餐\n        System.out.println(\"经典素食餐：\");\n        vegMeal.showItems();\n        System.out.printf(\"\\t总花费: %.2f元\\n\\n\", vegMeal.getCost());\n\n        Meal nonVegMeal = mealBuilder.prepareNonVegMeal();// 荤食餐\n        System.out.println(\"经典荤食餐：\");\n        nonVegMeal.showItems();\n        System.out.printf(\"\\t总花费: %.2f元\\n\\n\", nonVegMeal.getCost());\n    }\n}\n```\n\n\n### 输出结果：\n```java\n经典素食餐：\n\t食物名称:蔬菜汉堡 \t包装:纸装 \t价格:25.00元\n\t食物名称:可口可乐 \t包装:瓶装 \t价格:30.00元\n\t总花费: 55.00元\n\n经典荤食餐：\n\t食物名称:鸡肉汉堡 \t包装:纸装 \t价格:50.50元\n\t食物名称:百事可乐 \t包装:瓶装 \t价格:35.00元\n\t总花费: 85.50元\n```","categories":["Java"]},{"title":"Java-原型模式2","url":"/2020/04/08/Java-原型模式2/","content":"\n\n\n原文：https://www.liangzl.com/get-article-detail-169632.html\n原文：https://www.cnblogs.com/programmerkaixin/p/10969745.html\n\n\n![java设计模式说明](java设计模式说明.png)\n\n\n> 设计模式的六大原则\n>> 1.开闭原则（Open Close Principle）：对扩展开放，对修改关闭。\n>> 2.里氏代换原则（Liskov Substitution Principle）：只有当派生类可以替换掉基类，且软件单位的功能不受到影响时，基类才能真正被复用，而派生类也能够在基类的基础上增加新的行为。里氏代换原则是对开闭原则的补充。\n>> 3.依赖倒转原则（Dependence Inversion Principle）：针对对接口编程，依赖于抽象而不依赖于具体。\n>> 4.接口隔离原则（Interface Segregation Principle）：使用多个隔离的接口，比使用单个接口要好。\n>> 5.迪米特法则，又称最少知道原则（Demeter Principle）：一个实体应当尽量少地与其他实体之间发生相互作用，使得系统功能模块相对独立。\n>> 6.合成复用原则（Composite Reuse Principle）：尽量使用合成/聚合的方式，而不是使用继承。\n\n\n```java\npackage com.company;\n\nimport java.io.*;\n\ninterface Prototype/*原型*/ {\n    // 浅克隆\n    Prototype getShallowCloneInstance() throws CloneNotSupportedException;\n\n    // 深克隆\n    Prototype getDeepCloneInstance(Prototype prototype);\n}\n\nclass PrototypeUtil/*原型工具类*/ {\n\n    // 通过序列化获取一个深度克隆的对象\n    public static Prototype getSerializableInstance(Prototype prototype) {\n        // 实际的数据流向：ObjectOutputStream->ByteArrayOutputStream->ByteArrayInputStream ->ObjectInputStream\n        try {\n            // 字节数组输出流【创建一个字节数组缓冲区,并获取内存中的缓存数据并转成数组】\n            ByteArrayOutputStream bos = new ByteArrayOutputStream();\n            // 对象输出流\n            ObjectOutputStream oos = new ObjectOutputStream(bos);\n            //将指定的对象写入字节数组输出流，进行序列化\n            oos.writeObject(prototype);\n\n            // 字节数组输入流【将字节数组转化为输入流】\n            ByteArrayInputStream bis = new ByteArrayInputStream(bos.toByteArray());\n            // 对象输入流【执行反序列化，从字节数组输入流中读取对象】\n            ObjectInputStream ois = new ObjectInputStream(bis);\n\n//            bos.flush();\n//            bos.close();\n//            ois.close();\n            return (Prototype) ois.readObject();\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n        return null;\n    }\n}\n\nclass Image/*电子发票印章图片*/ implements Serializable, Cloneable, Prototype {\n\n    private String color = \"red\";// 颜色\n    private Integer height = 10;// 高度\n    private Integer width = 8;// 宽度\n\n    @Override // 浅克隆\n    public Prototype getShallowCloneInstance() throws CloneNotSupportedException {\n        return (Prototype) clone();\n    }\n\n    @Override // 深克隆\n    public Prototype getDeepCloneInstance(Prototype prototype) {\n        return PrototypeUtil.getSerializableInstance(prototype);\n    }\n\n    @Override\n    protected Object clone() throws CloneNotSupportedException {\n        return super.clone();\n    }\n\n    @Override\n    public String toString() {\n        return \"电子发票印章图片： {\" +\n                \"color='\" + color + '\\'' +\n                \", height=\" + height +\n                \", width=\" + width +\n                '}';\n    }\n\n    // 以下是getter和setter方法-+-+-+-+-+-+-+-+-+-+-+-+\n    public String getColor() {\n        return color;\n    }\n\n    public void setColor(String color) {\n        this.color = color;\n    }\n\n    public Integer getHeight() {\n        return height;\n    }\n\n    public void setHeight(Integer height) {\n        this.height = height;\n    }\n\n    public Integer getWidth() {\n        return width;\n    }\n\n    public void setWidth(Integer width) {\n        this.width = width;\n    }\n}\n\nclass Seal/*电子印章*/ implements Serializable, Cloneable, Prototype {\n\n    private String name;// 印章名称\n    private Image image;// 已知图片【引用类型】\n\n\n    @Override // 浅克隆\n    public Prototype getShallowCloneInstance() throws CloneNotSupportedException {\n        return (Prototype) clone();\n    }\n\n    @Override // 深克隆\n    public Prototype getDeepCloneInstance(Prototype prototype) {\n        return PrototypeUtil.getSerializableInstance(prototype);\n    }\n\n    @Override\n    protected Object clone() throws CloneNotSupportedException {\n        return super.clone();\n    }\n\n    @Override\n    public String toString() {\n        return \"电子印章： {\" +\n                \"name='\" + name + '\\'' +\n                \", image=\" + image +\n                '}';\n    }\n\n    // 以下是getter和setter方法-+-+-+-+-+-+-+-+-+-+-+-+\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public Image getImage() {\n        return image;\n    }\n\n    public void setImage(Image image) {\n        this.image = image;\n    }\n}\n\nclass Invoice/*电子发票*/ implements Serializable, Cloneable, Prototype {\n\n    private int ticketNo;// 票号\n    private String ticketHeader;// 票头\n    private String name;// 发票联名称\n    private String color;// 发票联颜色\n    private String company;// 发票联公司\n    private Boolean effective;// 是否有效\n    private Seal companySeal;// 公司印章【引用类型】\n    private Seal supervisedSeal;// 监制印章【引用类型】\n\n    @Override // 浅克隆\n    public Prototype getShallowCloneInstance() throws CloneNotSupportedException {\n        return (Prototype) clone();\n    }\n\n    @Override // 深克隆\n    public Prototype getDeepCloneInstance(Prototype prototype) {\n        return PrototypeUtil.getSerializableInstance(prototype);\n    }\n\n    @Override\n    protected Object clone() throws CloneNotSupportedException {\n        return super.clone();\n    }\n\n    @Override\n    public String toString() {\n        return \"电子发票： {\" +\n                \"ticketHeader='\" + ticketHeader + '\\'' +\n                \", ticketNo=\" + ticketNo +\n                \", name='\" + name + '\\'' +\n                \", color='\" + color + '\\'' +\n                \", company='\" + company + '\\'' +\n                \", companySeal=\" + companySeal +\n                \", supervisedSeal=\" + supervisedSeal +\n                \", effective=\" + effective +\n                '}';\n    }\n\n    // 以下是getter和setter方法-+-+-+-+-+-+-+-+-+-+-+-+\n    public String getTicketHeader() {\n        return ticketHeader;\n    }\n\n    public void setTicketHeader(String ticketHeader) {\n        this.ticketHeader = ticketHeader;\n    }\n\n    public int getTicketNo() {\n        return ticketNo;\n    }\n\n    public void setTicketNo(int ticketNo) {\n        this.ticketNo = ticketNo;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public String getColor() {\n        return color;\n    }\n\n    public void setColor(String color) {\n        this.color = color;\n    }\n\n    public String getCompany() {\n        return company;\n    }\n\n    public void setCompany(String company) {\n        this.company = company;\n    }\n\n    public Seal getCompanySeal() {\n        return companySeal;\n    }\n\n    public void setCompanySeal(Seal companySeal) {\n        this.companySeal = companySeal;\n    }\n\n    public Seal getSupervisedSeal() {\n        return supervisedSeal;\n    }\n\n    public void setSupervisedSeal(Seal supervisedSeal) {\n        this.supervisedSeal = supervisedSeal;\n    }\n\n    public Boolean getEffective() {\n        return effective;\n    }\n\n    public void setEffective(Boolean effective) {\n        this.effective = effective;\n    }\n}\n\npublic class PrototypeClientTest {\n    public static void main(String[] args) throws CloneNotSupportedException {\n\n        Invoice invoice = new Invoice();// 电子发票\n\n        invoice.setTicketNo(1);// 票号\n        invoice.setColor(\"blue\");// 发票联颜色\n        invoice.setCompanySeal(new Seal());// 公司印章\n        invoice.setEffective(false);// 是否有效\n        // 1.测试浅克隆\n        Invoice invoiceClone = (Invoice) invoice.getShallowCloneInstance();\n        // 2.测试深克隆\n//        Invoice invoiceClone = (Invoice) invoice.getDeepCloneInstance(invoice);\n//\n        // -+-+-+-+-++-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-++-+-+-+-+-+-+-+-+-+-+--++-+--+-++-+-+-+-+-+-+-+-\n        System.out.println(\"1.验证int类型是否相等:\");\n        System.out.printf(\"\\t票号:%s\\t\", invoice.getTicketNo());\n        System.out.printf(\"\\t克隆出来的票号:%s\\t\", invoiceClone.getTicketNo());\n        System.out.printf(\"\\t验证int类型:%s\\n\", (invoice.getTicketNo() == invoiceClone.getTicketNo()));\n\n        System.out.println(\"2.验证String类型是否相等:\");\n        System.out.printf(\"\\t发票联颜色:%s\\t\", invoice.getColor().hashCode());\n        System.out.printf(\"\\t克隆出来的发票联颜色:%s\\t\", invoiceClone.getColor().hashCode());\n        System.out.printf(\"\\t验证String类型:%s\\n\", (invoiceClone.getColor().equals(invoice.getColor())));\n\n        System.out.println(\"3.验证引用数据类型是否相等:\");\n        System.out.printf(\"\\t公司印章:%s\\t\", invoice.getCompanySeal().hashCode());\n        System.out.printf(\"\\t克隆出来的公司印章:%s\\t\", invoiceClone.getCompanySeal().hashCode());\n        System.out.printf(\"\\t验证引用数据类型:%s\\n\", (invoice.getCompanySeal() == invoiceClone.getCompanySeal()));\n\n        System.out.println(\"4.验证boolean类型是否相等:\");\n        System.out.printf(\"\\t是否有效:%s\\t\", invoice.getEffective().hashCode());\n        System.out.printf(\"\\t克隆出来的是否有效:%s\\t\", invoiceClone.getEffective().hashCode());\n        System.out.printf(\"\\t验证boolean类型:%s\\n\\n\", (invoice.getEffective().equals(invoiceClone.getEffective())));\n\n\n        // -+-+-+-+-++-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-++-+-+-+-+-+-+-+-+-+-+--++-+--+-++-+-+-+-+-+-+-+-\n        invoice.setTicketNo(2);// 票号\n        System.out.printf(\"1.修改后验证int类型:\\n\\t%s\\n\\t%s\\n\", invoice, invoiceClone);\n        invoice.setColor(\"green\");// 发票联颜色\n        System.out.printf(\"2.修改后验证String类型:\\n\\t%s\\n\\t%s\\n\", invoice, invoiceClone);\n        invoice.getCompanySeal().setName(\"迷心兔\");// 公司印章名称\n        System.out.printf(\"3.修改后验证引用数据类型:\\n\\t%s\\n\\t%s\\n\", invoice, invoiceClone);\n        invoice.setEffective(true);// 是否有效\n        System.out.printf(\"4.修改后验证boolean类型包装类:\\n\\t%s\\n\\t%s\\n\", invoice, invoiceClone);\n    }\n}\n```\n\n\n\n\n### 浅克隆输出结果：\n```java\n1.验证int类型是否相等:\n\t票号:1\t\t克隆出来的票号:1\t\t验证int类型:true\n2.验证String类型是否相等:\n\t发票联颜色:3027034\t\t克隆出来的发票联颜色:3027034\t\t验证String类型:true\n3.验证引用数据类型是否相等:\n\t公司印章:1342443276\t\t克隆出来的公司印章:1342443276\t\t验证引用数据类型:true\n4.验证boolean类型是否相等:\n\t是否有效:1237\t\t克隆出来的是否有效:1237\t\t验证boolean类型:true\n\n1.修改后验证int类型:\n\t电子发票： {ticketHeader='null', ticketNo=2, name='null', color='blue', company='null', companySeal=电子印章： {name='null', image=null}, supervisedSeal=null, effective=false}\n\t电子发票： {ticketHeader='null', ticketNo=1, name='null', color='blue', company='null', companySeal=电子印章： {name='null', image=null}, supervisedSeal=null, effective=false}\n2.修改后验证String类型:\n\t电子发票： {ticketHeader='null', ticketNo=2, name='null', color='green', company='null', companySeal=电子印章： {name='null', image=null}, supervisedSeal=null, effective=false}\n\t电子发票： {ticketHeader='null', ticketNo=1, name='null', color='blue', company='null', companySeal=电子印章： {name='null', image=null}, supervisedSeal=null, effective=false}\n3.修改后验证引用数据类型:\n\t电子发票： {ticketHeader='null', ticketNo=2, name='null', color='green', company='null', companySeal=电子印章： {name='迷心兔', image=null}, supervisedSeal=null, effective=false}\n\t电子发票： {ticketHeader='null', ticketNo=1, name='null', color='blue', company='null', companySeal=电子印章： {name='迷心兔', image=null}, supervisedSeal=null, effective=false}\n4.修改后验证boolean类型包装类:\n\t电子发票： {ticketHeader='null', ticketNo=2, name='null', color='green', company='null', companySeal=电子印章： {name='迷心兔', image=null}, supervisedSeal=null, effective=true}\n\t电子发票： {ticketHeader='null', ticketNo=1, name='null', color='blue', company='null', companySeal=电子印章： {name='迷心兔', image=null}, supervisedSeal=null, effective=false}\n\n```\n\n\n### 深克隆输出结果：\n```java\n1.验证int类型是否相等:\n\t票号:1\t\t克隆出来的票号:1\t\t验证int类型:true\n2.验证String类型是否相等:\n\t发票联颜色:3027034\t\t克隆出来的发票联颜色:3027034\t\t验证String类型:true\n3.验证引用数据类型是否相等:\n\t公司印章:1494279232\t\t克隆出来的公司印章:1177096266\t\t验证引用数据类型:false\n4.验证boolean类型是否相等:\n\t是否有效:1237\t\t克隆出来的是否有效:1237\t\t验证boolean类型:true\n\n1.修改后验证int类型:\n\t电子发票： {ticketHeader='null', ticketNo=2, name='null', color='blue', company='null', companySeal=电子印章： {name='null', image=null}, supervisedSeal=null, effective=false}\n\t电子发票： {ticketHeader='null', ticketNo=1, name='null', color='blue', company='null', companySeal=电子印章： {name='null', image=null}, supervisedSeal=null, effective=false}\n2.修改后验证String类型:\n\t电子发票： {ticketHeader='null', ticketNo=2, name='null', color='green', company='null', companySeal=电子印章： {name='null', image=null}, supervisedSeal=null, effective=false}\n\t电子发票： {ticketHeader='null', ticketNo=1, name='null', color='blue', company='null', companySeal=电子印章： {name='null', image=null}, supervisedSeal=null, effective=false}\n3.修改后验证引用数据类型:\n\t电子发票： {ticketHeader='null', ticketNo=2, name='null', color='green', company='null', companySeal=电子印章： {name='迷心兔', image=null}, supervisedSeal=null, effective=false}\n\t电子发票： {ticketHeader='null', ticketNo=1, name='null', color='blue', company='null', companySeal=电子印章： {name='null', image=null}, supervisedSeal=null, effective=false}\n4.修改后验证boolean类型包装类:\n\t电子发票： {ticketHeader='null', ticketNo=2, name='null', color='green', company='null', companySeal=电子印章： {name='迷心兔', image=null}, supervisedSeal=null, effective=true}\n\t电子发票： {ticketHeader='null', ticketNo=1, name='null', color='blue', company='null', companySeal=电子印章： {name='null', image=null}, supervisedSeal=null, effective=false}\n\n```\n","categories":["Java"]},{"title":"Java-原型模式","url":"/2020/04/08/Java-原型模式/","content":"\n\n\n原文：https://www.liangzl.com/get-article-detail-169632.html\n原文：https://www.runoob.com/design-pattern/prototype-pattern.html\n\n\n![java设计模式说明](java设计模式说明.png)\n\n\n> 设计模式的六大原则\n>> 1.开闭原则（Open Close Principle）：对扩展开放，对修改关闭。\n>> 2.里氏代换原则（Liskov Substitution Principle）：只有当派生类可以替换掉基类，且软件单位的功能不受到影响时，基类才能真正被复用，而派生类也能够在基类的基础上增加新的行为。里氏代换原则是对开闭原则的补充。\n>> 3.依赖倒转原则（Dependence Inversion Principle）：针对对接口编程，依赖于抽象而不依赖于具体。\n>> 4.接口隔离原则（Interface Segregation Principle）：使用多个隔离的接口，比使用单个接口要好。\n>> 5.迪米特法则，又称最少知道原则（Demeter Principle）：一个实体应当尽量少地与其他实体之间发生相互作用，使得系统功能模块相对独立。\n>> 6.合成复用原则（Composite Reuse Principle）：尽量使用合成/聚合的方式，而不是使用继承。\n\n\n\n```java\npackage com.company;\n\n\nimport java.util.Hashtable;\n\nabstract class Shape/*图形*/ implements Cloneable {\n\n    private String id;// 缓存时需要用到的ID\n    protected String type;\n\n    abstract void draw();\n\n    public Object clone() {\n        Object clone = null;\n        try {\n            clone = super.clone();\n        } catch (CloneNotSupportedException e) {\n            e.printStackTrace();\n        }\n        return clone;\n    }\n\n    // 以下是getter和setter方法-+-+-+-+-+-+-+-+-+-+-+-+\n    public String getId() {\n        return id;\n    }\n\n    public void setId(String id) {\n        this.id = id;\n    }\n\n    public String getType() {\n        return type;\n    }\n    // 图案的类型不要给调用者使用，哈哈\n//    public void setType(String type) {\n//        this.type = type;\n//    }\n}\n\nclass Rectangle/*长方形*/ extends Shape {\n\n    public Rectangle() {\n        type = \"长方形\";\n    }\n\n    @Override\n    void draw() {\n        System.out.println(\"长方形::绘画中...\");\n    }\n}\n\nclass Square/*正方形*/ extends Shape {\n\n    public Square() {\n        type = \"正方形\";\n    }\n\n    @Override\n    void draw() {\n        System.out.println(\"正方形::绘画中...\");\n    }\n}\n\nclass Circle/*圆形*/ extends Shape {\n\n    public Circle() {\n        type = \"圆形\";\n    }\n\n    @Override\n    void draw() {\n        System.out.println(\"圆形::绘画中...\");\n    }\n}\n\nclass ShapeCache/*图形缓存*/ {\n    private static Hashtable<String, Shape> shapeHashtable = new Hashtable<String, Shape>();\n\n    public static Shape getShape(String shapeId) {\n        Shape cachedShape = shapeHashtable.get(shapeId);\n        return (Shape) cachedShape.clone();// 浅拷贝\n    }\n\n    // 加载到缓存中\n    public static void loadCache() {\n        Circle circle = new Circle();\n        circle.setId(\"1\");\n        shapeHashtable.put(circle.getId(), circle);\n\n        Square square = new Square();\n        square.setId(\"2\");\n        shapeHashtable.put(square.getId(), square);\n\n        Rectangle rectangle = new Rectangle();\n        rectangle.setId(\"3\");\n        shapeHashtable.put(rectangle.getId(), rectangle);\n    }\n}\n\npublic class PrototypePatternDemo {\n    public static void main(String[] args) {\n\n        // 把全部图形加载到缓存中\n        ShapeCache.loadCache();\n\n\n        // 根据ID从缓存中获取图形对象，并查看相应的图案类型\n        Shape clonedShape = (Shape) ShapeCache.getShape(\"1\");\n        System.out.println(\"图形是: \" + clonedShape.getType());\n\n        Shape clonedShape2 = (Shape) ShapeCache.getShape(\"2\");\n        System.out.println(\"图形是: \" + clonedShape2.getType());\n\n        Shape clonedShape3 = (Shape) ShapeCache.getShape(\"3\");\n        System.out.println(\"图形是: \" + clonedShape3.getType());\n    }\n}\n```\n\n\n### 输出结果：\n```java\n图形是: 圆形\n图形是: 正方形\n图形是: 长方形\n```","categories":["Java"]},{"title":"Java-抽象工厂模式","url":"/2020/04/07/Java-抽象工厂模式/","content":"\n\n\n原文：https://www.liangzl.com/get-article-detail-169632.html\n原文：https://www.runoob.com/design-pattern/abstract-factory-pattern.html\n\n\n![java设计模式说明](java设计模式说明.png)\n\n\n> 设计模式的六大原则\n>> 1.开闭原则（Open Close Principle）：对扩展开放，对修改关闭。\n>> 2.里氏代换原则（Liskov Substitution Principle）：只有当派生类可以替换掉基类，且软件单位的功能不受到影响时，基类才能真正被复用，而派生类也能够在基类的基础上增加新的行为。里氏代换原则是对开闭原则的补充。\n>> 3.依赖倒转原则（Dependence Inversion Principle）：针对对接口编程，依赖于抽象而不依赖于具体。\n>> 4.接口隔离原则（Interface Segregation Principle）：使用多个隔离的接口，比使用单个接口要好。\n>> 5.迪米特法则，又称最少知道原则（Demeter Principle）：一个实体应当尽量少地与其他实体之间发生相互作用，使得系统功能模块相对独立。\n>> 6.合成复用原则（Composite Reuse Principle）：尽量使用合成/聚合的方式，而不是使用继承。\n\n\n\n![Java抽象工厂模式-图片方式](Java抽象工厂模式.jpg)\n\n## 源码方式\n```java\npackage com.company;\n\ninterface Shape/*图形工厂接口*/ {\n    /*\n    抽象图形角色：定义需要执行的所有图形行为的接口\n     */\n    void draw();\n}\n\nclass Rectangle implements Shape {\n    /*\n    具体图形角色：实现接口方法，创建具体功能由自己完成\n     */\n    @Override\n    public void draw() {\n        System.out.println(\"长方形::绘画中...\");\n    }\n}\n\nclass Square implements Shape {\n    /*\n    具体图形角色：实现接口方法，创建具体功能由自己完成\n     */\n    @Override\n    public void draw() {\n        System.out.println(\"正方形::绘画中...\");\n    }\n}\n\nclass Circle implements Shape {\n    /*\n    具体图形角色：实现接口方法，创建具体功能由自己完成\n     */\n    @Override\n    public void draw() {\n        System.out.println(\"圆形::绘画中...\");\n    }\n}\n\ninterface Color/*颜色工厂接口*/ {\n    /*\n    抽象颜色角色：定义需要执行的所有颜色行为的接口\n     */\n    void fill();\n}\n\nclass Red implements Color {\n    /*\n    具体颜色角色：实现接口方法，创建具体功能由自己完成\n     */\n    @Override\n    public void fill() {\n        System.out.println(\"红色::涂鸦中...\");\n    }\n}\n\nclass Green implements Color {\n    /*\n    具体颜色角色：实现接口方法，创建具体功能由自己完成\n     */\n    @Override\n    public void fill() {\n        System.out.println(\"绿色::涂鸦中...\");\n    }\n}\n\nclass Blue implements Color {\n    /*\n    具体颜色角色：实现接口方法，创建具体功能由自己完成\n     */\n    @Override\n    public void fill() {\n        System.out.println(\"蓝色::涂鸦中...\");\n    }\n}\n\nabstract class AbstractFactory/*抽象工厂类*/ {\n    /*\n    抽象工厂类：给出抽象方法，由调用者使用\n     */\n    public abstract Color getColor(String color);\n\n    public abstract Shape getShape(String shape);\n}\n\nclass ShapeFactory/*图形工厂类*/ extends AbstractFactory {\n    /*\n    工厂类：在创建对象时不会对调用者暴露创建逻辑，并且是通过使用一个共同的接口来指向新创建的对象\n     */\n    @Override\n    public Shape getShape(String shapeType) {\n        if (shapeType == null) return null;\n\n        // equalsIgnoreCase：忽略大小写并判断是否相等\n        if (shapeType.equalsIgnoreCase(\"CIRCLE\")) {\n            return new Circle();\n        } else if (shapeType.equalsIgnoreCase(\"RECTANGLE\")) {\n            return new Rectangle();\n        } else if (shapeType.equalsIgnoreCase(\"SQUARE\")) {\n            return new Square();\n        }\n        return null;\n    }\n\n    @Override\n    public Color getColor(String color) {\n        return null;\n    }\n}\n\nclass ColorFactory/*颜色工厂类*/ extends AbstractFactory {\n    /*\n    工厂类：在创建对象时不会对调用者暴露创建逻辑，并且是通过使用一个共同的接口来指向新创建的对象\n     */\n    @Override\n    public Color getColor(String color) {\n        if (color == null) return null;\n\n        // equalsIgnoreCase：忽略大小写并判断是否相等\n        if (color.equalsIgnoreCase(\"RED\")) {\n            return new Red();\n        } else if (color.equalsIgnoreCase(\"GREEN\")) {\n            return new Green();\n        } else if (color.equalsIgnoreCase(\"BLUE\")) {\n            return new Blue();\n        }\n        return null;\n    }\n\n    @Override\n    public Shape getShape(String shapeType) {\n        return null;\n    }\n}\n\nclass FactoryProducer/*工厂创造器*/ {\n    /*\n    创造器：在创建工厂时，调用者可以选择任意工厂\n     */\n    public static AbstractFactory getFactory(String choice) {\n        // equalsIgnoreCase：忽略大小写并判断是否相等\n        if (choice.equalsIgnoreCase(\"SHAPE\")) {\n            return new ShapeFactory();\n        } else if (choice.equalsIgnoreCase(\"COLOR\")) {\n            return new ColorFactory();\n        }\n        return null;\n    }\n}\n\npublic class AbstractFactoryPatternDemo {\n    public static void main(String[] args) {\n        // 1.获取形状工厂-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-\n        AbstractFactory shapeFactory = FactoryProducer.getFactory(\"SHAPE\");\n\n        // a.获取 Circle 的对象，并调用它的 draw 方法\n        Shape shape1 = shapeFactory.getShape(\"CIRCLE\");\n        shape1.draw(); // 调用 Circle 的 draw 方法\n\n        // b.获取 Rectangle 的对象，并调用它的 draw 方法\n        Shape shape2 = shapeFactory.getShape(\"RECTANGLE\");\n        shape2.draw();// 调用 Rectangle 的 draw 方法\n\n        // c.获取 Square 的对象，并调用它的 draw 方法\n        Shape shape3 = shapeFactory.getShape(\"SQUARE\");\n        shape3.draw();// 调用 Square 的 draw 方法\n\n        // 2.获取颜色工厂-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-\n        AbstractFactory colorFactory = FactoryProducer.getFactory(\"COLOR\");\n\n        // a.获取颜色为 Red 的对象\n        Color color1 = colorFactory.getColor(\"RED\");\n        color1.fill();// 调用 Red 的 fill 方法\n\n        // b.获取颜色为 Green 的对象\n        Color color2 = colorFactory.getColor(\"Green\");\n        color2.fill();// 调用 Green 的 fill 方法\n\n        // c.获取颜色为 Blue 的对象\n        Color color3 = colorFactory.getColor(\"BLUE\");\n        color3.fill();// 调用 Blue 的 fill 方法\n    }\n}\n```\n\n\n### 输出结果：\n```java\n圆形::绘画中...\n长方形::绘画中...\n正方形::绘画中...\n红色::涂鸦中...\n绿色::涂鸦中...\n蓝色::涂鸦中...\n```","categories":["Java"]},{"title":"Java-工厂模式","url":"/2020/04/07/Java-工厂模式/","content":"\n\n\n原文：https://www.liangzl.com/get-article-detail-169632.html\n原文：https://www.runoob.com/design-pattern/factory-pattern.html\n\n\n![java设计模式说明](java设计模式说明.png)\n\n\n> 设计模式的六大原则\n>> 1.开闭原则（Open Close Principle）：对扩展开放，对修改关闭。\n>> 2.里氏代换原则（Liskov Substitution Principle）：只有当派生类可以替换掉基类，且软件单位的功能不受到影响时，基类才能真正被复用，而派生类也能够在基类的基础上增加新的行为。里氏代换原则是对开闭原则的补充。\n>> 3.依赖倒转原则（Dependence Inversion Principle）：针对对接口编程，依赖于抽象而不依赖于具体。\n>> 4.接口隔离原则（Interface Segregation Principle）：使用多个隔离的接口，比使用单个接口要好。\n>> 5.迪米特法则，又称最少知道原则（Demeter Principle）：一个实体应当尽量少地与其他实体之间发生相互作用，使得系统功能模块相对独立。\n>> 6.合成复用原则（Composite Reuse Principle）：尽量使用合成/聚合的方式，而不是使用继承。\n\n\n\n![Java工厂模式-图片方式](Java工厂模式.jpg)\n\n## 源码方式\n```java\npackage com.company;\n\ninterface Shape/*图形工厂接口*/ {\n    /*\n    抽象图形角色：定义需要执行的所有图形行为的接口\n     */\n    void draw();\n}\n\nclass Rectangle implements Shape {\n    /*\n    具体图形角色：实现接口方法，创建具体功能由自己完成\n     */\n    @Override\n    public void draw() {\n        System.out.println(\"长方形::绘画中...\");\n    }\n}\n\nclass Square implements Shape {\n    /*\n    具体图形角色：实现接口方法，创建具体功能由自己完成\n     */\n    @Override\n    public void draw() {\n        System.out.println(\"正方形::绘画中...\");\n    }\n}\n\nclass Circle implements Shape {\n    /*\n    具体图形角色：实现接口方法，创建具体功能由自己完成\n     */\n    @Override\n    public void draw() {\n        System.out.println(\"圆形::绘画中...\");\n    }\n}\n\nclass ShapeFactory/*图形工厂类*/ {\n    /*\n    工厂类：在创建对象时不会对调用者暴露创建逻辑，并且是通过使用一个共同的接口来指向新创建的对象\n     */\n    public Shape getShape(String shapeType) {\n\n        if (shapeType == null) return null;\n\n        // equalsIgnoreCase：忽略大小写并判断是否相等\n        if (shapeType.equalsIgnoreCase(\"CIRCLE\")) {\n            return new Circle();\n        } else if (shapeType.equalsIgnoreCase(\"RECTANGLE\")) {\n            return new Rectangle();\n        } else if (shapeType.equalsIgnoreCase(\"SQUARE\")) {\n            return new Square();\n        }\n        return null;\n    }\n}\n\npublic class FactoryPatternDemo {\n    public static void main(String[] args) {\n        ShapeFactory shapeFactory = new ShapeFactory();\n\n        //获取 Circle 的对象，并调用它的 draw 方法\n        Shape shape1 = shapeFactory.getShape(\"CIRCLE\");\n        shape1.draw(); // 调用 Circle 的 draw 方法\n\n        //获取 Rectangle 的对象，并调用它的 draw 方法\n        Shape shape2 = shapeFactory.getShape(\"RECTANGLE\");\n        shape2.draw();// 调用 Rectangle 的 draw 方法\n\n        //获取 Square 的对象，并调用它的 draw 方法\n        Shape shape3 = shapeFactory.getShape(\"SQUARE\");\n        shape3.draw();// 调用 Square 的 draw 方法\n    }\n}\n```\n\n\n### 输出结果：\n```java\n圆形::绘画中...\n长方形::绘画中...\n正方形::绘画中...\n```","categories":["Java"]},{"title":"JS-发布订阅模式","url":"/2020/04/07/JS-发布订阅模式/","content":"\n\n\n原文：https://coffe1891.gitbook.io/frontend-hard-mode-interview/7/7.1.5\n\n\n```javascript\nlet eventEmitter = {\n\t// 缓存列表\n\tlist: {},\n\t// 订阅多次\n\ton(event, fn) {\n\t\tlet _this = this;\n\t\t// 如果对象中没有对应的 event 值，也就是说明没有订阅过，就给 event 创建个缓存列表\n\t\t// 如有对象中有相应的 event 值，把 fn 添加到对应 event 的缓存列表里\n\t\t(_this.list[event] || (_this.list[event] = [])).push(fn);\n\n\t\tconsole.log(fn.name, '订阅');\n\t\treturn _this;\n\t},\n\n\t// 订阅一次\n\tonce(event, fn) {\n\t\t// 先绑定，调用后删除\n\t\tlet _this = this;\n\n\t\t// 订阅\n\t\tfunction on_tmp() {\n\t\t\tfn.apply(_this, arguments);\n\t\t\t_this.off(event, on_tmp);\n\t\t}\n\t\ton_tmp.fn = fn;\n\t\t_this.on(event, on_tmp);\n\n\n\t\tconsole.log(fn.name, '订阅一次');\n\t\treturn _this;\n\t},\n\n\t// 取消订阅\n\toff(event, fn) {\n\t\tlet _this = this;\n\t\tlet fns = _this.list[event];\n\t\t// 如果缓存列表中没有相应的 fn，返回false\n\t\tif (!fns) return false;\n\t\tif (!fn) {\n\t\t\t// 如果没有传 fn 的话，就会将 event 值对应缓存列表中的 fn 都清空\n\t\t\tfns && (fns.length = 0);\n\t\t} else {\n\t\t\t// 若有 fn，遍历缓存列表，看看传入的 fn 与哪个函数相同\n\t\t\tlet cb;\n\t\t\tfor (let i = 0, cbLen = fns.length; i < cbLen; i++) {\n\t\t\t\tcb = fns[i];\n\t\t\t\t// 如果相同就直接从缓存列表中删掉即可\n\t\t\t\tif (cb === fn || cb.fn === fn) {\n\t\t\t\t\tfns.splice(i, 1);\n\t\t\t\t\tconsole.log(fn.name, '取消订阅');\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn _this;\n\t},\n\n\t// 发布\n\temit() {\n\t\tlet _this = this;\n\t\t// 第一个参数是对应的 event 值，直接用数组的 shift 方法取出\n\t\t// let event = Array.prototype.shift.call(arguments);\n\t\tlet event = [].shift.call(arguments); // 同上\n\t\tlet fns = _this.list[event];\n\n\t\t// 如果缓存列表里没有 fn 就返回 false\n\t\tif (!fns || fns.length === 0) return false;\n\n\t\t// 遍历 event 值对应的缓存列表，依次执行 fn\n\t\tfns.forEach(fn => {\n\t\t\t// fn:用户  _this:作者   arguments:发布的文章\n\t\t\tfn.apply(_this, arguments);\n\t\t});\n\t\treturn _this;\n\t}\n};\n\n\nfunction user1(content) {\n\tconsole.log('user1：订阅的更新文章内容:', content);\n}\nfunction user2(content) {\n\tconsole.log('user2：的更新文章内容:', content);\n}\nfunction user3(content) {\n\tconsole.log('user3：的更新文章内容:', content);\n}\nfunction user4(content) {\n\tconsole.log('user4：临时订阅的更新文章内容:', content);\n}\nfunction user5(content) {\n\tconsole.log('user5：的更新文章内容:', content);\n}\n\n\nconsole.log('\\n订阅：-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-');\n// 订阅多次Javascript_article1标签的文章\neventEmitter.on('Javascript_article1', user1);\neventEmitter.on('Javascript_article1', user2);\neventEmitter.on('Javascript_article1', user3);\n// 发布\neventEmitter.emit('Javascript_article1', 'Javascript 发布-订阅模式');\n\n\nconsole.log('\\n取消订阅：-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-');\n// 取消user2方法的Javascript_article1订阅\neventEmitter.off('Javascript_article1', user2);\n// 发布\neventEmitter.emit('Javascript_article1', 'Javascript 发布-订阅模式');\n\n\nconsole.log('\\n临时订阅：-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-');\n// 订阅一次article2标签的文章\neventEmitter.once('article2', user4);\n// 发布\neventEmitter.emit('article2', 'Javascript 观察者模式');\neventEmitter.emit('article2', 'Javascript 观察者模式');\n\n\nconsole.log('\\n嵌套订阅和发布：-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-');\n// user3用户订阅成功后，默认推送一篇文章【如果之前订阅后，提示两个消息】\neventEmitter.on('test111', user5).emit('test111', 'test111');\n```\n\n\n### 输出结果：\n```javascript\n\n订阅：-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-\nuser1 订阅\nuser2 订阅\nuser3 订阅\nuser1：订阅的更新文章内容: Javascript 发布-订阅模式\nuser2：的更新文章内容: Javascript 发布-订阅模式\nuser3：的更新文章内容: Javascript 发布-订阅模式\n\n取消订阅：-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-\nuser2 取消订阅\nuser1：订阅的更新文章内容: Javascript 发布-订阅模式\nuser3：的更新文章内容: Javascript 发布-订阅模式\n\n临时订阅：-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-\non_tmp 订阅\nuser4 订阅一次\nuser4：临时订阅的更新文章内容: Javascript 观察者模式\non_tmp 取消订阅\n\n嵌套订阅和发布：-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-\nuser5 订阅\nuser5：的更新文章内容: test111\n```\n","categories":["JavaScript"]},{"title":"CSS-200404全国哀悼日，一段css让全站变灰","url":"/2020/04/04/CSS-200404全国哀悼日，一段css让全站变灰/","content":"\n\n原文：https://juejin.im/post/5e86e221e51d4546ce27b99c\n1.有问题可以查看原文\n2.兼容IE的办法\n3.小程序下的问题\n```css\n.gray-filter {\n    filter: grayscale(100%);\n    -webkit-filter: grayscale(100%);\n    -moz-filter: grayscale(100%);\n    -ms-filter: grayscale(100%);\n    -o-filter: grayscale(100%);\n    filter: url(\"data:image/svg+xml;utf8,<svg xmlns=\\'http://www.w3.org/2000/svg\\'><filter id=\\'grayscale\\'><feColorMatrix type=\\'matrix\\' values=\\'0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\\'/></filter></svg>#grayscale\");\n    filter: progid:DXImageTransform.Microsoft.BasicImage(grayscale=1);\n    -webkit-filter: grayscale(1);\n}\n```\n","categories":["CSS"]},{"title":"Java-字符加密和解密","url":"/2020/04/04/Java-字符加密和解密/","content":"\n\n\n原文：https://github.com/zmh3788/thesixsectorTeam\n原文：https://blog.csdn.net/manmonth2004/article/details/83642676\n\n\n```java\npackage com.company;\n\nimport javax.crypto.Cipher;\nimport java.security.Key;\nimport java.security.Security;\nimport java.util.Arrays;\n\nclass EncryptUtil {\n\n    private static final char[] hexCode = \"0123456789ABCDEF\".toCharArray();\n    //设置默认密匙\n    private static String strDefaultKey = \"defaultKey\";\n    //加密\n    private Cipher encryptCipher = null;\n    //解密\n    private Cipher decryptCipher = null;\n\n\n    /**\n     * 默认构造方法，使用默认密钥及算法\n     *\n     * @throws Exception\n     */\n    public EncryptUtil() throws Exception {\n        this(strDefaultKey);\n    }\n\n    /**\n     * 指定密钥构造方法\n     *\n     * @param strKey 指定的密钥\n     * @throws Exception\n     */\n    public EncryptUtil(String strKey) throws Exception {\n        // 这里暂时不会使用这里加密类\n//        Security.addProvider(new com.sun.crypto.provider.SunJCE());\n        Key key = getKey(strKey.getBytes());// 密钥\n\n        encryptCipher = Cipher.getInstance(\"DES\");\n        encryptCipher.init(Cipher.ENCRYPT_MODE, key);\n\n        decryptCipher = Cipher.getInstance(\"DES\");\n        decryptCipher.init(Cipher.DECRYPT_MODE, key);\n    }\n\n    /**\n     * 从指定字符串生成密钥，密钥所需的字节数组长度为8位 不足8位时后面补0，超出8位只取前8位\n     *\n     * @param byteArrTmp 构成该字符串的字节数组\n     * @return 生成的密钥\n     * @throws java.lang.Exception\n     */\n    private Key getKey(byte[] byteArrTmp) throws Exception {\n        // 1.创建一个空的8位字节数组（默认值为0）\n        byte[] byteArr = new byte[8];\n        // 2.将原始字节数组转换为8位\n        for (int i = 0; i < byteArrTmp.length && i < byteArr.length; i++) {\n            byteArr[i] = byteArrTmp[i];\n        }\n        // 返回密钥\n        return new javax.crypto.spec.SecretKeySpec(byteArr, \"DES\");\n    }\n\n\n    /**\n     * 1.加密字节数组\n     *\n     * @param arrB 需加密的字节数组\n     * @return 加密后的字节数组\n     * @throws Exception\n     */\n    private byte[] encrypt(byte[] arrB) throws Exception {\n        System.out.println(\"Cipher加密\");\n        return encryptCipher.doFinal(arrB);\n    }\n\n    /**\n     * 2.将byteArr在内存中所表示的16进制转换为字符串 00~FF\n     *\n     * @param byteArr 需要转换的byte数组\n     * @return 转换后的字符串\n     */\n    private String byteArr2HexStr(byte[] byteArr) {\n        int i = 0;\n        int iLen = byteArr.length;\n        byte[] intTmps = new byte[16];\n\n        // 每个字符用两个byte才能表示，所以字符串的长度等于数组长度的两倍\n        StringBuilder stringBuilder = new StringBuilder(iLen * 2);\n\n        for (byte anArrB : byteArr) {\n            int intTmp = anArrB;\n            // 把负数转换为正数\n            while (intTmp < 0) {\n                intTmp = intTmp + 256;\n            }\n            // 小于0F的数需要在前面补0\n            if (intTmp < 16) {\n                stringBuilder.append(\"0\");\n            }\n            // 将byteArr在内存中所表示的16进制转换为字符串 00~FF\n            stringBuilder.append(Integer.toString(intTmp, 16));\n\n            //  此处做演示\n            intTmps[i] = (byte) intTmp;\n            i++;\n        }\n        String byteArrHex = this.printHexBinary(byteArr);\n        System.out.printf(\"byteArrHex十六进制: %s\\n\", byteArrHex);\n        return stringBuilder.toString();\n    }\n\n    /**\n     * 3.加密字符串\n     *\n     * @param strIn 需加密的字符串\n     * @return 加密后的字符串\n     * @throws Exception\n     */\n    public String encrypt(String strIn) throws Exception {\n        System.out.printf(\"\\n加密前的字符串:%s  长度:%d\\n\", strIn, strIn.length());\n        if (null == strIn || strIn.isEmpty()) {\n            return null;\n        }\n        return byteArr2HexStr(encrypt(strIn.getBytes()));\n    }\n\n\n    /**\n     * 1.将表示16进制值的字符串转换为byte数组\n     *\n     * @param strIn 需要转换的字符串\n     * @return 转换后的byte数组\n     */\n    private byte[] hexStr2ByteArr(String strIn) {\n        byte[] arrB = strIn.getBytes();\n        int iLen = arrB.length;\n\n        // 两个byte表示一个字符，所以字节数组长度是字符串长度除以2\n        byte[] arrOut = new byte[iLen / 2];\n        for (int i = 0; i < iLen; i = i + 2) {\n            // 隔两位取出取出一个字符【输出：ef 10 d4 37 b5 68 84 3c】\n            String strTmp = new String(arrB, i, 2);\n            arrOut[i / 2] = (byte) Integer.parseInt(strTmp, 16);\n        }\n\n        String arrOutHex = this.printHexBinary(arrOut);\n        System.out.printf(\"arrOutHex十六进制: %s\\n\", arrOutHex);\n        return arrOut;\n    }\n\n    /**\n     * 2.解密字节数组\n     *\n     * @param arrB 需解密的字节数组\n     * @return 解密后的字节数组\n     * @throws Exception\n     */\n    private byte[] decrypt(byte[] arrB) throws Exception {\n        System.out.println(\"Cipher解密\");\n        return decryptCipher.doFinal(arrB);\n    }\n\n    /**\n     * 3.解密字符串\n     *\n     * @param strIn 需解密的字符串\n     * @return 解密后的字符串\n     * @throws Exception\n     */\n    public String decrypt(String strIn) throws Exception {\n        System.out.printf(\"\\n解密前的字符串:%s  长度:%d\\n\", strIn, strIn.length());\n        if (null == strIn || strIn.isEmpty()) {\n            return null;\n        }\n        return new String(decrypt(hexStr2ByteArr(strIn)));\n    }\n\n\n    // byte数组转换成十六进制\n    public String printHexBinary(byte[] data) {\n        StringBuilder r = new StringBuilder(data.length * 2);\n        for (byte b : data) {\n            r.append(\" \" + hexCode[(b >> 4) & 0xF]);\n            r.append(hexCode[(b & 0xF)]);\n        }\n        return r.toString();\n    }\n\n\n}\n\npublic class Test {\n    public static void main(String[] args) throws Exception {\n        EncryptUtil encryptUtil = new EncryptUtil();\n\n        System.out.printf(\"加密后的字符串:%s\\n\", encryptUtil.encrypt(\"MiXinTu\"));\n        System.out.printf(\"解密后的字符串:%s\\n\", encryptUtil.decrypt(\"ef10d437b568843c\"));\n    }\n}\n```\n\n\n### 输出结果：\n```java\n加密前的字符串:MiXinTu  长度:7\nCipher加密\nbyteArrHex十六进制:  EF 10 D4 37 B5 68 84 3C\n加密后的字符串:ef10d437b568843c\n\n解密前的字符串:ef10d437b568843c  长度:16\narrOutHex十六进制:  EF 10 D4 37 B5 68 84 3C\nCipher解密\n解密后的字符串:MiXinTu\n\n```\n","categories":["Java"]},{"title":"Java-枚举实例","url":"/2020/04/03/Java-枚举实例/","content":"\n原文：https://www.runoob.com/java/method-enum1.html\n原文：https://mp.weixin.qq.com/s/gneSiCM5DoKMhJL_QnNwnA\n\n\n\n```java\npackage com.company;\n\nenum Car {\n    lamborghini(900),\n    tata(2),\n    audi(50),\n    fiat(15),\n    honda(12);\n\n    private int price;\n\n    Car(int price) {\n        this.price = price;\n    }\n\n    int getPrice() {\n        return price;\n    }\n}\n\npublic class Main {\n    public static void main(String args[]) {\n        System.out.println(\">>> 所有汽车的价格:\");\n        for (Car car : Car.values())\n            System.out.printf(\">>> \\t%s 需要 %d 千美元\\n\", car, car.getPrice());\n    }\n}\n```\n\n### 输出结果：\n```\n>>> 所有汽车的价格:\n>>> \tlamborghini 需要 900 千美元\n>>> \ttata 需要 2 千美元\n>>> \taudi 需要 50 千美元\n>>> \tfiat 需要 15 千美元\n>>> \thonda 需要 12 千美元\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```java\npackage com.company;\n\nclass Pizza/*披萨*/ {\n\n\n    private PizzaStatus status;\n\n    public enum PizzaStatus/*披萨售卖状态*/ {\n\n        ORDERED(5) { // 1.已订购\n\n            @Override\n            public boolean isOrdered() {\n                System.out.println(\"客户已成功下单...\");\n                return true;\n            }\n        },\n        READY(2) { // 2.准备中【需要检查材料是否足够】\n\n            @Override\n            public boolean isReady() {\n                System.out.println(\"披萨准备中...\");\n                return true;\n            }\n        },\n        DELIVERED(0) { // 3.已交付\n\n            @Override\n            public boolean isDelivered() {\n                System.out.println(\"客户付款成功...\");\n                return true;\n            }\n        };\n\n\n        private int timeToDelivery;// 枚举类型的属性【交货时间】\n\n        PizzaStatus(int timeToDelivery) {// 枚举类型的构造函数\n            this.timeToDelivery = timeToDelivery;\n        }\n\n\n        public boolean isOrdered() {// 枚举类型的方法【默认是未订购】\n            return false;\n        }\n\n        public boolean isReady() {// 枚举类型的方法【默认是未准备】\n            return false;\n        }\n\n        public boolean isDelivered() {// 枚举类型的方法【默认是未交付】\n            return false;\n        }\n\n        public int getTimeToDelivery() {// 枚举类型的方法【获取交货时间】\n            return timeToDelivery;\n        }\n    }\n\n\n    public boolean isReady() { // 披萨是否准备好\n        return this.status.isOrdered();\n    }\n\n    public boolean isDeliverable() { // 是否可交付\n        return this.status.isReady();\n    }\n\n    public boolean isPay() { // 是付款成功\n        return this.status.isDelivered();\n    }\n\n    public String printTimeToDeliver() { // 打印交货时间\n        int waitTime = this.getStatus().getTimeToDelivery();\n        switch (waitTime) {\n            case 5:\n                return \"厨师制作中\";\n            case 2:\n                return \"小弟包装中\";\n            case 0:\n                return \"服务员送货中\";\n            default:\n                return \"系统错误，滚蛋吧！\";\n        }\n    }\n\n    public void setStatus(PizzaStatus status) {\n        this.status = status;\n    }\n\n    public PizzaStatus getStatus() {\n        return status;\n    }\n\n}\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Pizza pizza01 = new Pizza();\n        // 设置披萨的状态是：已订购\n        pizza01.setStatus(Pizza.PizzaStatus.ORDERED);\n        System.out.println(\"披萨是否准备好: \" + pizza01.isReady());\n        System.out.println(\"披萨是否可交付: \" + pizza01.isDeliverable());\n        System.out.println(\"披萨是付款成功: \" + pizza01.isPay());\n        System.out.printf(\"披萨的操作流程消息: %s\\n\\n\", pizza01.printTimeToDeliver());\n\n        Pizza pizza02 = new Pizza();\n        // 设置披萨的状态是：准备中\n        pizza02.setStatus(Pizza.PizzaStatus.READY);\n        System.out.println(\"披萨是否准备好: \" + pizza02.isReady());\n        System.out.println(\"披萨是否可交付: \" + pizza02.isDeliverable());\n        System.out.println(\"披萨是付款成功: \" + pizza02.isPay());\n        System.out.printf(\"披萨的操作流程消息: %s\\n\\n\", pizza02.printTimeToDeliver());\n\n        Pizza pizza03 = new Pizza();\n        // 设置披萨的状态是：已交付\n        pizza03.setStatus(Pizza.PizzaStatus.DELIVERED);\n        System.out.println(\"披萨是否准备好: \" + pizza03.isReady());\n        System.out.println(\"披萨是否可交付: \" + pizza03.isDeliverable());\n        System.out.println(\"披萨是付款成功: \" + pizza03.isPay());\n        System.out.printf(\"披萨的操作流程消息: %s\\n\\n\", pizza03.printTimeToDeliver());\n    }\n\n}\n```\n\n### 输出结果：\n```java\n客户已成功下单...\n披萨是否准备好: true\n披萨是否可交付: false\n披萨是付款成功: false\n披萨的操作流程消息: 厨师制作中\n\n披萨是否准备好: false\n披萨准备中...\n披萨是否可交付: true\n披萨是付款成功: false\n披萨的操作流程消息: 小弟包装中\n\n披萨是否准备好: false\n披萨是否可交付: false\n客户付款成功...\n披萨是付款成功: true\n披萨的操作流程消息: 服务员送货中\n```\n","categories":["Java"]},{"title":"Java-适配器模式","url":"/2020/04/03/Java-适配器模式/","content":"\n\n\n原文：https://www.liangzl.com/get-article-detail-169632.html\n原文：https://www.bcdaren.com/559524771159871489/blog_content.html\n\n![java设计模式说明](java设计模式说明.png)\n\n\n> 设计模式的六大原则\n>> 1.开闭原则（Open Close Principle）：对扩展开放，对修改关闭。\n>> 2.里氏代换原则（Liskov Substitution Principle）：只有当派生类可以替换掉基类，且软件单位的功能不受到影响时，基类才能真正被复用，而派生类也能够在基类的基础上增加新的行为。里氏代换原则是对开闭原则的补充。\n>> 3.依赖倒转原则（Dependence Inversion Principle）：针对对接口编程，依赖于抽象而不依赖于具体。\n>> 4.接口隔离原则（Interface Segregation Principle）：使用多个隔离的接口，比使用单个接口要好。\n>> 5.迪米特法则，又称最少知道原则（Demeter Principle）：一个实体应当尽量少地与其他实体之间发生相互作用，使得系统功能模块相对独立。\n>> 6.合成复用原则（Composite Reuse Principle）：尽量使用合成/聚合的方式，而不是使用继承。\n\n\n\n![默认元素对象的适配器-图片方式](默认元素对象的适配器.jpg)\n![动态元素对象的适配器-图片方式](动态元素对象的适配器.jpg)\n## 默认元素对象的适配器\n```java\npackage com.company;\n\ninterface NameIterator {\n    /*\n    抽象迭代器:负责定义访问和遍历元素的接口\n     */\n    Object next();\n\n    boolean hasNext();\n}\n\ninterface NameContainer {\n    /*\n    抽象容器: 负责定义提供具体迭代器的接口\n     */\n    NameIterator getIterator();\n}\n\nclass NameRepository/*名称存储库-聚合对象*/ implements NameContainer {\n    /*\n    具体容器:创建具体迭代器\n     */\n    private String[] names;\n\n    public NameRepository(String[] names) {\n        this.names = names;\n    }\n\n    @Override // getIterator接口\n    public NameIterator getIterator() {\n        return new NameIteratorInner();\n    }\n\n    private class NameIteratorInner implements NameIterator {\n        /*\n        具体迭代器:提供具体的元素遍历行为\n         */\n        int index;\n\n        @Override // next接口\n        public Object next() {\n            if (this.hasNext()) {\n                return names[index++];\n            }\n            return null;\n        }\n\n        @Override // hasNext接口\n        public boolean hasNext() {\n            if (index < names.length) {\n                return true;\n            }\n            return false;\n        }\n    }\n}\n\npublic class NameIteratorPatternDemo {\n    public static void main(String[] args) {\n        String[] names = {\"Robert\", \"John\", \"Julie\", \"Lora\"};\n        NameRepository nameRepository = new NameRepository(names);\n\n        for (NameIterator nameIterator = nameRepository.getIterator(); nameIterator.hasNext(); ) {\n            String name = (String) nameIterator.next();\n            System.out.println(\"name:\" + name);\n        }\n    }\n}\n```\n\n### 输出结果：\n```java\nname:Robert\nname:John\nname:Julie\nname:Lora\n```\n\n\n\n\n\n## 动态元素对象的适配器\n```java\npackage com.company;\n\nimport java.util.List;\nimport java.util.ArrayList;\n\n\ninterface CourseIterator<E> {\n    /*\n    抽象迭代器:负责定义访问和遍历元素的接口\n     */\n    E next();\n\n    boolean hasNext();\n}\n\ninterface CourseContainer {\n    /*\n    抽象容器: 负责定义提供具体迭代器的接口\n     */\n    void add(Course course);\n\n    void remove(Course course);\n\n    CourseIterator<Course> getIterator();\n}\n\nclass Course/*课本*/ {\n    private String name;\n\n    public Course(String name) {\n        this.name = name;\n    }\n\n    public String getName() {\n        return name;\n    }\n}\n\nclass CourseRepository/*课本存储库-聚合对象*/ implements CourseContainer {\n    /*\n    具体容器:创建具体迭代器\n     */\n    private List courseList;\n\n    public CourseRepository() {\n        this.courseList = new ArrayList();\n    }\n\n    @Override // add接口\n    public void add(Course course) {\n        courseList.add(course);\n    }\n\n    @Override // remove接口\n    public void remove(Course course) {\n        courseList.remove(course);\n    }\n\n    @Override // getIterator接口\n    public CourseIterator<Course> getIterator() {\n        return new CourseIteratorInner<Course>(courseList);\n    }\n\n    private class CourseIteratorInner<E> implements CourseIterator<E> {\n        /*\n        具体迭代器:提供具体的元素遍历行为\n         */\n        int index;\n        E element;\n        List<E> list;\n\n        public CourseIteratorInner(List<E> list) {\n            this.list = list;\n        }\n\n        @Override // next接口\n        public E next() {\n            System.out.printf(\"\\t\\t当前位置 %d : \", index);\n            element = list.get(index);\n            index++;\n            return element;\n        }\n\n        @Override // hasNext接口\n        public boolean hasNext() {\n            return index <= list.size() - 1;\n        }\n    }\n}\n\npublic class CourseIteratorPatternDemo {\n    public static void main(String[] args) {\n        Course java = new Course(\"Java架构\");\n        Course javaBase = new Course(\"Java基础\");\n        Course design = new Course(\"设计模式\");\n        Course ai = new Course(\"人工智能\");\n\n        CourseContainer aggregate = new CourseRepository();\n        aggregate.add(java);\n        aggregate.add(javaBase);\n        aggregate.add(design);\n        aggregate.add(ai);\n\n        System.out.println(\"===========添加操作之后的课程列表==========\");\n        printCourse(aggregate);\n\n        System.out.println(\"===========删除操作之后的课程列表==========\");\n        aggregate.remove(design);\n        printCourse(aggregate);\n    }\n\n    private static void printCourse(CourseContainer aggregate) {\n        CourseIterator<Course> courses = aggregate.getIterator();\n        while (courses.hasNext()) {\n            Course course = courses.next();\n            System.out.println(\"《\" + course.getName() + \"》\");\n        }\n    }\n}\n```\n\n\n### 输出结果：\n```java\n===========添加操作之后的课程列表==========\n\t\t当前位置 0 : 《Java架构》\n\t\t当前位置 1 : 《Java基础》\n\t\t当前位置 2 : 《设计模式》\n\t\t当前位置 3 : 《人工智能》\n===========删除操作之后的课程列表==========\n\t\t当前位置 0 : 《Java架构》\n\t\t当前位置 1 : 《Java基础》\n\t\t当前位置 2 : 《人工智能》\n```","categories":["Java"]},{"title":"JS二叉树简单实例","url":"/2020/04/02/JS二叉树简单实例/","content":"\n\n\n原文：http://caibaojian.com/js-bst.html\n\n\n\n![插入数据成功的图片](http://img1.sycdn.imooc.com/5e578cb90001888914260624.png)\n![先序遍历](http://img1.sycdn.imooc.com/5e578ccb0001252515700726.png)\n![中序遍历](http://img1.sycdn.imooc.com/5e578cdd0001796315700726.png)\n![后序遍历](http://img1.sycdn.imooc.com/5e578cee00015c1116420738.png)\n![二分搜索树局限性 提议：常用的红黑树、AVL树能解决这种局限性](http://img1.sycdn.imooc.com/5e578d110001526715860734.png)\n\n\n\n\n```javascript\n\nconst INSERT_RECUSIVE = Symbol('BST#recursiveInsert');\nconst SEARCH_RECUSIVE = Symbol('BST#recursiveSearch');\nconst PRE_ORDER_TRAVERSE_RECUSIVE = Symbol('BST#recursivePreOrderTraverse');\nconst IN_ORDER_TRAVERSE_RECUSIVE = Symbol('BST#recursiveInOrderTraverse');\nconst POST_ORDER_TRAVERSE_RECUSIVE = Symbol('BST#recursivePostOrderTraverse');\nconst REMOVE_NODE_RECUSIVE = Symbol('BST#removeNodeRecusive');\nconst DESTORY_RECUSIVE = Symbol('BST#destoryRecusive');\n\n/**\n * 二叉搜索树\n * @insert \n */\nclass BST {\n\t\n\tconstructor() {\n\t\tthis.root = null;\n\t\tthis.nodeNum = 0; //总的节点数\n\t\t/**\n\t\t * 实例化一个 Node 节点，在 insert 方法中你会看到\n\t\t */\n\t\tthis.Node = function(value) {\n\t\t\treturn {\n\t\t\t\tvalue,\n\t\t\t\tcount: 1,\n\t\t\t\tleft: null,\n\t\t\t\tright: null,\n\t\t\t}\n\t\t}\n\t\t/**\n\t\t * 实例化一个 CopyNode 节点，在 removeNode 方法中你会看到\n\t\t */\n\t\tthis.CopyNode = function(node) {\n\t\t\treturn {\n\t\t\t\tvalue: node.value,\n\t\t\t\tcount: node.count,\n\t\t\t\tleft: node.left,\n\t\t\t\tright: node.right,\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * 二叉搜索树插入元素\n\t * @param { Number } value \n\t */\n\tinsert(value) {\n\t\tthis.root = this[INSERT_RECUSIVE](this.root, value);\n\t}\n\t/**\n\t * 递归插入\n\t * 插入过程和链表类似，建议先学习链表会更容易理解\n\t * @param { Object } node \n\t * @param { Number } value \n\t */\n\t[INSERT_RECUSIVE](node, value) {\n\t\t// 如果当前节点为空，创建一个新节点（递归到底）\n\t\tif (node === null) {\n\t\t\tthis.nodeNum++; // 总的节点数加 1\n\t\t\treturn new this.Node(value);\n\t\t}\n\t\n\t\t// 节点数不变，说明要更新的值等于二叉树中的某个节点值\n\t\tif (value === node.value) {\n\t\t\tnode.count++; // 节点数加 1\n\t\t} else if (value < node.value) { // 新插入子节点在二叉树左边，继续递归插入\n\t\t\tnode.left = this[INSERT_RECUSIVE](node.left, value);\n\t\t} else if (value > node.value) {\n\t\t\tnode.right = this[INSERT_RECUSIVE](node.right, value);\n\t\t}\n\t\n\t\treturn node;\n\t}\n\t\n\n\t/**\n\t * 二叉树中搜索节点\n\t * @param { Number } value \n\t * @return { Boolean }\n\t */\n\tsearch(value) {\n\t\treturn this[SEARCH_RECUSIVE](this.root, value);\n\t}\n\t/**\n\t * 递归搜索\n\t * @param { Object } node \n\t * @param { Number } value \n\t */\n\t[SEARCH_RECUSIVE](node, value) {\n\t\tif (node === null) { // 节点为 null\n\t\t\treturn false;\n\t\t} else if (value === node.value) { // 找到节点\n\t\t\treturn true;\n\t\t} else if (value < node.value) { // 从左侧节点搜索\n\t\t\treturn this[SEARCH_RECUSIVE](node.left, value);\n\t\t} else { // 从右侧节点搜索\n\t\t\treturn this[SEARCH_RECUSIVE](node.right, value);\n\t\t}\n\t}\n\t\n\n\t/**\n\t * 先序遍历（前序遍历）\n\t * @param { Function } func \n\t */\n\tpreOrderTraverse(func) {\n\t\treturn this[PRE_ORDER_TRAVERSE_RECUSIVE](this.root, func);\n\t}\n\t/**\n\t * 前序遍历递归调用\n\t * 1. 先访问节点本身（从树的顶端开始）\n\t * 2. 访问左侧节点\n\t * 3. 访问右侧节点\n\t * @param { Object } node \n\t * @param { Function } func \n\t */\n\t[PRE_ORDER_TRAVERSE_RECUSIVE](node, func) {\n\t\tif (node !== null) {\n\t\t\tfunc(node.value); // 当前节点的值\n\t\t\tthis[PRE_ORDER_TRAVERSE_RECUSIVE](node.left, func);\n\t\t\tthis[PRE_ORDER_TRAVERSE_RECUSIVE](node.right, func);\n\t\t}\n\t}\n\t\n\n\t/**\n\t * 中序遍历\n\t * @param { Function } func \n\t */\n\tinOrderTraverse(func) {\n\t\treturn this[IN_ORDER_TRAVERSE_RECUSIVE](this.root, func);\n\t}\n\t/**\n\t * 中序遍历递归调用（适用于从小到大排序）\n\t * 1. 访问左侧节点\n\t * 2. 取当前树的子节点的值（树的最底端）\n\t * 3. 访问右侧节点\n\t * @param { Object } node \n\t * @param {Function } func \n\t */\n\t[IN_ORDER_TRAVERSE_RECUSIVE](node, func) {\n\t\tif (node !== null) {\n\t\t\tthis[IN_ORDER_TRAVERSE_RECUSIVE](node.left, func);\n\t\t\tfunc(node.value); // 当前节点的值\n\t\t\tthis[IN_ORDER_TRAVERSE_RECUSIVE](node.right, func);\n\t\t}\n\t}\n\t\n\n\t/**\n\t * 后序遍历\n\t * @param { Function } func \n\t */\n\tpostOrderTraverse(func) {\n\t\treturn this[POST_ORDER_TRAVERSE_RECUSIVE](this.root, func);\n\t}\n\t/**\n\t * 后序遍历递归调用\n\t * 先访问节点的后台节点，再访问节点本身，也就是当节点的左右节点都为 null 时才取节点本身\n\t * 1. 访问左侧节点\n\t * 2. 访问右侧节点\n\t * 3. 取当前节点本身\n\t * @param {*} node \n\t * @param {*} func \n\t */\n\t[POST_ORDER_TRAVERSE_RECUSIVE](node, func) {\n\t\tif (node !== null) {\n\t\t\tthis[POST_ORDER_TRAVERSE_RECUSIVE](node.left, func);\n\t\t\tthis[POST_ORDER_TRAVERSE_RECUSIVE](node.right, func);\n\t\t\tfunc(node.value);\n\t\t}\n\t}\n\t\n\n\t/**\n\t * 删除节点\n\t * 若删除节点为 n，找到删除节点的后继 s = min(n->right)\n\t */\n\tremoveNode(value) {\n\t\tthis.root = this[REMOVE_NODE_RECUSIVE](this.root, value);\n\t}\n\t/**\n\t * 删除一个节点递归调用\n\t * @param {*} node \n\t * @param {*} value \n\t */\n\t[REMOVE_NODE_RECUSIVE](node, value) {\n\t\t// {1} 未查找到直接返回 null\n\t\tif (node === null) {\n\t\t\tconsole.log(`删除失败(节点值:${value} 不存在!)`);\n\t\t\treturn node;\n\t\t}\n\t\n\t\t// {2} 左侧节点递归删除\n\t\tif (value < node.value) {\n\t\t\tnode.left = this[REMOVE_NODE_RECUSIVE](node.left, value);\n\t\t\treturn node;\n\t\t}\n\t\n\t\t// {3} 右侧节点递归删除\n\t\tif (value > node.value) {\n\t\t\tnode.right = this[REMOVE_NODE_RECUSIVE](node.right, value);\n\t\t\treturn node;\n\t\t}\n\t\n\t\t// {4} value === node.value 节点找到\n\t\tif (node.left === null && node.right === null) {\n\t\t\t// {4.1} 当前节点即无左侧节点又无右侧节点，直接删除，返回 null\n\t\t\tnode = null;\n\t\t\tthis.nodeNum--;\n\t\t\treturn node;\n\t\t} else if (node.left === null) {\n\t\t\t// {4.2} 若左侧节点为 null，就证明它有右侧节点，将当前节点的引用改为右侧节点的引用，返回更新之后的值\n\t\t\tnode = node.right;\n\t\t\tthis.nodeNum--;\n\t\t\treturn node;\n\t\t} else if (node.right === null) {\n\t\t\t// {4.3} 若右侧节点为 null，就证明它有左侧节点，将当前节点的引用改为左侧节点的引用，返回更新之后的值\n\t\t\tnode = node.left;\n\t\t\tthis.nodeNum--;\n\t\t\treturn node;\n\t\t} else if (node.left !== null && node.right !== null) {\n\t\t\t// {4.4} 若左侧节点、右侧节点都不为空情况\n\t\t\t// 找到最小节点，切断对象引用，复制一个新对象 newNode\n\t\t\tconst newNode = new this.CopyNode(this.minNodeValue(node.right)); // newNode = min(n->right)\n\t\t\tthis.nodeNum++;\n\t\t\tnewNode.left = node.left;\n\t\t\tnewNode.right = this[REMOVE_NODE_RECUSIVE](node.right, newNode.value); // 删除最小节点\n\t\t\tnode = null;\n\t\t\tthis.nodeNum--;\n\t\t\treturn newNode; // 返回 newNode 节点替换掉 node 节点\n\t\t}\n\t}\n\t\n\n\t/**\n\t * 二叉树销毁，可以利用后续遍历特性实现\n\t */\n\tdestroy() {\n\t\tthis.root = this[DESTORY_RECUSIVE](this.root);\n\t}\n\t/**\n\t * 销毁二叉搜索树递归调用\n\t * @param { Object } node \n\t */\n\t[DESTORY_RECUSIVE](node) {\n\t\tif (node !== null) {\n\t\t\tthis[DESTORY_RECUSIVE](node.left);\n\t\t\tthis[DESTORY_RECUSIVE](node.right);\n\t\t\tnode = null;\n\t\t\tthis.nodeNum--;\n\t\t\treturn node;\n\t\t}\n\t}\n\n\t\n\t/**\n\t * 求二叉树中最小节点值\n\t * @return value\n\t */\n\tminNodeValue(node = this.root) {\n\t\tif (node === null) {\n\t\t\treturn node;\n\t\t}\n\t\twhile (node && node.left !== null) {\n\t\t\tnode = node.left;\n\t\t}\n\t\treturn node !== null ? node.value : null;\n\t}\n\n\n\t/**\n\t * 求二叉树中最大节点\n\t */\n\tmaxNodeValue() {\n\t\tlet node = this.root;\n\n\t\tif (node === null) {\n\t\t\treturn node;\n\t\t}\n\t\twhile (node && node.right !== null) {\n\t\t\tnode = node.right;\n\t\t}\n\t\treturn node !== null ? node.value : null;\n\t}\n}\n\nconst bST = new BST();\n// 插入节点值\nbST.insert(30);\nbST.insert(25);\nbST.insert(36);\nbST.insert(20);\nbST.insert(28);\nbST.insert(32);\nbST.insert(40);\n\n// 显示一个对象的所有属性和方法\nconsole.dir(bST);\n\n// 查看某个值是否存在\n// console.log(bST.search(20));\n// console.log(bST.search(10));\n\n// 查看特殊的遍历方式\n// function printNode(value) {\n//     console.log(value);\n// }\n// console.log('--------前序遍历----------');\n// bST.preOrderTraverse(printNode);\n// console.log('--------中序遍历----------');\n// bST.inOrderTraverse(printNode);\n// console.log('--------后序遍历----------');\n// bST.postOrderTraverse(printNode);\n\n// 移除某个节点\n// bST.removeNode(32);\n\n// 二叉树销毁\n// bST.destroy();\n```","categories":["JavaScript"]},{"title":"Java-命令模式","url":"/2020/03/31/Java-命令模式/","content":"\n\n\n原文：https://www.liangzl.com/get-article-detail-169632.html\n原文：https://www.runoob.com/design-pattern/command-pattern.html\n原文：https://www.bcdaren.com/559524771159871489/blog_content.html\n\n![java设计模式说明](java设计模式说明.png)\n\n\n> 设计模式的六大原则\n>> 1.开闭原则（Open Close Principle）：对扩展开放，对修改关闭。\n>> 2.里氏代换原则（Liskov Substitution Principle）：只有当派生类可以替换掉基类，且软件单位的功能不受到影响时，基类才能真正被复用，而派生类也能够在基类的基础上增加新的行为。里氏代换原则是对开闭原则的补充。\n>> 3.依赖倒转原则（Dependence Inversion Principle）：针对对接口编程，依赖于抽象而不依赖于具体。\n>> 4.接口隔离原则（Interface Segregation Principle）：使用多个隔离的接口，比使用单个接口要好。\n>> 5.迪米特法则，又称最少知道原则（Demeter Principle）：一个实体应当尽量少地与其他实体之间发生相互作用，使得系统功能模块相对独立。\n>> 6.合成复用原则（Composite Reuse Principle）：尽量使用合成/聚合的方式，而不是使用继承。\n\n\n\n![Java命令模式-图片方式](Java命令模式.png)\n\n## 源码方式\n```java\npackage com.company;\n\nimport java.util.List;\nimport java.util.ArrayList;\n\n\nclass Stock/*股票*/ {\n    /*\n    接收者角色：该类负责具体实施或执行一个请求\n     */\n    private int quantity = 10;\n    private String name = \"ABC\";\n\n    public void buy() {\n        System.out.printf(\"股票 [ 名称: %s, 数量: %d ] 购买成功\\n\", name, quantity);\n    }\n\n    public void sell() {\n        System.out.printf(\"股票 [ 名称: %s, 数量: %d ] 卖出成功\\n\", name, quantity);\n    }\n}\n\ninterface OrderCommand/*操作股票的指令*/ {\n    /*\n    抽象命令角色：定义需要执行的所有命令行为的接口\n     */\n    void execute();// 对股票的具体操作，由实现接口的类来实现接口中的方法\n}\n\nclass BuyStock/*购买股票*/ implements OrderCommand {\n    /*\n   具体命令角色：该类内部维护一个接收者（GPlayer），在其execute（） 方法中调用Receiver的相关方法\n    */\n    private Stock abcStock;\n\n    public BuyStock(Stock abcStock) {\n        this.abcStock = abcStock;\n    }\n\n    @Override\n    public void execute() {\n        abcStock.buy();\n    }\n}\n\nclass SellStock/*卖出股票*/ implements OrderCommand {\n    /*\n   具体命令角色：该类内部维护一个接收者（GPlayer），在其execute（） 方法中调用Receiver的相关方法\n    */\n    private Stock abcStock;\n\n    public SellStock(Stock abcStock) {\n        this.abcStock = abcStock;\n    }\n\n    @Override\n    public void execute() {\n        abcStock.sell();\n    }\n}\n\nclass BrokerCommand/*管理指令的负责人*/ {\n    /*\n    请求者角色：接收客户端的命令,并执行命令\n     */\n    private List<OrderCommand> orderCommandsList = new ArrayList<OrderCommand>();\n\n    // 添加当前需要的操作指令\n    public void addOrder(OrderCommand orderCommand) {\n        orderCommandsList.add(orderCommand);\n    }\n\n    // 执行当前全部要操作的指令\n    public void executeOrders() {\n        for (OrderCommand order : orderCommandsList) {\n            order.execute();\n        }\n        orderCommandsList.clear();\n    }\n}\n\npublic class Main {\n\n    public static void main(String[] args) {\n        // 1.实例化一支abc股票\n        Stock abcStock = new Stock();\n        // 2.实例化购买和卖出股票的指令\n        BuyStock buyStockOrder = new BuyStock(abcStock);\n        SellStock sellStockOrder = new SellStock(abcStock);\n        // 3.添加购买和卖出股票的指令\n        BrokerCommand brokerCommand = new BrokerCommand();\n        brokerCommand.addOrder(buyStockOrder);\n        brokerCommand.addOrder(sellStockOrder);\n        // 4.执行当前全部要操作的指令\n        brokerCommand.executeOrders();\n    }\n}\n```\n\n## 输出结果：\n```java\n股票 [ 名称: ABC, 数量: 10 ] 购买成功\n股票 [ 名称: ABC, 数量: 10 ] 卖出成功\n```\n\n\n## 第二个命令者模式\n```java\npackage com.company;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nclass GPlayer/*播放器*/ {\n    /*\n    接收者角色：该类负责具体实施或执行一个请求\n     */\n    public void play() {\n        System.out.println(\"正常播放\");\n    }\n\n    public void stop() {\n        System.out.println(\"停止播放\");\n    }\n\n    public void pause() {\n        System.out.println(\"暂停播放\");\n    }\n\n    public void speed() {\n        System.out.println(\"拖动进度条\");\n    }\n}\n\ninterface IActionCommand {\n    /*\n    命令角色：定义需要执行的所有命令行为的接口\n     */\n    void execute();\n}\n\nclass PlayAction/*正常播放*/ implements IActionCommand {\n    /*\n    具体命令角色：该类内部维护一个接收者（GPlayer），在其execute（） 方法中调用Receiver的相关方法\n     */\n    private GPlayer gPlayer;\n\n    public PlayAction(GPlayer gPlayer) {\n        this.gPlayer = gPlayer;\n    }\n\n    @Override\n    public void execute() {\n        gPlayer.play();\n    }\n}\n\nclass StopAction/*停止播放*/ implements IActionCommand {\n    /*\n   具体命令角色：该类内部维护一个接收者（GPlayer），在其execute（） 方法中调用Receiver的相关方法\n    */\n    private GPlayer gPlayer;\n\n    public StopAction(GPlayer gPlayer) {\n        this.gPlayer = gPlayer;\n    }\n\n    public void execute() {\n        gPlayer.stop();\n    }\n}\n\nclass PauseAction/*暂停播放*/ implements IActionCommand {\n    /*\n   具体命令角色：该类内部维护一个接收者（GPlayer），在其execute（） 方法中调用Receiver的相关方法\n    */\n    private GPlayer gPlayer;\n\n    public PauseAction(GPlayer gPlayer) {\n        this.gPlayer = gPlayer;\n    }\n\n    @Override\n    public void execute() {\n        gPlayer.pause();\n    }\n}\n\nclass SpeedAction/*拖动进度条*/ implements IActionCommand {\n    /*\n   具体命令角色：该类内部维护一个接收者（GPlayer），在其execute（） 方法中调用Receiver的相关方法\n    */\n    private GPlayer gPlayer;\n\n    public SpeedAction(GPlayer gPlayer) {\n        this.gPlayer = gPlayer;\n    }\n\n    public void execute() {\n        gPlayer.speed();\n    }\n}\n\nclass BrokerCommand/*管理指令的负责人*/ {\n    /*\n    请求者角色：接收客户端的命令,并执行命令\n     */\n    private List<IActionCommand> actions = new ArrayList<IActionCommand>();\n\n    // 添加当前需要的操作指令\n    public void addAction(IActionCommand action) {\n        actions.add(action);\n    }\n\n    // 执行一个指令\n    public void executeAction(IActionCommand action) {\n        action.execute();\n    }\n\n    // 执行当前全部要操作的指令\n    public void executeActions() {\n        for (IActionCommand action : actions) {\n            action.execute();\n        }\n        actions.clear();\n    }\n}\n\n\npublic class Main {\n    public static void main(String[] args) {\n        GPlayer player = new GPlayer();\n        BrokerCommand brokerCommand = new BrokerCommand();\n        // 执行一个指令\n        brokerCommand.addAction(new PlayAction(player));\n        // 执行当前全部要操作的指令\n        brokerCommand.addAction(new PauseAction(player));\n        brokerCommand.addAction(new PlayAction(player));\n        brokerCommand.addAction(new StopAction(player));\n        brokerCommand.addAction(new SpeedAction(player));\n        brokerCommand.executeActions();\n    }\n}\n```\n\n\n### 输出结果：\n```java\n正常播放\n暂停播放\n正常播放\n停止播放\n拖动进度条\n```","categories":["Java"]},{"title":"Java-根据IP查询信息.","url":"/2020/03/30/Java-根据IP查询信息./","content":"\n原文：https://github.com/zmh3788/thesixsectorTeam\n\n```java\npackage city.thesixsectorteam.wheelworld.common.utils;\n\nimport lombok.extern.slf4j.Slf4j;\nimport org.apache.commons.io.FileUtils;\nimport org.lionsoul.ip2region.DataBlock;\nimport org.lionsoul.ip2region.DbConfig;\nimport org.lionsoul.ip2region.DbSearcher;\nimport org.lionsoul.ip2region.Util;\n\nimport java.io.File;\nimport java.io.IOException;\nimport java.lang.reflect.Method;\nimport java.util.Objects;\n\n@Slf4j\npublic class AddressUtil {\n\n    public static String getCityInfo(String ip) {\n        Method method = null;\n        DataBlock dataBlock = null;\n        DbSearcher searcher = null;\n        try {\n            // 本地获取ip库的绝对位置\n            String dbPath = AddressUtil.class.getResource(\"/ip2region/ip2region.db\").getPath();\n            File file = new File(dbPath);\n            if (!file.exists()) {\n                // 获取操作系统的缓存临时目录\n                String tmpDir = System.getProperties().getProperty(\"java.io.tmpdir\");\n                file = new File(tmpDir + \"ip.db\");\n                // 复制输入流到文件\n                FileUtils.copyInputStreamToFile(\n                    Objects.requireNonNull(\n                        AddressUtil.class.getClassLoader().getResourceAsStream(\"classpath:ip2region/ip2region.db\")), file);\n            }\n            // 数据库查询算法 --> B-tree\n            int algorithm = DbSearcher.BTREE_ALGORITHM;\n            DbConfig config = new DbConfig();\n            searcher = new DbSearcher(config, file.getPath());\n\n            method = searcher.getClass().getMethod(\"btreeSearch\", String.class);\n            if (!Util.isIpAddress(ip)) {\n                // log.error(\"错误：无效的IP地址\");\n            }\n            dataBlock = (DataBlock)method.invoke(searcher, ip);\n            return dataBlock.getRegion();\n        } catch (Exception e) {\n            // log.error(\"获取地址信息异常\", e);\n        } finally {\n            if (searcher != null) {\n                try { searcher.close(); } catch (IOException e) { e.printStackTrace();}\n            }\n        }\n        return \"\";\n    }\n    public static void main(String[] args) {\n        System.out.println(getCityInfo(\"223.104.23.44\"));\n        // 输出：中国|华南|海南省|0|移动\n    }\n\n}\n```","categories":["Java"]},{"title":"Java-日期格式化.","url":"/2020/03/30/Java-日期格式化./","content":"\n\n\n原文：https://github.com/zmh3788/thesixsectorTeam\n```java\npackage city.thesixsectorteam.wheelworld.common.utils;\n\nimport java.time.format.DateTimeFormatter;\nimport java.text.ParseException;\nimport java.text.SimpleDateFormat;\nimport java.time.LocalDateTime;\nimport java.util.Locale;\nimport java.util.Date;\n\npublic class test{\n    public static final String FULL_TIME_PATTERN=\"yyyMMddHHmmss\";\n    public static final String FULL_TIME_SPLIT_PATTERN=\"yyyy-MM-dd HH:mm:ss\";\n\n    // 默认中国日期的格式化方法\n    public static String formatFullTime(LocalDateTime localDateTime){\n        return formatFullTime(localDateTime,FULL_TIME_PATTERN);\n    }\n    // 自定义中国日期的格式化方法\n    public static String formatFullTime(LocalDateTime localDateTime,String pattern){\n        DateTimeFormatter dateTimeFormatter=DateTimeFormatter.ofPattern(pattern);\n        return localDateTime.format(dateTimeFormatter);\n    }\n\n\n    // 第一：接收指定字符串格式，转化为日期格式\n    public static String formatCSTTime(String date, String format) throws ParseException {\n        SimpleDateFormat sdf = new SimpleDateFormat(\"EEE MMM dd HH:mm:ss zzz yyyy\", Locale.US);\n        return getDateFormat(sdf.parse(date), format);\n    }\n    // 第二：把国外的日期格式变成中国时间格式\n    public static String getDateFormat(Date date, String dateFormatType){\n        SimpleDateFormat simpleDateFormat=new SimpleDateFormat(dateFormatType);\n        return simpleDateFormat.format(date);\n    }\n\n\n    public static void main(String[] args) throws ParseException{\n        String dateStr = \"Wed Sep 16 11:26:23 CST 2009\"; \n        LocalDateTime date=LocalDateTime.now();\n        System.out.println(formatFullTime(date));\n        System.out.println(formatFullTime(date,FULL_TIME_SPLIT_PATTERN));\n        System.out.println(formatCSTTime(dateStr,FULL_TIME_SPLIT_PATTERN));\n    }\n}\n```\n## 输出结果：\n```java\n20200330164538\n2020-03-30 16:45:38\n2009-09-16 11:26:23\n```\n","categories":["Java"]},{"title":"Java-md5简单加密","url":"/2020/03/29/Java-md5简单加密/","content":"\n原文：https://github.com/zmh3788/thesixsectorTeam\n\n```java\npackage city.thesixsectorteam.wheelworld.common.utils;\n\nimport org.apache.shiro.crypto.hash.SimpleHash;\nimport org.apache.shiro.util.ByteSource;\n\npublic class MD5Util {\n\n\tprivate static final String ALGORITH_NAME = \"md5\";\n\tprivate static final int HASH_ITERATIONS = 2;\n\n\tprotected MD5Util(){}\n\t\n\tpublic static String encrypt(String password) {\n\t\treturn new SimpleHash(ALGORITH_NAME, password, ByteSource.Util.bytes(password), HASH_ITERATIONS).toHex();\n\t}\n\n\tpublic static String encrypt(String username, String password) {\n\t\treturn new SimpleHash(ALGORITH_NAME, password, ByteSource.Util.bytes(username.toLowerCase() + password),\n\t\t\t\tHASH_ITERATIONS).toHex();\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tSystem.out.println(encrypt(\"sixsector\",\"liudaolunhui\"));\n\t}\n\n}\n```\n\n## 输出结果：\n```java\n211a547a512e09ad375c48540560f4df\n```\n\n\n","categories":["Java"]},{"title":"Java 开发手册-阿里巴巴-命名风格","url":"/2020/03/27/Java 开发手册-阿里巴巴-命名风格/","content":"\n\n\n\n\n```txt\n一、编程规约 (一)命名风格 \n\n1. 【强制】代码中的命名均不能以下划线或美元符号开始，也不能以下划线或美元符号结束。\n\t反例：_name / __name / $name / name_ / name$ / name__\n\n2. 【强制】代码中的命名严禁使用拼音与英文混合的方式，更不允许直接使用中文的方式。\n\t说明：正确的英文拼写和语法可以让阅读者易于理解，避免歧义。注意，即使纯拼音命名方式也要避免采用。\n\t正例：alibaba / taobao / youku / hangzhou 等国际通用的名称，可视同英文。\n\t反例：DaZhePromotion [打折] / getPingfenByName() [评分] / int 某变量 = 3\n\n3. 【强制】类名使用 UpperCamelCase 风格，但以下情形例外：DO / BO / DTO / VO / AO / PO / UID 等。\n\t正例：MarcoPolo / UserDO / XmlService / TcpUdpDeal / TaPromotion\n\t反例：macroPolo / UserDo / XMLService / TCPUDPDeal / TAPromotion\n\n4. 【强制】方法名、参数名、成员变量、局部变量都统一使用 lowerCamelCase 风格，必须遵从驼峰形式。\n\t正例： localValue / getHttpMessage() / inputUserId\n\n5. 【强制】常量命名全部大写，单词间用下划线隔开，力求语义表达完整清楚，不要嫌名字长。\n\t正例：MAX_STOCK_COUNT\n\t反例：MAX_COUNT\n\n6. 【强制】抽象类命名使用 Abstract 或 Base 开头；异常类命名使用 Exception 结尾；测试类\n\t命名以它要测试的类的名称开始，以 Test 结尾。\n\n7. 【强制】类型与中括号紧挨相连来表示数组。\n\t正例：定义整形数组 int[] arrayDemo;\n\t反例：在 main 参数中，使用 String args[]来定义。\n\n8. 【强制】POJO 类中布尔类型的变量，都不要加 is 前缀，否则部分框架解析会引起序列化错误。\n\t反例：定义为基本数据类型 Boolean isDeleted 的属性，它的方法也是 isDeleted()，RPC\n\t框架在反向解析的时候，“误以为”对应的属性名称是 deleted，导致属性获取不到，进而抛\n\t出异常。\n\n9. 【强制】包名统一使用小写，点分隔符之间有且仅有一个自然语义的英语单词。包名统一使用\n\t单数形式，但是类名如果有复数含义，类名可以使用复数形式。\n\t正例：应用工具类包名为 com.alibaba.ai.util、类名为 MessageUtils（此规则参考 spring\n\t的框架结构）\n\n10. 【强制】杜绝完全不规范的缩写，避免望文不知义。\n\t反例：AbstractClass“缩写”命名成 AbsClass；condition“缩写”命名成 condi，此类随\n\t意缩写严重降低了代码的可阅读性。\n\n11. 【推荐】为了达到代码自解释的目标，任何自定义编程元素在命名时，使用尽量完整的单词组合来表达其意。\n\t正例：在 JDK 中，表达原子更新的类名为：AtomicReferenceFieldUpdater。\n\t反例：变量 int a 的随意命名方式。\n\n12. 【推荐】如果模块、接口、类、方法使用了设计模式，在命名时需体现出具体模式。\n\t说明：将设计模式体现在名字中，有利于阅读者快速理解架构设计理念。\n\t正例：public class OrderFactory;\n\t \tpublic class LoginProxy;\n\t\tpublic class ResourceObserver;\n\n13. 【推荐】接口类中的方法和属性不要加任何修饰符号（public 也不要加），保持代码的简洁\n\t性，并加上有效的 Javadoc 注释。尽量不要在接口里定义变量，如果一定要定义变量，肯定是\n\t与接口方法相关，并且是整个应用的基础常量。\n\n\t正例：接口方法签名 void commit();\n\t \t接口基础常量 String COMPANY = \"alibaba\";\n\t反例：接口方法定义 public abstract void f();\n\t\t说明：JDK8 中接口允许有默认实现，那么这个 default 方法，是对所有实现类都有价值的默\n\t\t认实现。\n\n14. 接口和实现类的命名有两套规则：\n\t1）【强制】对于 Service 和 DAO 类，基于 SOA 的理念，暴露出来的服务一定是接口，内部\n\t\t的实现类用 Impl 的后缀与接口区别。\n\t\t正例：CacheServiceImpl 实现 CacheService 接口。\n\t2）【推荐】如果是形容能力的接口名称，取对应的形容词为接口名（通常是–able 的形式）。\n\t\t正例：AbstractTranslator 实现 Translatable 接口。\n\n15. 【参考】枚举类名建议带上 Enum 后缀，枚举成员名称需要全大写，单词间用下划线隔开。\n\t说明：枚举其实就是特殊的类，域成员均为常量，且构造方法被默认强制是私有。\n\t正例：枚举名字为 ProcessStatusEnum 的成员名称：SUCCESS / UNKNOWN_REASON。\n\n16. 【参考】各层命名规约：\n\tA) Service/DAO 层方法命名规约\n\t\t1） 获取单个对象的方法用 get 做前缀。\n\t\t2） 获取多个对象的方法用 list 做前缀，复数形式结尾如：listObjects。 3） 获取统计值的方法用 count 做前缀。 4） 插入的方法用 save/insert 做前缀。\n\t\t5） 删除的方法用 remove/delete 做前缀。\n\t\t6） 修改的方法用 update 做前缀。\n\tB) 领域模型命名规约\n\t\t1） 数据对象：xxxDO，xxx 即为数据表名。\n\t\t2） 数据传输对象：xxxDTO，xxx 为业务领域相关的名称。\n\t\t3） 展示对象：xxxVO，xxx 一般为网页名称。\n\t\t4） POJO 是 DO/DTO/BO/VO 的统称，禁止命名成 xxxPOJO。\n```","categories":["Java"]},{"title":"Java-冒泡，选择和插入排序实例","url":"/2020/03/26/Java-冒泡，选择和插入排序实例/","content":"\n```java\n\nimport java.util.Arrays;\n\npublic class test {\n  \n   public static void bubbleSort(int[] arr)\n   {\n      int num = 1,n = arr.length;\n      for(int x=0; x < n-1; x++)\n      {\n         for(int y=0; y < n-1-x; y++)\n         {\n            if(arr[y] > arr[y+1])\n               swap(arr,y,y+1);\n            // -+-+-+-+-+-+-+-+-+-++-++-+-+-+-+-+-+-\n            printArray(arr);\n            System.out.printf(\"执行次数：%d \\n\",num++);\n            // -+-+-+-+-+-+-+-+-+-++-++-+-+-+-+-+-+-\n         }\n         System.out.println();\n      }\n   }\n   public static void selectSort(int[] arr)\n   {\n      int num = 1, n = arr.length;\n      for(int i = 0; i < n-1; i++)\n      {\n         int index = i;\n         for(int j = i+1; j < n; j++)\n         {\n            if(arr[index] > arr[j])\n               index = j;\n            // -+-+-+-+-+-+-+-+-+-++-++-+-+-+-+-+-+-\n            printArray(arr);\n            System.out.printf(\"执行次数：%d \\n\",num++);\n            // -+-+-+-+-+-+-+-+-+-++-++-+-+-+-+-+-+-\n         }\n         if(index != i)\n         {\n            swap(arr,i,index);\n         }\n         System.out.println();\n        \n      }\n   }\n   // 简单的插入排序【可以理解有一点冒泡排序的意思】\n   public static void insertSort(int[] target){\n      // 原文：https://blog.csdn.net/justloveyou_/article/details/72730597\n      int num = 1, n = target.length;\n      if(target != null && n != 1)// 待排序数组不为空且长度大于1\n      {   \n         for(int i = 1; i < n; i++) // 不断扩大有序序列，直到扩展到整个数组\n         { \n           for(int j = i; j > 0 && target[j]  < target[j-1]; j--) // 向有序序列中插入新的元素\n           {    \n               swap(target,j,j-1);//交换函数\n               // -+-+-+-+-+-+-+-+-+-++-++-+-+-+-+-+-+-\n               printArray(target);\n               System.out.printf(\"执行次数：%d \\n\",num++);\n               // -+-+-+-+-+-+-+-+-+-++-++-+-+-+-+-+-+-\n           }\n           System.out.println();\n         }\n      }\n   }\n\n   // 难一点的插入排序【不过这个能直观的看到是插入方式】\n   public static void insertSort02(int[] arr)\n   {\n      int j = 0, cur = 0, num = 1, n = arr.length;\n      for(int i=1; i < n; i++)\n      {\n         cur = arr[i];\n         for(j= i-1; j > -1 && cur < arr[j]; j--)\n         {\n            arr[j+1] = arr[j];\n            // -+-+-+-+-+-+-+-+-+-++-++-+-+-+-+-+-+-\n            printArray(arr);\n            System.out.printf(\"执行次数：%d \\n\",num++);\n            // -+-+-+-+-+-+-+-+-+-++-++-+-+-+-+-+-+-\n         \n         }\n         arr[j+1] = cur;\n         // -+-+-+-+-+-+-+-+-+-++-++-+-+-+-+-+-+-\n         printArray(arr);\n         System.out.print(\"插入排序执行的结果\\n\\n\");\n         // -+-+-+-+-+-+-+-+-+-++-++-+-+-+-+-+-+-\n      }\n   }\n\n \n   // 只是交换两个值\n   public static void swap(int[] arr,int a,int b)\n   {\n      int temp= arr[a];\n      arr[a] = arr[b];\n      arr[b]= temp;\n   }\n\n   // 只是为了输出好看罢了\n   public static void printArray(int[] arr)\n   {\n      // System.out.println(Arrays.toString(arr));\n      System.out.print(\"[\");\n      for (int i : arr) {\n         System.out.print(i+\"\\t\" );\n      }\n      System.out.print(\"]\");\n   }\n\n   public static void main(String[] args) {\n      int[] arr = {99, 88, 77, 66, 55, 44, 33, 22, 11, 0};\n      printArray(arr);\n      System.out.print(\"初始化的数据 \\n\");\n      // bubbleSort(arr);\n      // selectSort(arr);\n      insertSort(arr);\n      // insertSort02(arr);\n   }\n}\n```\n\n### 运行结果：\n```java\n[99\t88\t77\t66\t55\t44\t33\t22\t11\t0\t]初始化的数据 \n[88\t99\t77\t66\t55\t44\t33\t22\t11\t0\t]执行次数：1 \n\n[88\t77\t99\t66\t55\t44\t33\t22\t11\t0\t]执行次数：2 \n[77\t88\t99\t66\t55\t44\t33\t22\t11\t0\t]执行次数：3 \n\n[77\t88\t66\t99\t55\t44\t33\t22\t11\t0\t]执行次数：4 \n[77\t66\t88\t99\t55\t44\t33\t22\t11\t0\t]执行次数：5 \n[66\t77\t88\t99\t55\t44\t33\t22\t11\t0\t]执行次数：6 \n\n[66\t77\t88\t55\t99\t44\t33\t22\t11\t0\t]执行次数：7 \n[66\t77\t55\t88\t99\t44\t33\t22\t11\t0\t]执行次数：8 \n[66\t55\t77\t88\t99\t44\t33\t22\t11\t0\t]执行次数：9 \n[55\t66\t77\t88\t99\t44\t33\t22\t11\t0\t]执行次数：10 \n\n[55\t66\t77\t88\t44\t99\t33\t22\t11\t0\t]执行次数：11 \n[55\t66\t77\t44\t88\t99\t33\t22\t11\t0\t]执行次数：12 \n[55\t66\t44\t77\t88\t99\t33\t22\t11\t0\t]执行次数：13 \n[55\t44\t66\t77\t88\t99\t33\t22\t11\t0\t]执行次数：14 \n[44\t55\t66\t77\t88\t99\t33\t22\t11\t0\t]执行次数：15 \n\n[44\t55\t66\t77\t88\t33\t99\t22\t11\t0\t]执行次数：16 \n[44\t55\t66\t77\t33\t88\t99\t22\t11\t0\t]执行次数：17 \n[44\t55\t66\t33\t77\t88\t99\t22\t11\t0\t]执行次数：18 \n[44\t55\t33\t66\t77\t88\t99\t22\t11\t0\t]执行次数：19 \n[44\t33\t55\t66\t77\t88\t99\t22\t11\t0\t]执行次数：20 \n[33\t44\t55\t66\t77\t88\t99\t22\t11\t0\t]执行次数：21 \n\n[33\t44\t55\t66\t77\t88\t22\t99\t11\t0\t]执行次数：22 \n[33\t44\t55\t66\t77\t22\t88\t99\t11\t0\t]执行次数：23 \n[33\t44\t55\t66\t22\t77\t88\t99\t11\t0\t]执行次数：24 \n[33\t44\t55\t22\t66\t77\t88\t99\t11\t0\t]执行次数：25 \n[33\t44\t22\t55\t66\t77\t88\t99\t11\t0\t]执行次数：26 \n[33\t22\t44\t55\t66\t77\t88\t99\t11\t0\t]执行次数：27 \n[22\t33\t44\t55\t66\t77\t88\t99\t11\t0\t]执行次数：28 \n\n[22\t33\t44\t55\t66\t77\t88\t11\t99\t0\t]执行次数：29 \n[22\t33\t44\t55\t66\t77\t11\t88\t99\t0\t]执行次数：30 \n[22\t33\t44\t55\t66\t11\t77\t88\t99\t0\t]执行次数：31 \n[22\t33\t44\t55\t11\t66\t77\t88\t99\t0\t]执行次数：32 \n[22\t33\t44\t11\t55\t66\t77\t88\t99\t0\t]执行次数：33 \n[22\t33\t11\t44\t55\t66\t77\t88\t99\t0\t]执行次数：34 \n[22\t11\t33\t44\t55\t66\t77\t88\t99\t0\t]执行次数：35 \n[11\t22\t33\t44\t55\t66\t77\t88\t99\t0\t]执行次数：36 \n\n[11\t22\t33\t44\t55\t66\t77\t88\t0\t99\t]执行次数：37 \n[11\t22\t33\t44\t55\t66\t77\t0\t88\t99\t]执行次数：38 \n[11\t22\t33\t44\t55\t66\t0\t77\t88\t99\t]执行次数：39 \n[11\t22\t33\t44\t55\t0\t66\t77\t88\t99\t]执行次数：40 \n[11\t22\t33\t44\t0\t55\t66\t77\t88\t99\t]执行次数：41 \n[11\t22\t33\t0\t44\t55\t66\t77\t88\t99\t]执行次数：42 \n[11\t22\t0\t33\t44\t55\t66\t77\t88\t99\t]执行次数：43 \n[11\t0\t22\t33\t44\t55\t66\t77\t88\t99\t]执行次数：44 \n[0\t11\t22\t33\t44\t55\t66\t77\t88\t99\t]执行次数：45 \n\n```","categories":["Java"]},{"title":"Java爬虫-获取源码","url":"/2020/03/25/Java爬虫-获取源码/","content":"\n\n\n```java\nimport javax.swing.*;\nimport java.awt.*;\nimport java.awt.event.ActionEvent;\nimport java.awt.event.ActionListener;\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.net.MalformedURLException;\nimport java.net.URL;\nimport java.net.URLConnection;\npublic class web extends JFrame {\n    public web(){\n    }\n    public static void main(String[] args) {\n        JFrame frame=new JFrame(\"获取源码\");\n        FlowLayout flowLayout=new FlowLayout(0,5,5);\n        JPanel panel=new JPanel();\n        JTextField textField=new JTextField(30);\n        JTextArea area=new JTextArea(\"源码\");\n        //设置每列23字符  每行41字符\n        area.setRows(23);area.setColumns(41);\n        //建立一个空的边界，并指定上下左右的宽度，在这些宽度中不能作绘图的效果\n        area.setBorder(BorderFactory.createEmptyBorder(1,1,1,5));\n        area.setTabSize(10);//设置Tab为10个字符\n        area.setLineWrap(true);//自动换行\n        JButton button=new JButton(\"获取\");\n        button.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                ws s=new ws();\n                try {\n                    area.setText(s.re(textField.getText()));\n                } catch (MalformedURLException e1) {\n                    e1.printStackTrace();\n                }\n            }\n        });\n        panel.add(textField);\n        panel.setLayout(flowLayout);\n        panel.add(button);\n        panel.add(new JScrollPane(area));\n        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n        frame.setVisible(true);\n        frame.setBounds(200,200,500,500);\n        frame.getContentPane().add(panel);\n        frame.setResizable(false);\n    }\n    public static class ws extends web{\n        String string=null;\n        public String re(String url) throws MalformedURLException {\n            URL url2=new URL(url);\n            String line=null;\n            try {\n                URLConnection connection=url2.openConnection();\n                BufferedReader bufferedReader=new BufferedReader(\n                        new InputStreamReader(connection.getInputStream(),\"utf-8\"));\n                while((line=bufferedReader.readLine())!=null){\n                    string=string+line;\n                }\n            } catch (IOException e) {\n                e.printStackTrace();\n                System.out.println(\"出错！\");\n            }\n            return string;\n        }\n\n    }\n}\n```\n\n\n```txt\n一。网络爬虫原理\n    1.1等同于浏览器访问网页的原理\n二。网络爬虫分类\n    2.1按链接的访问层次的先后来分\n    2.2按爬虫应用来分\n三。网络爬虫的一般做法\n    3.1基于socket通信编写爬虫\n    3.2基于httpurlconnection类编写爬虫\n    3.3基于apache的HTTPclient包编写爬虫\n    3.4基于phantomjs之类的无界面浏览器\n    3.5基于selenium或是webdriver之类的有界面浏览器\n四。系统设计\n    4.1模块划分：提交任务的UI接口层，任务调度层，网络爬取层，数据解析层，数据持久化层\n    4.2重难点：乱码解决，多线程设计，爬取的各参数的灵活配置，反爬代理\n五。具体技术\n    5.1http协议相关：Java 色+httpclient+jsoup(httpparser)+database\n    5.2http协议相关：只在爬取过程中对最为主流的http网址中的内容进行抓包及参数分析，最为主要的参数部分要对http协议相对了了解些\n    5.3Java se：Java基础\n    5.4httpclient：是开源的apache的著名Java net编程第三方包。其实是对Java net包的封装，目前已为4.3版本\n    5.5database操作\n```\n","tags":["Java爬虫"],"categories":["Java"]},{"title":"Java-单利模式","url":"/2020/03/23/Java-单利模式/","content":"\n\n\n原文：https://www.liangzl.com/get-article-detail-169632.html\n原文：https://www.runoob.com/design-pattern/singleton-pattern.html\n\n\n![java设计模式说明](java设计模式说明.png)\n\n\n> 设计模式的六大原则\n>> 1.开闭原则（Open Close Principle）：对扩展开放，对修改关闭。\n>> 2.里氏代换原则（Liskov Substitution Principle）：只有当派生类可以替换掉基类，且软件单位的功能不受到影响时，基类才能真正被复用，而派生类也能够在基类的基础上增加新的行为。里氏代换原则是对开闭原则的补充。\n>> 3.依赖倒转原则（Dependence Inversion Principle）：针对对接口编程，依赖于抽象而不依赖于具体。\n>> 4.接口隔离原则（Interface Segregation Principle）：使用多个隔离的接口，比使用单个接口要好。\n>> 5.迪米特法则，又称最少知道原则（Demeter Principle）：一个实体应当尽量少地与其他实体之间发生相互作用，使得系统功能模块相对独立。\n>> 6.合成复用原则（Composite Reuse Principle）：尽量使用合成/聚合的方式，而不是使用继承。\n\n\n\n![Java单例模式-图片方式](Java单例模式.jpg)\n```java\n\nclass LazySingleton {  \n    /*\n    1、懒汉式\n        是否懒加载：是\n        是否线程安全：否\n        实现难度：易\n        描述：这种方式是最基本的实现方式，这种实现最大的问题就是不支持多线程。因为没有加锁 synchronized，所以严格意义上它并不算单例模式。\n        这种方式 lazy loading 很明显，不要求线程安全，在多线程不能正常工作。\n\n        优点：\n            无锁，启动快，资源占用小，使用时才实例化。\n        \n        缺点：\n            1.如果初始化工作较多，加载速度会变慢，影响系统系能\n            2.每次获取实例都要进行非空检查，系统开销大\n            3.非线程安全，当多个线程同时访问getInstance()时，可能会产生多个实例\n\n        不建议使用\n    */\n\n    // 指向自己实例的私有静态引用\n    private static LazySingleton instance;  \n    // 私有的构造方法【防止实例化】\n    private LazySingleton (){\n        System.out.println(\"构造函数被调用了\");\n    }  \n    // 以自己实例为返回值的静态的公有方法，静态工厂方法\n    public static LazySingleton getInstance() {  \n        if (instance == null) {  \n            // 运行时加载对象\n            instance = new LazySingleton();  \n        }  \n        return instance;  \n    }  \n}\nclass LazyThreadSingleton01 {  \n    /*\n    2、懒汉式\n        是否懒加载：是\n        是否线程安全：是\n        实现难度：易\n        描述：这种方式具备很好的 lazy loading，能够在多线程中很好的工作，但是，效率很低，99% 情况下不需要同步。\n\n        优点：\n            无锁，启动快，资源占用小，使用时才实例化。\n        \n        缺点：\n            1.如果初始化工作较多，加载速度会变慢，影响系统系能\n            2.每次获取实例都要进行非空检查，系统开销大\n            3.但加锁会影响效率\n\n        不建议使用\n    */\n\n    private static LazyThreadSingleton01 instance;  \n    private LazyThreadSingleton01 (){\n        System.out.println(\"构造函数被调用了\");\n    }  \n    // 是同步的，在多线程中很好的工作\n    public static synchronized LazyThreadSingleton01 getInstance() {  \n        if (instance == null) {  \n            instance = new LazyThreadSingleton01();  \n        }  \n        return instance;  \n    }  \n}\nclass ThreadSingleton {  \n    /*\n    3、饿汉式\n        是否懒加载：否\n        是否线程安全：是\n        实现难度：易\n        描述：这种方式比较常用，但容易产生垃圾对象。\n\n        优点：\n            线程安全；获取实例速度快\n        \n        缺点：\n            启动时即创建实例，启动慢，有可能造成资源浪费。\n\n        建议使用\n    */\n    private static ThreadSingleton instance = new ThreadSingleton();  \n    private ThreadSingleton (){\n        System.out.println(\"构造函数被调用了\");\n    }  \n    public static ThreadSingleton getInstance() {  \n        return instance;  \n    }  \n}\nclass LazyThreadSingleton02 {  \n    /*\n    4、双重校验锁\n        是否懒加载：否\n        是否线程安全：是\n        实现难度：较复杂\n        描述：这种方式比较常用，但容易产生垃圾对象。\n\n        优点：\n            线程安全，进行双重检查，保证只在实例未初始化前进行同步，效率高\n        \n        缺点：\n            还是实例非空判断，耗费一定资源\n\n        其他特殊的需求\n    */\n    private volatile static LazyThreadSingleton02 singleton;  \n    private LazyThreadSingleton02 (){\n        System.out.println(\"构造函数被调用了\");\n    }  \n    public static LazyThreadSingleton02 getInstance() {  \n        if (singleton == null) {  \n            synchronized (LazyThreadSingleton02.class) {  \n                if (singleton == null) {  \n                    singleton = new LazyThreadSingleton02();  \n                }  \n            }  \n        }  \n        return singleton;  \n    }  \n}\nclass LazyThreadSingleton03 {  \n    /*\n    5、静态内部类\n        是否懒加载：是\n        是否线程安全：是\n        实现难度：一般\n        描述：这种方式比较常用，但容易产生垃圾对象。\n\n        优点：\n            既避免了同步带来的性能损耗，又能够延迟加载\n        \n        缺点：\n            1.还是实例非空判断，耗费一定资源\n            2.都需要额外的工作(Serializable、transient、readResolve())来实现序列化，否则每次反序列化一个序列化的对象实例时都会创建一个新的实例。\n            3.可能会有人使用反射强行调用我们的私有构造器（如果要避免这种情况，可以修改构造器，让它在创建第二个实例的时候抛异常）。\n\n        明确实现懒加载效果时\n    */\n    private static class SingletonHolder {  \n        private static final LazyThreadSingleton03 INSTANCE = new LazyThreadSingleton03();  \n    }  \n    private LazyThreadSingleton03 (){\n        System.out.println(\"构造函数被调用了\");\n    }  \n    public static final LazyThreadSingleton03 getInstance() {  \n        return SingletonHolder.INSTANCE;  \n    }  \n}\nenum ThreadSingleton02 {\n    /*\n    6、枚举\n        是否懒加载：否\n        是否线程安全：是\n        实现难度：一般\n        描述：这是实现单例模式的最佳方法。它更简洁，自动支持序列化机制，绝对防止多次实例化。\n\n        优点：\n            不仅能避免多线程同步问题，而且还自动支持序列化机制，防止反序列化重新创建新的对象，绝对防止多次实例化。\n        \n        缺点：\n            感觉生疏\n            \n        如果涉及到反序列化创建对象时\n    */\n    INSTANCE;\n    public void getInstance() {\n        System.out.println(\"资源初始化...\");\n    }\n}\nclass TestThread extends Thread {\n    @Override\n    public void run() {\n        // System.out.println(LazySingleton.getInstance());\n        // System.out.println(LazyThreadSingleton.getInstance());\n        System.out.println(ThreadSingleton.getInstance());\n        // System.out.println(LazyThreadSingleton02.getInstance());\n        // System.out.println(LazyThreadSingleton03.getInstance());\n        // ThreadSingleton02.INSTANCE.getInstance();\n    }\n}\n\npublic class test{\n    public static void main(String[] args) {\n        \n        Thread[] threads = new Thread[10];\n        for (int i = 0; i < threads.length; i++) {\n            threads[i] = new TestThread();\n        }\n        for (int i = 0; i < threads.length; i++) {\n            threads[i].start();\n        }\n        /*\n        构造函数被调用了\n        ThreadSingleton@55584367\n        ThreadSingleton@55584367\n        ThreadSingleton@55584367\n        ThreadSingleton@55584367\n        ThreadSingleton@55584367\n        ThreadSingleton@55584367\n        ThreadSingleton@55584367\n        ThreadSingleton@55584367\n        ThreadSingleton@55584367\n        ThreadSingleton@55584367\n        */\n    }\n}\n```","categories":["Java"]},{"title":"Java面试题：克隆对象的浅克隆","url":"/2020/03/23/Java面试题：克隆对象的浅克隆/","content":"\n\n\n原文：https://www.cnblogs.com/songpingyi/p/10283742.html\n\n\n```java\nclass AddressNew implements Cloneable {\n    private String add;\n\n    public String getAdd() {\n        return add;\n    }\n\n    public void setAdd(String add) {\n        this.add = add;\n    }\n\n    public Object clone() throws CloneNotSupportedException{\n       return super.clone();\n    }\n\n}\nclass StudentNew implements Cloneable{\n    private int number;\n    private String name;\n    private AddressNew addr;\n\n    public String getName() {\n        return name;\n    }\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public int getNumber() {\n        return number;\n    }\n    public void setNumber(int number) {\n        this.number = number;\n    }\n\n    public AddressNew getAddr() {\n        return addr;\n    }\n    public void setAddr(AddressNew addr) {\n        this.addr = addr;\n    }\n\n\n    public Object clone() throws CloneNotSupportedException {\n       return super.clone();\n    }\n}\n\n\npublic class test {\n   public static void main(String [] args) throws Exception{\n\t   \t/**\n\t\t为什么要使用克隆：\n\t\t\t答：克隆的对象可能包含一些已经修改过的属性，而 new 出来的对象的属性都还是初始化时候的值，所以当需要一个新的对象来保存当前对象的“状态”就靠克隆方法了。\n\t\t\t\n\t\t\tAddressNew对象：一个new出来的对象【属性都还是初始化的值】\n\t\t\tStudentNew对象：新的对象【比如也是new出来的】\n\t\t\t对象克隆：需要StudentNew对象保存-->AddressNew对象的状态\n\n\t\t克隆的深浅方式：\n\t\t\t1.浅克隆：当对象被复制时，只复制它本身和其中包含的值类型的成员变量，而引用类型的成员对象并没有复制。\n\t\t\t2.深克隆：除了对象本身被复制外，对象所包含的所有成员变量也将复制。\n\t\t\n\t\t克隆的实现方式：\n\t\t\t1.实现 Cloneable 接口并重写 Object 类中的 clone() 方法。\n\t\t\t2.实现 Serializable 接口，通过对象的序列化和反序列化实现克隆，可以实现真正的深度克隆。\n\t\t*/\n\n       AddressNew addr = new AddressNew();\n       addr.setAdd(\"杭州市\");\n       StudentNew stu1 = new StudentNew();\n       stu1.setNumber(123);\n       stu1.setName(\"s1\");\n       stu1.setAddr(addr);\n\n       // 进行对象复制\n       StudentNew stu2 = (StudentNew)stu1.clone();\n       // 输出格式化模板\n       String sentenceFormat=\"java对象:%s, 编号:%s, 学生姓名:%s, 家庭地址:%s \\n\";\n\n       System.out.printf(sentenceFormat,stu1,stu1.getAddr().getAdd(), stu1.getName(), stu1.getNumber());\n       System.out.printf(sentenceFormat,stu2,stu2.getAddr().getAdd(), stu2.getName(), stu2.getNumber());\n\n       System.out.println(\"-+-+-+-+-+-+-+-+-+-+-+-+-\");\n       addr.setAdd(\"西湖区\");//第一证明：引用类型的成员对象并没有复制\n       // stu1.setNumber(20);//第二证明：这就是浅克隆\n       // stu2.setName(\"s2\");//第三证明：只复制它本身和其中包含的值类型的成员变量\n\n       System.out.printf(sentenceFormat,stu1,stu1.getAddr().getAdd(), stu1.getName(), stu1.getNumber());\n       System.out.printf(sentenceFormat,stu2,stu2.getAddr().getAdd(), stu2.getName(), stu2.getNumber());\n   }\n}\n```\n\n### 第一证明的结果：\n```java\njava对象:StudentNew@4aa298b7, 编号:杭州市, 学生姓名:s1, 家庭地址:123 \njava对象:StudentNew@7d4991ad, 编号:杭州市, 学生姓名:s1, 家庭地址:123 \n-+-+-+-+-+-+-+-+-+-+-+-+-\njava对象:StudentNew@4aa298b7, 编号:西湖区, 学生姓名:s1, 家庭地址:123 \njava对象:StudentNew@7d4991ad, 编号:西湖区, 学生姓名:s1, 家庭地址:123 \n```\n\n### 第二证明的结果：\n```java\njava对象:StudentNew@4aa298b7, 编号:杭州市, 学生姓名:s1, 家庭地址:123 \njava对象:StudentNew@7d4991ad, 编号:杭州市, 学生姓名:s1, 家庭地址:123 \n-+-+-+-+-+-+-+-+-+-+-+-+-\njava对象:StudentNew@4aa298b7, 编号:杭州市, 学生姓名:s1, 家庭地址:20 \njava对象:StudentNew@7d4991ad, 编号:杭州市, 学生姓名:s1, 家庭地址:123 \n```\n\n### 第三证明的结果：\n```java\njava对象:StudentNew@4aa298b7, 编号:杭州市, 学生姓名:s1, 家庭地址:123 \njava对象:StudentNew@7d4991ad, 编号:杭州市, 学生姓名:s1, 家庭地址:123 \n-+-+-+-+-+-+-+-+-+-+-+-+-\njava对象:StudentNew@4aa298b7, 编号:杭州市, 学生姓名:s1, 家庭地址:123 \njava对象:StudentNew@7d4991ad, 编号:杭州市, 学生姓名:s2, 家庭地址:123 \n```","categories":["Java"]},{"title":"Java面试题：克隆对象的Serializable深克隆","url":"/2020/03/23/Java面试题：克隆对象的Serializable深克隆/","content":"\n原文：https://www.cnblogs.com/songpingyi/p/10283742.html\n\n\n```java\nimport java.io.IOException;\nimport java.io.Serializable;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.io.ByteArrayInputStream;\nimport java.io.ByteArrayOutputStream;\nimport java.io.OptionalDataException;\n\n\n\nclass AddressSerial implements Serializable {\n    private String add;\n\n    public String getAdd() {\n        return add;\n    }\n\n    public void setAdd(String add) {\n        this.add = add;\n    }\n\n    \n}\n\nclass StudentSerial implements Serializable{\n    private int number;\n    private String name;\n    private AddressSerial addr;\n\n    public String getName() {\n        return name;\n    }\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public int getNumber() {\n        return number;\n    }\n    public void setNumber(int number) {\n        this.number = number;\n    }\n\n    public AddressSerial getAddr() {\n        return addr;\n    }\n    public void setAddr(AddressSerial addr) {\n        this.addr = addr;\n    }\n\n\n    public Object clone() throws CloneNotSupportedException {\n        return  super.clone();\n    }\n\n    public  Object deepClone() throws IOException,OptionalDataException,ClassNotFoundException{\n\t\t// 实际的数据流向：ObjectOutputStream->ByteArrayOutputStream->ByteArrayInputStream ->ObjectInputStream\n\n    \t// 字节数组输出流【创建一个字节数组缓冲区,并获取内存中的缓存数据并转成数组】\n        ByteArrayOutputStream bos=new ByteArrayOutputStream();\n        // 对象输出流\n        ObjectOutputStream oo=new ObjectOutputStream(bos);\n        //将指定的对象写入字节数组输出流，进行序列化\n        oo.writeObject(this);\n\n        // 字节数组\n        byte[] bytes = bos.toByteArray();\n\n        // 字节数组输入流【将字节数组转化为输入流】\n        ByteArrayInputStream bi=new ByteArrayInputStream(bytes);\n        // 对象输入流【执行反序列化，从字节数组输入流中读取对象】\n        ObjectInputStream oi=new ObjectInputStream(bi);\n        \n        return oi.readObject();\n    }\n}\n\n\n\npublic class test {\n    public static void  main(String [] args) throws Exception{\n    \t/**\n\t\t为什么要使用克隆：\n\t\t\t答：克隆的对象可能包含一些已经修改过的属性，而 new 出来的对象的属性都还是初始化时候的值，所以当需要一个新的对象来保存当前对象的“状态”就靠克隆方法了。\n\t\t\t\n\t\t\tAddress对象：一个new出来的对象【属性都还是初始化的值】\n\t\t\tStudentNew对象：新的对象【比如也是new出来的】\n\t\t\t对象克隆：需要Student对象保存-->Address对象的状态\n\n\t\t克隆的深浅方式：\n\t\t\t1.浅克隆：当对象被复制时，只复制它本身和其中包含的值类型的成员变量，而引用类型的成员对象并没有复制。\n\t\t\t2.深克隆：除了对象本身被复制外，对象所包含的所有成员变量也将复制。\n\t\t\n\t\t克隆的实现方式：\n\t\t\t1.实现 Cloneable 接口并重写 Object 类中的 clone() 方法。\n\t\t\t2.实现 Serializable 接口，通过对象的序列化和反序列化实现克隆，可以实现真正的深度克隆。\n\t\t*/\n\n        AddressSerial addr = new AddressSerial();\n        addr.setAdd(\"杭州市\");\n        StudentSerial stu1 = new StudentSerial();\n        stu1.setNumber(123);\n        stu1.setName(\"s1\");\n        stu1.setAddr(addr);\n\n        // 进行对象复制\n        StudentSerial stu2 = (StudentSerial)stu1.deepClone();\n        // 输出格式化模板\n        String sentenceFormat=\"java对象:%s, 编号:%s, 学生姓名:%s, 家庭地址:%s \\n\";\n\n        System.out.printf(sentenceFormat,stu1,stu1.getAddr().getAdd(), stu1.getName(), stu1.getNumber());\n        System.out.printf(sentenceFormat,stu2,stu2.getAddr().getAdd(), stu2.getName(), stu2.getNumber());\n\n        System.out.println(\"-+-+-+-+-+-+-+-+-+-+-+-+-\");\n        addr.setAdd(\"西湖区\");//第一证明：除了对象本身被复制外，对象所包含的所有成员变量也将复制\n        stu1.setNumber(20);//第一证明：这就是系列化深克隆\n        stu2.setName(\"s2\");//第一证明：这就是系列化深克隆\n\n        System.out.printf(sentenceFormat,stu1,stu1.getAddr().getAdd(), stu1.getName(), stu1.getNumber());\n        System.out.printf(sentenceFormat,stu2,stu2.getAddr().getAdd(), stu2.getName(), stu2.getNumber());\n    }\n}\n```\n","categories":["Java"]},{"title":"Java面试题：克隆对象的Cloneable深克隆","url":"/2020/03/23/Java面试题：克隆对象的Cloneable深克隆/","content":"\n\n\n原文：https://www.cnblogs.com/songpingyi/p/10283742.html\n\n\n```java\nclass Address implements Cloneable {\n    private String add;\n\n    public String getAdd() {\n        return add;\n    }\n    public void setAdd(String add) {\n        this.add = add;\n    }\n\n    @Override\n    public Object clone() {\n        Address addr = null;\n        try{\n            addr = (Address)super.clone();\n        }catch(CloneNotSupportedException e) {\n            e.printStackTrace();\n        }\n        return addr;\n    }\n}\n\nclass Student implements Cloneable{\n    private int number;\n    private String name;\n    private Address addr;\n\n    public String getName() {\n        return name;\n    }\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public int getNumber() {\n        return number;\n    }\n    public void setNumber(int number) {\n        this.number = number;\n    }\n\n    public Address getAddr() {\n        return addr;\n    }\n    public void setAddr(Address addr) {\n        this.addr = addr;\n    }\n\n    @Override\n    public Object clone() {\n        Student stu = null;\n        try{\n            stu = (Student)super.clone();   //先浅复制\n        }catch(CloneNotSupportedException e) {\n            e.printStackTrace();\n        }\n        stu.addr = (Address)addr.clone();   //后深度复制\n        return stu;\n    }\n}\n\n\npublic class test {\n    public static void main(String args[]) {\n    \t/**\n\t\t为什么要使用克隆：\n\t\t\t答：克隆的对象可能包含一些已经修改过的属性，而 new 出来的对象的属性都还是初始化时候的值，所以当需要一个新的对象来保存当前对象的“状态”就靠克隆方法了。\n\t\t\t\n\t\t\tAddress对象：一个new出来的对象【属性都还是初始化的值】\n\t\t\tStudentNew对象：新的对象【比如也是new出来的】\n\t\t\t对象克隆：需要Student对象保存-->Address对象的状态\n\n\t\t克隆的深浅方式：\n\t\t\t1.浅克隆：当对象被复制时，只复制它本身和其中包含的值类型的成员变量，而引用类型的成员对象并没有复制。\n\t\t\t2.深克隆：除了对象本身被复制外，对象所包含的所有成员变量也将复制。\n\t\t\n\t\t克隆的实现方式：\n\t\t\t1.实现 Cloneable 接口并重写 Object 类中的 clone() 方法。\n\t\t\t2.实现 Serializable 接口，通过对象的序列化和反序列化实现克隆，可以实现真正的深度克隆。\n\t\t*/\n\t\tAddress addr = new Address();\n\t\taddr.setAdd(\"杭州市\");\n\t\tStudent stu1 = new Student();\n\t\tstu1.setNumber(123);\n\t\tstu1.setName(\"s1\");\n\t\tstu1.setAddr(addr);\n\n\t\t// 进行对象复制\n\t\tStudent stu2 = (Student)stu1.clone();\n\t\t// 输出格式化模板\n        String sentenceFormat=\"java对象:%s, 编号:%s, 学生姓名:%s, 家庭地址:%s \\n\";\n\n        System.out.printf(sentenceFormat,stu1,stu1.getAddr().getAdd(), stu1.getName(), stu1.getNumber());\n        System.out.printf(sentenceFormat,stu2,stu2.getAddr().getAdd(), stu2.getName(), stu2.getNumber());\n\n        System.out.println(\"-+-+-+-+-+-+-+-+-+-+-+-+-\");\n        addr.setAdd(\"西湖区\");//第一证明：除了对象本身被复制外，对象所包含的所有成员变量也将复制\n        stu1.setNumber(20);//第一证明：这就是深克隆\n        stu2.setName(\"s2\");//第一证明：这就是深克隆\n\n        System.out.printf(sentenceFormat,stu1,stu1.getAddr().getAdd(), stu1.getName(), stu1.getNumber());\n        System.out.printf(sentenceFormat,stu2,stu2.getAddr().getAdd(), stu2.getName(), stu2.getNumber());\n\t} \n}\n```\n\n\n### 第一证明的结果：\n```java\njava对象:Student@4aa298b7, 编号:杭州市, 学生姓名:s1, 家庭地址:123 \njava对象:Student@7d4991ad, 编号:杭州市, 学生姓名:s1, 家庭地址:123 \n-+-+-+-+-+-+-+-+-+-+-+-+-\njava对象:Student@4aa298b7, 编号:西湖区, 学生姓名:s1, 家庭地址:20 \njava对象:Student@7d4991ad, 编号:杭州市, 学生姓名:s2, 家庭地址:123 \n```","categories":["Java"]},{"title":"Java面试题：java中==和equals的区别是什么","url":"/2020/03/20/Java面试题：java中==和equals的区别是什么/","content":"\n\n原文：https://blog.csdn.net/qq_37358860/article/details/100149986\n\n>> java中==和equals的区别是什么?\n>> equals 方法是用于比较两个独立对象的内容是否相同，就好比去比较两个人的长相是否相同，它比较\n的两个对象是独立的。\n>> 要比较两个基本类型的数据或两个引用变量是否相等，只能用==操作符。\n>> 字符串的比较基本上都是使用 equals 方法\n\n# 测试代码\n```java\npublic static void main(String[] args) {\n    // -128 ~ +127 之间\n    Integer a = 5;//变量【内存中所存储的数值】\n    int b = 5;//变量\n    Integer c = new Integer(5);//对象【内存中存储的数值就是对象占用的那块内存的首地址】\n    Integer d = 5;//变量\n\n    System.out.println(\"a对象映射的内存地址\" + System.identityHashCode(a));// 366712642\n    System.out.println(\"b对象映射的内存地址\" + System.identityHashCode(b));// 366712642\n    System.out.println(\"c对象映射的内存地址\" + System.identityHashCode(c));// 1829164700\n    System.out.println(\"d对象映射的内存地址\" + System.identityHashCode(d));// 366712642\n\n    System.out.println(a == b);// true【查看结论1】\n    System.out.println(a == c);// false【查看结论2】\n    System.out.println(a == d);// true【查看结论3】\n    System.out.println(a.equals(b));// true\n    System.out.println(a.equals(c));// true\n    System.out.println(a.equals(d));// true\n\n    // -128 ~ +127 之外\n    a = 128;\n    b = 129;\n    c = new Integer(128);\n    d = 128;\n\n    System.out.println(\"a对象映射的内存地址\" + System.identityHashCode(a));// 2018699554\n    System.out.println(\"b对象映射的内存地址\" + System.identityHashCode(b));// 1311053135\n    System.out.println(\"c对象映射的内存地址\" + System.identityHashCode(c));// 118352462\n    System.out.println(\"d对象映射的内存地址\" + System.identityHashCode(d));// 1550089733\n\n    System.out.println(a == b);// true【查看结论1】\n    System.out.println(a == c);// false\n    System.out.println(a == d);// false\n    System.out.println(a.equals(b));// true\n    System.out.println(a.equals(c));// true\n    System.out.println(a.equals(d));// true\n\n    /**\n     * 说明： 1.因为包装类Integer和基本数据类型int比较时，java会自动拆包装为int，然后进行比较，实际上就变为两个int变量的比较\n     */\n\n    /**\n     * 结论: 1.Integer变量和int变量比较时，只要两个变量的值是向等的，则结果为true\n     * 2.赋值方式中如果调用了new关键字,一定会在内存中给你分配一个新的地址\n     * 3.给Integer类型赋值的时候,如果没有调用new关键字,并且值在-128与+127之间,包括-128和+127,那么指向的都是同一个内存位置\n     */\n}\n```\n\n## 强制使用OOP规约\n```\n【强制】所有的相同类型的包装类对象之间值的比较，全部使用 equals 方法比较。\n    说明：对于 Integer var = ? 在-128 至 127 范围内的赋值，Integer 对象是在\n    IntegerCache.cache 产生，会复用已有对象，这个区间内的 Integer 值可以直接使用==进行\n    判断，但是这个区间之外的所有数据，都会在堆上产生，并不会复用已有对象，这是一个大坑，\n    推荐使用 equals 方法进行判断。\n```","categories":["Java"]},{"title":"Java面试题：HashMap和HashTable的区别","url":"/2020/03/20/Java面试题：HashMap和HashTable的区别/","content":"\n\n原文：https://www.cnblogs.com/dogday/p/11347300.html\n\n*HashMap和HashTable的区别是面试时面试官经常问的问题，在回答的时候可以选择重点做回答，区别主要有下面几点：*\n## key和value的取值范围不同\n```\nHashMap和HashTable都是基于哈希表来实现键值映射的工具类，底层都是哈希表结构。\n\nHashMap允许键为null，值为null，\nHashTable则不允许null键和null值。\n\n对于HashMap如果使用get方法返回null，并不能表明HashMap不存在这个key，有可能是键对应的值为null。\n```\n## 线程安全\n```\nHashMap是非synchronized的，而HashTable是synchronized的。\n\nsynchronized是Java语言的关键字，可用来给对象和方法或者代码块加锁，\n当它锁定一个方法或者一个代码块的时候，同一时刻最多只有一个线程执行这段代码。\n这说明HashTable是线程安全的,而HashMap线程不安全。\n```\n## 效率与同步\n```\nHashMap是不同步的、效率高的，HashTable是同步的、效率低的。\n\n虽然HashMap不是线程安全的，但是它的效率会比HashTable要好很多。\n这样设计是合理的。在我们的日常使用当中，大部分时间是单线程操作的。HashMap把这部分操作解放出来了。\n\n当需要多线程操作的时候可以使用线程安全的ConcurrentHashMap。\nConcurrentHashMap虽然也是线程安全的，但是它的效率比HashTable要高很多。\n```\n## 选择与使用\n```\n\n如果不需要线程安全，那么使用HashMap，如果需要线程安全，那么使用ConcurrentHashMap，\nConcurrentHashMap不但是线程安全的，效率也比HashTable要高，HashTable已经几乎被淘汰了。\n```","categories":["Java"]},{"title":"Vue-自定义事件(转)","url":"/2020/03/17/Vue-自定义事件(转)/","content":"\n\n\n转发自：https://www.cnblogs.com/sea-breeze/p/11302146.html\n\n\n## MyParent.vue\n```vue\n<template>\n  <div id=\"MyParent\">\n    <h1>{{ name }}</h1>\n    <!-- 3.使用组件 -->\n    <my-child v-on:parentEat='parentEat'></my-child>\n  </div>\n</template>\n\n<script>\nimport MyChild from '@/components/MyChild' // 1.引用组件\n\nexport default {\n  data: function () {\n    return {\n      name: ''\n    }\n  },\n  // 2.注册组件\n  components: {\n    'my-child': MyChild\n  },\n  methods: {\n    parentEat: function (fruit) {\n      console.log(\"父组件接收事件\")\n      this.name = fruit;\n    }\n  }\n}\n</script>\n```\n\n\n## MyChild.vue\n```vue\n<template>\n  <div id=\"MyChild\">\n    <button v-on:click=\"childEat\">按钮</button>\n  </div>\n</template>\n\n<script>\nexport default {\n  created: function () {\n    this.$on('parentEat', function (fruit) {\n      console.log(`子组件接收自己发射的事件 吃${fruit}`)\n    })\n  },\n  methods: {\n    childEat: function () {\n      console.log('子组件发射eat事件')\n      this.$emit('parentEat', '芒果')\n    }\n  }\n}\n</script>\n```\n\n\n\n# 自定义事件--子组件跟父组件通信\n```html\n<!DOCTYPE html>\n<html lang=\"zh\">\n  <head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>迷心兔</title>\n    <script src=\"./js/vue.js\"></script>\n  </head>\n  <body>\n    <body>\n      <div id=\"app\">\n        <Father></Father>\n      </div>\n\n      <template id=\"father\">\n        <div>\n          <h2>这里是父组件：</h2>\n          <p>儿子发来的红包数额：{{ money}} </p>\n          <Son @father_accept=\"father_accept\"></Son>\n        </div>\n\n      </template>\n\n      <template id=\"son\">\n        <div>\n          <h2>这里是子组件</h2>\n          <button @click=\"son_send\">给父亲红包{{money}}元</button>\n        </div>\n      </template>\n    </body>\n    <script>\n      Vue.component('Father', {\n        template: '#father',\n        data: function() {\n          return {\n            money: 0,\n          }\n        },\n        methods: {\n          //自定义事件的定义(发布)\n          father_accept: function(val) {\n            this.money = val;\n            console.log(`父亲接收红包的数额：${this.money}`)\n          }\n        }\n      });\n\n      Vue.component('Son', {\n        template: '#son',\n        data: function() {\n          return {\n            money: 3000,\n          }\n        },\n        methods: {\n          //自定义事件的触发 （ 订阅 ）\n          son_send: function() {\n            console.log(`儿子发送红包的数额：${this.money}`)\n            this.$emit('father_accept', this.money)\n          }\n        }\n      });\n\n      new Vue({\n        // el:'#app',// 使用$mount(),这里就可以注释了\n      }).$mount('#app')\n    </script>\n  </body>\n</html>\n```","categories":["Vue"]},{"title":"Vue-【v-model】使用","url":"/2020/03/17/Vue-【v-model】使用/","content":"\n\n\n# input标签的使用v-model进行数据双向绑定-复选框\n```html\n<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<meta charset=\"utf-8\">\n\t\t<title>Vue 测试实例 - 菜鸟教程(runoob.com)</title>\n\t\t<script src=\"./js/vue.js\"></script>\n\t\t<script>\n\t\t\tVue.config.productionTip = false\n\t\t</script>\n\t\t<style>\n\t\t\t.class1{\n\t\t\t  background: #444;\n\t\t\t  color: #eee;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<div id=\"app\">\n\t\t\t<label for=\"r1\">修改颜色</label>\n\t\t\t<input type=\"checkbox\" v-model=\"use\" id=\"r1\">\n\t\t\t<div v-bind:class=\"{'class1': use}\" >\n\t\t\t\t<p>Vue学习 v-bind:class 指令</p>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<script>\n\t\t\tvar vm = new Vue({\n\t\t\t\tel: '#app',\n\t\t\t\tdata: {\n\t\t\t\t\tuse: false\n\t\t\t\t}\n\t\t\t});\n\t\t</script>\n\t</body>\n</html>\n```\n\n# input和textarea标签使用v-model进行数据双向绑定-文本框\n```html\n<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<meta charset=\"utf-8\">\n\t\t<title>Vue 测试实例 - 菜鸟教程(runoob.com)</title>\n\t\t<script src=\"./js/vue.js\"></script>\n\t\t<script>\n\t\t\tVue.config.productionTip = false\n\t\t</script>\n\t</head>\n\t<body>\n\t\t<div id=\"app\">\n\t\t\t<h1>input 元素：</h1>\n\t\t\t<input v-model=\"message\" placeholder=\"编辑我……\">\n\t\t\t<p>消息是: {{ message }}</p>\n\n\t\t\t<h1>textarea 元素：</h1>\n\t\t\t<p style=\"white-space: pre\">{{ message2 }}</p>\n\t\t\t<textarea v-model=\"message2\" placeholder=\"多行文本输入……\"></textarea>\n\t\t</div>\n\n\t\t<script>\n\t\t\tlet vm = new Vue({\n\t\t\t\tel: '#app',\n\t\t\t\tdata: {\n\t\t\t\t\tmessage: 'Runoob',\n\t\t\t\t\tmessage2: '菜鸟教程\\r\\nhttp://www.runoob.com'\n\t\t\t\t}\n\t\t\t})\n\t\t</script>\n\t</body>\n</html>\n```\n\n# input标签使用v-model进行数据双向绑定-多个复选框\n```html\n<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<meta charset=\"utf-8\">\n\t\t<title>Vue 测试实例 - 菜鸟教程(runoob.com)</title>\n\t\t<script src=\"./js/vue.js\"></script>\n\t\t<script>\n\t\t\tVue.config.productionTip = false\n\t\t</script>\n\t</head>\n\t<body>\n\t\t<div id=\"app\">\n\t\t\t<h2>单个复选框：</h2>\n\t\t\t<input type=\"checkbox\" id=\"checkbox\" v-model=\"checked\">\n\t\t\t<label for=\"checkbox\">{{ checked }}</label>\n\n\t\t\t<h2>多个复选框：</h2>\n\t\t\t<input type=\"checkbox\" id=\"runoob\" value=\"Runoob\" v-model=\"checkedNames\">\n\t\t\t<label for=\"runoob\">Runoob</label>\n\t\t\t<input type=\"checkbox\" id=\"google\" value=\"Google\" v-model=\"checkedNames\">\n\t\t\t<label for=\"google\">Google</label>\n\t\t\t<input type=\"checkbox\" id=\"taobao\" value=\"Taobao\" v-model=\"checkedNames\">\n\t\t\t<label for=\"taobao\">taobao</label>\n\t\t\t<br>\n\t\t\t<span>选择的值为: {{ checkedNames }}</span>\n\t\t</div>\n\n\t\t<script>\n\t\t\tnew Vue({\n\t\t\t\tel: '#app',\n\t\t\t\tdata: {\n\t\t\t\t\tchecked: false,\n\t\t\t\t\tcheckedNames: []\n\t\t\t\t}\n\t\t\t})\n\t\t</script>\n\t</body>\n</html>\n```","categories":["Vue"]},{"title":"Vue-【v-bind】使用","url":"/2020/03/17/Vue-【v-bind】使用/","content":"\n\n\n\n\n# v-bind应用在HTML的class属性\n```html\n<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<meta charset=\"utf-8\">\n\t\t<title>Vue 测试实例 - 菜鸟教程(runoob.com)</title>\n\t\t<script src=\"./js/vue.js\"></script>\n\t\t<script src=\"https://unpkg.com/vue-router/dist/vue-router.js\"></script>\n\t\t<script>\n\t\t\tVue.config.productionTip = false\n\t\t</script>\n\t</head>\n\t<body>\n\t\t<div id=\"app\">\n\t\t\t<label for=\"r1\">修改颜色</label><input type=\"checkbox\" v-model=\"use\" id=\"r1\">\n\t\t\t<br><br>\n\t\t\t<div v-bind:class=\"{'class1': use}\">\n\t\t\t\tv-bind:class 指令\n\t\t\t</div>\n\t\t</div>\n\n\t\t<script>\n\t\t\tnew Vue({\n\t\t\t\tel: '#app',\n\t\t\t\tdata: {\n\t\t\t\t\tuse: false\n\t\t\t\t}\n\t\t\t});\n\t\t</script>\n\t</body>\n</html>\n```\n\n# v-bind应用在HTML的href属性\n```html\n<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<meta charset=\"utf-8\">\n\t\t<title>Vue 测试实例 - 菜鸟教程(runoob.com)</title>\n\t\t<script src=\"./js/vue.js\"></script>\n\t\t<script>\n\t\t\tVue.config.productionTip = false\n\t\t</script>\n\t</head>\n\t<body>\n\t\t<div id=\"app\">\n\t\t\t<pre><a v-bind:href=\"url\">菜鸟教程</a></pre>\n\t\t</div>\n\t\t\t<script>\n\t\t\tvar vm = new Vue({\n\t\t\t\tel: '#app',\n\t\t\t\tdata: {\n\t\t\t\t\turl: 'http://www.runoob.com'\n\t\t\t\t}\n\t\t\t})\n\t\t</script>\n\t</body>\n</html>\n```\n\n# v-bind应用在HTML的style属性\n```html\n<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<meta charset=\"utf-8\">\n\t\t<title>Vue 测试实例 - 菜鸟教程(runoob.com)</title>\n\t\t<script src=\"./js/vue.js\"></script>\n\t\t<script>\n\t\t\tVue.config.productionTip = false\n\t\t</script>\n\t</head>\n\t<body>\n\t\t<div id=\"app\">\n\t\t\t<div v-bind:style=\"styleObject\">菜鸟教程</div>\n\t\t</div>\n\t\t<script>\n\t\t\tlet vm = new Vue({\n\t\t\t\tel: '#app',\n\t\t\t\tdata: {\n\t\t\t\t\tstyleObject: {\n\t\t\t\t\t\tcolor: 'green',\n\t\t\t\t\t\tfontSize: '30px'\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t</script>\n\t</body>\n</html>\n```","categories":["Vue"]},{"title":"Vue-【v-html】使用","url":"/2020/03/17/Vue-【v-html】使用/","content":"\n\n\n\n\n# v-html简单使用\n```html\n<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<meta charset=\"utf-8\">\n\t\t<title>Vue 测试实例 - 菜鸟教程(runoob.com)</title>\n\t\t<script src=\"./js/vue.js\"></script>\n\t\t<script src=\"https://unpkg.com/vue-router/dist/vue-router.js\"></script>\n\t\t<script>\n\t\t\tVue.config.productionTip = false\n\t\t</script>\n\t</head>\n\t<body>\n\t\t<div id=\"app\">\n\t\t\t<div v-html=\"message\"></div>\n\t\t</div>\n\n\t\t<script>\n\t\t\tnew Vue({\n\t\t\t\tel: '#app',\n\t\t\t\tdata: {\n\t\t\t\t\tmessage: '<h1>菜鸟教程</h1>'\n\t\t\t\t}\n\t\t\t})\n\t\t</script>\n\t</body>\n</html>\n```","categories":["Vue"]},{"title":"Vue-methods使用","url":"/2020/03/17/Vue-methods使用/","content":"\n\n\n\n\n# 在html标签中使用方法-html模板\n```html\n<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<meta charset=\"utf-8\">\n\t\t<title>Vue 测试实例 - 菜鸟教程(runoob.com)</title>\n\t\t<script src=\"./js/vue.js\"></script>\n\t\t<script src=\"https://unpkg.com/vue-router/dist/vue-router.js\"></script>\n\t\t<script>\n\t\t\tVue.config.productionTip = false\n\t\t</script>\n\t</head>\n\t<body>\n\t\t<div id=\"vue_det\">\n\t\t\t<h1>site : {{ site }}</h1>\n\t\t\t<h1>url : {{ url }}</h1>\n\t\t\t<h1>{{ details() }}</h1>\n\t\t</div>\n\t\t<script type=\"text/javascript\">\n\t\t\tvar vm = new Vue({\n\t\t\t\tel: '#vue_det',\n\t\t\t\tdata: {\n\t\t\t\t\tsite: \"菜鸟教程\",\n\t\t\t\t\turl: \"www.runoob.com\",\n\t\t\t\t\talexa: \"10000\"\n\t\t\t\t},\n\t\t\t\tmethods: {\n\t\t\t\t\tdetails: function() {\n\t\t\t\t\t\treturn this.site + \" - 学的不仅是技术，更是梦想！\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t</script>\n\t</body>\n</html>\n```","categories":["Vue"]},{"title":"组件的通信方式","url":"/2020/03/17/组件的通信方式/","content":"\n\n\n\n\n# 父组件--props--父组件向子组件传值\n```vue\n<template>\n  <!-- 3.使用组件 -->\n  <my-child v-bind:parentMessage=\"parentMessage\">通过props传递数据</my-child>\n  <!-- <my-child v-bind:users=\"users\">通过props传递数据</my-child> -->\n</template>\n\n\n<script>\nimport MyChild from '@/components/MyChild' // 1.引用组件\n\nexport default {\n  // 2.注册组件\n  components: {\n    'my-child': MyChild\n  },\n  data: function () { // 计算属性\n    return {\n      parentMessage: '我是来自父组件的消息',\n      users: ['Henry', 'Bucky', 'Emily'],\n    }\n  },\n}\n</script>\n\n\n<style>\n</style>\n```\n\n# 子组件--props--父组件向子组件传值\n```vue\n<template>\n  <!--\n    1.通过props传递数据-第一种方式：\n    <div>\n      <span>我是来自父组件的消息 </span>\n    </div>\n-->\n  <div>\n    <span>{{ parentMessage }} </span>\n  </div>\n\n  <!-- \n    第二种方式：\n    <div>\n      <ul>\n        <li>Henry</li>\n        <li>Bucky</li>\n        <li>Emily</li>\n      </ul>\n    </div>\n   \n  <div>\n    <ul>\n      <li v-for=\"user in users\">{{user}}</li>\n    </ul>\n  </div>\n-->\n</template>\n\n\n<script>\nexport default {\n  props: {\n    parentMessage: {\n      type: String,\n      required: true,\n    },\n    users: {\n      type: Array,\n      required: true\n    }\n  },\n}\n</script>\n\n\n<style>\n</style>\n```\n\n\n\n\n\n# 父组件--$emit--子组件向父组件传值\n```vue\n<template>\n  <div id=\"MyParent\">\n    <!-- 3.使用组件 -->\n    <my-child v-on:parentChangeTitle=\"parentChangeTitle\">通过props传递数据</my-child>\n    <h1>{{ title }}</h1>\n  </div>\n</template>\n\n\n<script>\nimport MyChild from '@/components/MyChild' // 1.引用组件\n\nexport default {\n  // 2.注册组件\n  components: {\n    'my-child': MyChild\n  },\n  data: function () {\n    return {\n      title: \"[父组件准备接受一个值]\"\n    }\n  },\n  methods: {\n    parentChangeTitle: function (title) {\n      this.title = title\n    }\n  }\n\n}\n</script>\n\n\n<style>\n</style>\n```\n# # 子组件--$emit--子组件向父组件传值\n```vue\n<template>\n  <header>\n    <h1 @click=\"childChangeTitle\">{{ title }}</h1>\n  </header>\n</template>\n\n\n<script>\nexport default {\n  data: function () {\n    return {\n      title: '迷心兔'\n    }\n  },\n  methods: {\n    childChangeTitle: function () {\n      this.$emit('parentChangeTitle', '子组件成功向父组件传一个值')\n    }\n  }\n}\n</script>\n\n\n<style scoped>\nh1 {\n  cursor: pointer;\n}\n</style>\n```\n\n\n\n\n# 父组件--$attrs--多级组件嵌套 【仅仅是传递数据】\n```vue\n<template>\n  <div id=\"MyParent\">\n    <h2>浪里行舟</h2>\n    <my-child-a\n      v-bind:foo=\"foo\"\n      v-bind:boo=\"boo\"\n      v-bind:coo=\"coo\"\n      v-bind:doo=\"doo\"\n      title=\"前端工匠\"\n    ></my-child-a>\n  </div>\n</template>\n\n<script>\nimport childCom1 from '@/components/childCom1'\nexport default {\n  // 2.注册组件\n  components: {\n    'my-child-a': childCom1\n  },\n  data: function () {\n    return {\n      foo: \"Javascript\",\n      boo: \"Html\",\n      coo: \"CSS\",\n      doo: \"Vue\"\n    }\n  },\n  created() {\n    console.log(this.$attrs); // {}\n  }\n}\n</script>\n```\n\n# 子组件--$attrs--多级组件嵌套 【仅仅是传递数据】\n```vue\n<template class=\"border1\">\n  <div>\n    <h2>foo: {{ foo }}</h2>\n    <p>childCom1的$attrs: &#10;{{ $attrs }}</p>\n    <child-com2 v-bind=\"$attrs\"></child-com2>\n  </div>\n</template>\n<script>\nimport childCom2 from '@/components/childCom2'\nexport default {\n  components: {\n    childCom2\n  },\n  inheritAttrs: false, // 可以关闭自动挂载到组件根元素上的没有在props声明的属性\n  props: {\n    foo: String // foo作为props属性绑定\n  },\n  created() {\n    console.log(this.$attrs); // { \"boo\": \"Html\", \"coo\": \"CSS\", \"doo\": \"Vue\", \"title\": \"前端工匠\" }\n  }\n};\n</script>\n```\n\n# 重孙子组件--$attrs--多级组件嵌套 【仅仅是传递数据】\n```vue\n<template>\n  <div class=\"border2\">\n    <h2>boo: {{ boo }}</h2>\n    <p>childCom2的$attrs: &#10; {{ $attrs }}</p>\n    <child-com3 v-bind=\"$attrs\"></child-com3>\n  </div>\n</template>\n<script>\nimport childCom3 from '@/components/childCom3'\nexport default {\n  components: {\n    childCom3\n  },\n  inheritAttrs: false,\n  props: {\n    boo: String\n  },\n  created() {\n    console.log(this.$attrs); // {\"coo\": \"CSS\", \"doo\": \"Vue\", \"title\": \"前端工匠\" }\n  }\n};\n</script>\n```\n\n# 曾孙子组件--$attrs--多级组件嵌套 【仅仅是传递数据】\n```vue\n<template>\n  <div class=\"border3\">\n    <h2>coo: {{ coo }}</h2>\n    <p>childCom3的$attrs: &#10; {{ $attrs }}</p>\n  </div>\n</template>\n<script>\nexport default {\n  props: {\n    coo: String,\n    title: String\n  },\n  created() {\n    console.log(this.$attrs); // {doo: \"Vue\"}\n  }\n};\n</script>\n```","categories":["Vue"]},{"title":"Vue-组件学习","url":"/2020/03/13/Vue-组件学习/","content":"\n\n\n\n\n# 监听组件实践【默认是当前组件】\n```html\n<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<meta charset=\"utf-8\">\n\t\t<title>迷心兔</title>\n\t\t<script src=\"./js/vue.js\"></script>\n\t\t<script>\n\t\t\tVue.config.productionTip = false\n\t\t</script>\n\t</head>\n\t<body>\n\t\t<div id=\"component-demo\">\n\t\t\t<!-- 基本组件实例\n\t\t\t<button-counter></button-counter>\n\t\t\t<button-counter>组件的复用</button-counter>\n\t\t\t<button-counter>组件的复用</button-counter>\n\t\t\t-->\n\t\t\t\n\t\t\t<!-- 第一种方式:在自定义组件中进行数据传递\n\t\t\t<blog-post title=\"My journey with Vue\"></blog-post>\n\t\t\t<blog-post title=\"Blogging with Vue\"></blog-post>\n\t\t\t<blog-post title=\"Why Vue is so fun\"></blog-post>\n\t\t\t-->\n\t\t\t\n\t\t\t<!-- 第二中方式:就是对第一种方式的优化 \n\t\t\t<blog-post\n\t\t\t\tv-for=\"post in posts\"\n\t\t\t\tv-bind:key=\"post.id\"\n\t\t\t\tv-bind:title=\"post.title\"\n\t\t\t></blog-post>\n\t\t\t-->\n\t\t\t\n\t\t\t<!-- 使用单个根元素渲染多个组件 \n\t\t\t<blog-post\n\t\t\t\tv-for=\"post in posts\"\n\t\t\t\tv-bind:key=\"post.id\"\n\t\t\t\tv-bind:title=\"post.title\"\n\t\t\t\tv-bind:content=\"post.content\"\n\t\t\t\tv-bind:publishedAt=\"post.publishedAt\"\n\t\t\t\tv-bind:comments=\"post.comments\"\n\t\t\t></blog-post>\n\t\t\t-->\n\t\t\t\n\t\t\t<!-- 在组件中对上一个进行优化 -->\n\t\t\t<blog-post\n\t\t\t  v-for=\"post in posts\"\n\t\t\t  v-bind:key=\"post.id\"\n\t\t\t  v-bind:post=\"post\"\n\t\t\t></blog-post>\n\t\t\t\n\t\t</div>\n\t\t\n\n\n\t\t<script>\n\t\t\t// 简单的自定义组件\n\t\t\tVue.component('button-counter', {\n\t\t\t\tdata: function() {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tcount: 0,\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\ttemplate: `<button v-on:click=\"count++\"> You clicked Me {{ count }} times. </button>`,\n\t\t\t});\n\n\t\t\t// 通过 Prop 向子组件传递数据\n\t\t\tVue.component('blog-post', {\n\t\t\t\t// props: ['title'],//为了传递数据\n\t\t\t\t// template: '<h3>{{ title }}</h3>',\n\t\t\t\t\n\t\t\t\tprops: ['post'],//为了传递数据\n\t\t\t\ttemplate:`\n\t\t\t\t\t<div class=\"blog-post\">\n\t\t\t\t\t\t<h3>{{ post.title }}</h3>\n\t\t\t\t\t\t<div v-html=\"post.content\"></div>\n\t\t\t\t\t\t<span v-html=\"post.publishedAt\"></span>\n\t\t\t\t\t\t<span v-html=\"post.comments\"></span>\n\t\t\t\t\t</div>\n\t\t\t\t`,\n\t\t\t});\n\t\t\tlet vm = new Vue({\n\t\t\t\tel: '#component-demo',\n\t\t\t\tdata: {\n\t\t\t\t\tposts: [\n\t\t\t\t\t\t{ id: 1, title: 'My journey with Vue' ,content:'这是内容：迷心兔',publishedAt:'2020-03-13',comments:'这是注释'},\n\t\t\t\t\t\t{ id: 2, title: 'Blogging with Vue' ,content:'这是内容：迷心兔',publishedAt:'2020-03-13',comments:'这是注释'},\n\t\t\t\t\t\t{ id: 3, title: 'Why Vue is so fun' ,content:'这是内容：迷心兔',publishedAt:'2020-03-13',comments:'这是注释'}\n\t\t\t\t\t],\n\t\t\t\t},\n\n\t\t\t\t// 初始值\n\t\t\t\terror: null,\n\t\t\t\ttodos: [],\n\t\t\t\tvisitCount: 0,\n\t\t\t\tnewTodoText: '',\n\t\t\t\thideCompletedTodos: false,\n\n\t\t\t});\n\t\t</script>\n\t</body>\n</html>\n```\n\n\n\n# 监听子组件事件\n```html\n<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<meta charset=\"utf-8\">\n\t\t<title>迷心兔</title>\n\t\t<script src=\"./js/vue.js\"></script>\n\t\t<script>\n\t\t\tVue.config.productionTip = false\n\t\t</script>\n\t</head>\n\t<body>\n\t\t<div id=\"blog-posts-events-demo\">\n\t\t\t<!-- \n\t\t\t\t第一种方式：v-on:enlarge-text=\"postFontSize += 0.1\"\n\t\t\t\t第二种方式：v-on:enlarge-text=\"postFontSize += $event\"\n\t\t\t\t第三种方式：v-on:enlarge-text=\"onEnlargeText\"\n\t\t\t -->\n\t\t\t<div v-bind:style=\"{ fontSize:postFontSize + 'em'}\">\n\t\t\t\t<blog-post\n\t\t\t\t\tv-for=\"post in posts\"\n\t\t\t\t\tv-bind:key=\"post.id\"\n\t\t\t\t\tv-bind:post=\"post\"\n\t\t\t\t\tv-on:enlarge-text=\"onEnlargeText\"\n\t\t\t\t></blog-post>\n\t\t\t</div>\n\t\t\t\n\t\t\t\n\t\t\t<!-- 这里先不了解 -->\n\t\t\t<!-- <custom-input v-model=\"searchText\"></custom-input> -->\n\t\t\t\n\t\t</div>\n\n\t\t<script>\n\t\t\tVue.component('blog-post', {\n\t\t\t    props: ['post'],\n\t\t\t    template: `\n\t\t\t\t\t<div class=\"blog-post\">\n\t\t\t\t\t\t<h3>{{ post.title }}</h3>\n\t\t\t\t\t\t<!--enlarge-text('第一种方式','第一种方式')方法:让文字变大-->\n\t\t\t\t\t\t<button v-on:click=\"$emit('enlarge-text', 0.1)\">Enlarge Text</button>\n\t\t\t\t\t\t<div v-html=\"post.content\"></div>\n\t\t\t\t\t</div>`,\n\t\t\t  \n\t\t\t});\n\t\t\tVue.component('custom-input', {\n\t\t\t\t/* 注意：这里先了解到这\n\t\t\t\t<input v-model=\"searchText\">\n\t\t\t\t等价于\n\t\t\t\t<input\n\t\t\t\t  v-bind:value=\"searchText\"\n\t\t\t\t  v-on:input=\"searchText = $event.target.value\"\n\t\t\t\t/>\n\t\t\t\t*/\n\t\t\t    props: ['value'],\n\t\t\t    template: `\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tv-bind:value=\"value\"\n\t\t\t\t\t\t\tv-on:input=\"$emit('input', $event.target.value)\"\n\t\t\t\t\t\t\t\n\t\t\t\t\t    />`,\n\t\t\t});\n\t\t\tlet vm = new Vue({\n\t\t\t\tel: '#blog-posts-events-demo',\n\t\t\t\tdata: {\n\t\t\t\t\tposts: [\n\t\t\t\t\t\t{ id: 1, title: 'My journey with Vue' ,content:'这是内容：迷心兔',publishedAt:'2020-03-13',comments:'这是注释'},\n\t\t\t\t\t\t{ id: 2, title: 'Blogging with Vue' ,content:'这是内容：迷心兔',publishedAt:'2020-03-13',comments:'这是注释'},\n\t\t\t\t\t\t{ id: 3, title: 'Why Vue is so fun' ,content:'这是内容：迷心兔',publishedAt:'2020-03-13',comments:'这是注释'}\n\t\t\t\t\t],\n\t\t\t\t\tpostFontSize: 1,\n\t\t\t\t},\n\t\t\t\t// 第三种方式\n\t\t\t\tmethods:{\n\t\t\t\t\tonEnlargeText:function(enlargeAmount){\n\t\t\t\t\t\tthis.postFontSize += enlargeAmount;\n\t\t\t\t\t},\n\t\t\t\t},\n\n\t\t\t\t// 初始值\n\t\t\t\terror: null,\n\t\t\t\ttodos: [],\n\t\t\t\tvisitCount: 0,\n\t\t\t\tnewTodoText: '',\n\t\t\t\thideCompletedTodos: false,\n\n\t\t\t});\n\t\t</script>\n\t</body>\n</html>\n```\n\n\n# 通过插槽分发内容\n```html\n<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<meta charset=\"utf-8\">\n\t\t<title>迷心兔</title>\n\t\t<script src=\"./js/vue.js\"></script>\n\t\t<script>\n\t\t\tVue.config.productionTip = false\n\t\t</script>\n\t</head>\n\t<body>\n\t\t<div id=\"blog-posts-events-demo\">\n\t\t\t<alert-box>Someting bad happened!</alert-box>\n\t\t</div>\n\t\t\n\t\t<script>\n\t\t\tVue.component('alert-box',{\n\t\t\t\ttemplate:`\n\t\t\t\t\t<div class=\"demo-alert-box\">\n\t\t\t\t\t\t<strong>Error!</strong>\n\t\t\t\t\t\t<slot>插槽</slot>\n\t\t\t\t\t</div>\n\t\t\t\t`,\n\t\t\t});\n\t\t\tlet vm = new Vue({\n\t\t\t\tel: '#blog-posts-events-demo',\n\n\t\t\t\t// 初始值\n\t\t\t\terror: null,\n\t\t\t\ttodos: [],\n\t\t\t\tvisitCount: 0,\n\t\t\t\tnewTodoText: '',\n\t\t\t\thideCompletedTodos: false,\n\n\t\t\t});\n\t\t</script>\n\t</body>\n</html>\n```","categories":["Vue"]},{"title":"Vue-表单输入绑定","url":"/2020/03/13/Vue-表单输入绑定/","content":"\n\n\n\n\n# 在表单上的简单实例\n```html\n<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<meta charset=\"utf-8\">\n\t\t<title>迷心兔</title>\n\t\t<script src=\"./js/vue.js\"></script>\n\t\t<script>\n\t\t\tVue.config.productionTip = false\n\t\t</script>\n\t</head>\n\t<body>\n\t\t<div>\n\t\t\t<!-- input单行信息\n\t\t\t<input v-model=\"message\" placeholder=\"Edit Me\">\n\t\t\t<p>Message is: {{ message }}</p>\n\t\t\t-->\n\n\n\t\t\t<!-- textarea多行消息\n\t\t\t<span>多行消息是:</span>\n\t\t\t<p style=\"white-space: pre-line;\">{{ message }}</p>\n\t\t\t<textarea v-model=\"message\" placeholder=\"添加多行\"></textarea>\n\t\t\t-->\n\n\n\t\t\t<!-- 单选框\n\t\t\t<input type=\"radio\" id=\"one\" value=\"One\" v-model=\"picked\">\n\t\t\t<label for=\"one\">One</label>\n\t\t\t<br>\n\t\t\t<input type=\"radio\" id=\"two\" value=\"Two\" v-model=\"picked\">\n\t\t\t<label for=\"two\">Two</label>\n\t\t\t<br>\n\t\t\t<span>Picked: {{ picked }}</span>\n\t\t\t-->\n\n\n\t\t\t<!-- 复选框\n\t\t\t<input type=\"checkbox\" id=\"jack\" value=\"Jack\" v-model=\"checkedNames\">\n\t\t\t<label for=\"jack\">Jack</label>\n\t\t\t\n\t\t\t<input type=\"checkbox\" id=\"john\" value=\"John\" v-model=\"checkedNames\">\n\t\t\t<label for=\"john\">John</label>\n\t\t\t\n\t\t\t<input type=\"checkbox\" id=\"mike\" value=\"Mike\" v-model=\"checkedNames\">\t\n\t\t\t<label for=\"mike\">Mike</label>\n\t\t\t\n\t\t\t<br>\n\t\t\t<span>Check names: {{ checkedNames }}</span>\n\t\t\t-->\n\n\n\t\t\t<!-- 选择框--单选\n\t\t\t<select v-model=\"selected_1\">\n\t\t\t\t<option disabled value =\"\">请选择：</option>\n\t\t\t\t<option>A</option>\n\t\t\t\t<option>B</option>\n\t\t\t\t<option>C</option>\n\t\t\t</select>\n\t\t\t<br>\n\t\t\t<span>Selected: {{ selected_1 }}</span>\n\t\t\t-->\n\n\n\t\t\t<!-- 选择框--多选\n\t\t\t<select multiple v-model=\"selected_2\" style=\"width: 50px;\">\n\t\t\t\t<option>A</option>\n\t\t\t\t<option>B</option>\n\t\t\t\t<option>C</option>\n\t\t\t</select>\n\t\t\t<br>\n\t\t\t<span>Selected: {{ selected_2 }}</span>\n\t\t\t-->\n\t\t\t\n\t\t\t<!-- 使用v-for渲染选择框--单选\n\t\t\t<select v-model=\"selected\">\n\t\t\t\t<option v-for=\"option in options\" v-bind:value=\"option.value\">\n\t\t\t\t\t{{ option.text }}\n\t\t\t\t</option>\n\t\t\t</select>\n\t\t\t<span>Selected: {{ selected }}</span>\n\t\t\t-->\n\t\t\t\n\t\t\t<!-- input默认是提交后才进行数据同步，而.lazy修饰符可以判定值改变后就进行数据同步 -->\n\t\t\t<!-- <input v-model.lazy=\"msg\" > -->\n\t\t\t\n\t\t\t<!-- 将用户输入值自动转变为number类型 -->\n\t\t\t<!-- <input v-model.number=\"age\" type=\"number\"> -->\n\t\t\t\n\t\t\t<!-- 自动过滤用户输入的首尾空白字符 -->\n\t\t\t<input v-model.trim=\"msg\">\n\t\t</div>\n\n\n\n\t\t<script>\n\t\t\tlet vm = new Vue({\n\t\t\t\tel: 'div',\n\t\t\t\t/** 单行和多行\n\t\t\t\tdata: {\n\t\t\t\t\tmessage: '',\n\t\t\t\t},\n\t\t\t\t*/\n\n\t\t\t\t/** 单选框\n\t\t\t   data:{\n\t\t\t\t picked:'',  \n\t\t\t   },\n\t\t\t   */\n\n\t\t\t\t/** 复选框\n\t\t\t   data:{\n\t\t\t\t   checkedNames:[],\n\t\t\t   },\n\t\t\t   */\n\n\t\t\t\t/* 选择框\n\t\t\t\tdata: {\n\t\t\t\t\tselected_1: '',//单选\n\t\t\t\t\tselected_2: [],//多选\n\t\t\t\t},\n\t\t\t\t*/\n\t\t\t\t\n\t\t\t\t/** 使用v-for渲染选择框--单选\n\t\t\t\tdata:{\n\t\t\t\t\tselected:'A',\n\t\t\t\t\toptions:[\n\t\t\t\t\t\t{ text: 'One', value: 'A' },\n\t\t\t\t\t    { text: 'Two', value: 'B' },\n\t\t\t\t\t    { text: 'Three', value: 'C' },\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t*/\n\n\n\n\t\t\t\t// 初始值\n\t\t\t\terror: null,\n\t\t\t\ttodos: [],\n\t\t\t\tvisitCount: 0,\n\t\t\t\tnewTodoText: '',\n\t\t\t\thideCompletedTodos: false,\n\n\t\t\t});\n\t\t</script>\n\t</body>\n</html>\n```","categories":["Vue"]},{"title":"Vue-事件处理","url":"/2020/03/13/Vue-事件处理/","content":"\n\n\n\n\n# 简单的事件处理方式\n```html\n<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<meta charset=\"utf-8\">\n\t\t<title>迷心兔</title>\n\t\t<script src=\"./js/vue.js\"></script>\n\t\t<script>\n\t\t\tVue.config.productionTip = false\n\t\t</script>\n\t</head>\n\t<body>\n\t\t<!-- 监听事件\n\t\t<div id=\"example-1\">\n\t\t\t<button v-on:click=\"counter += 1\">自增</button>\n\t\t\t<p>The button above has been clicjed {{ counter }} times.</p>\n\t\t</div>\n\t\t-->\n\t\t\n\t\t<!-- 运用事件处理方法 \n\t\t<div id=\"example-2\">\n\t\t\t<button v-on:click=\"greet\">Greet</button>\n\t\t</div>\n\t\t-->\n\t\t\n\t\t<!-- 内联处理器中的方法 -->\n\t\t<div id=\"example-3\">\n\t\t\t<button v-on:click=\"say('hi')\">Say Hi</button>\n\t\t\t<button v-on:click=\"say('what')\">Say What</button>\n\t\t</div>\n\t\t\n\n\t\t<script>\n\t\t\tlet vm = new Vue({\n\t\t\t\t/** 1.监听事件\n\t\t\t\tel:'#example-1',\n\t\t\t\tdata:{\n\t\t\t\t\tcounter:0,\n\t\t\t\t},\n\t\t\t\t*/\n\t\t\t   \n\t\t\t   /** 2.运用事件处理方法 \n\t\t\t\tel: '#example-2',\n\t\t\t\tdata: {\n\t\t\t\t\tname: 'Vue.js',\n\t\t\t\t},\n\t\t\t\t// 在 `methods` 对象中定义方法\n\t\t\t\tmethods: {\n\t\t\t\t\tgreet: function(event) {\n\t\t\t\t\t\talert('Hello ' + this.name + '!');\n\t\t\t\t\t\t// `event` 是原生 DOM 事件\n\t\t\t\t\t\tif (event) {\n\t\t\t\t\t\t\talert(event.target.tagName);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t*/\n\t\t\t   \n\t\t\t   // 3.内联处理器中的方法\n\t\t\t   el:'#example-3',\n\t\t\t   methods:{\n\t\t\t\t   say:function(message){\n\t\t\t\t\t   alert(message);\n\t\t\t\t   }\n\t\t\t   },\n\n\t\t\t\t// 初始值\n\t\t\t\terror: null,\n\t\t\t\ttodos: [],\n\t\t\t\tvisitCount: 0,\n\t\t\t\tnewTodoText: '',\n\t\t\t\thideCompletedTodos: false,\n\n\t\t\t});\n\t\t</script>\n\t</body>\n</html>\n```\n\n# 事件修饰符\n```\n<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<meta charset=\"utf-8\">\n\t\t<title>迷心兔</title>\n\t\t<script src=\"./js/vue.js\"></script>\n\t\t<script>\n\t\t\tVue.config.productionTip = false\n\t\t</script>\n\t</head>\n\t<body>\n\t\t<template>\n\t\t\t<!-- 注意：\n\t\t\t\t不要把 .passive 和 .prevent 一起使用，因为 .prevent 将会被忽略；\n\t\t\t\t同时浏览器可能会向你展示一个警告。请记住，.passive 会告诉浏览器你不想阻止事件的默认行为。\n\t\t\t \n\t\t\t -->\n\t\t\t \n\t\t\t<!-- 点击事件将只会触发一次 -->\n\t\t\t<a v-on:click.once=\"doThis\">点击</a>\n\t\t\t\n\t\t\t<!-- <a v-on:click.stop=\"doThis\">doThis-阻止单击事件继续传播</a> -->\n\n\t\t\t<!-- <form v-on:submit.prevent=\"onSubmit\">onSubmit-提交事件不再重载页面</form> -->\n\n\t\t\t<!-- <a v-on:click.stop.prevent=\"doThat\">doThat-修饰符可以串联</a> -->\n\n\t\t\t<!-- <form v-on:submit.prevent>只有修饰符</form> -->\n\n\t\t\t<!-- 添加事件监听器时使用事件捕获模式 -->\n\t\t\t<!-- 即内部元素触发的事件先在此处理，然后才交由内部元素进行处理 -->\n\t\t\t<!-- <div v-on:submit.capture=\"doThis\">doThis...</div> -->\n\n\t\t\t<!-- 只当在 event.target 是当前元素自身时触发处理函数 -->\n\t\t\t<!-- 即事件不是从内部元素触发的 -->\n\t\t\t<!-- <div v-on:click.self=\"doThat\">doThat...</div> -->\n\t\t\t\n\t\t\t<!-- <div v-on:click.self.prevent=\"doThat\">doThat-阻止对元素自身的点击</div> -->\n\t\t\t\n\t\t\t<!-- <div v-on:click.prevent.self=\"doThat\">doThat-阻止所有的点击</div> -->\n\t\t\t\n\t\t\t<!-- 滚动事件的默认行为 (即滚动行为) 将会立即触发 -->\n\t\t\t<!-- 而不会等待 `onScroll` 完成  -->\n\t\t\t<!-- 这其中包含 `event.preventDefault()` 的情况 -->\n\t\t\t<!-- <div v-on:scroll.passive=\"onScroll\">...</div> -->\n\t\t</template>\n\n\n\t\t<script>\n\t\t\tlet vm = new Vue({\n\t\t\t\tel: 'template',\n\t\t\t\tmethods: {\n\t\t\t\t\tdoThis: function(event) {\n\t\t\t\t\t\tif (event) {\n\t\t\t\t\t\t\talert(event.target.tagName);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tonSubmit: function(event) {\n\t\t\t\t\t\tif (event) {\n\t\t\t\t\t\t\talert(event.target.tagName);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tdoThat: function(event) {\n\t\t\t\t\t\tif (event) {\n\t\t\t\t\t\t\talert(event.target.tagName);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t// 初始值\n\t\t\t\terror: null,\n\t\t\t\ttodos: [],\n\t\t\t\tvisitCount: 0,\n\t\t\t\tnewTodoText: '',\n\t\t\t\thideCompletedTodos: false,\n\n\t\t\t});\n\t\t</script>\n\t</body>\n</html>\n```\n\n\n\n\n# 按键修饰符和系统修饰键\n```html\n<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<meta charset=\"utf-8\">\n\t\t<title>迷心兔</title>\n\t\t<script src=\"./js/vue.js\"></script>\n\t\t<script>\n\t\t\tVue.config.productionTip = false\n\t\t</script>\n\t</head>\n\t<body>\n\t\t<template>\n\t\t\t<input v-on:keyup.enter=\"submit\" placeholder=\"请按回车键\">\n\t\t\t\n\t\t\t<!-- <input v-on:keyup.page-down=\"onPageDown\"> -->\n\t\t\t\n\t\t\t<!-- 按键码 -->\n\t\t\t<!-- <input v-on:keyup.13=\"submit\"> -->\n\t\t\t\n\t\t\t\n\t\t\t<!-- 系统修饰键 - Alt + C -->\n\t\t\t<!-- <input @keyup.alt.67=\"clear\"> -->\n\t\t\t\n\t\t\t<!-- 系统修饰键 - Ctrl + Click -->\n\t\t\t<!-- <div @click.ctrl=\"doSomething\">Do something</div> -->\n\t\t\t\n\t\t\t<!-- 没有.exact 修饰符 - 即使 Alt 或 Shift 被一同按下时也会触发 -->\n\t\t\t<!-- <button @click.ctrl=\"onClick\">A</button> -->\n\t\t\t\n\t\t\t<!-- .exact 修饰符 - 有且只有 Ctrl 被按下的时候才触发 -->\n\t\t\t<!-- <button @click.ctrl.exact=\"onCtrlClick\">A</button> -->\n\t\t\t\n\t\t\t<!-- .exact 修饰符 - 没有任何系统修饰符被按下的时候才触发 -->\n\t\t\t<!-- <button @click.exact=\"onClick\">A</button> -->\n\t\t</template>\n\n\n\t\t<script>\n\t\t\t// 自定义按键修饰符别名：可以使用 `v-on:keyup.f1`\n\t\t\tVue.config.keyCodes.f1 = 112;\n\t\t\t\n\t\t\tlet vm = new Vue({\n\t\t\t\tel: 'template',\n\t\t\t\tmethods:{\n\t\t\t\t\tsubmit:function(event){\n\t\t\t\t\t\tif(event){\n\t\t\t\t\t\t\talert(event.target.tagName);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tonPageDown:function(event){\n\t\t\t\t\t\tif(event){\n\t\t\t\t\t\t\talert(event.target.tagName);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t// 初始值\n\t\t\t\terror: null,\n\t\t\t\ttodos: [],\n\t\t\t\tvisitCount: 0,\n\t\t\t\tnewTodoText: '',\n\t\t\t\thideCompletedTodos: false,\n\n\t\t\t});\n\t\t</script>\n\t</body>\n</html>\n```\n","categories":["Vue"]},{"title":"Vue-列表渲染","url":"/2020/03/12/Vue-列表渲染/","content":"\n\n\n\n\n# 简单认识遍历\n```\n<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<meta charset=\"utf-8\">\n\t\t<title>迷心兔</title>\n\t\t<script src=\"./js/vue.js\"></script>\n\t\t<script>\n\t\t\tVue.config.productionTip = false\n\t\t</script>\n\t</head>\n\t<body>\n\t\t<template>\n\t\t\t<!-- 遍历的第一种方式\n\t\t\t<ul>\n\t\t\t\t<li v-for=\"item in items\">\n\t\t\t\t\t{{ item.message }}\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t\t-->\n\t\t\t<!-- 遍历的第二种方式\n\t\t\t<ul id=\"example-2\">\n\t\t\t  <li v-for=\"(item, index) in items\">\n\t\t\t    {{ parentMessage }} - {{ index }} - {{ item.message }}\n\t\t\t  </li>\n\t\t\t</ul>\n\t\t\t-->\n\t\t\t<ul>\n\t\t\t\t<!--遍历对象的一个值\n\t\t\t\t<li v-for=\"value in object\">\n\t\t\t\t\t{{ value }}\n\t\t\t\t</li>\n\t\t\t\t-->\n\t\t\t\t<!-- 遍历对象的两个值\n\t\t\t\t<li v-for=\"(value, name) in object\">\n\t\t\t\t  {{ name }}: {{ value }}\n\t\t\t\t</li>\n\t\t\t\t-->\n\t\t\t\t<li v-for=\"(value, name, index) in object\">\n\t\t\t\t  {{ index }}. {{ name }}: {{ value }}\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</template>\n\n\t\t<script>\n\t\t\tlet vm = new Vue({\n\t\t\t\tel: 'template',\n\t\t\t\t/** 遍历的第一种方式\n\t\t\t\tdata: {\n\t\t\t\t\titems: [{\n\t\t\t\t\t\t\tmessage: 'Foo'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmessage: 'Bar'\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t*/\n\t\t\t\t/** 遍历的第二种方式\n\t\t\t   data: {\n\t\t\t       parentMessage: 'Parent',\n\t\t\t       items: [\n\t\t\t         { message: 'Foo' },\n\t\t\t         { message: 'Bar' },\n\t\t\t       ]\n\t\t\t     },\n\t\t\t\t */\n\t\t\t\tdata: {\n\t\t\t\t\tobject: {\n\t\t\t\t\t\ttitle: 'How to do lists in Vue',\n\t\t\t\t\t\tauthor: 'Jane Doe',\n\t\t\t\t\t\tpublishedAt: '2016-04-10',\n\t\t\t\t\t},\n\t\t\t\t},\n\n\n\t\t\t\t// 初始值\n\t\t\t\terror: null,\n\t\t\t\ttodos: [],\n\t\t\t\tvisitCount: 0,\n\t\t\t\tnewTodoText: '',\n\t\t\t\thideCompletedTodos: false,\n\n\t\t\t});\n\t\t</script>\n\t</body>\n</html>\n```\n\n\n# 列表实现push添加和splice删除\n```\n<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<meta charset=\"utf-8\">\n\t\t<title>迷心兔</title>\n\t\t<script src=\"./js/vue.js\"></script>\n\t\t<script>\n\t\t\tVue.config.productionTip = false\n\t\t</script>\n\t</head>\n\t<body>\n\t\t<template>\n\t\t\t<div>\n\t\t\t\t<!-- key是用来维护状态的，比如排序和根据index删除item -->\n\t\t\t\t<ul v-for=\"(item, index) in list\" v-bind:key=\"index\">\n\t\t\t\t\t<li>\n\t\t\t\t\t\t{{ item.serial }} -- <button @click=\"remove(index)\">删除</button>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t\t<input type=\"text\" v-model=\"serial_value\" />\n\t\t\t\t<input type=\"button\" value=\"点击添加\" @click=\"getserial\" />\n\t\t\t</div>\n\t\t</template>\n\n\t\t<script>\n\t\t\tlet vm = new Vue({\n\t\t\t\tel:'template',\n\t\t\t\tdata: {\n\t\t\t\t\tserial_value: '',\n\t\t\t\t\tlist: [\n\t\t\t\t\t\t{ serial: 1 },\n\t\t\t\t\t\t{ serial: 2 },\n\t\t\t\t\t\t{ serial: 3 },\n\t\t\t\t\t\t{ serial: 4 },\n\t\t\t\t\t\t{ serial: 5 },\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\tmethods: {\n\t\t\t\t\tgetserial: function() {\n\t\t\t\t\t\tthis.list.push({\n\t\t\t\t\t\t\tserial: this.serial_value,\n\t\t\t\t\t\t});\n\t\t\t\t\t\tthis.serial_value = \"\";\n\t\t\t\t\t},\n\t\t\t\t\tremove: function(index) {\n\t\t\t\t\t\tthis.list.splice(index, 1);\n\t\t\t\t\t},\n\t\t\t\t},\n\n\t\t\t\t// 初始值\n\t\t\t\terror: null,\n\t\t\t\ttodos: [],\n\t\t\t\tvisitCount: 0,\n\t\t\t\tnewTodoText: '',\n\t\t\t\thideCompletedTodos: false,\n\n\t\t\t});\n\t\t</script>\n\t</body>\n</html>\n```\n\n# 使用过滤函数\n```html\n<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<meta charset=\"utf-8\">\n\t\t<title>迷心兔</title>\n\t\t<script src=\"./js/vue.js\"></script>\n\t\t<script>\n\t\t\tVue.config.productionTip = false\n\t\t</script>\n\t</head>\n\t<body>\n\t\t<template>\n\t\t\t<ul>\n\t\t\t\t<!-- 在计算属性中\n\t\t\t\t<li v-for=\"n in evenNumbers\">\n\t\t\t\t\t{{ n }}\n\t\t\t\t</li>\n\t\t\t\t-->\n\t\t\t\t\n\t\t\t\t<!-- 使用函数的方式 -->\n\t\t\t\t<li v-for=\"n in even(numbers)\">\n\t\t\t\t\t{{ n }}\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</template>\n\n\t\t<script>\n\t\t\tlet vm = new Vue({\n\t\t\t\tel: 'template',\n\t\t\t\tdata: {\n\t\t\t\t\tnumbers: [1, 2, 3, 4, 5],\n\t\t\t\t},\n\t\t\t\tcomputed: {\n\t\t\t\t\t// 显示过滤/排序后的结果\n\t\t\t\t\tevenNumbers: function() {\n\t\t\t\t\t\treturn this.numbers.filter(function(number) {\n\t\t\t\t\t\t\treturn number % 2 === 0;\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tmethods: {\n\t\t\t\t\teven: function(numbers) {\n\t\t\t\t\t\treturn numbers.filter(function(number) {\n\t\t\t\t\t\t\treturn number % 2 === 0;\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t},\n\n\n\t\t\t\t// 初始值\n\t\t\t\terror: null,\n\t\t\t\ttodos: [],\n\t\t\t\tvisitCount: 0,\n\t\t\t\tnewTodoText: '',\n\t\t\t\thideCompletedTodos: false,\n\n\t\t\t});\n\t\t</script>\n\t</body>\n</html>\n```\n\n\n# 在自定义的组件上使用遍历的实例\n```html\n<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<meta charset=\"utf-8\">\n\t\t<title>迷心兔</title>\n\t\t<script src=\"./js/vue.js\"></script>\n\t\t<script>\n\t\t\tVue.config.productionTip = false\n\t\t</script>\n\t</head>\n\t<body>\n\t\t<div id=\"todo-list-example\">\n\t\t\t<form v-on:submit.prevent=\"addNewTodo\">\n\t\t\t\t<lable for=\"new-todo\">添加一个行为</lable>\n\t\t\t\t<input \n\t\t\t\t\tv-model=\"newTodoText\" \n\t\t\t\t\tid=\"new-todo\" \n\t\t\t\t\tplaceholder=\"例如: 喂猫\" />\n\t\t\t\t<button>添加</button>\n\t\t\t</form>\n\t\t\t<ul>\n\t\t\t\t<li \n\t\t\t\t\tis=\"todo-item\" \n\t\t\t\t\tv-for=\"(todo, index) in todos\" \n\t\t\t\t\tv-bind:key=\"todo.id\" \n\t\t\t\t\tv-bind:title=\"todo.title\" \n\t\t\t\t\tv-on:remove=\"todos.splice(index, 1)\">\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</div>\n\n\n\t\t<script>\n\t\t\t// 为li标签制定新的模板【$emit('remove'): 触发当前实例上的事件】\n\t\t\tVue.component('todo-item', {\n\t\t\t\tprops: ['title'],\n\t\t\t\ttemplate: `<li>\n\t\t\t\t\t\t\t{{ title }} - \n\t\t\t\t\t\t\t<button v-on:click=\"$emit('remove')\">删除</button>\n\t\t\t\t\t\t</li>`\n\n\t\t\t});\n\t\t\tlet vm = new Vue({\n\t\t\t\tel: '#todo-list-example',\n\t\t\t\tdata: {\n\t\t\t\t\tnewTodoText: '',\n\t\t\t\t\ttodos: [{\n\t\t\t\t\t\t\tid: 1,\n\t\t\t\t\t\t\ttitle: '洗碗',\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: 2,\n\t\t\t\t\t\t\ttitle: '把垃圾带出去',\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: 3,\n\t\t\t\t\t\t\ttitle: '修剪草坪',\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t\tnextTodoId: 4,\n\t\t\t\t},\n\t\t\t\tmethods: {\n\t\t\t\t\taddNewTodo: function() {\n\t\t\t\t\t\tthis.todos.push({\n\t\t\t\t\t\t\tid: this.nextTodoId++,\n\t\t\t\t\t\t\ttitle: this.newTodoText,\n\t\t\t\t\t\t});\n\t\t\t\t\t\tthis.newTodoText = '';\n\t\t\t\t\t}\n\t\t\t\t},\n\n\n\t\t\t\t// 初始值\n\t\t\t\terror: null,\n\t\t\t\t// todos: [],\n\t\t\t\tvisitCount: 0,\n\t\t\t\tnewTodoText: '',\n\t\t\t\thideCompletedTodos: false,\n\n\t\t\t});\n\t\t</script>\n\t</body>\n</html>\n```\n\n\n\n\n# 注意事项\n变异方法：会改变调用了这些方法的原始数组。\n非变异方法：对于数组它们不会改变原始数组，而总是返回一个新数组【比如filter(),concat(),slice()】\n响应性：是Vue能检测到的\n非响应性：Vue不能检测它的数据变动\n\n```html\n\nVue 不能检测以下数组的变动：\n\t例子：\n\t\tlet vm = new Vue({\n\t\t\tdata:{\n\t\t\t\titems:[\n\t\t\t\t\t'a',\n\t\t\t\t\t'b',\n\t\t\t\t\t'c',\n\t\t\t\t],\n\t\t\t},\n\t\t});\n\t\tvm.items[1] = 'x'; // 第一：不是响应性的【不能检测到数据变动】\n\t\tvm.items.length = 2; // 第二：不是响应性的【不能检测到数据变动】\n\t以下能解决上面例子的问题：\n\t\tVue.set(vm.items, indexOfItem, newValue); // 方式一：解决第一的问题\n\t\tvm.items.splice(indexOfItem, 1, newValue); // 方式二：解决第一的问题\n\n\t\tvm.items.splice(newLength); // 解决第二的问题\n\n\nVue 不能检测对象属性的添加或删除:\n\t例子：\n\tlet vm = new Vue({\n\t\tdata:{\n\t\t\ta:1,\n\t\t},\n\t});\n\t// `vm.a`; 现在是响应式的\n\n\tvm.b = 2;\n\t// `vm.b` 不是响应式的\n```\n\n\n","categories":["Vue"]},{"title":"Vue-class与style绑定","url":"/2020/03/12/Vue-class与style绑定/","content":"\n\n\n\n\n# 绑定 HTML Class----使用对象语法\n```\n<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<meta charset=\"utf-8\">\n\t\t<title>迷心兔</title>\n\t\t<script src=\"./js/vue.js\"></script>\n\t\t<script>\n\t\t\tVue.config.productionTip = false\n\t\t</script>\n\t</head>\n\t<body>\n\t\t<!-- 第一:为class属性添加单个名字 -> 结果：<div class=\"static active\"></div> -->\n\t\t<!-- <div class=\"static\" v-bind:class=\"{ active: isActive }\"></div> -->\n\n\t\t<!-- 第二:为class属性添加多个名字 -> 结果：<div class=\"static active\"></div> -->\n\t\t<!-- <div class=\"static\" v-bind:class=\"{ active: isActive, 'text-danger': hasError }\"></div> -->\n\n\t\t<!-- 第二的优化方式 -->\n\t\t<div class=\"static\" v-bind:class=\"classObject\"></div>\n\t\t<script>\n\t\t\tlet vm = new Vue({\n\t\t\t\tel: 'div.static',\n\t\t\t\tdata: {\n\t\t\t\t\t// isActive: true,\n\t\t\t\t\t// hasError: false,\n\t\t\t\t\t/*\n\t\t\t\t\tclassObject: {\n\t\t\t\t\t\tactive: true,\n\t\t\t\t\t\thasError: false,\n\t\t\t\t\t\t'text-danger': false\n\t\t\t\t\t},\n\t\t\t\t\t*/\n\t\t\t\t\tisActive: true,\n\t\t\t\t\terror: null,\n\t\t\t\t},\n\t\t\t\t// 这里对data计算属性再优化一下\n\t\t\t\tcomputed: {\n\t\t\t\t\tclassObject: function() {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tactive: this.isActive && !this.error,\n\t\t\t\t\t\t\t'text-danger': this.error && this.error.type === 'fatal',\n\t\t\t\t\t\t};\n\t\t\t\t\t},\n\t\t\t\t},\n\n\t\t\t\t// 初始值\n\t\t\t\terror: null,\n\t\t\t\ttodos: [],\n\t\t\t\tvisitCount: 0,\n\t\t\t\tnewTodoText: '',\n\t\t\t\thideCompletedTodos: false,\n\n\t\t\t});\n\t\t</script>\n\t</body>\n</html>\n```\n\n# 绑定 HTML Class----使用数组语法\n```html\n<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<meta charset=\"utf-8\">\n\t\t<title>迷心兔</title>\n\t\t<script src=\"./js/vue.js\"></script>\n\t\t<script>\n\t\t\tVue.config.productionTip = false\n\t\t</script>\n\t</head>\n\t<body>\n\t\t<!-- 使用数组方式 -> 结果:<div class=\"static active text-danger\"></div> -->\n\t\t<!-- <div class=\"static\" v-bind:class=\"[activeClass, errorClass]\"></div> -->\n\n\t\t<!-- 使用数组方式 -> 里面可以用三元表达式 -->\n\t\t<!-- <div class=\"static\" v-bind:class=\"[isActive ? activeClass : '', errorClass]\"></div> -->\n\n\t\t<!-- 建议进行优化，把三元表达式语法变成对象语法 -->\n\t\t<div class=\"static\" v-bind:class=\"[{active:isActive},errorClass]\"></div>\n\t\t<script>\n\t\t\tlet vm = new Vue({\n\t\t\t\tel: 'div.static',\n\t\t\t\t/** \n\t\t\t\tdata: {\n\t\t\t\t\tactiveClass: 'active',\n\t\t\t\t\terrorClass: 'text-danger',\n\t\t\t\t},\n\t\t\t\t*/\n\t\t\t   /** 三元表达式\n\t\t\t\tdata: {\n\t\t\t\t\tisActive: true,\n\t\t\t\t\tactiveClass: 'active',\n\t\t\t\t\terrorClass: 'text-danger',\n\t\t\t\t},\n\t\t\t\t*/\n\t\t\t\tdata: {\n\t\t\t\t\tisActive: true,\n\t\t\t\t\terrorClass: 'text-danger',\n\t\t\t\t},\n\n\t\t\t\t// 初始值\n\t\t\t\terror: null,\n\t\t\t\ttodos: [],\n\t\t\t\tvisitCount: 0,\n\t\t\t\tnewTodoText: '',\n\t\t\t\thideCompletedTodos: false,\n\n\t\t\t});\n\t\t</script>\n\t</body>\n</html>\n```\n\n# 绑定 HTML Class----自定义组件并使用\n```\n<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<meta charset=\"utf-8\">\n\t\t<title>迷心兔</title>\n\t\t<script src=\"./js/vue.js\"></script>\n\t\t<script>\n\t\t\tVue.config.productionTip = false\n\t\t</script>\n\t</head>\n\t<body>\n\t\t<!-- 结果：<p class=\"foo bar baz boo\">Hi</p> -->\n\t\t<!-- <my-component class=\"baz boo\"></my-component> -->\n\t\t\n\t\t<!-- 结果：<p class=\"foo bar active\">Hi</p> -->\n\t\t<!-- <my-component v-bind:class=\"{ active:isActive }\"></my-component> -->\n\t\t\n\t\t<script>\n\t\t\t// 自己声明一个组件\n\t\t\tVue.component('my-component',{\n\t\t\t\ttemplate:'<p class=\"foo bar\">Hi!</p>',\n\t\t\t});\n\t\t\t\n\t\t\tlet vm = new Vue({\n\t\t\t\tel:'my-component',\n\t\t\t\tdata:{\n\t\t\t\t\tisActive:true,\n\t\t\t\t},\n\n\t\t\t\t// 初始值\n\t\t\t\terror: null,\n\t\t\t\ttodos: [],\n\t\t\t\tvisitCount: 0,\n\t\t\t\tnewTodoText: '',\n\t\t\t\thideCompletedTodos: false,\n\n\t\t\t});\n\t\t</script>\n\t</body>\n</html>\n```\n\n\n\n\n\n# 绑定内联样式----使用对象语法\n```html\n<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<meta charset=\"utf-8\">\n\t\t<title>迷心兔</title>\n\t\t<script src=\"./js/vue.js\"></script>\n\t\t<script>\n\t\t\tVue.config.productionTip = false\n\t\t</script>\n\t</head>\n\t<body>\n\t\t<!-- 结果：<div style=\"color: red; font-size: 30px;\"></div> -->\n\t\t<!-- <div v-bind:style=\"{ color:activeColor, fontSize:fontSize + 'px'}\"></div> -->\n\t\t\n\t\t<!-- 对上面进行优化：直接使用对象 -->\n\t\t<div v-bind:style=\"styleObject\"></div>\n\t\t\n\t\t<script>\n\t\t\t\n\t\t\t\n\t\t\tlet vm = new Vue({\n\t\t\t\tel:'div',\n\t\t\t\t/*\n\t\t\t\tdata:{\n\t\t\t\t\tactiveColor:'red',\n\t\t\t\t\tfontSize:30,\n\t\t\t\t},\n\t\t\t\t*/\n\t\t\t   data:{\n\t\t\t\t   styleObject:{\n\t\t\t\t\t   color:'red',\n\t\t\t\t\t   fontSize:'13px',\n\t\t\t\t   },\n\t\t\t   },\n\t\t\t\t\n\n\t\t\t\t// 初始值\n\t\t\t\terror: null,\n\t\t\t\ttodos: [],\n\t\t\t\tvisitCount: 0,\n\t\t\t\tnewTodoText: '',\n\t\t\t\thideCompletedTodos: false,\n\n\t\t\t});\n\t\t</script>\n\t</body>\n</html>\n````\n\n# 绑定内联样式----使用数组语法\n```html\n<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<meta charset=\"utf-8\">\n\t\t<title>迷心兔</title>\n\t\t<script src=\"./js/vue.js\"></script>\n\t\t<script>\n\t\t\tVue.config.productionTip = false\n\t\t</script>\n\t</head>\n\t<body>\n\t\t<!-- 结果：<div style=\"color: green; font-size: 30px; font-weight: bold;\"></div> -->\n\t\t<div v-bind:style=\"[baseStyles, overridingStyles]\"></div>\n\t\t\n\t\t<script>\n\t\t\t\n\t\t\t\n\t\t\tlet vm = new Vue({\n\t\t\t\tel:'div',\n\t\t\t\tdata:{\n\t\t\t\t\tbaseStyles: {\n\t\t\t\t\t\tcolor: 'green',\n\t\t\t\t\t\tfontSize: '30px',\n\t\t\t\t\t},\n\t\t\t\t\toverridingStyles: {\n\t\t\t\t\t\t'font-weight': 'bold',\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\n\n\t\t\t\t// 初始值\n\t\t\t\terror: null,\n\t\t\t\ttodos: [],\n\t\t\t\tvisitCount: 0,\n\t\t\t\tnewTodoText: '',\n\t\t\t\thideCompletedTodos: false,\n\n\t\t\t});\n\t\t</script>\n\t</body>\n</html>\n\n```\n\n# 多重值\n```\n<div v-bind:style=\"{ display: ['-webkit-box', '-ms-flexbox', 'flex'] }\"></div>\n```","categories":["Vue"]},{"title":"vue-模板语法","url":"/2020/03/12/vue-模板语法/","content":"\n\n\n\n\n# vue-基础语法\n```html\n<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<meta charset=\"utf-8\">\n\t\t<title>迷心兔</title>\n\t\t<script src=\"./js/vue.js\"></script>\n\t</head>\n\t<body>\n\t\t<div id=\"app\">\n\t\t\t<p>{{ a }}</p>\n\t\t\t<span>Message: {{ msg }}</span>\n\n\t\t\t<!-- 第二种方式:这里的foo不会更新【Object.freeze(obj);】\n\t\t\t<p>{{ foo }}</p>\n\t\t\t<button v-on:click=\"foo = 'baz'\">改变它</button>\n\t\t\t-->\n\t\t</div>\n\n\t\t<script>\n\t\t\tlet data={\n\t\t\t\ta:1,\n\t\t\t\tmsg:'迷心兔',\n\t\t\t};\n\n\t\t\t/** 第二种方式这会阻止修改现有的属性，也意味着响应系统无法再追踪变化。\n\t\t\tlet obj={\n\t\t\t\tfoo:'bar',\n\t\t\t};\n\t\t\tObject.freeze(obj);\n\t\t\t*/\n\t\t\t\n\t\t\tlet vm=new Vue({\n\t\t\t\tel:'#app',\n\t\t\t\tdata:data,\n\t\t\t\t// data:obj, //第二种方式\n\n\t\t\t\t/**\n\t\t\t\t * 在一个实例被创建之后执行代码\n\t\t\t\t * 注意:不要在选项属性或回调上使用箭头函数\n\t\t\t\t */\n\t\t\t\tcreated:function(){\n\t\t\t\t\tconsole.log('a:'+this.a); // this:指向vm实例\n\t\t\t\t},\n\n\t\t\t\t\n\t\t\t\t// 初始值\n\t\t\t\terror:null,\n\t\t\t\ttodos:[],\n\t\t\t\tvisitCount:0,\n\t\t\t\tnewTodoText:'',\n\t\t\t\thideCompletedTodos:false,\n\t\t\t\t\n\t\t\t});\n\t\t\t// 前缀 $，以便与用户定义的属性区分开来\n\t\t\tvm.$data === data // => true\n\t\t\tvm.$el === document.getElementById('example') // => true\n\t\t\t\n\t\t\talert(vm.a==data.a); // true\n\t\t\tvm.a='hi';\n\t\t\talert(data.a); // hi\n\n\t\t\t// $watch 是一个实例方法\n\t\t\tvm.$watch('a', function (newValue, oldValue) {\n\t\t\t\t// 这个回调将在 `vm.a` 改变后调用\n\t\t\t});\n\n\t\t</script>\n\t</body>\n</html>\n```\n\n# html 中的基础指令\n```html\n<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<meta charset=\"utf-8\">\n\t\t<title>迷心兔</title>\n\t\t<script src=\"./js/vue.js\"></script>\n\t</head>\n\t<body>\n\t\t<div id=\"app\">\n\t\t\t<!-- v-once:这里的msg插入一次后就不会更新了 -->\n\t\t\t<span v-once>这个将不会改变: {{ msg }}</span>\n\t\t\t\n\n\t\t\t<!-- \n\t\t\t\tv-html:输出真正的 HTML \n\t\t\t\t注意:你不能使用 v-html 来复合局部模板\n\t\t\t-->\n\t\t\t<p>使用 v-html命令: <span v-html=\"rawHtml\"></span></p>\n\t\t\t\n\n\t\t\t<!-- Mustache 语法不能作用在 HTML attribute 上，遇到这种情况应该使用 v-bind 指令 -->\n\t\t\t<div v-bind:id=\"dynamicId\"></div>\n\t\t\t\n\n\t\t\t<!-- \n\t\t\t\t对于布尔 attribute (它们只要存在就意味着值为 true)，v-bind 工作起来略有不同 \n\t\t\t\t如果 isButtonDisabled 的值是 null、undefined 或 false，\n\t\t\t\t则 disabled attribute 甚至不会被包含在渲染出来的 <button> 元素中。\n\t\t\t-->\n\t\t\t<button v-bind:disabled=\"isButtonDisabled\">Button</button>\n\n\t\t\t\n\t\t\t<!-- v-if:指令将根据表达式 seen 的值的真假来插入/移除 <p> 元素。 -->\n\t\t\t<p v-if=\"seen\">现在你能看到我了</p>\n\n\t\t\t \n\t\t\t<!--\n\t\t\t\t注意:参数表达式的写法存在一些约束，如之后的“对动态参数表达式的约束”章节所述。\n\t\t\t \tattributeName:属性名称,比如 -> href\n\t\t\t-->\n\t\t\t<a v-bind:[attributeName]=\"url\"> ... </a>\n\n\t\t\t \n\t\t\t<!-- eventName:事件名称，比如 -> focus -->\n\t\t\t<a v-on:[eventName]=\"doSomething\"> ... </a>\n\n\n\t\t\t<!-- 对动态参数表达式的约束，下面语法是错误的 -->\n\t\t\t<!-- <a v-bind:['foo' + bar]=\"value\"> ... </a> -->\n\n\t\t\t \n\t\t\t<!-- .prevent 修饰符告诉 v-on 指令对于触发的事件调用 event.preventDefault() -->\n\t\t\t<form v-on:submit.prevent=\"onSubmit\">...</form>\n\n\n\t\t\t<!-- v-bind缩写 -> 完整语法 -->\n\t\t\t<a v-bind:href=\"url\">...</a>\n\t\t\t<!-- 缩写 -->\n\t\t\t<a :href=\"url\">...</a>\n\t\t\t<!-- 动态参数的缩写 (2.6.0+) -->\n\t\t\t<a :[key]=\"url\"> ... </a>\n\n\n\t\t\t<!-- v-on缩写 -> 完整语法 -->\n\t\t\t<a v-on:click=\"doSomething\">...</a>\n\t\t\t<!-- 缩写 -->\n\t\t\t<a @click=\"doSomething\">...</a>\n\t\t\t<!-- 动态参数的缩写 (2.6.0+) -->\n\t\t\t<a @[event]=\"doSomething\"> ... </a>\n\t\t\t \n\t\t</div>\n\n\t\t<script>\n\t\t\tlet vm=new Vue({\n\t\t\t\t\n\t\t\t\t// 初始值\n\t\t\t\terror:null,\n\t\t\t\ttodos:[],\n\t\t\t\tvisitCount:0,\n\t\t\t\tnewTodoText:'',\n\t\t\t\thideCompletedTodos:false,\n\t\t\t});\n\t\t</script>\n\t</body>\n</html>\n```\n\n# 在 html 中使用 JavaScript 表达式\n```html\n<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<meta charset=\"utf-8\">\n\t\t<title>迷心兔</title>\n\t\t<script src=\"./js/vue.js\"></script>\n\t</head>\n\t<body>\n\t\t<div id=\"app\">\n\t\t\t<!-- 注意:只能写一下表达式 -->\n\t\t\t{{ number + 1 }}\n\t\t\t{{ ok ? 'YES' : 'NO' }}\n\t\t\t{{ message.split('').reverse().join('') }}\n\t\t\t<div v-bind:id=\"'list-' + id\"></div>\n\n\t\t\t<!-- \n\t\t\t\t下面两条语法错误\n\t\t\t\t1.这是语句，不是表达式 \n\t\t\t\t2.流控制也不会生效，请使用三元表达式 \n\n\t\t\t-->\n\t\t\t{{ var a = 1 }}\n\t\t\t{{ if (ok) { return message } }}\n\t\t\t\n\t\t</div>\n\n\t\t<script>\n\t\t\tlet vm=new Vue({\n\t\t\t\t\n\t\t\t\t// 初始值\n\t\t\t\terror:null,\n\t\t\t\ttodos:[],\n\t\t\t\tvisitCount:0,\n\t\t\t\tnewTodoText:'',\n\t\t\t\thideCompletedTodos:false,\n\t\t\t});\n\t\t</script>\n\t</body>\n</html>\n```\n\n# 逻辑表达式的优化\n```html\n<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<meta charset=\"utf-8\">\n\t\t<title>迷心兔</title>\n\t\t<script src=\"./js/vue.js\"></script>\n\t</head>\n\t<body>\n\t\t<div id=\"example\">\n\t\t\t<!-- 1.直接表达式 -> 缺点:在模板中放入太多的逻辑会让模板过重且难以维护 -->\n\t\t\t<!-- {{ message.aplit(' ').reverse().join('') }} -->\n\n\t\t\t<!-- 2.简单的优化 还是有点缺点:需要大量计算，这回浪费好多性能开销-->\n\t\t\t<p>原始信息:\"{{ message }}\"</p>\n\t\t\t<p>计算的反向消息:\"{{ reversedMessage }}\"</p>\n\t\t\t\n\t\t\t<!-- 3.最后优化:这时候就可以用到方法了 -->\n\t\t\t<p>计算的反向消息:\"{{ reversedMessage() }}\"</p>\n\t\t</div>\n\t\t<script>\n\t\t\tlet vm = new Vue({\n\t\t\t\tel: \"#example\",\n\t\t\t\tdata: {\n\t\t\t\t\tmessage: 'Hello'\n\t\t\t\t},\n\t\t\t\t/** 计算属性是基于它们的响应式依赖进行缓存的【有缓存，只要值没有改变就使用缓存】\n\t\t\t\tcomputed: {\n\t\t\t\t\t计算属性的getter\n\t\t\t\t\treversedMessage: function() {\n\t\t\t\t\t\t// this:指向vm实例\n\t\t\t\t\t\treturn this.message.split('').reverse().join('');\n\t\t\t\t\t},\n\t\t\t\t\tnew: function() {\n\t\t\t\t\t\treturn Date.now();\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t*/\n\t\t\t\t// 采用方法也可以达到同样的效果【这样不会产生缓存】\n\t\t\t\tmethods: {\n\t\t\t\t\treversedMessage: function() {\n\t\t\t\t\t\treturn this.message.split('').reverse().join('');\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t// 初始值\n\t\t\t\terror: null,\n\t\t\t\ttodos: [],\n\t\t\t\tvisitCount: 0,\n\t\t\t\tnewTodoText: '',\n\t\t\t\thideCompletedTodos: false,\n\n\t\t\t});\n\t\t</script>\n\t</body>\n</html>\n```\n\n# 计算属性 VS 侦听属性\n```html\n<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<meta charset=\"utf-8\">\n\t\t<title>迷心兔</title>\n\t\t<script src=\"./js/vue.js\"></script>\n\t\t<script>\n\t\t\tVue.config.productionTip = false\n\t\t</script>\n\t</head>\n\t<body>\n\t\t<div id=\"demo\">\n\t\t\t{{ fullName }}\n\t\t</div>\n\n\t\t<script>\n\t\t\tlet vm = new Vue({\n\t\t\t\tel: '#demo',\n\t\t\t\tdata: {\n\t\t\t\t\tfirstName: 'Foo',\n\t\t\t\t\tlastName: 'Bar',\n\t\t\t\t\tfullName: 'Foo Bar', // 第二种方式这个要注释 【第三种方式不要注释】\n\t\t\t\t},\n\t\t\t\t/** 第一种方式 【侦听属性】\n\t\t\t\twatch: {\n\t\t\t\t\tfirstName: function(val) {\n\t\t\t\t\t\tthis.fullName = val + ' ' + this.lastName\n\t\t\t\t\t},\n\t\t\t\t\tlastName: function(val) {\n\t\t\t\t\t\tthis.fullName = this.firstName + ' ' + val\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t*/\n\t\t\t\t/** 第二种方式 【computed计算属性】\n\t\t\t\tcomputed: {\n\t\t\t\t\tfullName: function() {\n\t\t\t\t\t\treturn this.firstName + ' ' + this.lastName\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t*/\n\t\t\t\t/** 第三种方式【给计算属性添加setter方法】\n\t\t\t\tcomputed: {\n\t\t\t\t\tfullName: {\n\t\t\t\t\t\tget: function() {\n\t\t\t\t\t\t\treturn this.firstName + ' ' + this.lastName;\n\t\t\t\t\t\t},\n\t\t\t\t\t\tset: function(newValue) {\n\t\t\t\t\t\t\tlet names = newValue.split(' ');\n\t\t\t\t\t\t\tthis.firstName = names[0];\n\t\t\t\t\t\t\tthis.lastName = names[names.length - 1];\n\t\t\t\t\t\t},\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t*/\n\n\n\n\t\t\t\t// 初始值\n\t\t\t\terror: null,\n\t\t\t\ttodos: [],\n\t\t\t\tvisitCount: 0,\n\t\t\t\tnewTodoText: '',\n\t\t\t\thideCompletedTodos: false,\n\n\t\t\t});\n\t\t\t// 第三种方式\n\t\t\t// vm.fullName = 'John Doe';\n\t\t</script>\n\t</body>\n</html>\n```\n\n# 侦听属性的实例\n在这个示例中，使用 watch 选项允许我们执行异步操作 (访问一个 API)，限制我们执行该操作的频率，并在我们得到最终结果前，设置中间状态。这些都是计算属性无法做到的。\n```html\n<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<meta charset=\"utf-8\">\n\t\t<title>迷心兔</title>\n\t\t<script src=\"./js/vue.js\"></script>\n\t\t<script>\n\t\t\tVue.config.productionTip = false\n\t\t</script>\n\t</head>\n\t<body>\n\t\t<div id=\"watch-example\">\n\t\t\t<p>\n\t\t\t\t问 yes/no 问题: <input v-model=\"question\">\n\t\t\t</p>\n\t\t\t<p>{{ answer }}</p>\n\t\t</div>\n\n\n\t\t<!-- 因为 AJAX 库和通用工具的生态已经相当丰富，Vue 核心代码没有重复 -->\n\t\t<!-- 提供这些功能以保持精简。这也可以让你自由选择自己更熟悉的工具。 -->\n\t\t<script src=\"https://cdn.jsdelivr.net/npm/axios@0.12.0/dist/axios.min.js\"></script>\n\t\t<script src=\"https://cdn.jsdelivr.net/npm/lodash@4.13.1/lodash.min.js\"></script>\n\t\t<script>\n\t\t\tlet watchExampleVM = new Vue({\n\t\t\t\tel: '#watch-example',\n\t\t\t\tdata: {\n\t\t\t\t\tquestion: '',\n\t\t\t\t\tanswer: '在你问一个问题之前我无法给你答案 !'\n\t\t\t\t},\n\t\t\t\twatch: {\n\t\t\t\t\t// 如果question发生改变，这个函数就会运行\n\t\t\t\t\tquestion: function(newQuestion, oldQuestion) {\n\t\t\t\t\t\tthis.answer = 'Waiting for you stop typing ...';\n\t\t\t\t\t\tthis.debouncedGetAnswer();\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tcreated: function() {\n\t\t\t\t\t// `_.debounce` 是一个通过 Lodash 限制操作频率的函数。\n\t\t\t\t\t// 在这个例子中，我们希望限制访问 yesno.wtf/api 的频率\n\t\t\t\t\t// AJAX 请求直到用户输入完毕才会发出。想要了解更多关于\n\t\t\t\t\t// `_.debounce` 函数 (及其近亲 `_.throttle`) 的知识，\n\t\t\t\t\t// 请参考：https://lodash.com/docs#debounce\n\t\t\t\t\tthis.debouncedGetAnswer = _.debounce(this.getAnswer, 500);\n\t\t\t\t},\n\t\t\t\tmethods: {\n\t\t\t\t\tgetAnswer: function() {\n\t\t\t\t\t\tif (this.question.indexOf('?') === -1) {\n\t\t\t\t\t\t\tthis.answer = '问题通常包含问号. ;-)';\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.answer = '思考中 ...';\n\t\t\t\t\t\tlet vm = this;\n\t\t\t\t\t\taxios.get('https://yesno.wtf/api').then(function(response) {\n\t\t\t\t\t\t\tvm.answer = _.capitalize(response.data.answer);\n\t\t\t\t\t\t}).catch(function(error) {\n\t\t\t\t\t\t\tvm.answer = '错误！ 无法访问API. ' + error;\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t},\n\n\n\t\t\t\t// 初始值\n\t\t\t\terror: null,\n\t\t\t\ttodos: [],\n\t\t\t\tvisitCount: 0,\n\t\t\t\tnewTodoText: '',\n\t\t\t\thideCompletedTodos: false,\n\n\t\t\t});\n\t\t</script>\n\t</body>\n</html>\n```","categories":["Vue"]},{"title":"JS类的新写法和数组","url":"/2020/03/07/JS类的新写法和数组/","content":"\n\n\n\n\n# 1.数组的内置方法：pop/push/shift/unshift\n```\nunshitt：在前端添加一个元素\npush：在末端添加一个元素\n\nshift：从前端去除一个元素\npop：从末端去除一个元素\n\npush/pop 方法运行的比较快，而 shift/unshift 比较慢\n\nlet fruits = [\"Apple\", \"Orange\", \"Pear\"];\nalert(fruits.pop());    // Pear\nalert(fruits);          // Apple, Orange\n\nfruits.push(\"Pear\");\nalert(fruits);          // Apple, Orange, Pear\n\nalert(fruits.shift());  // Apple\nalert(fruits);          // Orange, Pear\n\nfruits.unshift(\"Apple\");\nalert(fruits);          // Apple, Orange, Pear\n\nfruits.push(\"Orange\", \"Peach\");\nfruits.unshift(\"Pineapple\", \"Lemon\");\nalert( fruits );        // Pineapple,Lemon,Apple,Orange,Pear,Orange,Peach\n\nlet arr = fruits;\nalert( arr === fruits ); // true 证明数组是通过引用来复制的\n```\n\n\n# 2.遍历数组的方式\n```\nlet fruits = [\"Apple\", \"Orange\", \"Pear\"];\n\nfor (let i = 0; i < fruits.length; i++) {\n    alert(fruits[i]);\n}\n\nfor (let fruit of fruits) {\n    alert(fruit);\n}\n\nfor (let key in fruits) {\n    alert(fruits[key]);\n}\n\n\nlet arr = [\"a\", \"b\"];\narr.push(function () {\n    alert(this);\n});\narr[2]();   // a,b,function () {\n            //     alert(this);\n            // }\n```\n\n# 3.使用class定义类\n```\nclass User {\n    // 构造方法\n    constructor(name) {\n        // ...\n        this.name = name;\n    }\n    method1() {\n        // ...\n        alert(this.name);\n    }\n    method2() {\n        // ...\n        alert(this.name);\n    }\n    sayHi() {\n        // ...\n        alert(this.name);\n    }\n    get name() {\n        return this._name;\n    }\n    set name(value) {\n        if (value.length < 4) {\n            alert(\"Name is too short.\");\n            return;\n        }\n        this._name = value;\n    }\n}\nlet user = new User(\"John\");\nuser.method1();\nalert(typeof User);                                 // function\n// ...或者，更确切地说，是构造器方法\nalert(User === User.prototype.constructor);         // true\n// 方法在 User.prototype 中，例如：\nalert(User.prototype.sayHi);                        // sayHi() { // ... alert(this.name); }\n// 在原型中实际上有两个方法\nalert(Object.getOwnPropertyNames(User.prototype));  //constructor,method1,method2,sayHi\n\nlet User = class {\n    sayHi() {\n        alert(\"Hello\");\n    }\n};\n\nObject.defineProperties(User.prototype, {\n    name: {\n        get() {\n            return this._name\n        },\n        set(value) {\n            if (value.length < 4) {\n                alert(\"Name is too short.\");\n                return;\n            }\n            this._name = value;\n        }\n    }\n});\n```","categories":["JavaScript"]},{"title":"JS箭头函数的写法，用法和注意","url":"/2020/03/07/JS箭头函数的写法，用法和注意/","content":"\n\n\n\n\n# 写法：\n```\nlet fn01 = () => {\n    console.log(\"迷心兔\");\n}\n\n\nlet fn02 = (a) => {\n    console.log(a + 2);\n}\n\n\nlet fn03 = (a, b) => {\n    console.log(a + b);\n}\n\n\nlet fn04 = (a, b, ...rest) => {\n    let sum = a + b;\n    for (let i = 0; i < rest.length; i++) {\n        sum += rest[i];\n    }\n    console.log(sum);\n}\n\n```\n\n# 用法：使用箭头函数应对this关键字\n```\n<!-- 第一种方式：出错 -->\nlet obj = {\n    i: 10,\n    b: () => console.log(this.i, this),\n};\nobj.b(); \n// undefined, Window{...}\n\n\n<!-- 第二种方式：正确 -->\nlet person = {\n    age: 18,\n    name: \"jay\",\n    showName: function () {\n        // 匿名函数：不能使用this\n        // let arrow = function () {\n        //     alert(this.name);\n        // }\n        // 箭头函数：能使用this\n        let arrow = () => {\n            console.log(this.name, this);\n        }\n        arrow();\n    },\n};\nperson.showName();\n// jay {age: 18, name: \"jay\", showName: ƒ}\n\n\n<!-- 第三种方式：出错 -->\nlet obj = {\n    a: 10,\n};\nObject.defineProperty(obj, \"b\", {\n    get: () => {\n        console.log(this.a, typeof this.a, this);\n    },\n})\nobj.b;\n// undefined   \"undefined\"   Window {postMessage: ƒ, blur: ƒ, focus: ƒ, close: ƒ, frames: Window, …}\n```\n\n# 注意：\n```\n1.箭头函数不会绑定this 【箭头函数不会改变this本来的绑定】\n2.箭头函数不能用作构造器，和 new一起用会抛出错误\n3.箭头函数没有prototype属性。\n4.箭头函数不能用作函数生成器。\n\n```","categories":["JavaScript"]},{"title":"JavaScript对象的属性-新认识","url":"/2020/03/07/JavaScript对象的属性-新认识/","content":"\n\n# 1.计算属性：在对象字面量中使用方括号\n```\nlet fruit = 'apple';\nlet bag = {\n    [fruit]: 5, // bag.apple = 5\n    [fruit + 'Computers']: 5 // bag.appleComputers = 5\n};\n```\n\n\n# 2.属性值简写：用已存在的变量当做属性名\n```\nfunction makeUser(name, age) {\n    return {\n        name: name,\n        age: age\n        /* \n        name, // 与 name: name 相同\n        age   // 与 age: age 相同\n        */\n    };\n}\nlet user = makeUser(\"John\", 30);\nalert(user.name); // John\n```","categories":["Java"]},{"title":"Git-分支","url":"/2020/03/06/Git-分支/","content":"\n\n迷心兔\n\n[学习链接](https://git-scm.com/book/zh/v2/Git-%E5%88%86%E6%94%AF-%E5%88%86%E6%94%AF%E7%AE%80%E4%BB%8B)\n\n注解：分支合并和变基用到的命令\n```\n# $ git log --oneline --decorate\n查看各个分支当前所指的对象\n\n# $ git log --oneline --decorate --graph --all\n输出你的提交历史、各个分支的指向以及项目的分支分叉情况\n\n# $ git branch testing\n创建一个 testing 分支\n\n# $ git checkout testing\n切换到testing分支上\n\n便携方式：\n$ git commit -a -m '提交说明'\n添加到暂存区再提交到本地版本库【我这里无效，需要自己先git add *】\n\n$ git checkout -b iss53\t\t=>\t\t$ git branch iss53\n新建分支并切换到分支上\t\t\t\t$ git checkout iss53\n\n```\n\n\n\n# [1.分支的新建-例子：](https://git-scm.com/book/zh/v2/Git-%E5%88%86%E6%94%AF-%E5%88%86%E6%94%AF%E7%AE%80%E4%BB%8B)\n```\nAdministrator@SC-201812032148 MINGW64 /f/Git/Test/Git-Test (master)\n$ git status\nOn branch master\nYour branch is up to date with 'origin/master'.\n\nnothing to commit, working tree clean\n\nAdministrator@SC-201812032148 MINGW64 /f/Git/Test/Git-Test (master)\n$ git log --oneline --decorate\nb3b98a2 (HEAD -> master, origin/master, origin/HEAD) Merge branch 'iss53'\n54c19fc (hotfix) 第二：hotfix - 分支 index.html - mixintu\nd285c00 (iss53) 第一：iss53 - 分支 index.html - mixintu\n7729454 Initial commit\n\nAdministrator@SC-201812032148 MINGW64 /f/Git/Test/Git-Test (master)\n$ git branch -d hotfix\nDeleted branch hotfix (was 54c19fc).\n\nAdministrator@SC-201812032148 MINGW64 /f/Git/Test/Git-Test (master)\n$ git branch -d iss53\nDeleted branch iss53 (was d285c00).\n\nAdministrator@SC-201812032148 MINGW64 /f/Git/Test/Git-Test (master)\n$ git log --oneline --decorate\nb3b98a2 (HEAD -> master, origin/master, origin/HEAD) Merge branch 'iss53'\n54c19fc 第二：hotfix - 分支 index.html - mixintu\nd285c00 第一：iss53 - 分支 index.html - mixintu\n7729454 Initial commit\n\nAdministrator@SC-201812032148 MINGW64 /f/Git/Test/Git-Test (master)\n$ git branch testing\n\nAdministrator@SC-201812032148 MINGW64 /f/Git/Test/Git-Test (master)\n$ git checkout testing\nSwitched to branch 'testing'\n\nAdministrator@SC-201812032148 MINGW64 /f/Git/Test/Git-Test (testing)\n$ vim test.txt\n\nAdministrator@SC-201812032148 MINGW64 /f/Git/Test/Git-Test (testing)\n$ git add test.txt\n\nAdministrator@SC-201812032148 MINGW64 /f/Git/Test/Git-Test (testing)\n$ git commit -a -m '第一：testing - 分支 test.txt - mixintu'\n[testing d7fdc1e] 第一：testing - 分支 test.txt - mixintu\n 1 file changed, 1 insertion(+)\n create mode 100644 test.txt\n\nAdministrator@SC-201812032148 MINGW64 /f/Git/Test/Git-Test (testing)\n$ git checkout master\nSwitched to branch 'master'\nYour branch is up to date with 'origin/master'.\n\nAdministrator@SC-201812032148 MINGW64 /f/Git/Test/Git-Test (master)\n$ xim test.txt\nbash: xim: command not found\n\nAdministrator@SC-201812032148 MINGW64 /f/Git/Test/Git-Test (master)\n$ vim test.txt\n\nAdministrator@SC-201812032148 MINGW64 /f/Git/Test/Git-Test (master)\n$ git add test.txt\n\nAdministrator@SC-201812032148 MINGW64 /f/Git/Test/Git-Test (master)\n$ git commit -a -m '第二：master - 分支 test.txt - mixintu'\n[master 3c7c951] 第二：master - 分支 test.txt - mixintu\n 1 file changed, 1 insertion(+)\n create mode 100644 test.txt\n\nAdministrator@SC-201812032148 MINGW64 /f/Git/Test/Git-Test (master)\n$ git log --oneline --decorate --graph --all\n* 3c7c951 (HEAD -> master) 第二：master - 分支 test.txt - mixintu\n| * d7fdc1e (testing) 第一：testing - 分支 test.txt - mixintu\n|/\n*   b3b98a2 (origin/master, origin/HEAD) Merge branch 'iss53'\n|\\\n| * d285c00 第一：iss53 - 分支 index.html - mixintu\n* | 54c19fc 第二：hotfix - 分支 index.html - mixintu\n|/\n* 7729454 Initial commit\n```\n\n\n# [2.分支的新建和合并-例子：](https://git-scm.com/book/zh/v2/Git-%E5%88%86%E6%94%AF-%E5%88%86%E6%94%AF%E7%9A%84%E6%96%B0%E5%BB%BA%E4%B8%8E%E5%90%88%E5%B9%B6)\n![第一：master-分支](第一：master-分支.png)\n![第二：添加iss53分支](第二：添加iss53分支.png)\n![第三：在iss53分支新建文件并提交](第三：在iss53分支新建文件并提交.png)\n![第四：添加hotfix分支-新建文件并提交](第四：添加hotfix分支-新建文件并提交.png)\n![第五：合并hotfix和master分支](第五：合并hotfix和master分支.png)\n![第六：切换到iss53分支修改并提交【就是hotfix分支做了什么，iss53分支就做什么】](第六：切换到iss53分支修改并提交.png)\n![第七：对master和iss53分支的一些说明](第七：对master和iss53分支的一些说明.png)\n![第八：合并master和iss53分支](第八：合并master和iss53分支.png)\n```\nAdministrator@SC-201812032148 MINGW64 /f/Git/Test/Git-Test (master)\n$ git status\nOn branch master\nYour branch is up to date with 'origin/master'.\n\nnothing to commit, working tree clean\n\nAdministrator@SC-201812032148 MINGW64 /f/Git/Test/Git-Test (master)\n$ git log --oneline --decorate --graph --all # 第一：master-分支\n* 7729454 (HEAD -> master, origin/master, origin/HEAD) Initial commit\n\nAdministrator@SC-201812032148 MINGW64 /f/Git/Test/Git-Test (master)\n$ git checkout -b iss53 # 第二：添加iss53分支\nSwitched to a new branch 'iss53'\n\nAdministrator@SC-201812032148 MINGW64 /f/Git/Test/Git-Test (iss53)\n$ vim index.html\n\nAdministrator@SC-201812032148 MINGW64 /f/Git/Test/Git-Test (iss53)\n$ git add index.html\n\nAdministrator@SC-201812032148 MINGW64 /f/Git/Test/Git-Test (iss53)\n$ git commit -a -m '第一：iss53 - 分支 index.html - mixintu' # 第三：在iss53分支新建文件并提交\n[iss53 d285c00] 第一：iss53 - 分支 index.html - mixintu\n 1 file changed, 1 insertion(+)\n create mode 100644 index.html\n\nAdministrator@SC-201812032148 MINGW64 /f/Git/Test/Git-Test (iss53)\n$ git checkout master\nSwitched to branch 'master'\nYour branch is up to date with 'origin/master'.\n\nAdministrator@SC-201812032148 MINGW64 /f/Git/Test/Git-Test (master)\n$ git log --oneline --decorate --graph --all\n* d285c00 (iss53) 第一：iss53 - 分支 index.html - mixintu\n* 7729454 (HEAD -> master, origin/master, origin/HEAD) Initial commit\n\nAdministrator@SC-201812032148 MINGW64 /f/Git/Test/Git-Test (master)\n$ git checkout -b hotfix\nSwitched to a new branch 'hotfix'\n\nAdministrator@SC-201812032148 MINGW64 /f/Git/Test/Git-Test (hotfix)\n$ vim index.html\n\nAdministrator@SC-201812032148 MINGW64 /f/Git/Test/Git-Test (hotfix)\n$ git add index.html\n\nAdministrator@SC-201812032148 MINGW64 /f/Git/Test/Git-Test (hotfix)\n$ git commit -a -m '第二：hotfix - 分支 index.html - mixintu' # 第四：添加hotfix分支-新建文件并提交\n[hotfix 54c19fc] 第二：hotfix - 分支 index.html - mixintu\n 1 file changed, 1 insertion(+)\n create mode 100644 index.html\n\nAdministrator@SC-201812032148 MINGW64 /f/Git/Test/Git-Test (hotfix)\n$ git checkout master\nSwitched to branch 'master'\nYour branch is up to date with 'origin/master'.\n\nAdministrator@SC-201812032148 MINGW64 /f/Git/Test/Git-Test (master)\n$ git log --oneline --decorate --graph --all\n* 54c19fc (hotfix) 第二：hotfix - 分支 index.html - mixintu\n| * d285c00 (iss53) 第一：iss53 - 分支 index.html - mixintu\n|/\n* 7729454 (HEAD -> master, origin/master, origin/HEAD) Initial commit\n\nAdministrator@SC-201812032148 MINGW64 /f/Git/Test/Git-Test (master)\n$ git merge hotfix # 第五：合并hotfix和master分支\nUpdating 7729454..54c19fc\nFast-forward\n index.html | 1 +\n 1 file changed, 1 insertion(+)\n create mode 100644 index.html\n\nAdministrator@SC-201812032148 MINGW64 /f/Git/Test/Git-Test (master)\n$ git merge iss53 # 第八：合并master和iss53分支\nMerge made by the 'recursive' strategy.\n\nAdministrator@SC-201812032148 MINGW64 /f/Git/Test/Git-Test (master)\n$ git log --oneline --decorate --graph --all\n*   b3b98a2 (HEAD -> master) Merge branch 'iss53'\n|\\\n| * d285c00 (iss53) 第一：iss53 - 分支 index.html - mixintu\n* | 54c19fc (hotfix) 第二：hotfix - 分支 index.html - mixintu\n|/\n* 7729454 (origin/master, origin/HEAD) Initial commit\n\nAdministrator@SC-201812032148 MINGW64 /f/Git/Test/Git-Test (master)\n$ git status\nOn branch master\nYour branch is ahead of 'origin/master' by 3 commits.\n  (use \"git push\" to publish your local commits)\n\nnothing to commit, working tree clean\n\nAdministrator@SC-201812032148 MINGW64 /f/Git/Test/Git-Test (master)\n$ git remote\norigin\n\nAdministrator@SC-201812032148 MINGW64 /f/Git/Test/Git-Test (master)\n$ git push origin master\nfatal: HttpRequestException encountered.\n   ▒▒▒▒▒▒▒▒ʱ▒▒▒▒\nremote: Invalid username or password.\nfatal: Authentication failed for 'https://github.com/mixintu/Git-Test.git/'\n\nAdministrator@SC-201812032148 MINGW64 /f/Git/Test/Git-Test (master)\n$ git push origin master\nEnumerating objects: 6, done.\nCounting objects: 100% (6/6), done.\nDelta compression using up to 4 threads\nCompressing objects: 100% (4/4), done.\nWriting objects: 100% (5/5), 562 bytes | 562.00 KiB/s, done.\nTotal 5 (delta 1), reused 0 (delta 0)\nremote: Resolving deltas: 100% (1/1), done.\nTo https://github.com/mixintu/Git-Test.git\n   7729454..b3b98a2  master -> master\n\n\n```\n\n\n# [3.简单的变基-例子：](https://git-scm.com/book/zh/v2/Git-%E5%88%86%E6%94%AF-%E5%8F%98%E5%9F%BA)\n![第1：类似前面的，把master和hotfix分支合并【experiment分支好比是iss53分支】](第1：类似前面的，把master和hotfix分支合并【experiment分支好比是iss53分支】.png)\n![注解：这一张不算变基](注解：这一张不算变基.png)\n![第2：对experiment分支进行变基](第2：对experiment分支进行变基.png)\n![第3：合并master和experiment分支](第3：合并master和experiment分支.png)\n```\nAdministrator@SC-201812032148 MINGW64 /f/Git/Test/Git-test (master)\n$ git status\nOn branch master\nYour branch is up to date with 'origin/master'.\n\nnothing to commit, working tree clean\n\nAdministrator@SC-201812032148 MINGW64 /f/Git/Test/Git-test (master)\n$ git log --oneline --decorate --graph --all\n* dc2d483 (HEAD -> master, origin/master, origin/HEAD) Initial commit\n\nAdministrator@SC-201812032148 MINGW64 /f/Git/Test/Git-test (master)\n$ git checkout -b experiment\nSwitched to a new branch 'experiment'\n\nAdministrator@SC-201812032148 MINGW64 /f/Git/Test/Git-test (experiment)\n$ vim index.html\n\nAdministrator@SC-201812032148 MINGW64 /f/Git/Test/Git-test (experiment)\n$ git add index.html\n\nAdministrator@SC-201812032148 MINGW64 /f/Git/Test/Git-test (experiment)\n$ git commit -a -m '第一：experiment - 分支 index.html - mixintu'\n[experiment f90b9b7] 第一：experiment - 分支 index.html - mixintu\n 1 file changed, 1 insertion(+)\n create mode 100644 index.html\n\nAdministrator@SC-201812032148 MINGW64 /f/Git/Test/Git-test (experiment)\n$ git checkout master\nSwitched to branch 'master'\nYour branch is up to date with 'origin/master'.\n\nAdministrator@SC-201812032148 MINGW64 /f/Git/Test/Git-test (master)\n$ git log --oneline --decorate --graph --all\n* f90b9b7 (experiment) 第一：experiment - 分支 index.html - mixintu\n* dc2d483 (HEAD -> master, origin/master, origin/HEAD) Initial commit\n\nAdministrator@SC-201812032148 MINGW64 /f/Git/Test/Git-test (master)\n$ git checkout -b hotfix\nSwitched to a new branch 'hotfix'\n\nAdministrator@SC-201812032148 MINGW64 /f/Git/Test/Git-test (hotfix)\n$ vim index.html\n\nAdministrator@SC-201812032148 MINGW64 /f/Git/Test/Git-test (hotfix)\n$ git add index.html\n\nAdministrator@SC-201812032148 MINGW64 /f/Git/Test/Git-test (hotfix)\n$ git commit -a -m '第二：hotfix - 分支 index.html - mixintu'\n[hotfix 5fdb36d] 第二：hotfix - 分支 index.html - mixintu\n 1 file changed, 1 insertion(+)\n create mode 100644 index.html\n\nAdministrator@SC-201812032148 MINGW64 /f/Git/Test/Git-test (hotfix)\n$ git checkout master\nSwitched to branch 'master'\nYour branch is up to date with 'origin/master'.\n\nAdministrator@SC-201812032148 MINGW64 /f/Git/Test/Git-test (master)\n$ git log --oneline --decorate --graph --all\n* 5fdb36d (hotfix) 第二：hotfix - 分支 index.html - mixintu\n| * f90b9b7 (experiment) 第一：experiment - 分支 index.html - mixintu\n|/\n* dc2d483 (HEAD -> master, origin/master, origin/HEAD) Initial commit\n\nAdministrator@SC-201812032148 MINGW64 /f/Git/Test/Git-test (master)\n$ git merge hotfix\nUpdating dc2d483..5fdb36d\nFast-forward\n index.html | 1 +\n 1 file changed, 1 insertion(+)\n create mode 100644 index.html\n\nAdministrator@SC-201812032148 MINGW64 /f/Git/Test/Git-test (master)\n$ git log --oneline --decorate --graph --all\n* 5fdb36d (HEAD -> master, hotfix) 第二：hotfix - 分支 index.html - mixintu\n| * f90b9b7 (experiment) 第一：experiment - 分支 index.html - mixintu\n|/\n* dc2d483 (origin/master, origin/HEAD) Initial commit\n\nAdministrator@SC-201812032148 MINGW64 /f/Git/Test/Git-test (master)\n$ git branch -d hotfix\nDeleted branch hotfix (was 5fdb36d).\n\nAdministrator@SC-201812032148 MINGW64 /f/Git/Test/Git-test (master)\n$ git log --oneline --decorate --graph --all\n* 5fdb36d (HEAD -> master) 第二：hotfix - 分支 index.html - mixintu\n| * f90b9b7 (experiment) 第一：experiment - 分支 index.html - mixintu\n|/\n* dc2d483 (origin/master, origin/HEAD) Initial commit\n\nAdministrator@SC-201812032148 MINGW64 /f/Git/Test/Git-test (master)\n$ git checkout experiment\nSwitched to branch 'experiment'\n\nAdministrator@SC-201812032148 MINGW64 /f/Git/Test/Git-test (experiment)\n$ git rebase master\nFirst, rewinding head to replay your work on top of it...\n\nAdministrator@SC-201812032148 MINGW64 /f/Git/Test/Git-test (experiment)\n$ git checkout master\nSwitched to branch 'master'\nYour branch is ahead of 'origin/master' by 1 commit.\n  (use \"git push\" to publish your local commits)\n\nAdministrator@SC-201812032148 MINGW64 /f/Git/Test/Git-test (master)\n$ git merge experiment\nAlready up to date.\n\nAdministrator@SC-201812032148 MINGW64 /f/Git/Test/Git-test (master)\n$ git log --oneline --decorate --graph --all\n* 5fdb36d (HEAD -> master, experiment) 第二：hotfix - 分支 index.html - mixintu\n* dc2d483 (origin/master, origin/HEAD) Initial commit\n\n\n```","categories":["Git"]},{"title":"Git-查看提交历史","url":"/2020/03/05/Git-查看提交历史/","content":"\n\ngit查看提交历史\n```\nAdministrator@SC-201812032148 MINGW64 /f/Git/Test/Git-Test (master)\n$ git log //回顾下提交历史\ncommit 3c7c951c186a7cd847c2a8116be381e081f169f2 (HEAD -> master)\nAuthor: mixintu <1578766422@qq.com>\nDate:   Thu Mar 5 21:30:11 2020 +0800\n\n    第二：master - 分支 test.txt - mixintu\n\ncommit b3b98a21b8776d7c189ea4aa4e21229aff9c1c98 (origin/master, origin/HEAD)\nMerge: 54c19fc d285c00\nAuthor: mixintu <1578766422@qq.com>\nDate:   Thu Mar 5 21:17:41 2020 +0800\n\n    Merge branch 'iss53'\n\ncommit 54c19fc8ed3a64308c659678e5da6e3a0d92b50d\nAuthor: mixintu <1578766422@qq.com>\nDate:   Thu Mar 5 21:17:00 2020 +0800\n\n    第二：hotfix - 分支 index.html - mixintu\n\ncommit d285c002529627fbce824019856f7e91d347dbf0\nAuthor: mixintu <1578766422@qq.com>\nDate:   Thu Mar 5 21:15:18 2020 +0800\n\n:...skipping...\ncommit 3c7c951c186a7cd847c2a8116be381e081f169f2 (HEAD -> master)\nAuthor: mixintu <1578766422@qq.com>\nDate:   Thu Mar 5 21:30:11 2020 +0800\n\n    第二：master - 分支 test.txt - mixintu\n\ncommit b3b98a21b8776d7c189ea4aa4e21229aff9c1c98 (origin/master, origin/HEAD)\nMerge: 54c19fc d285c00\nAuthor: mixintu <1578766422@qq.com>\nDate:   Thu Mar 5 21:17:41 2020 +0800\n\n    Merge branch 'iss53'\n\ncommit 54c19fc8ed3a64308c659678e5da6e3a0d92b50d\nAuthor: mixintu <1578766422@qq.com>\nDate:   Thu Mar 5 21:17:00 2020 +0800\n\n    第二：hotfix - 分支 index.html - mixintu\n\ncommit d285c002529627fbce824019856f7e91d347dbf0\nAuthor: mixintu <1578766422@qq.com>\nDate:   Thu Mar 5 21:15:18 2020 +0800\n\n    第一：iss53 - 分支 index.html - mixintu\n\ncommit 772945490bf54082ebdc64f3eb55a42cb131a3d3\nAuthor: 迷心兔 <44187263+mixintu@users.noreply.github.com>\nDate:   Thu Mar 5 19:51:04 2020 +0800\n\n    Initial commit\n~\n~\n~\n~\n~\n~\n~\n~\n~\n~\n~\n~\n~\n~\n\nAdministrator@SC-201812032148 MINGW64 /f/Git/Test/Git-Test (master)\n$ git log -p -2 //显示最近两次的提交历史\ncommit 3c7c951c186a7cd847c2a8116be381e081f169f2 (HEAD -> master)\nAuthor: mixintu <1578766422@qq.com>\nDate:   Thu Mar 5 21:30:11 2020 +0800\n\n    第二：master - 分支 test.txt - mixintu\n\ndiff --git a/test.txt b/test.txt\nnew file mode 100644\nindex 0000000..b717688\n--- /dev/null\n+++ b/test.txt\n@@ -0,0 +1 @@\n+mixintu\n\ncommit b3b98a21b8776d7c189ea4aa4e21229aff9c1c98 (origin/master, origin/HEAD)\nMerge: 54c19fc d285c00\nAuthor: mixintu <1578766422@qq.com>\nDate:   Thu Mar 5 21:17:41 2020 +0800\n\n    Merge branch 'iss53'\n\nAdministrator@SC-201812032148 MINGW64 /f/Git/Test/Git-Test (master)\n$ git log --stat //显示提交的简略统计信息\ncommit 3c7c951c186a7cd847c2a8116be381e081f169f2 (HEAD -> master)\nAuthor: mixintu <1578766422@qq.com>\nDate:   Thu Mar 5 21:30:11 2020 +0800\n\n    第二：master - 分支 test.txt - mixintu\n\n test.txt | 1 +\n 1 file changed, 1 insertion(+)\n\ncommit b3b98a21b8776d7c189ea4aa4e21229aff9c1c98 (origin/master, origin/HEAD)\nMerge: 54c19fc d285c00\nAuthor: mixintu <1578766422@qq.com>\nDate:   Thu Mar 5 21:17:41 2020 +0800\n\n    Merge branch 'iss53'\n\ncommit 54c19fc8ed3a64308c659678e5da6e3a0d92b50d\nAuthor: mixintu <1578766422@qq.com>\nDate:   Thu Mar 5 21:17:00 2020 +0800\n\n    第二：hotfix - 分支 index.html - mixintu\n\n index.html | 1 +\n 1 file changed, 1 insertion(+)\n\ncommit d285c002529627fbce824019856f7e91d347dbf0\nAuthor: mixintu <1578766422@qq.com>\nDate:   Thu Mar 5 21:15:18 2020 +0800\n\n    第一：iss53 - 分支 index.html - mixintu\n\n index.html | 1 +\n 1 file changed, 1 insertion(+)\n\ncommit 772945490bf54082ebdc64f3eb55a42cb131a3d3\nAuthor: 迷心兔 <44187263+mixintu@users.noreply.github.com>\nDate:   Thu Mar 5 19:51:04 2020 +0800\n\n    Initial commit\n\n README.md | 1 +\n 1 file changed, 1 insertion(+)\n\nAdministrator@SC-201812032148 MINGW64 /f/Git/Test/Git-Test (master)\n$ git log --pretty=oneline //粗略一行显示\n3c7c951c186a7cd847c2a8116be381e081f169f2 (HEAD -> master) 第二：master - 分支 test.txt - mixintu\nb3b98a21b8776d7c189ea4aa4e21229aff9c1c98 (origin/master, origin/HEAD) Merge branch 'iss53'\n54c19fc8ed3a64308c659678e5da6e3a0d92b50d 第二：hotfix - 分支 index.html - mixintu\nd285c002529627fbce824019856f7e91d347dbf0 第一：iss53 - 分支 index.html - mixintu\n772945490bf54082ebdc64f3eb55a42cb131a3d3 Initial commit\n\nAdministrator@SC-201812032148 MINGW64 /f/Git/Test/Git-Test (master)\n$ git log --pretty=format:\"%h - %an, %ar : %s\" //根据格式显示提交历史\n3c7c951 - mixintu, 28 minutes ago : 第二：master - 分支 test.txt - mixintu\nb3b98a2 - mixintu, 41 minutes ago : Merge branch 'iss53'\n54c19fc - mixintu, 42 minutes ago : 第二：hotfix - 分支 index.html - mixintu\nd285c00 - mixintu, 43 minutes ago : 第一：iss53 - 分支 index.html - mixintu\n7729454 - 迷心兔, 2 hours ago : Initial commit\n\nAdministrator@SC-201812032148 MINGW64 /f/Git/Test/Git-Test (master)\n$ git log --pretty=format:\"%h %s\" --graph //形象化地展示你的分支，合并历史\n* 3c7c951 第二：master - 分支 test.txt - mixintu\n*   b3b98a2 Merge branch 'iss53'\n|\\\n| * d285c00 第一：iss53 - 分支 index.html - mixintu\n* | 54c19fc 第二：hotfix - 分支 index.html - mixintu\n|/\n* 7729454 Initial commit\n\nAdministrator@SC-201812032148 MINGW64 /f/Git/Test/Git-Test (master)\n$ git log --since=2.weeks //列出最近两周的所有提交\ncommit 3c7c951c186a7cd847c2a8116be381e081f169f2 (HEAD -> master)\nAuthor: mixintu <1578766422@qq.com>\nDate:   Thu Mar 5 21:30:11 2020 +0800\n\n    第二：master - 分支 test.txt - mixintu\n\ncommit b3b98a21b8776d7c189ea4aa4e21229aff9c1c98 (origin/master, origin/HEAD)\nMerge: 54c19fc d285c00\nAuthor: mixintu <1578766422@qq.com>\nDate:   Thu Mar 5 21:17:41 2020 +0800\n\n    Merge branch 'iss53'\n\ncommit 54c19fc8ed3a64308c659678e5da6e3a0d92b50d\nAuthor: mixintu <1578766422@qq.com>\nDate:   Thu Mar 5 21:17:00 2020 +0800\n\n    第二：hotfix - 分支 index.html - mixintu\n\ncommit d285c002529627fbce824019856f7e91d347dbf0\nAuthor: mixintu <1578766422@qq.com>\nDate:   Thu Mar 5 21:15:18 2020 +0800\n\n    第一：iss53 - 分支 index.html - mixintu\n\ncommit 772945490bf54082ebdc64f3eb55a42cb131a3d3\nAuthor: 迷心兔 <44187263+mixintu@users.noreply.github.com>\nDate:   Thu Mar 5 19:51:04 2020 +0800\n\n    Initial commit\n\nAdministrator@SC-201812032148 MINGW64 /f/Git/Test/Git-Test (master)\n$ git log --pretty=\"%h - %s\" --author=gitster --since=\"2008-10-01\" \\ //查看2008年10月期间\n>    --before=\"2008-11-01\" --no-merges -- t/\n\nAdministrator@SC-201812032148 MINGW64 /f/Git/Test/Git-Test (master)\n$ git log --oneline --decorate --graph --all //输出你的提交历史、各个分支的指向以及项目的分支分叉情况\n* 3c7c951 (HEAD -> master) 第二：master - 分支 test.txt - mixintu\n| * d7fdc1e (testing) 第一：testing - 分支 test.txt - mixintu\n|/\n*   b3b98a2 (origin/master, origin/HEAD) Merge branch 'iss53'\n|\\\n| * d285c00 第一：iss53 - 分支 index.html - mixintu\n* | 54c19fc 第二：hotfix - 分支 index.html - mixintu\n|/\n* 7729454 Initial commit\n\n\n```","categories":["Git"]},{"title":"Git-版本回退","url":"/2020/03/05/Git-版本回退/","content":"\n# git 版本回退\n```\nAdministrator@SC-201812032148 MINGW64 /f/Git/Test/Git-Test (master)\n$ git reflog\n3c7c951 (HEAD -> master) HEAD@{0}: commit: 第二：master - 分支 test.txt - mixintu\nb3b98a2 (origin/master, origin/HEAD) HEAD@{1}: checkout: moving from testing to master\nd7fdc1e (testing) HEAD@{2}: commit: 第一：testing - 分支 test.txt - mixintu\nb3b98a2 (origin/master, origin/HEAD) HEAD@{3}: checkout: moving from master to testing\nb3b98a2 (origin/master, origin/HEAD) HEAD@{4}: merge iss53: Merge made by the 'recursive' strategy.\n54c19fc HEAD@{5}: merge hotfix: Fast-forward\n7729454 HEAD@{6}: checkout: moving from hotfix to master\n54c19fc HEAD@{7}: commit: 第二：hotfix - 分支 index.html - mixintu\n7729454 HEAD@{8}: checkout: moving from master to hotfix\n7729454 HEAD@{9}: checkout: moving from iss53 to master\nd285c00 HEAD@{10}: commit: 第一：iss53 - 分支 index.html - mixintu\n7729454 HEAD@{11}: checkout: moving from master to iss53\n7729454 HEAD@{12}: clone: from https://github.com/mixintu/Git-Test.git\n\nAdministrator@SC-201812032148 MINGW64 /f/Git/Test/Git-Test (master)\n$ git reset --hard b3b98a2\nHEAD is now at b3b98a2 Merge branch 'iss53'\n\nAdministrator@SC-201812032148 MINGW64 /f/Git/Test/Git-Test (master)\n$ git reflog\nb3b98a2 (HEAD -> master, origin/master, origin/HEAD) HEAD@{0}: reset: moving to b3b98a2\n3c7c951 HEAD@{1}: commit: 第二：master - 分支 test.txt - mixintu\nb3b98a2 (HEAD -> master, origin/master, origin/HEAD) HEAD@{2}: checkout: moving from testing to master\nd7fdc1e (testing) HEAD@{3}: commit: 第一：testing - 分支 test.txt - mixintu\nb3b98a2 (HEAD -> master, origin/master, origin/HEAD) HEAD@{4}: checkout: moving from master to testing\nb3b98a2 (HEAD -> master, origin/master, origin/HEAD) HEAD@{5}: merge iss53: Merge made by the 'recursive' strategy.\n54c19fc HEAD@{6}: merge hotfix: Fast-forward\n7729454 HEAD@{7}: checkout: moving from hotfix to master\n54c19fc HEAD@{8}: commit: 第二：hotfix - 分支 index.html - mixintu\n7729454 HEAD@{9}: checkout: moving from master to hotfix\n7729454 HEAD@{10}: checkout: moving from iss53 to master\nd285c00 HEAD@{11}: commit: 第一：iss53 - 分支 index.html - mixintu\n7729454 HEAD@{12}: checkout: moving from master to iss53\n7729454 HEAD@{13}: clone: from https://github.com/mixintu/Git-Test.git\n\nAdministrator@SC-201812032148 MINGW64 /f/Git/Test/Git-Test (master)\n$ git reset --hard 7729454\nHEAD is now at 7729454 Initial commit\n\nAdministrator@SC-201812032148 MINGW64 /f/Git/Test/Git-Test (master)\n$ git reflog\n7729454 (HEAD -> master) HEAD@{0}: reset: moving to 7729454\nb3b98a2 (origin/master, origin/HEAD) HEAD@{1}: reset: moving to b3b98a2\n3c7c951 HEAD@{2}: commit: 第二：master - 分支 test.txt - mixintu\nb3b98a2 (origin/master, origin/HEAD) HEAD@{3}: checkout: moving from testing to master\nd7fdc1e (testing) HEAD@{4}: commit: 第一：testing - 分支 test.txt - mixintu\nb3b98a2 (origin/master, origin/HEAD) HEAD@{5}: checkout: moving from master to testing\nb3b98a2 (origin/master, origin/HEAD) HEAD@{6}: merge iss53: Merge made by the 'recursive' strategy.\n54c19fc HEAD@{7}: merge hotfix: Fast-forward\n7729454 (HEAD -> master) HEAD@{8}: checkout: moving from hotfix to master\n54c19fc HEAD@{9}: commit: 第二：hotfix - 分支 index.html - mixintu\n7729454 (HEAD -> master) HEAD@{10}: checkout: moving from master to hotfix\n7729454 (HEAD -> master) HEAD@{11}: checkout: moving from iss53 to master\nd285c00 HEAD@{12}: commit: 第一：iss53 - 分支 index.html - mixintu\n7729454 (HEAD -> master) HEAD@{13}: checkout: moving from master to iss53\n7729454 (HEAD -> master) HEAD@{14}: clone: from https://github.com/mixintu/Git-Test.git\n\n\n```","categories":["Git"]},{"title":"Git-基础学习","url":"/2020/03/04/Git-基础学习/","content":"\n\n迷心兔\n\nVCS：版本控制系统 【保存所有修订版本，缺点：一不小心会写错文件或者覆盖意想外的文件】\nCVCS：集中化的版本控制系统 【让在不同系统上的开发者协同工作，缺点：整个项目的历史记录被保存在单一位置】\nDVCS：分布式版本控制系统 【解决以上两个问题】\n\n# $ git init\n初始化仓库\n\n# $ git status\n检查当前文件状态\n\n# $ git status -s\n1.新添加的未跟踪文件前面有 ?? 标记\n2.新添加到暂存区中的文件前面有 A 标记\n3.修改过的文件前面有 M 标记\n\n\n# $ echo 'My Project' > Test.txt\n创建一个新的 Test.txt文件,你将看到一个新的未跟踪文件\n\n# $ git add Test.txt\n跟踪新的 Test.txt文件\n\n# $ git add .\n跟踪新的 多个文件\n\n# $ git clone git@github.com:mixintu/Test.git 【mixintu：自定义名】\n克隆现有的仓库\n\n# $ cat .gitignore\n忽略文件\n\n# $ git diff\n查看尚未暂存的文件更新了哪些部分 【默认是第一个修改的文件】\n\n# $ git diff --staged\n查看已暂存的-将要添加到下次提交里的内容 【最后一个修改的文件】\n\n# $ git diff --cached\n查看已经暂存起来的变化 【已修改的全部文件】\n\n# $ git commit -m \"提交更新的说明\"\n提交更新\n\n# git push origin master // $ git push [remote-name] [branch-name]\n上传至远程仓库\n\n# $ git rm Test.txt\n移除文件\n\n# $ git rm --cached Test.txt\n移除文件,但仍然希望保留在当前工作目录中\n\n# $ git rm log/\\*.log\n此命令删除 log/ 目录下扩展名为 .log 的所有文件\n\n# $ git rm \\*~\n该命令为删除以 ~ 结尾的所有文件\n\n# $ git mv Test02.txt Test03.txt\n\n# $ git log\n查看提交历史\n\n# $ git log -p -2\n该选项除了显示基本信息之外，还附带了一次commit的变化。\n当进行代码审查，或者快速浏览某个搭档提交的commit所带来的变化的时候，这个参数就非常有用了\n\n# $ git log --stat\n选项在每次提交的下面列出的所有被修改过的文件，\n有多少文件被修改了以及被修改过的文件的某些行被删除或添加了。\n在每次提交的最后还有一个总结。\n\n# $ git log --pretty=format:\"%h - %an, %ar : %s\"\n使用不同于默认格式的方式展示提交历史\n\n# $ git log --pretty=format:\"%h %s\" --graph\n合并历史\n\n# $ git log --since=2.weeks\n列出最近两周的所有提交历史\n\n# $ git reset HEAD Test05.txt\n取消暂存的文件\n\n# $ git remote -v\n仓库服务器的默认名字 和 其对应的 URL\n\n# $ git remote add pd git@github.com:mixintu/Test.git\n添加远程仓库的连接名\n\n# $ git fetch pb  // $ git fetch [remote-name]\n从pd远程仓库中抓取与拉取\n\n# $ git remote show origin // $ git remote show [remote-name]\n查看某个远程仓库\n\n# $ git remote rename pb paul\n远程仓库的重命名\n\n# $ git remote rm paul\n远程仓库的移除\n\n# $ git tag -a v1.2 -m \"说明：version 1.2\"\n附注标签:是存储在 Git 数据库中的一个完整对象。 \n\t\t它们是可以被校验的；\n\t\t其中包含打标签者的名字、电子邮件地址、日期时间；\n\t\t还有一个标签信息；\n\t\t并且可以使用 GNU Privacy Guard （GPG）签名与验证。\n\t\t通常建议创建附注标签，这样你可以拥有以上所有信息。\n\n# $ git tag v1.4-lw\n轻量标签:只是想用一个临时的标签，或者因为某些原因不想要保存那些信息，轻量标签也是可用的。\n\n# $ git show v1.2\n显示出提交信息\n\n# $ git tag -a v1.1.0 708654d\n后期打标签\n\n# $ git push origin v1.2\n推送一个【未推送的本地标签】到远程\n\n# git push origin --tags\n推送全部【未推送的本地标签】到远程\n\n# $ git tag -d v1.2\n删除本地标签\n\n# $ git push origin :refs/tags/v1.2\n删除本地标签了，在执行该句，删除远程tag\n\n# $ git branch testing\n创建一个名为testing的分支\n\n# $ git log --oneline --decorate\n查看各个分支当前所指的对象\n\n# $ git checkout testing\n切换到testing分支上\n\n# $ git log --oneline --decorate --graph --all\n输出你的提交历史、各个分支的指向以及项目的分支分叉情况\n\n# $ git checkout -b iss53\n创建一个名为iss53的分支，并切换到此分支上\n\n# $ git checkout -b hotfix\n创建一个名为hotfix的分支，并切换到此分支上\n\n# $ git merge hotfix\n合并分支\n\n# $ git branch -D hotfix\n删除hotfix分支\n\n# $ git mergetool\n合并失败时，适当打开图形化工具来解决冲突\n\n# $ git branch --merged\n查看当前分支 和 别的分支有过合并\n\n# $ git branch --no-merged\n查看当前分支 没有 和别的分支有过合并\n\n# git ls-remote [remote] \n来显式地获得远程引用的完整列表\n\n# $ git commit --amend\n撤消操作：\n\t\t1.提交后发现提交信息写错了\n\t\t2.提交后发现漏掉了几个文件没有添加\n\t\t3.提交后发现忘记了暂存某些需要的修改-取消暂存的文件\n\t\t4.提交后发现工作目录中已修改的文件-撤消对文件的修改\n\n\n\n\n# $ git push origin --delete testing\n删除远程分支","categories":["Git"]},{"title":"thinkphp6案例-简单博客","url":"/2020/03/03/thinkphp6案例-简单博客/","content":"\n\n\n\n\nThinkPHP 6.0\n===============\n\n> 运行环境要求PHP7.1+。\n\nThinkPHPV6.0版本由[亿速云](https://www.yisu.com/)独家赞助发布。\n\n## 主要新特性\n\n* 采用`PHP7`强类型（严格模式）\n* 支持更多的`PSR`规范\n* 原生多应用支持\n* 更强大和易用的查询\n* 全新的事件系统\n* 模型事件和数据库事件统一纳入事件系统\n* 模板引擎分离出核心\n* 内部功能中间件化\n* SESSION/Cookie机制改进\n* 对Swoole以及协程支持改进\n* 对IDE更加友好\n* 统一和精简大量用法\n\n## 安装\n\n~~~\ncomposer create-project topthink/think tp 6.0.*\n~~~\n\n如果需要更新框架使用\n~~~\ncomposer update topthink/framework\n~~~\n\n## 效果展示\n![前端-前台](前端-前台.png)\n![前段-后台](前段-后台.png)\n![后端-数据库](后端-数据库.png)\n\n## 文档\n\n[完全开发手册](https://www.kancloud.cn/manual/thinkphp6_0/content)\n\n## 参与开发\n\n请参阅 [ThinkPHP 核心框架包](https://github.com/top-think/framework)。\n\n## 版权信息\n\nThinkPHP遵循Apache2开源协议发布，并提供免费使用。\n\n本项目包含的第三方源码和二进制文件之版权信息另行标注。\n\n版权所有Copyright © 2006-2020 by ThinkPHP (http://thinkphp.cn)\n\nAll rights reserved。\n\nThinkPHP® 商标和著作权所有者为上海顶想信息科技有限公司。\n\n更多细节参阅 [LICENSE.txt](LICENSE.txt)\n","categories":["PHP"]},{"title":"phpthink6学习搭建博客","url":"/2020/02/25/phpthink6学习搭建博客/","content":"\n\n\n\n\n```\n学习链接：https://www.php.cn/php/php-tp6-databases.html\n\n```\n\n![前端-前台](前端-前台.png)\n\n![前段-后台](前段-后台.png)\n\n![后端-数据库](后端-数据库.png)","categories":["PHP"]},{"title":"幽冥地府的排名榜/幽冥地府的排名榜","url":"/2020/02/03/幽冥地府的排名榜/幽冥地府的排名榜/","content":"```html\n<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<meta charset=\"utf-8\">\n\t\t<title></title>\n\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\t\t<link rel=\"stylesheet\" href=\"//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css\">\n\t\t<link rel=\"stylesheet\" href=\"http://www.youmingdifu.com/layuiadmin/layui/css/layui.css\" media=\"all\">\n\t\t<link rel=\"stylesheet\" href=\"http://www.youmingdifu.com/layuiadmin/style/admin.css\" media=\"all\">\n\t\t<style>\n\t\t\t#accordion-resizer {\n\t\t\t\tpadding: 10px;\n\t\t\t\twidth: 820px;\n\t\t\t\theight: 600px;\n\t\t\t}\n\n\t\t\tbody {\n\t\t\t\tfont-family: Arial, Helvetica, sans-serif;\n\t\t\t}\n\n\t\t\ttable {\n\t\t\t\tfont-size: 1em;\n\t\t\t}\n\n\t\t\t.ui-draggable,\n\t\t\t.ui-droppable {\n\t\t\t\tbackground-position: top;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<div id=\"accordion-resizer\" class=\"ui-widget-content\">\n\t\t\t<div id=\"accordion\">\n\t\t\t\t<h3>天机榜</h3>\n\t\t\t\t<div class=\"layui-card-body\">\n\t\t\t\t\t<table class=\"layui-table layuiadmin-page-table\" lay-skin=\"line\">\n\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t<tr>\n\n\t\t\t\t\t\t\t\t<th>姓名</th>\n\t\t\t\t\t\t\t\t<th>寿命</th>\n\t\t\t\t\t\t\t\t<th>种族</th>\n\t\t\t\t\t\t\t\t<th>身份</th>\n\t\t\t\t\t\t\t\t<th>官职</th>\n\t\t\t\t\t\t\t\t<th>罪恶</th>\n\t\t\t\t\t\t\t\t<th>福禄</th>\n\t\t\t\t\t\t\t\t<th>前世身陨</th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t<tbody id=\"tjl\">\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td><a href=\"personalpage?pn=逝去了曾经\"><span class=\"first\">逝去了曾经</span></a></td>\n\t\t\t\t\t\t\t\t<td><span>56 天</span></td>\n\t\t\t\t\t\t\t\t<td><span>鬼王</span></td>\n\t\t\t\t\t\t\t\t<td><span>虚无之主</span></td>\n\t\t\t\t\t\t\t\t<td><span>阎王</span></td>\n\t\t\t\t\t\t\t\t<td><span class=\"first\">625</span></td>\n\t\t\t\t\t\t\t\t<td><span class=\"third\">49836</span></td>\n\t\t\t\t\t\t\t\t<td><span>寿终正寝</span></td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td><a href=\"personalpage?pn=死于精尽人亡\"><span class=\"second\">死于精尽人亡</span></a></td>\n\t\t\t\t\t\t\t\t<td><span>81 天</span></td>\n\t\t\t\t\t\t\t\t<td><span>鬼帝</span></td>\n\t\t\t\t\t\t\t\t<td><span>鸿蒙之主</span></td>\n\t\t\t\t\t\t\t\t<td><span>阎王</span></td>\n\t\t\t\t\t\t\t\t<td><span class=\"first\">0</span></td>\n\t\t\t\t\t\t\t\t<td><span class=\"third\">43143</span></td>\n\t\t\t\t\t\t\t\t<td><span>寿终正寝</span></td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td><a href=\"personalpage?pn=吾乃万界冥王\"><span class=\"third\">吾乃万界冥王</span></a></td>\n\t\t\t\t\t\t\t\t<td><span>49 天</span></td>\n\t\t\t\t\t\t\t\t<td><span>魔尊</span></td>\n\t\t\t\t\t\t\t\t<td><span>极道本源至尊</span></td>\n\t\t\t\t\t\t\t\t<td><span>阎王</span></td>\n\t\t\t\t\t\t\t\t<td><span class=\"first\">500</span></td>\n\t\t\t\t\t\t\t\t<td><span class=\"third\">25980</span></td>\n\t\t\t\t\t\t\t\t<td><span>阎王审判</span></td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td><a href=\"personalpage?pn=九幽元辰丶\"><span>九幽元辰丶</span></a></td>\n\t\t\t\t\t\t\t\t<td><span>22 天</span></td>\n\t\t\t\t\t\t\t\t<td><span>妖</span></td>\n\t\t\t\t\t\t\t\t<td><span>无</span></td>\n\t\t\t\t\t\t\t\t<td><span>阎王</span></td>\n\t\t\t\t\t\t\t\t<td><span class=\"first\">100</span></td>\n\t\t\t\t\t\t\t\t<td><span class=\"third\">23508</span></td>\n\t\t\t\t\t\t\t\t<td><span>寿终正寝</span></td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td><a href=\"personalpage?pn=魔鬼在人间\"><span>魔鬼在人间</span></a></td>\n\t\t\t\t\t\t\t\t<td><span>22 天</span></td>\n\t\t\t\t\t\t\t\t<td><span>阿修罗</span></td>\n\t\t\t\t\t\t\t\t<td><span>无</span></td>\n\t\t\t\t\t\t\t\t<td><span>阎王</span></td>\n\t\t\t\t\t\t\t\t<td><span class=\"first\">100</span></td>\n\t\t\t\t\t\t\t\t<td><span class=\"third\">19601</span></td>\n\t\t\t\t\t\t\t\t<td><span>寿终正寝</span></td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td><a href=\"personalpage?pn=谛听听不听\"><span>谛听听不听</span></a></td>\n\t\t\t\t\t\t\t\t<td><span>31 天</span></td>\n\t\t\t\t\t\t\t\t<td><span>鬼王</span></td>\n\t\t\t\t\t\t\t\t<td><span>鸿钧老祖</span></td>\n\t\t\t\t\t\t\t\t<td><span>阎王</span></td>\n\t\t\t\t\t\t\t\t<td><span class=\"first\">300</span></td>\n\t\t\t\t\t\t\t\t<td><span class=\"third\">19592</span></td>\n\t\t\t\t\t\t\t\t<td><span>寿终正寝</span></td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td><a href=\"personalpage?pn=吾乃万界之主\"><span>吾乃万界之主</span></a></td>\n\t\t\t\t\t\t\t\t<td><span>35 天</span></td>\n\t\t\t\t\t\t\t\t<td><span>人</span></td>\n\t\t\t\t\t\t\t\t<td><span>无</span></td>\n\t\t\t\t\t\t\t\t<td><span>阎王</span></td>\n\t\t\t\t\t\t\t\t<td><span class=\"first\">600</span></td>\n\t\t\t\t\t\t\t\t<td><span class=\"third\">19323</span></td>\n\t\t\t\t\t\t\t\t<td><span>阎王审判</span></td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td><a href=\"personalpage?pn=九尾林恣睢\"><span>九尾林恣睢</span></a></td>\n\t\t\t\t\t\t\t\t<td><span>14 天</span></td>\n\t\t\t\t\t\t\t\t<td><span>阿修罗</span></td>\n\t\t\t\t\t\t\t\t<td><span>无</span></td>\n\t\t\t\t\t\t\t\t<td><span>阎王</span></td>\n\t\t\t\t\t\t\t\t<td><span class=\"first\">0</span></td>\n\t\t\t\t\t\t\t\t<td><span class=\"third\">19807</span></td>\n\t\t\t\t\t\t\t\t<td><span>渡劫失败</span></td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td><a href=\"personalpage?pn=图书馆馆长\"><span>图书馆馆长</span></a></td>\n\t\t\t\t\t\t\t\t<td><span>16 天</span></td>\n\t\t\t\t\t\t\t\t<td><span>鬼</span></td>\n\t\t\t\t\t\t\t\t<td><span>无</span></td>\n\t\t\t\t\t\t\t\t<td><span>阎王</span></td>\n\t\t\t\t\t\t\t\t<td><span class=\"first\">0</span></td>\n\t\t\t\t\t\t\t\t<td><span class=\"third\">18495</span></td>\n\t\t\t\t\t\t\t\t<td><span>寿终正寝</span></td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td><a href=\"personalpage?pn=吾大道永生\"><span>吾大道永生</span></a></td>\n\t\t\t\t\t\t\t\t<td><span>28 天</span></td>\n\t\t\t\t\t\t\t\t<td><span>圣人</span></td>\n\t\t\t\t\t\t\t\t<td><span>永恒至尊</span></td>\n\t\t\t\t\t\t\t\t<td><span>阎王</span></td>\n\t\t\t\t\t\t\t\t<td><span class=\"first\">0</span></td>\n\t\t\t\t\t\t\t\t<td><span class=\"third\">16196</span></td>\n\t\t\t\t\t\t\t\t<td><span>寿终正寝</span></td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</table>\n\t\t\t\t</div>\n\n\t\t\t\t<h3>忘川河捕鱼榜</h3>\n\t\t\t\t<div class=\"layui-card-body\">\n\t\t\t\t\t<table class=\"layui-table layuiadmin-page-table\" lay-skin=\"line\">\n\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t<tr>\n\n\t\t\t\t\t\t\t\t<th>姓名</th>\n\t\t\t\t\t\t\t\t<th>寿命</th>\n\t\t\t\t\t\t\t\t<th>种族</th>\n\t\t\t\t\t\t\t\t<th>身份</th>\n\t\t\t\t\t\t\t\t<th>官职</th>\n\t\t\t\t\t\t\t\t<th>罪恶</th>\n\t\t\t\t\t\t\t\t<th>福禄</th>\n\t\t\t\t\t\t\t\t<th>捕鱼分数</th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t<tbody id=\"byl\">\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td><a href=\"personalpage?pn=死于精尽人亡\"><span class=\"first\">死于精尽人亡</span></a></td>\n\t\t\t\t\t\t\t\t<td><span>81 天</span></td>\n\t\t\t\t\t\t\t\t<td><span>鬼帝</span></td>\n\t\t\t\t\t\t\t\t<td><span>鸿蒙之主</span></td>\n\t\t\t\t\t\t\t\t<td><span>阎王</span></td>\n\t\t\t\t\t\t\t\t<td><span class=\"first\">0</span></td>\n\t\t\t\t\t\t\t\t<td><span class=\"third\">43143</span></td>\n\t\t\t\t\t\t\t\t<td><span>3846577</span></td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td><a href=\"personalpage?pn=逝去了曾经\"><span class=\"second\">逝去了曾经</span></a></td>\n\t\t\t\t\t\t\t\t<td><span>55 天</span></td>\n\t\t\t\t\t\t\t\t<td><span>鬼王</span></td>\n\t\t\t\t\t\t\t\t<td><span>虚无之主</span></td>\n\t\t\t\t\t\t\t\t<td><span>阎王</span></td>\n\t\t\t\t\t\t\t\t<td><span class=\"first\">625</span></td>\n\t\t\t\t\t\t\t\t<td><span class=\"third\">48386</span></td>\n\t\t\t\t\t\t\t\t<td><span>3632144</span></td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td><a href=\"personalpage?pn=魔鬼在人间\"><span class=\"third\">魔鬼在人间</span></a></td>\n\t\t\t\t\t\t\t\t<td><span>22 天</span></td>\n\t\t\t\t\t\t\t\t<td><span>阿修罗</span></td>\n\t\t\t\t\t\t\t\t<td><span>无</span></td>\n\t\t\t\t\t\t\t\t<td><span>阎王</span></td>\n\t\t\t\t\t\t\t\t<td><span class=\"first\">100</span></td>\n\t\t\t\t\t\t\t\t<td><span class=\"third\">19551</span></td>\n\t\t\t\t\t\t\t\t<td><span>2675164</span></td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td><a href=\"personalpage?pn=九尾林恣睢\"><span>九尾林恣睢</span></a></td>\n\t\t\t\t\t\t\t\t<td><span>14 天</span></td>\n\t\t\t\t\t\t\t\t<td><span>阿修罗</span></td>\n\t\t\t\t\t\t\t\t<td><span>无</span></td>\n\t\t\t\t\t\t\t\t<td><span>阎王</span></td>\n\t\t\t\t\t\t\t\t<td><span class=\"first\">0</span></td>\n\t\t\t\t\t\t\t\t<td><span class=\"third\">19807</span></td>\n\t\t\t\t\t\t\t\t<td><span>2349545</span></td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td><a href=\"personalpage?pn=谛听听不听\"><span>谛听听不听</span></a></td>\n\t\t\t\t\t\t\t\t<td><span>31 天</span></td>\n\t\t\t\t\t\t\t\t<td><span>鬼王</span></td>\n\t\t\t\t\t\t\t\t<td><span>鸿钧老祖</span></td>\n\t\t\t\t\t\t\t\t<td><span>阎王</span></td>\n\t\t\t\t\t\t\t\t<td><span class=\"first\">300</span></td>\n\t\t\t\t\t\t\t\t<td><span class=\"third\">19592</span></td>\n\t\t\t\t\t\t\t\t<td><span>2248422</span></td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td><a href=\"personalpage?pn=九幽元辰丶\"><span>九幽元辰丶</span></a></td>\n\t\t\t\t\t\t\t\t<td><span>22 天</span></td>\n\t\t\t\t\t\t\t\t<td><span>妖</span></td>\n\t\t\t\t\t\t\t\t<td><span>无</span></td>\n\t\t\t\t\t\t\t\t<td><span>阎王</span></td>\n\t\t\t\t\t\t\t\t<td><span class=\"first\">100</span></td>\n\t\t\t\t\t\t\t\t<td><span class=\"third\">23508</span></td>\n\t\t\t\t\t\t\t\t<td><span>1778039</span></td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td><a href=\"personalpage?pn=吾乃万界冥王\"><span>吾乃万界冥王</span></a></td>\n\t\t\t\t\t\t\t\t<td><span>49 天</span></td>\n\t\t\t\t\t\t\t\t<td><span>魔尊</span></td>\n\t\t\t\t\t\t\t\t<td><span>极道本源至尊</span></td>\n\t\t\t\t\t\t\t\t<td><span>阎王</span></td>\n\t\t\t\t\t\t\t\t<td><span class=\"first\">500</span></td>\n\t\t\t\t\t\t\t\t<td><span class=\"third\">25980</span></td>\n\t\t\t\t\t\t\t\t<td><span>1649947</span></td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td><a href=\"personalpage?pn=图书馆馆长\"><span>图书馆馆长</span></a></td>\n\t\t\t\t\t\t\t\t<td><span>16 天</span></td>\n\t\t\t\t\t\t\t\t<td><span>鬼</span></td>\n\t\t\t\t\t\t\t\t<td><span>无</span></td>\n\t\t\t\t\t\t\t\t<td><span>阎王</span></td>\n\t\t\t\t\t\t\t\t<td><span class=\"first\">0</span></td>\n\t\t\t\t\t\t\t\t<td><span class=\"third\">18495</span></td>\n\t\t\t\t\t\t\t\t<td><span>1477978</span></td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td><a href=\"personalpage?pn=清竹染墨色\"><span>清竹染墨色</span></a></td>\n\t\t\t\t\t\t\t\t<td><span>0 天</span></td>\n\t\t\t\t\t\t\t\t<td><span>魔</span></td>\n\t\t\t\t\t\t\t\t<td><span>无</span></td>\n\t\t\t\t\t\t\t\t<td><span>阎王</span></td>\n\t\t\t\t\t\t\t\t<td><span class=\"first\">170</span></td>\n\t\t\t\t\t\t\t\t<td><span class=\"third\">11098</span></td>\n\t\t\t\t\t\t\t\t<td><span>1474066</span></td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td><a href=\"personalpage?pn=我就是阎罗\"><span>我就是阎罗</span></a></td>\n\t\t\t\t\t\t\t\t<td><span>18 天</span></td>\n\t\t\t\t\t\t\t\t<td><span>人</span></td>\n\t\t\t\t\t\t\t\t<td><span>无</span></td>\n\t\t\t\t\t\t\t\t<td><span>阎王</span></td>\n\t\t\t\t\t\t\t\t<td><span class=\"first\">0</span></td>\n\t\t\t\t\t\t\t\t<td><span class=\"third\">11577</span></td>\n\t\t\t\t\t\t\t\t<td><span>1243872</span></td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</table>\n\t\t\t\t</div>\n\t\t\t\t<h3>富可敌国</h3>\n\t\t\t\t<div class=\"layui-card-body\">\n\t\t\t\t\t<table class=\"layui-table layuiadmin-page-table\" lay-skin=\"line\">\n\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t<tr>\n\n\t\t\t\t\t\t\t\t<th>姓名</th>\n\t\t\t\t\t\t\t\t<th>寿命</th>\n\t\t\t\t\t\t\t\t<th>种族</th>\n\t\t\t\t\t\t\t\t<th>身份</th>\n\t\t\t\t\t\t\t\t<th>官职</th>\n\t\t\t\t\t\t\t\t<th>罪恶</th>\n\t\t\t\t\t\t\t\t<th>福禄</th>\n\t\t\t\t\t\t\t\t<th>冥币</th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t<tbody id=\"mbl\">\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td><a href=\"personalpage?pn=泰山府君黄飞虎\"><span class=\"first\">泰山府君黄飞虎</span></a></td>\n\t\t\t\t\t\t\t\t<td><span>15 天</span></td>\n\t\t\t\t\t\t\t\t<td><span>鬼</span></td>\n\t\t\t\t\t\t\t\t<td><span>泰山府君</span></td>\n\t\t\t\t\t\t\t\t<td><span>阎王</span></td>\n\t\t\t\t\t\t\t\t<td><span class=\"first\">100</span></td>\n\t\t\t\t\t\t\t\t<td><span class=\"third\">8317</span></td>\n\t\t\t\t\t\t\t\t<td><span>4058.6</span></td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td><a href=\"personalpage?pn=宇宙第一大帅逼\"><span class=\"second\">宇宙第一大帅逼</span></a></td>\n\t\t\t\t\t\t\t\t<td><span>8 天</span></td>\n\t\t\t\t\t\t\t\t<td><span>魔</span></td>\n\t\t\t\t\t\t\t\t<td><span>无</span></td>\n\t\t\t\t\t\t\t\t<td><span>狱罗刹</span></td>\n\t\t\t\t\t\t\t\t<td><span class=\"first\">500</span></td>\n\t\t\t\t\t\t\t\t<td><span class=\"third\">2707</span></td>\n\t\t\t\t\t\t\t\t<td><span>3959</span></td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td><a href=\"personalpage?pn=我是阿达啊\"><span class=\"third\">我是阿达啊</span></a></td>\n\t\t\t\t\t\t\t\t<td><span>0 天</span></td>\n\t\t\t\t\t\t\t\t<td><span>妖</span></td>\n\t\t\t\t\t\t\t\t<td><span>无</span></td>\n\t\t\t\t\t\t\t\t<td><span>无</span></td>\n\t\t\t\t\t\t\t\t<td><span class=\"first\">100</span></td>\n\t\t\t\t\t\t\t\t<td><span class=\"third\">200</span></td>\n\t\t\t\t\t\t\t\t<td><span>2057.5</span></td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td><a href=\"personalpage?pn=魔鬼在人间\"><span>魔鬼在人间</span></a></td>\n\t\t\t\t\t\t\t\t<td><span>22 天</span></td>\n\t\t\t\t\t\t\t\t<td><span>阿修罗</span></td>\n\t\t\t\t\t\t\t\t<td><span>无</span></td>\n\t\t\t\t\t\t\t\t<td><span>阎王</span></td>\n\t\t\t\t\t\t\t\t<td><span class=\"first\">100</span></td>\n\t\t\t\t\t\t\t\t<td><span class=\"third\">19551</span></td>\n\t\t\t\t\t\t\t\t<td><span>1229.4</span></td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td><a href=\"personalpage?pn=网络第一公子\"><span>网络第一公子</span></a></td>\n\t\t\t\t\t\t\t\t<td><span>80 天</span></td>\n\t\t\t\t\t\t\t\t<td><span>人皇</span></td>\n\t\t\t\t\t\t\t\t<td><span>新郎官</span></td>\n\t\t\t\t\t\t\t\t<td><span>阎王</span></td>\n\t\t\t\t\t\t\t\t<td><span class=\"first\">310</span></td>\n\t\t\t\t\t\t\t\t<td><span class=\"third\">8711</span></td>\n\t\t\t\t\t\t\t\t<td><span>918</span></td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td><a href=\"personalpage?pn=醒客绝不孤独\"><span>醒客绝不孤独</span></a></td>\n\t\t\t\t\t\t\t\t<td><span>14 天</span></td>\n\t\t\t\t\t\t\t\t<td><span>魔</span></td>\n\t\t\t\t\t\t\t\t<td><span>佛</span></td>\n\t\t\t\t\t\t\t\t<td><span>阎王</span></td>\n\t\t\t\t\t\t\t\t<td><span class=\"first\">0</span></td>\n\t\t\t\t\t\t\t\t<td><span class=\"third\">12080</span></td>\n\t\t\t\t\t\t\t\t<td><span>869.1</span></td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td><a href=\"personalpage?pn=北冥鲲鹏王\"><span>北冥鲲鹏王</span></a></td>\n\t\t\t\t\t\t\t\t<td><span>3 天</span></td>\n\t\t\t\t\t\t\t\t<td><span>妖</span></td>\n\t\t\t\t\t\t\t\t<td><span>无</span></td>\n\t\t\t\t\t\t\t\t<td><span>狱罗刹</span></td>\n\t\t\t\t\t\t\t\t<td><span class=\"first\">500</span></td>\n\t\t\t\t\t\t\t\t<td><span class=\"third\">4000</span></td>\n\t\t\t\t\t\t\t\t<td><span>713.2</span></td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td><a href=\"personalpage?pn=其名为冥鲲\"><span>其名为冥鲲</span></a></td>\n\t\t\t\t\t\t\t\t<td><span>30 天</span></td>\n\t\t\t\t\t\t\t\t<td><span>人</span></td>\n\t\t\t\t\t\t\t\t<td><span>无</span></td>\n\t\t\t\t\t\t\t\t<td><span>阎王</span></td>\n\t\t\t\t\t\t\t\t<td><span class=\"first\">500</span></td>\n\t\t\t\t\t\t\t\t<td><span class=\"third\">10318</span></td>\n\t\t\t\t\t\t\t\t<td><span>634.6</span></td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td><a href=\"personalpage?pn=一个孤魂野鬼\"><span>一个孤魂野鬼</span></a></td>\n\t\t\t\t\t\t\t\t<td><span>0 天</span></td>\n\t\t\t\t\t\t\t\t<td><span>鬼</span></td>\n\t\t\t\t\t\t\t\t<td><span>无</span></td>\n\t\t\t\t\t\t\t\t<td><span>狱罗刹</span></td>\n\t\t\t\t\t\t\t\t<td><span class=\"first\">300</span></td>\n\t\t\t\t\t\t\t\t<td><span class=\"third\">2608</span></td>\n\t\t\t\t\t\t\t\t<td><span>480</span></td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td><a href=\"personalpage?pn=逝去了曾经\"><span>逝去了曾经</span></a></td>\n\t\t\t\t\t\t\t\t<td><span>55 天</span></td>\n\t\t\t\t\t\t\t\t<td><span>鬼王</span></td>\n\t\t\t\t\t\t\t\t<td><span>虚无之主</span></td>\n\t\t\t\t\t\t\t\t<td><span>阎王</span></td>\n\t\t\t\t\t\t\t\t<td><span class=\"first\">625</span></td>\n\t\t\t\t\t\t\t\t<td><span class=\"third\">48386</span></td>\n\t\t\t\t\t\t\t\t<td><span>406.4</span></td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</table>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</body>\n\t<script src=\"https://code.jquery.com/jquery-1.12.4.js\"></script>\n\t<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.js\"></script>\n\t<script>\n\t\t// jQuery 入口函数:\n\t\t$(document).ready(function() {\n\t\t\t// accordion:创建折叠菜单\n\t\t\t$(\"#accordion\").accordion({\n\t\t\t\t// 每个面板的高度,fill:基于父元素的高度\n\t\t\t\theightStyle: \"fill\"\n\t\t\t});\n\t\t\t// resizable:可调整尺寸小部件\n\t\t\t$(\"#accordion-resizer\").resizable({\n\t\t\t\tminHeight: 540,\n\t\t\t\tminWidth: 800,\n\t\t\t\tresize: function() {\n\t\t\t\t\t// 重新计算accordion(折叠)的高度\n\t\t\t\t\t$(\"#accordion\").accordion(\"refresh\");\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t</script>\n</html>\n\n```\n![png](幽冥地府排名榜.png)"},{"title":"jQuery 常用方法手册大全/jQuery遍历函数","url":"/2020/01/28/jQuery 常用方法手册大全/jQuery遍历函数/","content":"# <span id =\"add\">add事件方法</span>\n> 功能：遍历（选择器表达式）将元素添加到匹配元素的集合中\n> 语法：.add(selector)\n> 参数：\n>> selector 字符串值，表示查找供添加到匹配元素集合的元素的选择器表达式。\n```html\n<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title>菜鸟教程(runoob.com)</title>\n    <script src=\"https://cdn.staticfile.org/jquery/1.10.2/jquery.min.js\">\n    </script>\n    <script>\n      $(document).ready(function() {\n        $(\"h1\").add(\"p\").add(\"span\").css(\"background-color\", \"yellow\");\n      });\n    </script>\n  </head>\n  <body>\n    <h1>欢迎</h1>\n    <p>一个P元素。</p>\n    <p>另一个P元素。</p>\n    <span>一个span元素。</span>\n    <span>一个span元素。</span><br><br>\n    <div>本示例为现有的H1元素添加相同的CSS样式为p和span元素。</div>\n  </body>\n</html>\n\n\n\n```\n> 功能：遍历（选择器表达式）将元素添加到匹配元素的集合中\n> 语法：.add(elements)\n> 参数：\n>> elements 添加到匹配元素集合的一个或多个元素。\n```html\n<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title>菜鸟教程(runoob.com)</title>\n    <script src=\"https://cdn.staticfile.org/jquery/1.10.2/jquery.min.js\">\n    </script>\n    <script>\n      $(document).ready(function() {\n        $(\"p\").add(document.getElementsByTagName(\"span\")[0]).css(\"background-color\", \"yellow\");\n      });\n    </script>\n\n  </head>\n  <body>\n    <h1>欢迎</h1>\n    <p>一个P元素。</p>\n    <p>另一个P元素。</p>\n    <span>一个span元素。</span>\n    <span>一个span元素。</span><br><br>\n    <div>本示例为第一个span元素（下标0），添加与现有的P元素相同的CSS样式。</div>\n\n  </body>\n</html>\n\n```\n> 功能：遍历（选择器表达式）将元素添加到匹配元素的集合中\n> 语法：.add(html)\n> 参数：\n>> html 添加到匹配元素集合的 HTML 片段。\n```html\n<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title>菜鸟教程(runoob.com)</title>\n    <script src=\"https://cdn.staticfile.org/jquery/1.10.2/jquery.min.js\">\n    </script>\n    <script>\n      $(document).ready(function() {\n        $(\"button\").click(function() {\n          $(\"p\").add(\"<br><span>一个新的span元素。</span>\").appendTo(\"p\");\n        });\n      });\n    </script>\n\n  </head>\n  <body>\n    <button>添加一个span元素</button>\n    <p>一个P元素。</p>\n\n  </body>\n</html>\n\n```\n\n\n\n# <span id =\"filter\">filter事件方法</span>\n> 功能：遍历（选择器表达式）的过滤器\n> 语法：.filter(selector)\n> 参数：\n>> selector：\t字符串值，包含供匹配当前元素集合的选择器表达式。\n```html\n<!DOCTYPE html>\n<html>\n<head>\n  <style>\n  div { width:60px; height:60px;\n        margin:5px; float:left;\n        border:2px white solid; }\n  </style>\n  <script type=\"text/javascript\" src=\"/jquery/jquery.js\"></script>\n</head>\n\n<body>\n  <div></div>\n\n  <div class=\"middle\"></div>\n  <div class=\"middle\"></div>\n  <div class=\"middle\"></div>\n  <div class=\"middle\"></div>\n\n  <div></div>\n\n<script>\n  $(\"div\").css(\"background\", \"#c8ebcc\")\n    .filter(\".middle\")\n    .css(\"border-color\", \"red\");\n</script>\n\n</body>\n</html>\n\n\n\n```\n\n\n# <span id =\"contents\">contents事件方法</span>\n> 功能： 遍历\n> 语法：\n> 参数：\n>> \n```html\n\n<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<script type=\"text/javascript\" src=\"js/w3school/jquery.js\"></script>\n\t</head>\n\t<body>\n\t\t<p>Hello <a href=\"http://myapple.com.cn/\">Apple</a>, how are you doing?</p>\n\t\t<script>\n\t\t\t$(\"p\").contents().filter(function() {\n\t\t\t\t// 不匹配元素类型为元素的过滤器\n\t\t\t\treturn this.nodeType != 1;\n\t\t\t}).wrap(\"<b/>\");\n\t\t</script>\n\t</body>\n</html>\n\n\n```\n"},{"title":"jQuery 常用方法手册大全/jQuery效果函数","url":"/2020/01/27/jQuery 常用方法手册大全/jQuery效果函数/","content":"# <span id =\"tmp\"></span>\n```html\n\n<html>\n<head>\n<script type=\"text/javascript\" src=\"js/w3school/jquery.js\"></script>\n<script type=\"text/javascript\"> \n$(document).ready(function(){\n  $(\"#start\").click(function(){\n  \t//animate():对被选元素应用“自定义”的动画\n    $(\"#box\").animate({height:300},\"slow\");\n    $(\"#box\").animate({width:300},\"slow\");\n    //queue():显示被选元素的排队函数\n    $(\"#box\").queue(function () {\n      $(this).css(\"background-color\",\"red\");  \n      //dequeue():运行被选元素的下一个排队函数\n      $(this).dequeue();\n    });\n    $(\"#box\").animate({height:100},\"slow\");\n    $(\"#box\").animate({width:100},\"slow\");\n  });\n  $(\"#stop\").click(function(){\n  \t//clearQueue():对被选元素移除所有排队的函数（仍未运行的）\n    $(\"#box\").clearQueue();\n  });\n});\n</script>\n</head>\n<body>\n\n<p><button id=\"start\">Start Animation</button><button id=\"stop\">Stop Animation</button></p>\n<div id=\"box\" style=\"background:#98bf21;height:100px;width:100px;position:relative\">\n</div>\n</body>\n</html>\n\n\n\n\n\n\n```\n"},{"title":"jQuery 常用方法手册大全/jQuery 常用方法手册大全","url":"/2020/01/23/jQuery 常用方法手册大全/jQuery 常用方法手册大全/","content":"# jQuery 事件\n>> click()\t触发、或将函数绑定到指定元素的 click 事件\n>> dblclick()\t触发、或将函数绑定到指定元素的 double click 事件\n>> error()\t触发、或将函数绑定到指定元素的 error 事件\n>> event.isDefaultPrevented()\t返回 event 对象上是否调用了 event.preventDefault()。\n>> event.pageX\t相对于文档左边缘的鼠标位置。\n>> event.pageY\t相对于文档上边缘的鼠标位置。\n>> event.preventDefault()\t阻止事件的默认动作。\n>> event.result\t包含由被指定事件触发的事件处理器返回的最后一个值。\n>> event.target\t触发该事件的 DOM 元素。\n>> event.timeStamp\t该属性返回从 1970 年 1 月 1 日到事件发生时的毫秒数。\n>> event.type\t描述事件的类型。\n>> event.which\t指示按了哪个键或按钮。\n>> focus()\t触发、或将函数绑定到指定元素的 focus 事件\n>> keydown()\t触发、或将函数绑定到指定元素的 key down 事件\n>> keypress()\t触发、或将函数绑定到指定元素的 key press 事件\n>> keyup()\t触发、或将函数绑定到指定元素的 key up 事件\n>> load()\t触发、或将函数绑定到指定元素的 load 事件\n>> mousedown()\t触发、或将函数绑定到指定元素的 mouse down 事件\n>> mouseenter()\t触发、或将函数绑定到指定元素的 mouse enter 事件\n>> mouseleave()\t触发、或将函数绑定到指定元素的 mouse leave 事件\n>> mousemove()\t触发、或将函数绑定到指定元素的 mouse move 事件\n>> mouseout()\t触发、或将函数绑定到指定元素的 mouse out 事件\n>> mouseover()\t触发、或将函数绑定到指定元素的 mouse over 事件\n>> mouseup()\t触发、或将函数绑定到指定元素的 mouse up 事件\n>> ready()\t文档就绪事件（当 HTML 文档就绪可用时）\n>> resize()\t触发、或将函数绑定到指定元素的 resize 事件\n>> scroll()\t触发、或将函数绑定到指定元素的 scroll 事件\n>> select()\t触发、或将函数绑定到指定元素的 select 事件\n>> submit()\t触发、或将函数绑定到指定元素的 submit 事件\n>> unload()\t触发、或将函数绑定到指定元素的 unload 事件\n>> [bind()：为元素添加事件或将事件和函数绑定到元素上](/2020/01/23/jQuery%20%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95%E6%89%8B%E5%86%8C%E5%A4%A7%E5%85%A8/jQuery%E4%BA%8B%E4%BB%B6%E5%8F%82%E8%80%83/#bind_1)\n>> [unbind()：移除被选元素的事件处理程序](/2020/01/23/jQuery%20%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95%E6%89%8B%E5%86%8C%E5%A4%A7%E5%85%A8/jQuery%E4%BA%8B%E4%BB%B6%E5%8F%82%E8%80%83/#unbind)\n>> [blur()：当元素失去焦点时会触发](/2020/01/23/jQuery%20%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95%E6%89%8B%E5%86%8C%E5%A4%A7%E5%85%A8/jQuery%E4%BA%8B%E4%BB%B6%E5%8F%82%E8%80%83/#blur)\n>> [change()：在某个域被使用或改变时会触发或将函数绑定到change事件](/2020/01/23/jQuery%20%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95%E6%89%8B%E5%86%8C%E5%A4%A7%E5%85%A8/jQuery%E4%BA%8B%E4%BB%B6%E5%8F%82%E8%80%83/#change_1)\n>> [one()：根据某元素为子元素添加一个或多个事件【每个事件只能执行一次】](/2020/01/23/jQuery%20%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95%E6%89%8B%E5%86%8C%E5%A4%A7%E5%85%A8/jQuery%E4%BA%8B%E4%BB%B6%E5%8F%82%E8%80%83/#one)\n>> [delegate()：根据某元素为子元素添加一个或多个事件【每个事件可以多次执行】](/2020/01/23/jQuery%20%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95%E6%89%8B%E5%86%8C%E5%A4%A7%E5%85%A8/jQuery%E4%BA%8B%E4%BB%B6%E5%8F%82%E8%80%83/#delegate)\n>> [undelegate()：删除由 delegate() 方法添加的一个或多个事件处理程序](/2020/01/23/jQuery%20%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95%E6%89%8B%E5%86%8C%E5%A4%A7%E5%85%A8/jQuery%E4%BA%8B%E4%BB%B6%E5%8F%82%E8%80%83/#undelegate)\n>> [live()：添加或附加一个或多个事件](/2020/01/23/jQuery%20%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95%E6%89%8B%E5%86%8C%E5%A4%A7%E5%85%A8/jQuery%E4%BA%8B%E4%BB%B6%E5%8F%82%E8%80%83/#live)\n>> [die()：移除所有通过live()方法向指定元素添加的一个或多个事件](/2020/01/23/jQuery%20%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95%E6%89%8B%E5%86%8C%E5%A4%A7%E5%85%A8/jQuery%E4%BA%8B%E4%BB%B6%E5%8F%82%E8%80%83/#die)\n>> [toggle()：默认是执行hide()与show() 方法，也可以自定义事件函数](/2020/01/23/jQuery%20%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95%E6%89%8B%E5%86%8C%E5%A4%A7%E5%85%A8/jQuery%E4%BA%8B%E4%BB%B6%E5%8F%82%E8%80%83/#toggle_1)\n>> [trigger()：触发被选元素的指定事件类型【有冒泡事件】](/2020/01/23/jQuery%20%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95%E6%89%8B%E5%86%8C%E5%A4%A7%E5%85%A8/jQuery%E4%BA%8B%E4%BB%B6%E5%8F%82%E8%80%83/#trigger)\n>> [triggerHandler()：触发被选元素的指定事件类型【不会产生事件冒泡】](/2020/01/23/jQuery%20%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95%E6%89%8B%E5%86%8C%E5%A4%A7%E5%85%A8/jQuery%E4%BA%8B%E4%BB%B6%E5%8F%82%E8%80%83/#triggerHandler)\n\n# jQuery 效果\n>> [animate()\t对被选元素应用“自定义”的动画](https://www.w3school.com.cn/jquery/effect_animate.asp)\n>> [clearQueue()\t对被选元素移除所有排队的函数（仍未运行的）](/2020/01/27/jQuery%20%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95%E6%89%8B%E5%86%8C%E5%A4%A7%E5%85%A8/jQuery%E6%95%88%E6%9E%9C%E5%87%BD%E6%95%B0/#tmp)\n>> [delay()\t对被选元素的所有排队函数（仍未运行）设置延迟](https://www.runoob.com/jquery/eff-delay.html)\n>> [queue()\t显示被选元素的排队函数](/2020/01/27/jQuery%20%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95%E6%89%8B%E5%86%8C%E5%A4%A7%E5%85%A8/jQuery%E6%95%88%E6%9E%9C%E5%87%BD%E6%95%B0/#tmp)\n>> [dequeue()\t运行被选元素的下一个排队函数](/2020/01/27/jQuery%20%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95%E6%89%8B%E5%86%8C%E5%A4%A7%E5%85%A8/jQuery%E6%95%88%E6%9E%9C%E5%87%BD%E6%95%B0/#tmp)\n>> [fadeIn()\t逐渐改变被选元素的不透明度，从隐藏到可见](https://www.w3school.com.cn/jquery/effect_fadein.asp)\n>> [fadeOut()\t逐渐改变被选元素的不透明度，从可见到隐藏](https://www.w3school.com.cn/jquery/effect_fadeout.asp)\n>> [fadeTo()\t把被选元素逐渐改变至给定的不透明度](https://www.w3school.com.cn/jquery/effect_fadeto.asp)\n>> [slideUp()\t通过调整高度来滑动隐藏被选元素](https://www.w3school.com.cn/jquery/effect_slideup.asp)\n>> [slideDown()\t通过调整高度来滑动显示被选元素](https://www.w3school.com.cn/jquery/effect_slidedown.asp)\n>> [slideToggle()\t对被选元素进行滑动隐藏和滑动显示的切换](https://www.w3school.com.cn/jquery/effect_slidetoggle.asp)\n>> [stop()\t停止在被选元素上运行动画](https://www.w3school.com.cn/jquery/effect_stop.asp)\n>> [hide()\t隐藏被选的元素](https://www.w3school.com.cn/jquery/effect_hide.asp)\n>> [show()\t显示被选的元素](https://www.w3school.com.cn/jquery/effect_show.asp)\n>> [toggle()\t对被选元素进行隐藏和显示的切换](/2020/01/23/jQuery%20%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95%E6%89%8B%E5%86%8C%E5%A4%A7%E5%85%A8/jQuery%E4%BA%8B%E4%BB%B6%E5%8F%82%E8%80%83/#toggle_1)\n# jQuery 文档操作\n>> [addClass()\t向匹配的元素添加指定的类名。](https://www.w3school.com.cn/jquery/attributes_addclass.asp)\n>> [after()\t在匹配的元素之后插入内容。](https://www.w3school.com.cn/jquery/manipulation_after.asp)\n>> [append()\t向匹配元素集合中的每个元素结尾插入由参数指定的内容。](https://www.w3school.com.cn/jquery/manipulation_append.asp)\n>> [appendTo()\t向目标结尾插入匹配元素集合中的每个元素。](https://www.w3school.com.cn/jquery/manipulation_appendto.asp)\n>> [attr()\t设置或返回匹配元素的属性和值。](https://www.w3school.com.cn/jquery/attributes_attr.asp)\n>> [before()\t在每个匹配的元素之前插入内容。](w3school.com.cn/jquery/manipulation_before.asp)\n>> [clone()\t创建匹配元素集合的副本。](https://www.w3school.com.cn/jquery/manipulation_clone.asp)\n>> [detach()\t从 DOM 中移除匹配元素集合。](https://www.w3school.com.cn/jquery/manipulation_detach.asp)\n>> [empty()\t删除匹配的元素集合中所有的子节点。](https://www.w3school.com.cn/jquery/manipulation_empty.asp)\n>> hasClass()\t检查匹配的元素是否拥有指定的类。\n>> [html()\t设置或返回匹配的元素集合中的 HTML 内容。](https://www.w3school.com.cn/jquery/manipulation_html.asp)\n>> [insertAfter()\t把匹配的元素插入到另一个指定的元素集合的后面。](https://www.w3school.com.cn/jquery/manipulation_insertafter.asp)\n>> [insertBefore()\t把匹配的元素插入到另一个指定的元素集合的前面。](https://www.w3school.com.cn/jquery/manipulation_insertbefore.asp)\n>> [prepend()\t向匹配元素集合中的每个元素开头插入由参数指定的内容。](https://www.w3school.com.cn/jquery/manipulation_prepend.asp)\n>> [prependTo()\t向目标开头插入匹配元素集合中的每个元素。](https://www.w3school.com.cn/jquery/manipulation_perpendto.asp)\n>> [remove()\t移除所有匹配的元素。](https://www.w3school.com.cn/jquery/manipulation_remove.asp)\n>> [removeAttr()\t从所有匹配的元素中移除指定的属性。](https://www.w3school.com.cn/jquery/attributes_removeattr.asp)\n>> [removeClass()\t从所有匹配的元素中删除全部或者指定的类。](https://www.w3school.com.cn/jquery/attributes_removeclass.asp)\n>> [replaceAll()\t用匹配的元素替换所有匹配到的元素。](https://www.w3school.com.cn/tiy/t.asp?f=jquery_manipulation_replaceall)\n>> [replaceWith()\t用新内容替换匹配的元素。](https://www.w3school.com.cn/jquery/manipulation_replacewith.asp)\n>> [text()\t设置或返回匹配元素的内容。](https://www.w3school.com.cn/jquery/manipulation_text.asp)\n>> [toggleClass()\t从匹配的元素中添加或删除一个类。](https://www.w3school.com.cn/jquery/attributes_toggleclass.asp)\n>> [unwrap()\t移除并替换指定元素的父元素。](https://www.w3school.com.cn/jquery/manipulation_unwrap.asp)\n>> [val()\t设置或返回匹配元素的值。](https://www.w3school.com.cn/jquery/attributes_val.asp)\n>> [wrap()\t把匹配的元素用指定的内容或元素包裹起来。](https://www.w3school.com.cn/jquery/manipulation_wrap.asp)\n>> [wrapAll()\t把所有匹配的元素用指定的内容或元素包裹起来。](https://www.w3school.com.cn/jquery/manipulation_wrapall.asp)\n>> [wrapinner()\t将每一个匹配的元素的子内容用指定的内容或元素包裹起来。](https://www.w3school.com.cn/jquery/manipulation_wrapinner.asp)\n# jQuery CSS 操作\n>> [css()\t设置或返回匹配元素的样式属性。](https://www.w3school.com.cn/jquery/css_css.asp)\n>> [height()\t设置或返回匹配元素的高度。](https://www.w3school.com.cn/jquery/css_height.asp)\n>> [offset()\t返回第一个匹配元素相对于文档的位置。](https://www.w3school.com.cn/jquery/css_offset.asp)\n>> [offsetParent()\t返回最近的定位祖先元素。](https://www.w3school.com.cn/jquery/css_offsetparent.asp)\n>> [position()\t返回第一个匹配元素相对于父元素的位置。](https://www.w3school.com.cn/jquery/css_position.asp)\n>> [scrollLeft()\t设置或返回匹配元素相对滚动条左侧的偏移。](https://www.w3school.com.cn/jquery/css_scrollleft.asp)\n>> [scrollTop()\t设置或返回匹配元素相对滚动条顶部的偏移。](https://www.w3school.com.cn/tiy/t.asp?f=jquery_css_scrolltop_set)\n>> [width()\t设置或返回匹配元素的宽度。](https://www.w3school.com.cn/jquery/css_width.asp)\n# [jQuery Ajax ->难点](https://www.w3school.com.cn/jquery/jquery_ref_ajax.asp)\n>> .ajax()\t执行异步 HTTP (Ajax) 请求。\n>> .ajaxComplete()\t当 Ajax 请求完成时注册要调用的处理程序。这是一个 Ajax 事件。\n>> .ajaxError()\t当 Ajax 请求完成且出现错误时注册要调用的处理程序。这是一个 Ajax 事件。\n>> .ajaxSend()\t在 Ajax 请求发送之前显示一条消息。\n>> .ajaxSetup()\t设置将来的 Ajax 请求的默认值。\n>> .ajaxStart()\t当首个 Ajax 请求完成开始时注册要调用的处理程序。这是一个 Ajax 事件。\n>> .ajaxStop()\t当所有 Ajax 请求完成时注册要调用的处理程序。这是一个 Ajax 事件。\n>> .ajaxSuccess()\t当 Ajax 请求成功完成时显示一条消息。\n>> .get()\t使用 HTTP GET 请求从服务器加载数据。\n>> .getJSON()\t使用 HTTP GET 请求从服务器加载 JSON 编码数据。\n>> .getScript()\t使用 HTTP GET 请求从服务器加载 JavaScript 文件，然后执行该文件。\n>> .load()\t从服务器加载数据，然后把返回到 HTML 放入匹配元素。\n>> .param()\t创建数组或对象的序列化表示，适合在 URL 查询字符串或 Ajax 请求中使用。\n>> .post()\t使用 HTTP POST 请求从服务器加载数据。\n>> .serialize()\t将表单内容序列化为字符串。\n>> .serializeArray()\t序列化表单元素，返回 JSON 数据结构数据。\n# jQuery 遍历\n>> [.add()\t遍历（选择器表达式）将元素添加到匹配元素的集合中](/2020/01/28/jQuery%20%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95%E6%89%8B%E5%86%8C%E5%A4%A7%E5%85%A8/jQuery%E9%81%8D%E5%8E%86%E5%87%BD%E6%95%B0/#add)\n>> [.andSelf()\t把堆栈中之前的元素集添加到当前集合中。(包括查找条件的元素)](https://www.w3school.com.cn/jquery/traversing_andSelf.asp)\n>> [.children()\t遍历所有子元素。](https://www.w3school.com.cn/jquery/traversing_children.asp)\n>> [.contents()\t遍历所有子元素的文本和注释节点。](https://www.w3school.com.cn/jquery/traversing_children.asp)\n>> [.find()\t遍历所有子元素,通过选择器、jQuery 对象或元素来筛选](https://www.w3school.com.cn/jquery/traversing_find.asp)\n>> [.each()\t遍历jQuery对象，为每个匹配的元素执行一个函数](https://www.w3school.com.cn/jquery/traversing_each.asp)\n>> [.end()\t结束当前链中的最新过滤操作，并将匹配的元素集返回其先前状态。](https://api.jquery.com/?s=end)\n>> [.eq()\t按照索引查找元素](https://www.w3school.com.cn/jquery/traversing_eq.asp)\n>> [.filter()\t遍历（选择器表达式）的过滤器](/2020/01/28/jQuery%20%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95%E6%89%8B%E5%86%8C%E5%A4%A7%E5%85%A8/jQuery%E9%81%8D%E5%8E%86%E5%87%BD%E6%95%B0/#filter)\n>> [.first()\t遍历第一个元素](https://www.w3school.com.cn/jquery/traversing_first.asp)\n>> [.has()\t检测某个元素是否在另一个元素中](https://www.w3school.com.cn/jquery/traversing_has.asp)\n>> .is()\t根据选择器检查当前匹配元素集合，如果存在至少一个匹配元素，则返回 true。\n>> [.last()\t将匹配元素集合缩减为集合中的最后一个元素。](https://www.w3school.com.cn/jquery/traversing_last.asp)\n>> [.map()\t把当前匹配集合中的每个元素传递给函数，产生包含返回值的新 jQuery 对象。](https://www.w3school.com.cn/jquery/traversing_map.asp)\n>> [.next()\t获得匹配元素集合中每个元素紧邻的同辈元素。](https://www.w3school.com.cn/jquery/traversing_next.asp)\n>> [.nextAll()\t获得匹配元素集合中每个元素之后的所有同辈元素，由选择器进行筛选（可选）。](https://www.w3school.com.cn/jquery/traversing_nextall.asp)\n>> [.nextUntil()\t获得每个元素之后所有的同辈元素，直到遇到匹配选择器的元素为止。](https://www.w3school.com.cn/jquery/traversing_nextuntil.asp)\n>> [.not()\t从匹配元素集合中删除元素。](https://www.w3school.com.cn/jquery/traversing_not.asp)\n>> [.offsetParent()\t获得被定位的最近祖先元素](https://www.w3school.com.cn/jquery/traversing_offsetparent.asp)\n>> .closest()\t遍历当前元素和祖先元素，从中选取一个（默认当前元素）。\n>> [.parent()\t从父元素开始，获得当前匹配元素集合中每个元素的父元素，由选择器筛选（可选）。](https://www.w3school.com.cn/jquery/traversing_parent.asp)\n>> [.parents()\t获得当前匹配元素集合中每个元素的祖先元素，由选择器筛选（可选）。](https://www.w3school.com.cn/jquery/traversing_parents.asp)\n>> [.parentsUntil()\t获得当前匹配元素集合中每个元素的祖先元素，直到遇到匹配选择器的元素为止。](https://www.w3school.com.cn/jquery/traversing_parentsuntil.asp)\n>> [.prev()\t获得匹配元素集合中每个元素紧邻的前一个同辈元素，由选择器筛选（可选）。](https://www.w3school.com.cn/jquery/traversing_prev.asp)\n>> [.prevAll()\t获得匹配元素集合中每个元素之前的所有同辈元素，由选择器进行筛选（可选）。](https://www.w3school.com.cn/jquery/traversing_prevall.asp)\n>> [.prevUntil()\t获得每个元素之前所有的同辈元素，直到遇到匹配选择器的元素为止。](https://www.w3school.com.cn/jquery/traversing_prevuntil.asp)\n>> [.siblings()\t获得匹配元素集合中所有元素的同辈元素，由选择器筛选（可选）。](https://www.w3school.com.cn/jquery/traversing_siblings.asp)\n>> [.slice()\t将匹配元素集合缩减为指定范围的子集。](https://www.w3school.com.cn/jquery/traversing_slice.asp)\n# jQuery 数据\n>> [.data()\t存储与指定元素相关的任意数据。](https://www.w3school.com.cn/jquery/data_data.asp)\n>> [.hasData()\t存储与匹配元素相关的任意数据。](https://www.w3school.com.cn/jquery/data_hasdata.asp)\n>> [.removeData()\t移除之前存放的数据。](https://www.w3school.com.cn/jquery/data_removedata.asp)\n# jQuery DOM 元素\n>> [.get()\t获得由选择器指定的 DOM 元素。](https://www.w3school.com.cn/jquery/dom_element_methods_get.asp)\n>> [.index()\t返回指定元素相对于其他指定元素的 index 位置。](https://www.w3school.com.cn/jquery/dom_element_methods_index.asp)\n>> [.size()\t返回被 jQuery 选择器匹配的元素的数量。](https://www.w3school.com.cn/jquery/dom_element_methods_size.asp)\n>> [.toArray()\t以数组的形式返回 jQuery 选择器匹配的元素。](https://www.w3school.com.cn/jquery/dom_element_methods_toarray.asp)\n# jQuery 核心\n>> jQuery()\t接受一个字符串，其中包含了用于匹配元素集合的 CSS 选择器。\n>> [.noConflict()\t运行这个函数将变量 $ 的控制权让渡给第一个实现它的那个库。](https://www.w3school.com.cn/jquery/core_noconflict.asp)\n# jQuery 属性\n>> [context\t在版本 1.10 中被弃用。包含传递给 jQuery() 的原始上下文。](https://www.w3school.com.cn/jquery/prop_context.asp)\n>> jquery\t包含 jQuery 版本号。\n>> [jQuery.fx.interval\t改变以毫秒计的动画速率。](https://www.w3school.com.cn/jquery/prop_jquery_fx_interval.asp)\n>> [jQuery.fx.off\t全局禁用/启用所有动画。](https://www.w3school.com.cn/jquery/prop_jquery_fx_off.asp)\n>> [jQuery.support\t表示不同浏览器特性或漏洞的属性集合（用于 jQuery 内部使用）。](https://www.w3school.com.cn/jquery/prop_jquery_support.asp)\n>> [length\t包含 jQuery 对象中的元素数目。](https://www.w3school.com.cn/jquery/prop_length.asp)\n"},{"title":"jQuery 常用方法手册大全/jQuery事件参考","url":"/2020/01/23/jQuery 常用方法手册大全/jQuery事件参考/","content":"# <span id =\"bind_1\">bind事件方法</span>\n> 功能：为元素添加事件【语法一】\n> 语法：$(selector).bind(event,data,function)\n> 参数：\n>>\tevent：一个或多个事件\n>>\tdata：可选。规定传递到函数的额外数据。\n>>\tfunction：必需。规定当事件发生时运行的函数。\n```html\n\n<html>\n<head>\n<script type=\"text/javascript\" src=\"js/w3school/jquery.js\"></script>\n<script type=\"text/javascript\">\n$(document).ready(function(){\n  $(\"button\").bind(\"click\",function(){\n    $(\"p\").slideToggle();\n  });\n});\n</script>\n</head>\n<body>\n<p>This is a paragraph.</p>\n<button>请点击这里</button>\n</body>\n</html>\n\n\n\n\n```\n# <span id =\"unbind\">unbind事件方法</span>\n> 功能：移除被选元素的事件处理程序\n> 语法：$(selector).unbind(event,function)\n> 参数：\n>> event：可选。规定删除元素的一个或多个事件\n>> function：可选。规定从元素的指定事件取消绑定的函数名\n```html\n<html>\n<head>\n<script type=\"text/javascript\" src=\"js/w3school/jquery.js\"></script>\n<script type=\"text/javascript\">\n$(document).ready(function(){\n  $(\"p\").click(function(){\n    $(this).slideToggle();\n  });\n  $(\"button\").click(function(){\n    $(\"p\").unbind();\n  });\n});\n</script>\n</head>\n<body>\n<p>这是一个段落。</p>\n<p>这是另一个段落。</p>\n<p>点击任何段落可以令其消失。包括本段落。</p>\n<button>删除 p 元素的事件处理器</button>\n</body>\n</html>\n\n\n\n```\n\n# <span id =\"bind_2\">bind事件方法</span>\n> 功能：将事件和函数绑定到元素上【语法二】\n> 语法：$(selector).bind(event,data,function)\n> 参数：\n>> {event:function, event:function, ...}：必需。规定事件映射，其中包含一个或多个添加到元素的事件，以及当事件发生时运行的函数。\n```html\n<html>\n<head>\n<script type=\"text/javascript\" src=\"js/w3school/jquery.js\"></script>\n<script type=\"text/javascript\">\n$(document).ready(function(){\n  $(\"button\").bind({\n    click:function(){$(\"p\").slideToggle();},\n    mouseover:function(){$(\"body\").css(\"background-color\",\"red\");},  \n    mouseout:function(){$(\"body\").css(\"background-color\",\"#FFFFFF\");}  \n  });\n});\n</script>\n</head>\n<body>\n<p>This is a paragraph.</p>\n<button>请点击这里</button>\n</body>\n</html>\n\n\n\n```\n\n# <span id =\"blur\">blur事件方法</span>\n> 功能：当元素失去焦点时会触发\n> 语法：$(selector).blur(function)\n> 参数：\n>>function：可选。规定当 blur 事件发生时运行的函数。\n```html\n\n<html>\n<head>\n<script type=\"text/javascript\" src=\"js/w3school/jquery.js\"></script>\n<script type=\"text/javascript\">\n$(document).ready(function(){\n  $(\"input\").focus(function(){\n    $(\"input\").css(\"background-color\",\"#FFFFCC\");\n  });\n  $(\"input\").blur(function(){\n    $(\"input\").css(\"background-color\",\"#D6D6FF\");\n  });\n});\n</script>\n</head>\n<body>\nEnter your name: <input type=\"text\" />\n<p>请在上面的输入域中点击，使其获得焦点，然后在输入域外面点击，使其失去焦点。</p>\n</body>\n</html>\n\n\n```\n\n# <span id =\"change\">change事件方法</span>\n> 功能：在某个域被使用或改变时会触发【语法一】\n> 语法：$(selector).change()\n> 参数：无\n>> 注意：该事件仅适用于文本域（text field），以及 textarea 和 select 元素\n```html\n\n<html>\n<head>\n<script type=\"text/javascript\" src=\"js/w3school/jquery.js\"></script>\n<script type=\"text/javascript\">\n$(document).ready(function(){\n  $(\".field\").change(function(){\n    $(this).css(\"background-color\",\"#FFFFCC\");\n  });\n  $(\"button\").click(function(){\n    $(\"input\").change();\n  });\n});\n</script>\n</head>\n<body>\n<button>激活文本域的 change 事件</button>\n<p>Enter your name: <input class=\"field\" type=\"text\" /></p>\n</body>\n</html>\n\n\n\n```\n\n# <span id =\"change\">change事件方法</span>\n> 功能：将函数绑定到 change 事件【语法二】\n> 语法：$(selector).change(function)\n> 参数：\n>> function\t可选。规定当 change 事件发生时运行的函数。\n>> 注意：该事件仅适用于文本域（text field），以及 textarea 和 select 元素\n```html\n\n<html>\n<head>\n<script type=\"text/javascript\" src=\"js/w3school/jquery.js\"></script>\n<script type=\"text/javascript\">\n$(document).ready(function(){\n  $(\".field\").change(function(){\n    $(this).css(\"background-color\",\"#FFFFCC\");\n  });\n});\n</script>\n</head>\n<body>\n<p>在某个域被使用或改变时，它会改变颜色。</p>\nEnter your name: <input class=\"field\" type=\"text\" />\n<p>Car:\n<select class=\"field\" name=\"cars\">\n<option value=\"volvo\">Volvo</option>\n<option value=\"saab\">Saab</option>\n<option value=\"fiat\">Fiat</option>\n<option value=\"audi\">Audi</option>\n</select>\n</p>\n</body>\n</html>\n\n\n```\n# <span id =\"one\">one事件方法</span>\n> 功能：根据某元素为子元素添加一个或多个事件【每个事件只能执行一次】\n> 语法：$(selector).one(event,data,function)\n> 参数：\n>> event：必需。规定添加到元素的一个或多个事件\n>> data：可选。规定传递到函数的额外数据\n>> function：必需。规定当事件发生时运行的函数。\n```html\n\n<html>\n<head>\n<script type=\"text/javascript\" src=\"js/w3school/jquery.js\"></script>\n<script type=\"text/javascript\">\n$(document).ready(function(){\n  $(\"p\").one(\"click\",function(){\n    $(this).animate({fontSize:\"+=6px\"});\n  });\n});\n</script>\n</head>\n<body>\n<p>这是一个段落。</p>\n<p>这是另一个段落。</p>\n<p>请点击 p 元素增加其内容的文本大小。每个 p 元素只会触发一次改事件。</p>\n</body>\n</html>\n\n\n```\n\n# <span id =\"delegate\">delegate事件方法</span>\n> 功能：根据某元素为子元素添加一个或多个事件【每个事件可以多次执行】\n> 语法：$(selector).delegate(childSelector,event,data,function)\n> 参数：\n>> childSelector：必需。规定要附加事件处理程序的一个或多个子元素。\n>> event：必需。规定附加到元素的一个或多个事件。\n>> data：可选。规定传递到函数的额外数据。\n>> function：必需。规定当事件发生时运行的函数。\n```html\n<html>\n<head>\n<script type=\"text/javascript\" src=\"js/w3school/jquery.js\"></script>\n<script type=\"text/javascript\">\n$(document).ready(function(){\n  $(\"div\").delegate(\"button\",\"click\",function(){\n    $(\"p\").slideToggle();\n  });\n});\n</script>\n</head>\n<body>\n<div style=\"background-color:red\">\n<p>这是一个段落。</p>\n<button>请点击这里</button>\n</div>\n\n</body>\n</html>\n\n\n\n```\n# <span id =\"undelegate\">undelegate事件方法</span>\n> 功能：删除由 delegate() 方法添加的一个或多个事件处理程序\n> 语法：$(selector).undelegate(selector,event,function)\n> 参数：\n>> selector：可选。规定需要删除事件处理程序的选择器\n>> event：可选。规定需要删除处理函数的一个或多个事件类型。\n>> function：可选。规定要删除的具体事件处理函数。\n```html\n\n<html>\n<head>\n<script type=\"text/javascript\" src=\"js/w3school/jquery.js\"></script>\n<script type=\"text/javascript\">\n$(document).ready(function(){\n  $(\"body\").delegate(\"p\",\"click\",function(){\n    $(this).slideToggle();\n  });\n  $(\"button\").click(function(){\n    $(\"body\").undelegate();\n  });\n});\n</script>\n</head>\n<body>\n<p>这是一个段落。</p>\n<p>这是另一个段落。</p>\n<p>点击任何段落可以令其消失。包括本段落。</p>\n<button>从所有元素删除由 delegate() 方法添加的事件处理器</button>\n</body>\n</html>\n\n\n```\n\n# <span id =\"live\">live事件方法</span>\n> 功能：添加或附加一个或多个事件\n> 语法：$(selector).live(event,data,function)\n> 参数：\n>> event：必需。规定附加到元素的一个或多个事件\n>> data：可选。规定传递到该函数的额外数据。\n>> function：必需。规定当事件发生时运行的函数。\n```html\n<html>\n<head>\n<script type=\"text/javascript\" src=\"js/w3school/jquery.js\"></script>\n<script type=\"text/javascript\">\n$(document).ready(function(){\n  $(\"button\").live(\"click\",function(){\n    $(\"p\").slideToggle();\n  });\n});\n</script>\n</head>\n<body>\n<p>这是一个段落。</p>\n<button>请点击这里</button>\n</body>\n</html>\n\n\n\n```\n\n# <span id =\"die\">die事件方法</span>\n> 功能：移除所有通过live()方法向指定元素添加的一个或多个事件\n> 语法：$(selector).die(event,function)\n> 参数：\n>> event：必需。规定要移除的一个或多个事件处理程序\n>> function：可选。规定要移除的特定函数\n```html\n<html>\n<head>\n<script type=\"text/javascript\" src=\"js/w3school/jquery.js\"></script>\n<script type=\"text/javascript\">\n$(document).ready(function(){\n  $(\"p\").live(\"click\",function(){\n    $(this).slideToggle();\n  });\n  $(\"button\").click(function(){\n    $(\"p\").die();\n  });\n});\n</script>\n</head>\n<body>\n<p>这是一个段落。</p>\n<p>这是另一个段落。</p>\n<p>请点击任意 p 元素，段落会消失。包括本段落。</p>\n<button>移除通过 live() 方法向 p 元素添加的事件处理程序</button>\n</body>\n</html>\n\n\n\n```\n\n\n\n# <span id =\"toggle_1\">toggle事件方法</span>\n> 功能：默认是执行hide()与show() 方法\n> 语法：$(selector).toggle(speed,callback)\n> 参数：\n>> speed：毫秒（比如 1500），\"slow\"，\"normal\"，\"fast\"\n>> callback：回调函数\n```html\n<html>\n<head>\n<script type=\"text/javascript\" src=\"js/w3school/jquery.js\"></script>\n<script type=\"text/javascript\">\n$(document).ready(function(){\n  $(\".btn1\").click(function(){\n    $(\"p\").toggle(true);\n  });\n});\n</script>\n</head>\n<body>\n<p>This is a paragraph.</p>\n<p style=\"display:none\">This is another paragraph.</p>\n<p>把 switch 参数设置为 false，可以隐藏所有段落。</p>\n<button class=\"btn1\">显示所有 p 元素</button>\n</body>\n</html>\n\n\n\n```\n\n# <span id =\"toggle_2\">toggle事件方法</span>\n> 功能：自定义事件函数\n> 语法：$(selector).toggle(function1(),function2(),functionN(),...)\n> 参数：\n>> function1()\t必需。规定当元素在每偶数次被点击时要运行的函数\n>> function2()\t必需。规定当元素在每奇数次被点击时要运行的函数\n>> functionN(),...\t可选。规定需要切换的其他函数\n```html\n<html>\n<head>\n<script type=\"text/javascript\" src=\"js/w3school/jquery.js\"></script>\n<script type=\"text/javascript\">\n$(document).ready(function(){\n  $(\"button\").toggle(function(){\n    $(\"body\").css(\"background-color\",\"green\");},\n    function(){\n    $(\"body\").css(\"background-color\",\"red\");},\n    function(){\n    $(\"body\").css(\"background-color\",\"yellow\");}\n  );\n});\n</script>\n</head>\n<body>\n<button>请点击这里，来切换不同的背景颜色</button>\n</body>\n</html>\n\n\n\n```\n\n# <span id =\"trigger\">trigger事件方法</span>\n> 功能：触发被选元素的指定事件类型【有冒泡事件】\n> 语法：$(selector).trigger(event,[param1,param2,...])\n> 参数：\n>> event：必需。规定指定元素要触发的事件\n>> [param1,param2,...]：可选。传递到事件处理程序的额外参数\n```html\n\n<html>\n<head>\n<script type=\"text/javascript\" src=\"js/w3school/jquery.js\"></script>\n<script type=\"text/javascript\">\n$(document).ready(function(){\n  $(\"input\").select(function(){\n    $(\"input\").after(\"文本被选中！\");\n  });\n  $(\"button\").click(function(){\n    $(\"input\").trigger(\"select\");\n  });\n});\n</script>\n</head>\n<body>\n<input type=\"text\" name=\"FirstName\" value=\"Hello World\" />\n<br />\n<button>激活 input 域的 select 事件</button>\n</body>\n</html>\n\n\n```\n\n# <span id =\"triggerHandler\">triggerHandler事件方法</span>\n> 功能：触发被选元素的指定事件类型【不会产生事件冒泡】\n> 语法：$(selector).triggerHandler(event,[param1,param2,...])\n> 参数：\n>> event：必需。规定指定元素要触发的事件\n>> [param1,param2,...]：可选。传递到事件处理程序的额外参数\n```html\n<html>\n<head>\n<script type=\"text/javascript\" src=\"js/w3school/jquery.js\"></script>\n<script type=\"text/javascript\">\n$(document).ready(function(){\n  $(\"input\").select(function(){\n    $(\"input\").after(\"发生 Input select 事件！\");\n  });\n  $(\"button\").click(function(){\n    $(\"input\").triggerHandler(\"select\");\n  });\n});\n</script>\n</head>\n<body>\n<input type=\"text\" name=\"FirstName\" value=\"Hello World\" />\n<br />\n<button>激活 input 域的 select 事件</button>\n<p>请注意，与 trigger() 方法不同，triggerHandler() 方法不会引起所发生事件的默认行为（文本不会被选中）。</p>\n</body>\n</html>\n\n\n\n```\n\n# <span id =\"\">事件方法</span>\n> 功能：\n> 语法：\n> 参数：\n>> \n```html\n\n\n\n```\n"},{"title":"JS验证插件","url":"/2020/01/17/JS验证插件/","content":"\n\n\n\n\n```javascript\n默认校验规则的属性值：\n\trequired: \"这是必填字段\",\n    remote: \"请修正此字段\",\n    email: \"请输入有效的电子邮件地址\",\n    url: \"请输入有效的网址\",\n    date: \"请输入有效的日期\",\n    dateISO: \"请输入有效的日期 (YYYY-MM-DD)\",\n    number: \"请输入有效的数字\",\n    digits: \"只能输入数字\",\n    creditcard: \"请输入有效的信用卡号码\",\n    equalTo: \"你的输入不相同\",\n    extension: \"请输入有效的后缀\",\n    maxlength: $.validator.format(\"最多可以输入 {0} 个字符\"),\n    minlength: $.validator.format(\"最少要输入 {0} 个字符\"),\n    rangelength: $.validator.format(\"请输入长度在 {0} 到 {1} 之间的字符串\"),\n    range: $.validator.format(\"请输入范围在 {0} 到 {1} 之间的数值\"),\n    max: $.validator.format(\"请输入不大于 {0} 的数值\"),\n    min: $.validator.format(\"请输入不小于 {0} 的数值\")\n```\n\n# 在html的内部标签添加验证属性\n```html\n<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<meta charset=\"utf-8\">\n\t\t<title>菜鸟教程(runoob.com)</title>\n\t\t<style>\n\t\t\t.error{\n\t\t\t\tcolor:red;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<form class=\"cmxform\" id=\"commentForm\" method=\"get\" action=\"\">\n\t\t\t<fieldset>\n\t\t\t\t<legend>【required:必需, minlength:最小两个字母】</legend>\n\t\t\t\t<p>\n\t\t\t\t\t<legend></legend>\n\t\t\t\t\t<label for=\"cname\">Name</label>\n\t\t\t\t\t<input id=\"cname\" name=\"name\" minlength=\"2\" type=\"text\" required>\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\t<label for=\"cemail\">E-Mail</label>\n\t\t\t\t\t<input id=\"cemail\" type=\"email\" name=\"email\" required>\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\t<label for=\"curl\">URL</label>\n\t\t\t\t\t<input id=\"curl\" type=\"url\" name=\"url\">\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\t<label for=\"ccomment\">备注</label>\n\t\t\t\t\t<textarea id=\"ccomment\" name=\"comment\" required></textarea>\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\t<input class=\"submit\" type=\"submit\" value=\"提交\">\n\t\t\t\t</p>\n\t\t\t</fieldset>\n\t\t</form>\n\t</body>\n\t<script src=\"js/jquery.js\"></script>\n\t<script src=\"js/jquery.validate.min.js\"></script>\n\t<script src=\"js/messages_zh.js\"></script>\n\t<script>\n\t\t$.validator.setDefaults({\n\t\t\tsubmitHandler: function() {\n\t\t\t\talert(\"提交事件!\");\n\t\t\t}\n\t\t});\n\t\t$().ready(function() {\n\t\t\t$(\"#commentForm\").validate();\n\t\t});\n\t</script>\n</html>\n\n\n```\n\n# 在jQuery定义Validate插件规则\n```html\n\n<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<meta charset=\"utf-8\">\n\t\t<title>菜鸟教程(runoob.com)</title>\n\t\t<style>\n\t\t\t.error{\n\t\t\tcolor:red;\n\t\t}\n\t\t</style>\n\t\t<script src=\"js/jquery.js\"></script>\n\t\t<script src=\"js/jquery.validate.min.js\"></script>\n\t\t<script src=\"js/messages_zh.js\"></script>\n\t</head>\n\t<body>\n\t\t<form class=\"cmxform\" id=\"signupForm\" method=\"get\" action=\"\">\n\t\t\t<h2 id=\"summary\"></h2>\n\t\t\t<fieldset>\n\t\t\t\t<legend>验证完整的表单</legend>\n\t\t\t\t<p>\n\t\t\t\t\t<label for=\"firstname\">名字&emsp;&emsp;</label>\n\t\t\t\t\t<input id=\"firstname\" name=\"firstname\" type=\"text\">\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\t<label for=\"lastname\">姓氏&emsp;&emsp;</label>\n\t\t\t\t\t<input id=\"lastname\" name=\"lastname\" type=\"text\">\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\t<label for=\"username\">用户名&emsp;</label>\n\t\t\t\t\t<input id=\"username\" name=\"username\" type=\"text\">\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\t<label for=\"password\">密码&emsp;&emsp;</label>\n\t\t\t\t\t<input id=\"password\" name=\"password\" type=\"password\">\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\t<label for=\"confirm_password\">验证密码</label>\n\t\t\t\t\t<input id=\"confirm_password\" name=\"confirm_password\" type=\"password\">\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\t<label for=\"email\">Email&emsp;&emsp;</label>\n\t\t\t\t\t<input id=\"email\" name=\"email\" type=\"email\">\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\t<label for=\"agree\">请同意我们的声明</label>\n\t\t\t\t\t<input type=\"checkbox\" class=\"checkbox\" id=\"agree\" name=\"agree\">\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\t<label for=\"newsletter\">我乐意接收新信息</label>\n\t\t\t\t\t<input type=\"checkbox\" class=\"checkbox\" id=\"newsletter\" name=\"newsletter\">\n\t\t\t\t</p>\n\t\t\t\t<fieldset id=\"newsletter_topics\">\n\t\t\t\t\t<legend>主题 (至少选择两个) - 注意：如果没有勾选“我乐意接收新信息”以下选项会隐藏，但我们这里作为演示让它可见</legend>\n\t\t\t\t\t<label for=\"topic_marketflash\">\n\t\t\t\t\t\t<input type=\"checkbox\" id=\"topic_marketflash\" value=\"marketflash\" name=\"topic\">\n\t\t\t\t\t\t市场闪光\n\t\t\t\t\t</label>\n\t\t\t\t\t<label for=\"topic_fuzz\">\n\t\t\t\t\t\t<input type=\"checkbox\" id=\"topic_fuzz\" value=\"fuzz\" name=\"topic\">\n\t\t\t\t\t\t最新的绒毛\n\t\t\t\t\t</label>\n\t\t\t\t\t<label for=\"topic_digester\">\n\t\t\t\t\t\t<input type=\"checkbox\" id=\"topic_digester\" value=\"digester\" name=\"topic\">\n\t\t\t\t\t\t邮件列表摘要\n\t\t\t\t\t</label>\n\t\t\t\t\t<label for=\"topic\" class=\"error\">请至少选择两个您要接收的主题。</label>\n\t\t\t\t</fieldset>\n\t\t\t\t<p>\n\t\t\t\t\t<input class=\"submit\" type=\"submit\" value=\"提交\">\n\t\t\t\t\t<input class=\"cancel\" type=\"reset\" value=\"重置\">\n\t\t\t\t</p>\n\t\t\t</fieldset>\n\t\t</form>\n\t</body>\n\t<script>\n\t\t// 验证器\n\t\t$.validator.setDefaults({\n\t\t\tsubmitHandler: function() {\n\t\t\t\talert(\"提交事件!\");\n\t\t\t},\n\t\t});\n\t\t// jQuery 入口函数:\n\t\t$(document).ready(function() {\n\t\t\tvar validator = $(\"#signupForm\").validate({\n\t\t\t\t// 验证规则\n\t\t\t\trules: {\n\t\t\t\t\tfirstname: \"required\",\n\t\t\t\t\tlastname: \"required\",\n\t\t\t\t\tusername: {\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\tminlength: 2\n\t\t\t\t\t},\n\t\t\t\t\tpassword: {\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\tminlength: 5\n\t\t\t\t\t},\n\t\t\t\t\tconfirm_password: {\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\tminlength: 5,\n\t\t\t\t\t\tequalTo: \"#password\" // 验证两个输入框的内容是否相同\n\t\t\t\t\t},\n\t\t\t\t\temail: {\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\temail: true\n\t\t\t\t\t},\n\t\t\t\t\ttopic: {\n\t\t\t\t\t\trequired: \"#newsletter:checked\", // 接收新信息\n\t\t\t\t\t\tminlength: 2\n\t\t\t\t\t},\n\t\t\t\t\tagree: \"required\",\n\n\n\t\t\t\t},\n\t\t\t\t// 友情提示消息\n\t\t\t\tmessages: {\n\t\t\t\t\tfirstname: \"请输入您的名字\",\n\t\t\t\t\tlastname: \"请输入您的姓氏\",\n\t\t\t\t\tusername: {\n\t\t\t\t\t\trequired: \"请输入用户名\",\n\t\t\t\t\t\tminlength: \"用户名必需由两个字母组成\"\n\t\t\t\t\t},\n\t\t\t\t\tpassword: {\n\t\t\t\t\t\trequired: \"请输入密码\",\n\t\t\t\t\t\tminlength: \"密码长度不能小于 5 个字母\"\n\t\t\t\t\t},\n\t\t\t\t\tconfirm_password: {\n\t\t\t\t\t\trequired: \"请输入密码\",\n\t\t\t\t\t\tminlength: \"密码长度不能小于 5 个字母\",\n\t\t\t\t\t\tequalTo: \"两次密码输入不一致\"\n\t\t\t\t\t},\n\t\t\t\t\temail: \"请输入一个正确的邮箱\",\n\t\t\t\t\tagree: \"请接受我们的声明\",\n\t\t\t\t\ttopic: \"请选择两个主题\"\n\t\t\t\t},\n\t\t\t});\n\t\t\t// 重置按钮\n\t\t\t$(\".cancel\").click(function() {\n\t\t\t\tvalidator.resetForm();\n\t\t\t});\n\t\t});\n\t</script>\n</html>\n\n\n```\n\n# 在每个输入框提示错误信息\n```html\n<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<meta charset=\"utf-8\">\n\t\t<title>菜鸟教程(runoob.com)</title>\n\t\t<style>\n\t\t\t.error{\n\t\t\t\tcolor:red;\n\t\t\t}\n\t\t</style>\n\t\t<script src=\"js/jquery.js\"></script>\n\t\t<script src=\"js/jquery.validate.min.js\"></script>\n\t\t<script src=\"js/messages_zh.js\"></script>\n\t</head>\n\t<body>\n\t\t<form method=\"get\" class=\"cmxform\" id=\"signupForm\" action=\"\">\n\t\t\t<fieldset>\n\t\t\t\t<legend>登录框</legend>\n\t\t\t\t<p>\n\t\t\t\t\t<label for=\"user\">用户名</label>\n\t\t\t\t\t<input id=\"user\" name=\"user\">\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\t<label for=\"password\">密码</label>\n\t\t\t\t\t<input id=\"password\" type=\"password\" name=\"password\">\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\t<input class=\"submit\" type=\"submit\" value=\"登陆\">\n\t\t\t\t\t<input class=\"cancel\" type=\"reset\" value=\"重置\">\n\t\t\t\t</p>\n\t\t\t</fieldset>\n\t\t</form>\n\t</body>\n\t<script>\n\t\t// 验证器\n\t\t$.validator.setDefaults({\n\t\t\tsubmitHandler: function() {\n\t\t\t\talert(\"提交事件!\");\n\t\t\t}\n\t\t});\n\t\t// jQuery 入口函数:\n\t\t$(document).ready(function() {\n\t\t\t// 提交时验证表单\n\t\t\tvar validator = $(\"#signupForm\").validate({\n\t\t\t\t// 第一种：在输入框前提示\n\t\t\t\t/*\n\t\t\t\t<label for=\"user\">用户名<span id=\"user-error\" class=\"error\"> (必需字段)</span></label>\n\t\t\t\terror参数:<span id=\"user-error\" class=\"error\">\n\t\t\t\t*/\n\t\t\t\terrorElement: \"span\", //错误元素标签（每个输入框的显示错误提示）\n\t\t\t\terrorPlacement: function(error, element) { // （错误元素标签）的放置位置\n\t\t\t\t\t$(element) // 在链接的标签内附加错误\n\t\t\t\t\t\t.closest(\"form\") //在表单中查找\n\t\t\t\t\t\t.find(\"label[for='\" + element.attr(\"id\") + \"']\") //查找对应的label标签\n\t\t\t\t\t\t.append(error);\n\t\t\t\t},\n\t\t\t\t// 第二种：在输入框后提示\n\t\t\t\t//success: function(label) {\n\t\t\t\t\t//label.text(\"ok!\").addClass(\"success\");\n\t\t\t\t//},\n\n\t\t\t\t// 验证规则\n\t\t\t\trules: {\n\t\t\t\t\tuser: {\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\tminlength: 3,\n\t\t\t\t\t},\n\t\t\t\t\tpassword: {\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\tminlength: 5,\n\t\t\t\t\t\tmaxlength: 12,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t// 友情提示消息\n\t\t\t\tmessages: {\n\t\t\t\t\tuser: {\n\t\t\t\t\t\trequired: \" (必需字段)\",\n\t\t\t\t\t\tminlength: \" (不能少于 3 个字母)\"\n\t\t\t\t\t},\n\t\t\t\t\tpassword: {\n\t\t\t\t\t\trequired: \" (必需字段)\",\n\t\t\t\t\t\tminlength: \" (字母不能少于 5 个且不能大于 12 个)\",\n\t\t\t\t\t\tmaxlength: \" (字母不能少于 5 个且不能大于 12 个)\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t});\n\t\t\t// 重置按钮\n\t\t\t$(\".cancel\").click(function() {\n\t\t\t\tvalidator.resetForm();\n\t\t\t});\n\t\t});\n\t</script>\n</html>\n\n```\n# 在jQuery中使用html里自定义的错误模板\n```html\n\n<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<meta charset=\"utf-8\">\n\t\t<title>菜鸟教程(runoob.com)</title>\n\t\t<style>\n\t\t\t.error{\n\t\t\t\tcolor:red;\n\t\t\t}\n\t\t</style>\n\t\t<script src=\"js/jquery.js\"></script>\n\t\t<script src=\"js/jquery.validate.min.js\"></script>\n\t\t<script src=\"js/messages_zh.js\"></script>\n\t</head>\n\t<body>\n\t\t<form method=\"get\" class=\"cmxform\" id=\"signupForm\" action=\"\">\n\t\t\t<fieldset>\n\t\t\t\t<legend>登录框</legend>\n\t\t\t\t<p>\n\t\t\t\t\t<label for=\"user\">用户名</label>\n\t\t\t\t\t<input id=\"user\" name=\"user\">\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\t<label for=\"password\">密码</label>\n\t\t\t\t\t<input id=\"password\" type=\"password\" name=\"password\">\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\t<input class=\"submit\" type=\"submit\" value=\"登陆\">\n\t\t\t\t\t<input class=\"cancel\" type=\"reset\" value=\"重置\">\n\t\t\t\t</p>\n\t\t\t</fieldset>\n\t\t</form>\n\t\t<!-- 错误模板 -->\n\t\t<div class=\"container\">\n\t\t\t<h4>在你提交表单时出现了以下错误，详情如下：</h4>\n\t\t\t<ol>\n\t\t\t\t<li>\n\t\t\t\t\t<!-- errorElement:label标签 -->\n\t\t\t\t\t<!-- errorClass:类属性error -->\n\t\t\t\t\t<label for=\"email\" class=\"error\">请输入邮箱地址。</label>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<label for=\"phone\" class=\"error\">请输入电话号码 ( 2 到 8 个字母)</label>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<label for=\"address\" class=\"error\">请输入地址 (至少三个字母)</label>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<label for=\"avatar\" class=\"error\">请选择图片 (png, jpg, jpeg, gif)</label>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<label for=\"cv\" class=\"error\">请选择文档 (doc, docx, txt, pdf)</label>\n\t\t\t\t</li>\n\t\t\t</ol>\n\t\t</div>\n\t</body>\n\t<script>\n\t\t// 验证器\n\t\t$.validator.setDefaults({\n\t\t\tsubmitHandler: function() {\n\t\t\t\talert(\"提交事件!\");\n\t\t\t}\n\t\t});\n\t\t// jQuery 入口函数:\n\t\t$(document).ready(function() {\n\t\t\tvar container = $('div.container');\n\t\t\t// 提交时验证表单\n\t\t\tvar validator = $(\"#signupForm\").validate({\n\t\t\t\t// 显示提交时会出现的错误类型\n\t\t\t\terrorContainer: container, //错误容器\n\t\t\t\terrorLabelContainer: $(\"ol\", container), //把错误信息统一放入错误容器\n\t\t\t\twrapper: 'li', //用li标签再把上边的 errorELement 包起来（看html）\n\t\t\t\t// 验证规则\n\t\t\t\trules: {\n\t\t\t\t\tuser: {\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\tminlength: 3,\n\t\t\t\t\t},\n\t\t\t\t\tpassword: {\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\tminlength: 5,\n\t\t\t\t\t\tmaxlength: 12,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t// 友情提示消息\n\t\t\t\tmessages: {\n\t\t\t\t\tuser: {\n\t\t\t\t\t\trequired: \" (必需字段)\",\n\t\t\t\t\t\tminlength: \" (不能少于 3 个字母)\"\n\t\t\t\t\t},\n\t\t\t\t\tpassword: {\n\t\t\t\t\t\trequired: \" (必需字段)\",\n\t\t\t\t\t\tminlength: \" (字母不能少于 5 个且不能大于 12 个)\",\n\t\t\t\t\t\tmaxlength: \" (字母不能少于 5 个且不能大于 12 个)\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t});\n\t\t\t// 重置按钮\n\t\t\t$(\".cancel\").click(function() {\n\t\t\t\tvalidator.resetForm();\n\t\t\t});\n\t\t});\n\t</script>\n</html>\n\n```\n\n# 自定义验证器\n```html\n<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<meta charset=\"utf-8\">\n\t\t<title>菜鸟教程(runoob.com)</title>\n\t\t<style>\n\t\t\t.error{\n\t\t\t\tcolor:red;\n\t\t\t}\n\t\t</style>\n\t\t<script src=\"js/jquery.js\"></script>\n\t\t<script src=\"js/jquery.validate.min.js\"></script>\n\t\t<script src=\"js/messages_zh.js\"></script>\n\t</head>\n\t<body>\n\t\t<form method=\"get\" class=\"cmxform\" id=\"signupForm\" action=\"\">\n\t\t\t<fieldset>\n\t\t\t\t<legend>登录框</legend>\n\t\t\t\t<p>\n\t\t\t\t\t<label for=\"user\">用户名</label>\n\t\t\t\t\t<input id=\"user\" name=\"user\">\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\t<label for=\"password\">密码</label>\n\t\t\t\t\t<input id=\"password\" type=\"password\" name=\"password\">\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\t<label for=\"dj\">等级</label>\n\t\t\t\t\t<input id=\"dj\" name=\"dj\">\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\t<input class=\"submit\" type=\"submit\" value=\"登陆\">\n\t\t\t\t\t<input class=\"cancel\" type=\"reset\" value=\"重置\">\n\t\t\t\t</p>\n\t\t\t</fieldset>\n\t\t</form>\n\t</body>\n\t<script>\n\t\t// 自定义验证器\n\t\t$.validator.addMethod(\n\t\t\t// 1.是添加的验证方法的名字\n\t\t\t\"af\",\n\t\t\t// 2.验证方法\n\t\t\tfunction(value, element, params) {\n\t\t\t\t/*\n\t\t\t\t@value:输入的等级\n\t\t\t\t@element:默认错误的label标签\n\t\t\t\t@params:定义的参数列表 --> [\"a\", \"f\"]\n\t\t\t\t*/\n\t\t\t\tif (value.length > 1) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (value >= params[0] && value <= params[1]) {\n\t\t\t\t\treturn true;\n\t\t\t\t} else {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\t\t\t// 3.自定义的错误提示\n\t\t\t\"必须是一个字母,且a-f\"\n\t\t);\n\t\t// 验证器\n\t\t$.validator.setDefaults({\n\t\t\tsubmitHandler: function() {\n\t\t\t\talert(\"提交事件!\");\n\t\t\t}\n\t\t});\n\t\t// jQuery 入口函数:\n\t\t$(document).ready(function() {\n\t\t\t// 提交时验证表单\n\t\t\tvar validator = $(\"#signupForm\").validate({\n\t\t\t\t// 验证规则\n\t\t\t\trules: {\n\t\t\t\t\tuser: {\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\tminlength: 3,\n\t\t\t\t\t},\n\t\t\t\t\tpassword: {\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\tminlength: 5,\n\t\t\t\t\t\tmaxlength: 12,\n\t\t\t\t\t},\n\t\t\t\t\tdj: {\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\taf: [\"a\", \"f\"],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t// 友情提示消息\n\t\t\t\tmessages: {\n\t\t\t\t\tuser: {\n\t\t\t\t\t\trequired: \" (必需字段)\",\n\t\t\t\t\t\tminlength: \" (不能少于 3 个字母)\"\n\t\t\t\t\t},\n\t\t\t\t\tpassword: {\n\t\t\t\t\t\trequired: \" (必需字段)\",\n\t\t\t\t\t\tminlength: \" (字母不能少于 5 个且不能大于 12 个)\",\n\t\t\t\t\t\tmaxlength: \" (字母不能少于 5 个且不能大于 12 个)\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t});\n\t\t\t// 重置按钮\n\t\t\t$(\".cancel\").click(function() {\n\t\t\t\tvalidator.resetForm();\n\t\t\t});\n\t\t});\n\t</script>\n</html>\n\n```\n# 一个完整的验证实例\n```html\n<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<meta charset=\"utf-8\">\n\t\t<title>在RTM小组的友好许可下，记住Milk的注册表单-jQuery Validate插件演示-</title>\n\t\t<!-- #signupform属性的表单样式表 -->\n\t\t<link rel=\"stylesheet\" href=\"https://static.runoob.com/assets/jquery-validation-1.14.0/demo/milk/milk.css\">\n\t\t<!-- 这里使用1.14版本 -->\n\t\t<script src=\"https://static.runoob.com/assets/jquery-validation-1.14.0/lib/jquery.js\"></script>\n\t\t<script src=\"js/jquery.mockjax.js\"></script>\n\t\t<script src=\"js/jquery.validate.min.js\"></script>\n\t\t<script src=\"js/messages_zh.js\"></script>\n\t</head>\n\t<body>\n\t\t<div id=\"main\">\n\t\t\t<div id=\"content\">\n\t\t\t\t<div id=\"header\">\n\t\t\t\t\t<div id=\"headerlogo\">\n\t\t\t\t\t\t<img src=\"/try/jquery/plugins/images/milk.png\" alt=\"Remember The Milk\">\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div style=\"clear: both;\">\n\t\t\t\t\t<div></div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"content\">\n\t\t\t\t\t<div id=\"signupbox\">\n\t\t\t\t\t\t<div id=\"signuptab\">\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t<li id=\"signupcurrent\"><a href=\" \">注册界面</a>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div id=\"signupwrap\">\n\t\t\t\t\t\t\t<form id=\"signupform\" autocomplete=\"off\" method=\"get\" action=\"\">\n\t\t\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t<td class=\"label\">\n\t\t\t\t\t\t\t\t\t\t\t<label id=\"lfirstname\" for=\"firstname\">您的名字</label>\n\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t<td class=\"field\">\n\t\t\t\t\t\t\t\t\t\t\t<input id=\"firstname\" name=\"firstname\" type=\"text\" value=\"\" maxlength=\"100\">\n\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t<td class=\"status\"></td>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t<td class=\"label\">\n\t\t\t\t\t\t\t\t\t\t\t<label id=\"llastname\" for=\"lastname\">您的姓氏</label>\n\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t<td class=\"field\">\n\t\t\t\t\t\t\t\t\t\t\t<input id=\"lastname\" name=\"lastname\" type=\"text\" value=\"\" maxlength=\"100\">\n\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t<td class=\"status\"></td>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t<td class=\"label\">\n\t\t\t\t\t\t\t\t\t\t\t<label id=\"lusername\" for=\"username\">用户名</label>\n\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t<td class=\"field\">\n\t\t\t\t\t\t\t\t\t\t\t<input id=\"username\" name=\"username\" type=\"text\" value=\"\" maxlength=\"50\">\n\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t<td class=\"status\"></td>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t<td class=\"label\">\n\t\t\t\t\t\t\t\t\t\t\t<label id=\"lpassword\" for=\"password\">密码</label>\n\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t<td class=\"field\">\n\t\t\t\t\t\t\t\t\t\t\t<input id=\"password\" name=\"password\" type=\"password\" maxlength=\"50\" value=\"\">\n\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t<td class=\"status\"></td>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t<td class=\"label\">\n\t\t\t\t\t\t\t\t\t\t\t<label id=\"lpassword_confirm\" for=\"password_confirm\">确认密码</label>\n\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t<td class=\"field\">\n\t\t\t\t\t\t\t\t\t\t\t<input id=\"password_confirm\" name=\"password_confirm\" type=\"password\" maxlength=\"50\" value=\"\">\n\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t<td class=\"status\"></td>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t<td class=\"label\">\n\t\t\t\t\t\t\t\t\t\t\t<label id=\"lemail\" for=\"email\">电子邮件地址</label>\n\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t<td class=\"field\">\n\t\t\t\t\t\t\t\t\t\t\t<input id=\"email\" name=\"email\" type=\"text\" value=\"\" maxlength=\"150\">\n\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t<td class=\"status\"></td>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t<td class=\"label\">\n\t\t\t\t\t\t\t\t\t\t\t<label>选择您喜欢的日期格式</label>\n\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t<td class=\"field\" colspan=\"2\" style=\"vertical-align: top; padding-top: 2px;\">\n\t\t\t\t\t\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td style=\"padding-right: 5px;\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input id=\"dateformat_eu\" name=\"dateformat\" type=\"radio\" value=\"0\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label id=\"ldateformat_eu\" for=\"dateformat_eu\">14/02/07</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td style=\"padding-left: 5px;\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input id=\"dateformat_am\" name=\"dateformat\" type=\"radio\" value=\"1\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label id=\"ldateformat_am\" for=\"dateformat_am\">02/14/07</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<!-- 存放错误信息 -->\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t<td class=\"label\">&nbsp;</td>\n\t\t\t\t\t\t\t\t\t\t<td class=\"field\" colspan=\"2\">\n\t\t\t\t\t\t\t\t\t\t\t<div id=\"termswrap\">\n\t\t\t\t\t\t\t\t\t\t\t\t<input id=\"terms\" type=\"checkbox\" name=\"terms\">\n\t\t\t\t\t\t\t\t\t\t\t\t<label id=\"lterms\" for=\"terms\">我已阅读并接受使用条款.</label>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<!-- /termswrap -->\n\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t<td class=\"label\">\n\t\t\t\t\t\t\t\t\t\t\t<label id=\"lsignupsubmit\" for=\"signupsubmit\">注册</label>\n\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t<td class=\"field\" colspan=\"2\">\n\t\t\t\t\t\t\t\t\t\t\t<input id=\"signupsubmit\" name=\"signup\" type=\"submit\" value=\"注册\">\n\t\t\t\t\t\t\t\t\t\t\t<input class=\"cancel\" type=\"reset\" value=\"重置\">\n\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</body>\n\t<script>\n\t\t$(document).ready(function() {\n\t\t\t$.mockjax({\n\t\t\t\turl: \"emails.action\", //动作衔接\n\t\t\t\tresponse: function(settings) {\n\t\t\t\t\t// 获取规则的邮件字段\n\t\t\t\t\tvar email = settings.data.email\n\t\t\t\t\tvar emails = [\n\t\t\t\t\t\t\"glen@marketo.com\",\n\t\t\t\t\t\t\"george@bush.gov\",\n\t\t\t\t\t\t\"me@god.com\",\n\t\t\t\t\t\t\"aboutface@cooper.com\",\n\t\t\t\t\t\t\"steam@valve.com\",\n\t\t\t\t\t\t\"bill@gates.com\"\n\t\t\t\t\t];\n\t\t\t\t\tthis.responseText = \"true\";\n\t\t\t\t\tif ($.inArray(email, emails) !== -1) {\n\t\t\t\t\t\tthis.responseText = \"false\";\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tresponseTime: 500\n\t\t\t});\n\n\t\t\t$.mockjax({\n\t\t\t\turl: \"users.action\", //动作衔接\n\t\t\t\tresponse: function(settings) {\n\t\t\t\t\t// 获取规则的用户名字段\n\t\t\t\t\tvar user = settings.data.username\n\t\t\t\t\tvar users = [\"asdf\", \"Peter\", \"Peter2\", \"George\"];\n\t\t\t\t\tthis.responseText = \"true\";\n\t\t\t\t\tif ($.inArray(user, users) !== -1) {\n\t\t\t\t\t\tthis.responseText = \"false\";\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tresponseTime: 500\n\t\t\t});\n\t\t\t// 验证器\n\t\t\t$.validator.setDefaults({\n\t\t\t\t// debug: true, //为true:那么表单不会提交只进行检查，调试时十分方便\n\t\t\t\tsubmitHandler: function() { //提交验证\n\t\t\t\t\talert(\"提交事件!\");\n\t\t\t\t\t// form.submit(); //提交表单\n\t\t\t\t},\n\t\t\t});\n\t\t\t// 在keyup上验证注册表单并提交\n\t\t\tvar validator = $(\"#signupform\").validate({\n\t\t\t\t// 验证规则\n\t\t\t\trules: {\n\t\t\t\t\tfirstname: \"required\",\n\t\t\t\t\tlastname: \"required\",\n\t\t\t\t\tusername: {\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\tminlength: 2,\n\t\t\t\t\t\tremote: \"users.action\" //mockjax验证动作\n\t\t\t\t\t},\n\t\t\t\t\tpassword: { //密码\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\tminlength: 5\n\t\t\t\t\t},\n\t\t\t\t\tpassword_confirm: { //重复密码比较\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\tminlength: 5,\n\t\t\t\t\t\tequalTo: \"#password\"\n\t\t\t\t\t},\n\t\t\t\t\temail: {\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\temail: true,\n\t\t\t\t\t\tremote: \"emails.action\" //mockjax验证动作\n\t\t\t\t\t},\n\t\t\t\t\tdateformat: \"required\",\n\t\t\t\t\tterms: \"required\"\n\t\t\t\t},\n\t\t\t\t// 友情提示消息\n\t\t\t\tmessages: {\n\t\t\t\t\tfirstname: \"输入您的名字\",\n\t\t\t\t\tlastname: \"输入您的姓氏\",\n\t\t\t\t\tusername: {\n\t\t\t\t\t\trequired: \"输入用户名\",\n\t\t\t\t\t\tminlength: jQuery.validator.format(\"输入至少{0}个字符\"),\n\t\t\t\t\t\tremote: jQuery.validator.format(\"{0}已被使用\")\n\t\t\t\t\t},\n\t\t\t\t\tpassword: {\n\t\t\t\t\t\trequired: \"输入密码\",\n\t\t\t\t\t\tminlength: jQuery.validator.format(\"输入至少{0}个字符\")\n\t\t\t\t\t},\n\t\t\t\t\tpassword_confirm: {\n\t\t\t\t\t\trequired: \"再次输入密码\",\n\t\t\t\t\t\tminlength: jQuery.validator.format(\"输入至少{0}个字符\"),\n\t\t\t\t\t\tequalTo: \"输入与上述相同的密码\"\n\t\t\t\t\t},\n\t\t\t\t\temail: {\n\t\t\t\t\t\trequired: \"请输入有效的电子邮件地址\",\n\t\t\t\t\t\tminlength: \"\", //交给remote验证\n\t\t\t\t\t\tremote: jQuery.validator.format(\"{0}已被使用\")\n\t\t\t\t\t},\n\t\t\t\t\tdateformat: \"选择您喜欢的日期格式\",\n\t\t\t\t\tterms: \" \"\n\t\t\t\t},\n\t\t\t\t// （错误元素标签）的放置位置\n\t\t\t\terrorPlacement: function(error, element) {\n\t\t\t\t\t/*\n\t\t\t\t\t@error:要提示的错误信息\n\t\t\t\t\t@element:验证的元素标签\n\t\t\t\t\t*/\n\t\t\t\t\tif (element.is(\":radio\"))\n\t\t\t\t\t\t// 存放在相同父级的第三个td标签里面\n\t\t\t\t\t\terror.appendTo(element.parent().next().next());\n\t\t\t\t\telse if (element.is(\":checkbox\"))\n\t\t\t\t\t\t// 存放在下一个label标签里面\n\t\t\t\t\t\terror.appendTo(element.next());\n\t\t\t\t\telse\n\t\t\t\t\t\t// 存放在同父级的下一个标签里卖弄\n\t\t\t\t\t\terror.appendTo(element.parent().next());\n\t\t\t\t},\n\t\t\t\t// 将此类设置为错误标签以指示有效字段\n\t\t\t\tsuccess: function(label) {\n\t\t\t\t\t// 在lael标签内添加空格和 class=checked属性\n\t\t\t\t\tlabel.html(\"&nbsp;\").addClass(\"checked\");\n\t\t\t\t},\n\t\t\t\t// 可以给未通过验证的元素加效果、闪烁等。\n\t\t\t\thighlight: function(element, errorClass) {\n\t\t\t\t\t// milk.css：添加样式效果\n\t\t\t\t\t$(element).parent().next().find(\".\" + errorClass).removeClass(\"checked\");\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// 通过组合姓氏和名字来建议用户名（把姓名和名字整合为用户名）\n\t\t\t$(\"#username\").focus(function() {\n\t\t\t\tvar firstname = $(\"#firstname\").val();\n\t\t\t\tvar lastname = $(\"#lastname\").val();\n\t\t\t\tif (firstname && lastname && !this.value) {\n\t\t\t\t\t// toLowerCase：把字符串转换为小写\n\t\t\t\t\tthis.value = (firstname + \".\" + lastname).toLowerCase();\n\t\t\t\t}\n\t\t\t});\n\t\t\t// 重置按钮\n\t\t\t$(\".cancel\").click(function() {\n\t\t\t\tvalidator.resetForm();\n\t\t\t});\n\t\t});\n\t</script>\n</html>\n\n\n```","categories":["JavaScript"]},{"title":"JS霓虹灯文字高亮特效","url":"/2020/01/14/JS霓虹灯文字高亮特效/","content":"\n\n\n\n\n```html\n\n<!DOCTYPE html>\n<html lang=\"zh\">\n\t<head>\n\t\t<meta charset=\"UTF-8\">\n\t\t<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n\t\t<title>jQuery鼠标滑过霓虹灯文字高亮特效 - 蚂蚁部落（我只是学习）</title>\n\t\t<!-- <link rel=\"stylesheet\" type=\"text/css\" href=\"css/zzsc-demo.css\" /> -->\n\t\t<!-- <link rel=\"stylesheet\" type=\"text/css\" href=\"css/normalize.css\" /> -->\n\t\t<link type=\"text/css\" rel=\"stylesheet\" href=\"css/style.css\" />\n\t\t<link async href=\"http://fonts.googleapis.com/css?family=Warnes\" rel=\"stylesheet\" type=\"text/css\" />\n\t\t<link async href=\"http://fonts.googleapis.com/css?family=Zeyada\" rel=\"stylesheet\" type=\"text/css\" />\n\t\t<link async href=\"http://fonts.googleapis.com/css?family=Princess%20Sofia\" rel=\"stylesheet\" type=\"text/css\" />\n\n\t</head>\n\t<body>\n\t\t<div class=\"zzsc-content\">\n\t\t\t<div class=\"first_neon\">Enjoy NEON</div>\n\t\t\t<div class=\"second_neon\">Enjoy NEON</div>\n\t\t\t<div class=\"third_neon\">Enjoy NEON</div>\n\t\t</div>\n\t\t<script src=\"https://cdn.bootcss.com/jquery/3.4.1/jquery.min.js\" type=\"text/javascript\"></script>\n\t\t<script type=\"text/javascript\" src=\"js/neon_text.js\"></script>\n\t\t<script type=\"text/javascript\">\n\t\t\t$(document).ready(function() {\n\t\t\t\t// 第一个文字\n\t\t\t\t$('.first_neon').neonText();\n\t\t\t\t// 第二个文字\n\t\t\t\t$('.second_neon').neonText({\n\t\t\t\t\ttextSize: '40pt',\n\t\t\t\t\ttextColor: 'white',\n\t\t\t\t\tneonFontHover: 'white',\n\t\t\t\t\tneonHighlightColor: '#008000', //深柠檬绿色\n\t\t\t\t\tneonHighlightHover: '#FFFF00', //黄色\n\t\t\t\t});\n\t\t\t\t// 第三个文字\n\t\t\t\t$('.third_neon').neonText({\n\t\t\t\t\ttextSize: '40pt',\n\t\t\t\t\ttextColor: 'white',\n\t\t\t\t\tneonFontHover: 'white',\n\t\t\t\t\tneonHighlightColor: '#00FFFF', //青色\n\t\t\t\t\tneonHighlightHover: '#7FFF00', //绿色\n\t\t\t\t});\n\t\t\t});\n\t\t</script>\n\t</body>\n</html>\n\n\n\n```\n\n```css\n/* Reset */\n*,\n*:after,\n*:before {\n\t-webkit-box-sizing: border-box;\n\t-moz-box-sizing: border-box;\n\tbox-sizing: border-box;\n}\n\nbody {\n\tbackground: none repeat scroll 0 0 #000000;\n}\n\n.zzsc-content {\n\twidth: 900px;\n\tmargin: 50px auto;\n}\n\n.first_neon {\n\tbackground: none repeat scroll 0 0 #000000;\n\tborder: 1px solid;\n\tborder-radius: 15px;\n\tcolor: #FFFFFF;\n\tcursor: pointer;\n\tfloat: left;\n\tfont-family: \"Warnes\";\n\tmargin: auto;\n\tpadding: 26px 10px;\n\ttext-align: center;\n\ttext-shadow: 0 0 10px #FFFFFF, 0 0 20px #FFFFFF, 0 0 30px #FFFFFF, 0 0 40px #FF00DE, 0 0 70px #FF00DE, 0 0 80px #FF00DE, 0 0 100px #FF00DE;\n\ttransition: text-shadow 0.5s ease 0s;\n\twidth: 250px;\n}\n\n.first_neon:hover {\n\ttext-shadow: 0 0 10px #FFFFFF, 0 0 20px #FFFFFF, 0 0 30px #FFFFFF, 0 0 40px #00FFFF, 0 0 70px #00FFFF, 0 0 80px #00FFFF, 0 0 100px #00FFFF;\n}\n\n.second_neon {\n\tborder: 1px solid;\n\tborder-radius: 10px;\n\tcolor: #FFFFFF;\n\tcursor: pointer;\n\tdisplay: table-cell;\n\tfloat: left;\n\tfont-family: \"Zeyada\";\n\tmargin-left: 20px;\n\ttransition: text-shadow 0.5s ease 0s;\n\tpadding: 45px 25px;\n\ttext-align: center;\n\ttext-shadow: 0 0 10px #FFFFFF, 0 0 15px #FFFFFF, 0 0 30px #FFFFFF, 0 0 40px #008000, 0 0 70px #008000, 0 0 80px #008000, 0 0 100px #008000;\n\twidth: 250px;\n}\n\n.second_neon:hover {\n\ttext-shadow: 0 0 10px #FFFFFF, 0 0 20px #FFFFFF, 0 0 30px #FFFFFF, 0 0 40px #FFFF00, 0 0 70px #FFFF00, 0 0 80px #FFFF00, 0 0 100px #FFFF00;\n}\n\n.third_neon {\n\tborder: 1px solid;\n\tborder-radius: 10px;\n\tcolor: #FFFFFF;\n\tcursor: pointer;\n\tdisplay: table-cell;\n\tfloat: left;\n\tfont-family: \"Princess Sofia\";\n\tmargin-left: 20px;\n\ttransition: text-shadow 0.5s ease 0s;\n\tpadding: 13px 25px;\n\ttext-align: center;\n\ttext-shadow: 0 0 10px #FFFFFF, 0 0 15px #FFFFFF, 0 0 30px #FFFFFF, 0 0 40px #00FFFF, 0 0 70px #00FFFF, 0 0 80px #00FFFF, 0 0 100px #00FFFF;\n\twidth: 250px;\n}\n\n.third_neon:hover {\n\ttext-shadow: 0 0 6px #FFFFFF, 0 0 15px #FFFFFF, 0 0 25px #FFFFFF, 0 0 40px #7FFF00, 0 0 70px #7FFF00, 0 0 80px #7FFF00, 0 0 100px #7FFF00;\n}\n\n\n```\n\n```javascript\n\njQuery.fn.neonText = function(options) {\n\t// 将一个或多个对象的内容合并到目标对象\n\tvar options = jQuery.extend({\n\t\t/* \n\t\t@textSize:文字大小\n\t\t@textColor:文字颜色(白色)\n\t\t@neonFontHover:霓虹灯文字颜色(白色)\n\t\t@neonHighlightColor:霓虹灯背景颜色(默认)\n\t\t@neonHighlightHover:霓虹灯背景颜色(鼠标经过)\n\t\t*/\n\t\ttextSize: '40pt',\n\t\ttextColor: '#FFFFFF',\n\t\tneonFontHover: '#FFFFFF',\n\t\tneonHighlightColor: '#FF00DE', //洋红色\n\t\tneonHighlightHover: '#00FFFF', //青色\n\n\t}, options)\n\treturn this.each(function() {\n\t\tjQuery(this)\n\t\t\t.css('font-size', options.textSize) //文字大小\n\t\t\t.css('color', options.textColor) //文字颜色\n\t\t\t.css('text-shadow',\n\t\t\t\t'0 0 10px ' + options.neonHighlight +\n\t\t\t\t',0 0 20px ' + options.neonHighlight +\n\t\t\t\t',0 0 30px ' + options.neonHighlight +\n\t\t\t\t',0 0 40px ' + options.neonHighlightColor +\n\t\t\t\t',0 0 70px ' + options.neonHighlightColor +\n\t\t\t\t',0 0 80px ' + options.neonHighlightColor +\n\t\t\t\t',0 0 100px ' + options.neonHighlightColor)\n\t\t\t.hover(function() {\n\t\t\t\t// 1.鼠标悬停在里面\n\t\t\t\t\tjQuery(this)\n\t\t\t\t\t\t.css('text-shadow',\n\t\t\t\t\t\t\t'0 0 10px ' + options.neonHighlight +\n\t\t\t\t\t\t\t',0 0 20px ' + options.neonHighlight +\n\t\t\t\t\t\t\t',0 0 30px ' + options.neonHighlight +\n\t\t\t\t\t\t\t',0 0 40px ' + options.neonHighlightHover +\n\t\t\t\t\t\t\t',0 0 70px ' + options.neonHighlightHover +\n\t\t\t\t\t\t\t',0 0 80px ' + options.neonHighlightHover +\n\t\t\t\t\t\t\t',0 0 100px ' + options.neonHighlightHover)\n\t\t\t\t\t\t.css('color', options.neonFontHover);\n\t\t\t\t},\n\t\t\t\t// 2.鼠标离开\n\t\t\t\tfunction() {\n\t\t\t\t\tjQuery(this)\n\t\t\t\t\t\t.css('color', options.textColor)\n\t\t\t\t\t\t.css('text-shadow',\n\t\t\t\t\t\t\t'0 0 10px ' + options.neonHighlight +\n\t\t\t\t\t\t\t',0 0 20px ' + options.neonHighlight +\n\t\t\t\t\t\t\t',0 0 30px ' + options.neonHighlightColor +\n\t\t\t\t\t\t\t',0 0 40px ' + options.neonHighlightColor +\n\t\t\t\t\t\t\t',0 0 70px ' + options.neonHighlightColor +\n\t\t\t\t\t\t\t',0 0 80px ' + options.neonHighlightColor +\n\t\t\t\t\t\t\t',0 0 100px ' + options.neonHighlightColor)\n\t\t\t\t});\n\t});\n};\n\n\n```","categories":["JavaScript"]},{"title":"JS百叶窗学习","url":"/2020/01/08/JS百叶窗学习/","content":"\n\n\n\n\n\n```html\n\n<!DOCTYPE html>\n<html lang=\"en\">\n\t<head>\n\t\t<meta charset=\"UTF-8\">\n\t\t<title>jQuery百叶窗风格图片切换代码 - 蚂蚁资源网（我只是学习）</title>\n\t\t<link rel=\"stylesheet\" href=\"css/shutter.css\">\n\t</head>\n\t<body>\n\t\t<div class=\"shutter\">\n\t\t\t<div class=\"shutter-img\">\n\t\t\t\t<a href=\"#\" data-shutter-title=\"我的保姆手册\"><img src=\"http://pic.ik123.com/uploads/allimg/181117/12-1Q11G14019.jpg\" alt=\"#\"></a>\n\t\t\t\t<a href=\"#\" data-shutter-title=\"我的保姆手册\"><img src=\"http://pic.ik123.com/uploads/allimg/181117/12-1Q11G14020.jpg\" alt=\"#\"></a>\n\t\t\t\t<a href=\"#\" data-shutter-title=\"我的保姆手册\"><img src=\"http://pic.ik123.com/uploads/allimg/181117/12-1Q11G14024.jpg\" alt=\"#\"></a>\n\t\t\t\t<a href=\"#\" data-shutter-title=\"我的保姆手册\"><img src=\"http://pic.ik123.com/uploads/allimg/181117/12-1Q11G14017.jpg\" alt=\"#\"></a>\n\t\t\t</div>\n\t\t\t<ul class=\"shutter-btn\">\n\t\t\t\t<li class=\"prev\"></li>\n\t\t\t\t<li class=\"next\"></li>\n\t\t\t</ul>\n\t\t\t<div class=\"shutter-desc\">\n\t\t\t\t<p>哈喽</p>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<script src=\"https://cdn.bootcss.com/jquery/3.4.1/jquery.min.js\"></script>\n\t\t<!-- 轻量级JS动画库 -->\n\t\t<script src=\"https://cdn.bootcss.com/velocity/2.0.5/velocity.js\"></script>\n\t\t<script src=\"js/shutter.js\"></script>\n\t\t<script>\n\t\t\t$(function() {\n\t\t\t\t$('.shutter').main_shutter({\n\t\t\t\t\tshutterW: 1000, // 容器宽度\n\t\t\t\t\tshutterH: 358, // 容器高度\n\t\t\t\t\tisAutoPlay: true, // 是否自动播放\n\t\t\t\t\tplayInterval: 3000, // 自动播放时间\n\t\t\t\t\tcurDisplay: 3, // 当前显示页（图片数量）\n\t\t\t\t\tfullPage: false // 是否全屏展示（为true时不会自动切换）\n\t\t\t\t});\n\t\t\t});\n\t\t</script>\n\t</body>\n</html>\n\n\n```\n\n\n\n```javaScript\n/**\n * Coder: EzrealY\n * Time: 2017.07.31\n * Mail: 1005526074@qq.com\n * 效果原作者: https://oss.so/article/71\n */\n\n// 百叶窗\n(function($, window, document, undefined) {\n\t// 1.构造方法\n\tvar Shutter = function(elem, options) {\n\t\tthis.defaults = {\n\t\t\tshutterW: 1200, // 容器宽度\n\t\t\tshutterH: 500, // 容器高度\n\t\t\tisAutoPlay: true, // 是否自动播放\n\t\t\tplayInterval: 3000, // 自动播放时间\n\t\t\tcurDisplay: 0, // 当前显示页\n\t\t\tfullPage: false // 是否全屏展示\n\t\t};\n\t\t// 接受新的参数\n\t\tthis.opts = $.extend({}, this.defaults, options);\n\t\t// 运行百叶窗,传递(div.shutter)节点\n\t\tthis.run(elem);\n\t};\n\t// 2.百叶窗的变化方式(方法)\n\tShutter.prototype = {\n\n\t\t//初始化百叶窗\n\t\tinitalShutter: function() {\n\t\t\tvar $curElem = this.$shutterItem.eq(this.curDisplay); // 显示背景图片(通过索引的方式)\n\t\t\tvar $nearlyElem = this.$shutterItem.not($curElem); // 其他的背景图片\n\n\t\t\t// ***************设置百叶窗的窗口大小******************\n\t\t\tthis.$shutter.css({\n\t\t\t\twidth: this.opts.shutterW, // 容器宽度\n\t\t\t\theight: this.opts.shutterH, // 容器高度\n\t\t\t});\n\n\t\t\t// **************设置背景图片的堆叠顺序*****************\n\t\t\t$curElem.css('zIndex', 20);\n\t\t\t$nearlyElem.each(function(i) {\n\t\t\t\t$(this).css('zIndex', ++i);\n\t\t\t});\n\n\n\t\t\tif (this.opts.fullPage) { //是否全屏展示\n\t\t\t\tthis.$shutter.css({\n\t\t\t\t\twidth: $(window).width(),\n\t\t\t\t\theight: $(window).height(),\n\t\t\t\t\tmargin: 0,\n\t\t\t\t\tborderRadius: 0,\n\t\t\t\t\tborder: 'none'\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\n\t\t// 背景图片的前后切换\n\t\ttoggleMove: function(command, index) {\n\t\t\tif (!command) {\n\t\t\t\tif (this.curDisplay === index) {\n\t\t\t\t\treturn;\n\t\t\t\t} else if (this.curDisplay === 0 && index === this.shutterItem_len - 1 || index < this.curDisplay) {\n\t\t\t\t\tcommand = 'prev';\n\t\t\t\t} else {\n\t\t\t\t\tcommand = 'next';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!index) {\n\t\t\t\tif (command === 'prev') {\n\t\t\t\t\tindex = this.curDisplay - 1;\n\t\t\t\t\t// 从后执行上一个\n\t\t\t\t\tif (this.curDisplay === 0) {\n\t\t\t\t\t\tindex = this.shutterItem_len - 1;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tindex = this.curDisplay + 1;\n\t\t\t\t\t// 从前执行下一个\n\t\t\t\t\tif (this.curDisplay === this.shutterItem_len - 1) {\n\t\t\t\t\t\tindex = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t//背景图片的描述信息向上移动\n\t\t\tthis.$shutterDesc.animate({\n\t\t\t\tbottom: -36\n\t\t\t});\n\t\t\t// 随机获取0到13的数字\n\t\t\tvar random = function(min, max) {\n\t\t\t\treturn Math.floor(Math.random() * (max + 1) - min);\n\t\t\t};\n\t\t\t// 14种切换效果-切换移动的方式\n\t\t\tthis.moveSwitch(random(0, 13), command, index);\n\t\t\t// 返回属性的值(就是背景图片的标题)\n\t\t\tthis.shutterTitle = this.$shutterItem.eq(index).attr('data-shutter-title');\n\t\t},\n\n\t\t// 切换移动的效果方式\n\t\tmoveSwitch: function(randomNum, command, index) {\n\t\t\tswitch (randomNum) {\n\t\t\t\tcase 0:\n\t\t\t\t\tthis.gridWhole(index, 0);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 1:\n\t\t\t\t\tthis.gridWhole(index, 1);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\tthis.gridWhole(index, 2);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3:\n\t\t\t\t\tthis.gridWhole(index, 3);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4:\n\t\t\t\t\tthis.gridTop(index, 0);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 5:\n\t\t\t\t\tthis.gridTop(index, 1);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 6:\n\t\t\t\t\tthis.gridTop(index, 2);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 7:\n\t\t\t\t\tthis.gridLeft(index, 0);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 8:\n\t\t\t\t\tthis.gridLeft(index, 1);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 9:\n\t\t\t\t\tthis.gridLeft(index, 2);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 10:\n\t\t\t\t\tthis.gridOpacity(index);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 11:\n\t\t\t\t\tthis.gridAccordion(index);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 12:\n\t\t\t\t\tthis.gridLittle(index);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 13:\n\t\t\t\t\tthis.gridSwitch(index);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthis.gridTop(index, 0);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t},\n\n\t\t// 覆盖方式(就是用覆盖的方式切换图片)\n\t\trecovery: function(target, cur, index, backup, interval) {\n\t\t\t/*\n\t\t\t@target:切换后的图片\n\t\t\t@cur:切换前的图片\n\t\t\t@index:切换后图片的索引\n\t\t\t@backup:切换前的<img>标签(使用这个备份)\n\t\t\t@interval:间隔多少毫秒\n\t\t\t*/\n\n\t\t\tvar self = this;\n\t\t\tsetTimeout(function() {\n\t\t\t\t// 设置切换后的图片的堆叠顺序为20\n\t\t\t\ttarget.css('zIndex', 20);\n\t\t\t\t// 使用备份的<img>标签,堆叠顺序为20 --> self.curDisplay\n\t\t\t\tcur.css('zIndex', self.curDisplay).html(backup);\n\t\t\t\tself.curDisplay = index; //把切换后图片的索引归位\n\t\t\t\t// 让描述信息向下移动\n\t\t\t\tself.$shutterDesc.animate({\n\t\t\t\t\tbottom: 0\n\t\t\t\t}).find('p').text(self.shutterTitle);\n\t\t\t\t// 归位完后,启用切换背景图片功能\n\t\t\t\tself.switch_img = true;\n\t\t\t}, interval);\n\t\t},\n\n\t\t// 1.网格状--整个图片切换样式\n\t\tgridWhole: function(index, showNum) {\n\t\t\tvar self = this;\n\n\t\t\t/* **************************切换前的图片************************** */\n\t\t\tvar $curElem = this.$shutterItem.eq(this.curDisplay);\n\t\t\t//获取切换前的图片的<img>标签(这里要作为备份,给蒙版使用)\n\t\t\tvar backup = $curElem.html();\n\t\t\t//在img标签的同级创建div标签(充当蒙版)\n\t\t\tvar $createElem = $('<div class=\"created\"></div>');\n\t\t\tvar movingVal = 0;\n\n\t\t\t$curElem.find('img').fadeOut(); //淡出效果\n\t\t\t$createElem.html(backup).css({\n\t\t\t\tposition: 'absolute',\n\t\t\t\tzIndex: 20,\n\t\t\t\tleft: 0,\n\t\t\t\ttop: 0,\n\t\t\t\toverflow: 'hidden',\n\t\t\t\twidth: this.shutterW,\n\t\t\t\theight: this.shutterH,\n\t\t\t});\n\t\t\t\n\t\t\tswitch (showNum) {\n\t\t\t\tcase 0: //向左淡出\n\t\t\t\t\tmovingVal = this.shutterW;\n\t\t\t\t\t$createElem.velocity({\n\t\t\t\t\t\tleft: movingVal\n\t\t\t\t\t}, {\n\t\t\t\t\t\tduration: 1000\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\tcase 1: //向右淡出\n\t\t\t\t\tmovingVal = -this.shutterW;\n\t\t\t\t\t$createElem.velocity({\n\t\t\t\t\t\tleft: movingVal\n\t\t\t\t\t}, {\n\t\t\t\t\t\tduration: 1000\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2: //向下淡出\n\t\t\t\t\tmovingVal = this.shutterH;\n\t\t\t\t\t$createElem.velocity({\n\t\t\t\t\t\ttop: movingVal\n\t\t\t\t\t}, {\n\t\t\t\t\t\tduration: 1000\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3: //向上淡出\n\t\t\t\t\tmovingVal = -this.shutterH;\n\t\t\t\t\t$createElem.velocity({\n\t\t\t\t\t\ttop: movingVal\n\t\t\t\t\t}, {\n\t\t\t\t\t\tduration: 1000\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t$createElem.find('img').css({\n\t\t\t\tdisplay: 'block',\n\t\t\t\twidth: this.shutterW,\n\t\t\t\theight: this.shutterH\n\t\t\t});\n\t\t\t$curElem.append($createElem);\n\n\t\t\t/* **************************切换后的图片************************** */\n\t\t\tvar $targetElem = this.$shutterItem.eq(index);\n\t\t\t$targetElem.css('zIndex', 19);\n\t\t\tthis.recovery($targetElem, $curElem, index, backup, 1200);\n\t\t},\n\n\t\t// 2.网格状--图片从上切换样式\n\t\tgridTop: function(index, showNum) {\n\t\t\tvar self = this;\n\t\t\tvar $curElem = this.$shutterItem.eq(this.curDisplay);\n\t\t\tvar $targetElem = this.$shutterItem.eq(index);\n\t\t\tvar backup = $curElem.html();\n\t\t\tvar speed = 0;\n\n\t\t\t$targetElem.css('zIndex', 19);\n\t\t\t$curElem.find('img').fadeOut();\n\n\t\t\tfor (var i = 0; i < 12; i++) {\n\t\t\t\tvar $createElem = $('<div class=\"created\"></div>');\n\n\t\t\t\t$createElem.html(backup).css({\n\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\tzIndex: 20,\n\t\t\t\t\tleft: this.shutterW / 12 * i,\n\t\t\t\t\ttop: 0,\n\t\t\t\t\toverflow: 'hidden',\n\t\t\t\t\twidth: this.shutterW / 12,\n\t\t\t\t\theight: this.shutterH\n\t\t\t\t});\n\n\t\t\t\t$curElem.append($createElem);\n\n\t\t\t\t$createElem.find('img').css({\n\t\t\t\t\tdisplay: 'block',\n\t\t\t\t\twidth: this.shutterW,\n\t\t\t\t\theight: this.shutterH,\n\t\t\t\t\tmarginLeft: this.shutterW / -12 * i\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (showNum === 0) {\n\t\t\t\tvar movingVal = 0;\n\n\t\t\t\t$curElem.find('.created').each(function(i) {\n\t\t\t\t\tif (i % 2 === 0) {\n\t\t\t\t\t\tmovingVal = self.shutterH;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmovingVal = -self.shutterH;\n\t\t\t\t\t}\n\n\t\t\t\t\t$(this).velocity({\n\t\t\t\t\t\ttop: movingVal\n\t\t\t\t\t}, {\n\t\t\t\t\t\tduration: 1000\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else if (showNum === 1) {\n\t\t\t\t$curElem.find('.created').each(function(i) {\n\t\t\t\t\tspeed = 80 * i;\n\n\t\t\t\t\t$(this).velocity({\n\t\t\t\t\t\ttop: $(this).height()\n\t\t\t\t\t}, {\n\t\t\t\t\t\tduration: 120 + speed\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else if (showNum === 2) {\n\t\t\t\t$curElem.find('.created').each(function(i) {\n\t\t\t\t\tspeed = 80 * i;\n\n\t\t\t\t\t$(this).velocity({\n\t\t\t\t\t\ttop: -$(this).height()\n\t\t\t\t\t}, {\n\t\t\t\t\t\tduration: 120 + speed\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis.recovery($targetElem, $curElem, index, backup, 1000);\n\t\t},\n\n\t\t// 3.网格状--图片从左切换样式\n\t\tgridLeft: function(index, showNum) {\n\t\t\tvar self = this;\n\t\t\tvar $curElem = this.$shutterItem.eq(this.curDisplay);\n\t\t\tvar $targetElem = this.$shutterItem.eq(index);\n\t\t\tvar backup = $curElem.html();\n\t\t\tvar speed = 0;\n\n\t\t\t$targetElem.css('zIndex', 19);\n\t\t\t$curElem.find('img').fadeOut();\n\n\t\t\tfor (var i = 0; i < 12; i++) {\n\t\t\t\tvar $createElem = $('<div class=\"created\"></div>');\n\n\t\t\t\t$createElem.html(backup).css({\n\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\tzIndex: 20,\n\t\t\t\t\tleft: 0,\n\t\t\t\t\ttop: this.shutterH / 12 * i,\n\t\t\t\t\toverflow: 'hidden',\n\t\t\t\t\twidth: this.shutterW,\n\t\t\t\t\theight: this.shutterH / 12\n\t\t\t\t});\n\n\t\t\t\t$curElem.append($createElem);\n\n\t\t\t\t$createElem.find('img').css({\n\t\t\t\t\tdisplay: 'block',\n\t\t\t\t\twidth: this.shutterW,\n\t\t\t\t\theight: this.shutterH,\n\t\t\t\t\tmarginTop: this.shutterH / -12 * i\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (showNum === 0) {\n\t\t\t\tvar movingVal = 0;\n\n\t\t\t\t$curElem.find('.created').each(function(i) {\n\t\t\t\t\tif (i % 2 === 0) {\n\t\t\t\t\t\tmovingVal = self.shutterW;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmovingVal = -self.shutterW;\n\t\t\t\t\t}\n\n\t\t\t\t\t$(this).velocity({\n\t\t\t\t\t\tleft: movingVal\n\t\t\t\t\t}, {\n\t\t\t\t\t\tduration: 1000\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else if (showNum === 1) {\n\t\t\t\t$curElem.find('.created').each(function(i) {\n\t\t\t\t\tspeed = 80 * i;\n\n\t\t\t\t\t$(this).velocity({\n\t\t\t\t\t\tleft: $(this).width()\n\t\t\t\t\t}, {\n\t\t\t\t\t\tduration: 120 + speed\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else if (showNum === 2) {\n\t\t\t\t$curElem.find('.created').each(function(i) {\n\t\t\t\t\tspeed = 80 * i;\n\n\t\t\t\t\t$(this).velocity({\n\t\t\t\t\t\tleft: -$(this).width()\n\t\t\t\t\t}, {\n\t\t\t\t\t\tduration: 120 + speed\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis.recovery($targetElem, $curElem, index, backup, 1000);\n\t\t},\n\n\t\t// 4.网格状--模糊切换样式\n\t\tgridOpacity: function(index) {\n\t\t\tvar self = this;\n\t\t\t\n\t\t\t/* **************************切换前的图片************************** */\n\t\t\tvar $curElem = this.$shutterItem.eq(this.curDisplay);\n\t\t\t//获取切换前的图片的<img>标签(这里要作为备份,给蒙版使用)\n\t\t\tvar backup = $curElem.html();\n\t\t\t//在img标签的同级创建div标签(充当蒙版)\n\t\t\tvar $createElem = $('<div class=\"created\"></div>');\n\t\t\t\n\t\t\t$curElem.find('img').fadeOut();//淡出效果\n\t\t\t$createElem.html(backup).css({\n\t\t\t\tposition: 'absolute',\n\t\t\t\tzIndex: 20,\n\t\t\t\tleft: 0,\n\t\t\t\ttop: 0,\n\t\t\t\toverflow: 'hidden',\n\t\t\t\twidth: this.shutterW,\n\t\t\t\theight: this.shutterH,\n\t\t\t\topacity: 1\n\t\t\t});\n\t\t\t$createElem.velocity({\n\t\t\t\topacity: 0\n\t\t\t}, {\n\t\t\t\tduration: 1000\n\t\t\t});\n\t\t\t$createElem.find('img').css({\n\t\t\t\tdisplay: 'block',\n\t\t\t\twidth: this.shutterW,\n\t\t\t\theight: this.shutterH\n\t\t\t});\n\t\t\t$curElem.append($createElem);\n\t\t\t\n\t\t\t/* **************************切换后的图片************************** */\n\t\t\tvar $targetElem = this.$shutterItem.eq(index);\n\t\t\t$targetElem.css('zIndex', 19);\n\t\t\tthis.recovery($targetElem, $curElem, index, backup, 1000);\n\t\t},\n\n\t\t// 5.网格状--手风琴样式切换样式\n\t\tgridAccordion: function(index) {\n\t\t\tvar self = this;\n\t\t\tvar $curElem = this.$shutterItem.eq(this.curDisplay);\n\t\t\tvar $targetElem = this.$shutterItem.eq(index);\n\t\t\tvar backup = $curElem.html();\n\t\t\tvar iNow = 0;\n\t\t\tvar speed = 0;\n\n\t\t\t$targetElem.css('zIndex', 19);\n\t\t\t$curElem.find('img').fadeOut();\n\n\t\t\tfor (var i = 0; i < 12; i++) {\n\t\t\t\tvar $createElem = $('<div class=\"created\"></div>');\n\n\t\t\t\t$createElem.html(backup).css({\n\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\tzIndex: 20,\n\t\t\t\t\tleft: this.shutterW / 12 * i,\n\t\t\t\t\ttop: 0,\n\t\t\t\t\toverflow: 'hidden',\n\t\t\t\t\twidth: this.shutterW / 12,\n\t\t\t\t\theight: this.shutterH,\n\t\t\t\t\topacity: 1\n\t\t\t\t});\n\n\t\t\t\t$curElem.append($createElem);\n\n\t\t\t\t$createElem.find('img').css({\n\t\t\t\t\tdisplay: 'block',\n\t\t\t\t\twidth: this.shutterW,\n\t\t\t\t\theight: this.shutterH,\n\t\t\t\t\tmarginLeft: this.shutterW / -12 * i\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t$curElem.find('.created').each(function(i) {\n\t\t\t\tspeed = i * 80;\n\n\t\t\t\t$(this).velocity({\n\t\t\t\t\topacity: 0\n\t\t\t\t}, {\n\t\t\t\t\tduration: 320 + speed\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tthis.recovery($targetElem, $curElem, index, backup, 1200);\n\t\t},\n\n\t\t// 6.网格状--分割为小格子切换样式\n\t\tgridLittle: function(index) {\n\t\t\tvar self = this;\n\t\t\tvar $curElem = this.$shutterItem.eq(this.curDisplay);\n\t\t\tvar $targetElem = this.$shutterItem.eq(index);\n\t\t\tvar backup = $curElem.html();\n\t\t\tvar coordinate = null;\n\n\t\t\t$targetElem.css('zIndex', 19);\n\t\t\t$curElem.find('img').fadeOut();\n\n\t\t\tfor (var i = 0; i < 24; i++) {\n\t\t\t\tvar $createElem = $('<div class=\"created\"></div>');\n\n\t\t\t\t$createElem.html(backup).css({\n\t\t\t\t\twidth: this.shutterW / 6,\n\t\t\t\t\theight: this.shutterH / 4,\n\t\t\t\t\tleft: (this.shutterW / 6) * (i % 6),\n\t\t\t\t\ttop: (this.shutterH / 4) * Math.floor(i / 6)\n\t\t\t\t});\n\n\t\t\t\t$curElem.append($createElem);\n\n\t\t\t\t$createElem.find('img').css({\n\t\t\t\t\tdisplay: 'block',\n\t\t\t\t\twidth: this.shutterW,\n\t\t\t\t\theight: this.shutterH,\n\t\t\t\t\tmarginLeft: -(this.shutterW / 6) * (i % 6),\n\t\t\t\t\tmarginTop: -(this.shutterH / 4) * Math.floor(i / 6)\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tcoordinate = getXY($curElem.find('.created'), 4, 6);\n\n\t\t\ttab(coordinate, 0, 0, function() {\n\t\t\t\tvar left = parseInt(this.style.left);\n\t\t\t\tvar top = parseInt(this.style.top);\n\n\t\t\t\t$(this).velocity({\n\t\t\t\t\tleft: left + 100,\n\t\t\t\t\ttop: top + 100,\n\t\t\t\t\topacity: 0\n\t\t\t\t});\n\t\t\t}, 100, +1, +1);\n\n\t\t\tthis.recovery($targetElem, $curElem, index, backup, 1200);\n\t\t},\n\n\t\t// 7.网格状--网格切换样式\n\t\tgridSwitch: function(index) {\n\t\t\tvar self = this;\n\t\t\tvar $curElem = this.$shutterItem.eq(this.curDisplay);\n\t\t\tvar $targetElem = this.$shutterItem.eq(index);\n\t\t\tvar backup = $curElem.html();\n\n\t\t\t$targetElem.css('zIndex', 19);\n\t\t\t$curElem.find('img').fadeOut();\n\n\t\t\tfor (var i = 0; i < 20; i++) {\n\t\t\t\tvar $createElem = $('<div class=\"created\"></div>');\n\n\t\t\t\t$createElem.html(backup).css({\n\t\t\t\t\twidth: this.shutterW / 5,\n\t\t\t\t\theight: this.shutterH / 4,\n\t\t\t\t\tleft: (this.shutterW / 5) * (i % 5),\n\t\t\t\t\ttop: (this.shutterH / 4) * Math.floor(i / 5)\n\t\t\t\t});\n\n\t\t\t\t$curElem.append($createElem);\n\n\t\t\t\t$createElem.find('img').css({\n\t\t\t\t\tdisplay: 'block',\n\t\t\t\t\twidth: this.shutterW,\n\t\t\t\t\theight: this.shutterH,\n\t\t\t\t\tmarginLeft: -(this.shutterW / 5) * (i % 5),\n\t\t\t\t\tmarginTop: -(this.shutterH / 4) * Math.floor(i / 5)\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t$curElem.find('.created').each(function(i) {\n\t\t\t\tif (i % 2 === 0) {\n\t\t\t\t\t$(this).find('img').velocity({\n\t\t\t\t\t\tmarginLeft: $(this).width()\n\t\t\t\t\t}, {\n\t\t\t\t\t\tduration: 500\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tsetTimeout(function() {\n\t\t\t\t$curElem.find('.created').each(function(i) {\n\t\t\t\t\tif (i % 1 === 0) {\n\t\t\t\t\t\t$(this).find('img').velocity({\n\t\t\t\t\t\t\tmarginLeft: $(this).width()\n\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\tduration: 500\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}, 600);\n\n\t\t\tthis.recovery($targetElem, $curElem, index, backup, 1200);\n\t\t},\n\n\t\t// 百叶窗的自动播放效果\n\t\tplay: function() {\n\t\t\tvar self = this; //分辨当前方法结构层次感\n\n\t\t\tif (this.opts.isAutoPlay) { // 是否自动播放\n\t\t\t\tclearInterval(this.playTime); //清除按钮事件(图片的切换效果)\n\t\t\t\t//每三秒自动切换图片\n\t\t\t\tthis.playTime = setInterval(function() {\n\t\t\t\t\tself.$nextBtn.click(); //自动选择的百叶窗的向后按钮事件\n\t\t\t\t}, this.opts.playInterval);\n\t\t\t}\n\t\t},\n\n\t\t// 运行百叶窗\n\t\trun: function(elem) {\n\t\t\tvar self = this; //分辨当前方法结构层次感\n\t\t\tthis.switch_img = true; //是否切换背景图片\n\t\t\tthis.shutterTitle = ''; //背景图片的标题\n\t\t\tthis.playTime = null;\n\t\t\n\t\t\tthis.$shutter = elem; //接收(div.shutter)节点\n\t\t\tthis.shutterW = this.$shutter.width(); //百叶窗的窗口宽度\n\t\t\tthis.shutterH = this.$shutter.height(); //百叶窗的窗口高度\n\t\t\tthis.$shutterItem = this.$shutter.find('.shutter-img a'); //百叶窗的背景图片\n\t\t\tthis.$prevBtn = this.$shutter.find('.shutter-btn .prev'); //百叶窗的向前按钮\n\t\t\tthis.$nextBtn = this.$shutter.find('.shutter-btn .next'); //百叶窗的向后按钮\n\t\t\tthis.$shutterDesc = this.$shutter.find('.shutter-desc'); //百叶窗的图片描述\n\t\t\tthis.shutterItem_len = this.$shutterItem.length; //背景图片的数量\n\t\t\t// 如果图片背景大于3个,就使用自个设置的数\n\t\t\tthis.curDisplay = this.opts.curDisplay > this.shutterItem_len - 1 ?\n\t\t\t\tthis.opts.curDisplay = this.shutterItem_len - 1 : this.opts.curDisplay;\n\t\t\n\t\t\t//初始化百叶窗\n\t\t\tthis.initalShutter();\n\t\t\n\t\t\t// ************************向前,向后两个按钮的点击事件*************************\n\t\t\tthis.$prevBtn.bind('click', function() {\n\t\t\t\tif (self.switch_img) { //是否切换背景图片\n\t\t\t\t\tself.switch_img = false;\n\t\t\t\t\tself.toggleMove('prev'); //向前切换移动\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.$nextBtn.bind('click', function() {\n\t\t\t\tif (self.switch_img) { //是否切换背景图片\n\t\t\t\t\tself.switch_img = false;\n\t\t\t\t\tself.toggleMove('next'); //向后切换移动\n\t\t\t\t\tself.$shutterDesc.animate({\n\t\t\t\t\t\t//背景图片的描述信息向上移动\n\t\t\t\t\t\tbottom: -36\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t\t// **********************是否全屏展示（为true时不会自动切换）*********************\n\t\t\tif (this.opts.fullPage) {\n\t\t\t\t$(window).resize(function() {\n\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\tself.$shutter.css({\n\t\t\t\t\t\t\twidth: $(this).width(),\n\t\t\t\t\t\t\theight: $(this).height()\n\t\t\t\t\t\t});\n\t\t\n\t\t\t\t\t\tself.shutterW = self.$shutter.width();\n\t\t\t\t\t\tself.shutterH = self.$shutter.height();\n\t\t\t\t\t}, 30);\n\t\t\t\t});\n\t\t\t}\n\t\t\n\t\t\t//百叶窗的自动播放效果\n\t\t\tthis.play();\n\t\t\tthis.$shutter.hover(function() {\n\t\t\t\t// 当鼠标指针悬停在上面时,清除按钮事件(图片的切换效果)\n\t\t\t\tclearInterval(self.playTime);\n\t\t\t}, function() {\n\t\t\t\t// 鼠标离开时,显示自动播放效果\n\t\t\t\tself.play();\n\t\t\t});\n\t\t},\n\t\t\n\t\t// 构造器是Shutter\n\t\tconstructor: Shutter\n\t};\n\t// 插件的主入口\n\t$.fn.main_shutter = function(options) {\n\t\t// 遍历(div.shutter)节点\n\t\tthis.each(function() {\n\t\t\tnew Shutter($(this), options);\n\t\t});\n\t};\n\n})(jQuery, window, document);\n\nfunction tab(arr, x, y, fn, delay, speedX, speedY) {\n\tif (!arr[y] || !arr[y][x]) {\n\t\treturn;\n\t}\n\n\tif (fn) {\n\t\tfn.call(arr[y][x]);\n\n\t\tclearTimeout(arr[y][x].timer);\n\t\tarr[y][x].timer = setTimeout(function() {\n\t\t\ttab(arr, x, y + speedY, fn, delay, speedX, speedY);\n\t\t\ttab(arr, x + speedX, y, fn, delay, speedX, speedY);\n\t\t}, delay);\n\t}\n};\n\nfunction getXY(objs, rows, cols) {\n\tvar arr1 = [];\n\n\tfor (var i = 0; i < rows; i++) {\n\t\tvar arr2 = [];\n\n\t\tfor (var j = 0; j < cols; j++) {\n\t\t\tobjs[i * cols + j].xIndex = j;\n\t\t\tobjs[i * cols + j].yIndex = i;\n\n\t\t\tarr2.push(objs[i * cols + j]);\n\t\t}\n\n\t\tarr1.push(arr2);\n\t}\n\n\treturn arr1;\n};\n\n\n\n\n\n\n\n```","categories":["JavaScript"]},{"title":"拉勾网可视化分析/5-01权重词云","url":"/2019/12/24/拉勾网可视化分析/5-01权重词云/","content":"<!DOCTYPE html>\n<html>\n\n<head>\n    <meta charset=\"utf-8\">\n    <title>ECharts</title>\n    <script type=\"text/javascript\">(function webpackUniversalModuleDefinition(root, factory) {\r\n\tif(typeof exports === 'object' && typeof module === 'object')\r\n\t\tmodule.exports = factory();\r\n\telse if(typeof define === 'function' && define.amd)\r\n\t\tdefine([], factory);\r\n\telse if(typeof exports === 'object')\r\n\t\texports[\"echarts\"] = factory();\r\n\telse\r\n\t\troot[\"echarts\"] = factory();\r\n})(this, function() {\r\nreturn /******/ (function(modules) { // webpackBootstrap\r\n/******/ \t// The module cache\r\n/******/ \tvar installedModules = {};\r\n\r\n/******/ \t// The require function\r\n/******/ \tfunction __webpack_require__(moduleId) {\r\n\r\n/******/ \t\t// Check if module is in cache\r\n/******/ \t\tif(installedModules[moduleId])\r\n/******/ \t\t\treturn installedModules[moduleId].exports;\r\n\r\n/******/ \t\t// Create a new module (and put it into the cache)\r\n/******/ \t\tvar module = installedModules[moduleId] = {\r\n/******/ \t\t\texports: {},\r\n/******/ \t\t\tid: moduleId,\r\n/******/ \t\t\tloaded: false\r\n/******/ \t\t};\r\n\r\n/******/ \t\t// Execute the module function\r\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\r\n\r\n/******/ \t\t// Flag the module as loaded\r\n/******/ \t\tmodule.loaded = true;\r\n\r\n/******/ \t\t// Return the exports of the module\r\n/******/ \t\treturn module.exports;\r\n/******/ \t}\r\n\r\n\r\n/******/ \t// expose the modules object (__webpack_modules__)\r\n/******/ \t__webpack_require__.m = modules;\r\n\r\n/******/ \t// expose the module cache\r\n/******/ \t__webpack_require__.c = installedModules;\r\n\r\n/******/ \t// __webpack_public_path__\r\n/******/ \t__webpack_require__.p = \"\";\r\n\r\n/******/ \t// Load entry module and return exports\r\n/******/ \treturn __webpack_require__(0);\r\n/******/ })\r\n/************************************************************************/\r\n/******/ ([\r\n/* 0 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t/**\r\n\t * Export echarts as CommonJS module\r\n\t */\r\n\tmodule.exports = __webpack_require__(1);\r\n\r\n\t__webpack_require__(99);\r\n\t__webpack_require__(133);\r\n\t__webpack_require__(138);\r\n\t__webpack_require__(112);\r\n\r\n/***/ },\r\n/* 1 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t// Enable DEV mode when using source code without build. which has no __DEV__ variable\r\n\t// In build process 'typeof __DEV__' will be replace with 'boolean'\r\n\t// So this code will be removed or disabled anyway after built.\r\n\tif (false) {\r\n\t    // In browser\r\n\t    if (typeof window !== 'undefined') {\r\n\t        window.__DEV__ = true;\r\n\t    }\r\n\t    // In node\r\n\t    else if (typeof global !== 'undefined') {\r\n\t        global.__DEV__ = true;\r\n\t    }\r\n\t}\r\n\r\n\t/*!\r\n\t * ECharts, a javascript interactive chart library.\r\n\t *\r\n\t * Copyright (c) 2015, Baidu Inc.\r\n\t * All rights reserved.\r\n\t *\r\n\t * LICENSE\r\n\t * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\r\n\t */\r\n\r\n\t/**\r\n\t * @module echarts\r\n\t */\r\n\r\n\r\n\t    var env = __webpack_require__(2);\r\n\r\n\t    var GlobalModel = __webpack_require__(3);\r\n\t    var ExtensionAPI = __webpack_require__(25);\r\n\t    var CoordinateSystemManager = __webpack_require__(26);\r\n\t    var OptionManager = __webpack_require__(27);\r\n\r\n\t    var ComponentModel = __webpack_require__(19);\r\n\t    var SeriesModel = __webpack_require__(28);\r\n\r\n\t    var ComponentView = __webpack_require__(29);\r\n\t    var ChartView = __webpack_require__(42);\r\n\t    var graphic = __webpack_require__(43);\r\n\r\n\t    var zrender = __webpack_require__(81);\r\n\t    var zrUtil = __webpack_require__(4);\r\n\t    var colorTool = __webpack_require__(39);\r\n\t    var Eventful = __webpack_require__(33);\r\n\t    var timsort = __webpack_require__(85);\r\n\r\n\t    var each = zrUtil.each;\r\n\r\n\t    var PRIORITY_PROCESSOR_FILTER = 1000;\r\n\t    var PRIORITY_PROCESSOR_STATISTIC = 5000;\r\n\r\n\r\n\t    var PRIORITY_VISUAL_LAYOUT = 1000;\r\n\t    var PRIORITY_VISUAL_GLOBAL = 2000;\r\n\t    var PRIORITY_VISUAL_CHART = 3000;\r\n\t    var PRIORITY_VISUAL_COMPONENT = 4000;\r\n\t    var PRIORITY_VISUAL_BRUSH = 5000;\r\n\r\n\t    // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\r\n\t    // where they must not be invoked nestedly, except the only case: invoke\r\n\t    // dispatchAction with updateMethod \"none\" in main process.\r\n\t    // This flag is used to carry out this rule.\r\n\t    // All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\r\n\t    var IN_MAIN_PROCESS = '__flag_in_main_process';\r\n\t    var HAS_GRADIENT_OR_PATTERN_BG = '_hasGradientOrPatternBg';\r\n\r\n\t    function createRegisterEventWithLowercaseName(method) {\r\n\t        return function (eventName, handler, context) {\r\n\t            // Event name is all lowercase\r\n\t            eventName = eventName && eventName.toLowerCase();\r\n\t            Eventful.prototype[method].call(this, eventName, handler, context);\r\n\t        };\r\n\t    }\r\n\t    /**\r\n\t     * @module echarts~MessageCenter\r\n\t     */\r\n\t    function MessageCenter() {\r\n\t        Eventful.call(this);\r\n\t    }\r\n\t    MessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\r\n\t    MessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\r\n\t    MessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\r\n\t    zrUtil.mixin(MessageCenter, Eventful);\r\n\t    /**\r\n\t     * @module echarts~ECharts\r\n\t     */\r\n\t    function ECharts (dom, theme, opts) {\r\n\t        opts = opts || {};\r\n\r\n\t        // Get theme by name\r\n\t        if (typeof theme === 'string') {\r\n\t            theme = themeStorage[theme];\r\n\t        }\r\n\r\n\t        /**\r\n\t         * @type {string}\r\n\t         */\r\n\t        this.id;\r\n\t        /**\r\n\t         * Group id\r\n\t         * @type {string}\r\n\t         */\r\n\t        this.group;\r\n\t        /**\r\n\t         * @type {HTMLDomElement}\r\n\t         * @private\r\n\t         */\r\n\t        this._dom = dom;\r\n\t        /**\r\n\t         * @type {module:zrender/ZRender}\r\n\t         * @private\r\n\t         */\r\n\t        this._zr = zrender.init(dom, {\r\n\t            renderer: opts.renderer || 'canvas',\r\n\t            devicePixelRatio: opts.devicePixelRatio\r\n\t        });\r\n\r\n\t        /**\r\n\t         * @type {Object}\r\n\t         * @private\r\n\t         */\r\n\t        this._theme = zrUtil.clone(theme);\r\n\r\n\t        /**\r\n\t         * @type {Array.<module:echarts/view/Chart>}\r\n\t         * @private\r\n\t         */\r\n\t        this._chartsViews = [];\r\n\r\n\t        /**\r\n\t         * @type {Object.<string, module:echarts/view/Chart>}\r\n\t         * @private\r\n\t         */\r\n\t        this._chartsMap = {};\r\n\r\n\t        /**\r\n\t         * @type {Array.<module:echarts/view/Component>}\r\n\t         * @private\r\n\t         */\r\n\t        this._componentsViews = [];\r\n\r\n\t        /**\r\n\t         * @type {Object.<string, module:echarts/view/Component>}\r\n\t         * @private\r\n\t         */\r\n\t        this._componentsMap = {};\r\n\r\n\t        /**\r\n\t         * @type {module:echarts/ExtensionAPI}\r\n\t         * @private\r\n\t         */\r\n\t        this._api = new ExtensionAPI(this);\r\n\r\n\t        /**\r\n\t         * @type {module:echarts/CoordinateSystem}\r\n\t         * @private\r\n\t         */\r\n\t        this._coordSysMgr = new CoordinateSystemManager();\r\n\r\n\t        Eventful.call(this);\r\n\r\n\t        /**\r\n\t         * @type {module:echarts~MessageCenter}\r\n\t         * @private\r\n\t         */\r\n\t        this._messageCenter = new MessageCenter();\r\n\r\n\t        // Init mouse events\r\n\t        this._initEvents();\r\n\r\n\t        // In case some people write `window.onresize = chart.resize`\r\n\t        this.resize = zrUtil.bind(this.resize, this);\r\n\r\n\t        // Can't dispatch action during rendering procedure\r\n\t        this._pendingActions = [];\r\n\t        // Sort on demand\r\n\t        function prioritySortFunc(a, b) {\r\n\t            return a.prio - b.prio;\r\n\t        }\r\n\t        timsort(visualFuncs, prioritySortFunc);\r\n\t        timsort(dataProcessorFuncs, prioritySortFunc);\r\n\t    }\r\n\r\n\t    var echartsProto = ECharts.prototype;\r\n\r\n\t    /**\r\n\t     * @return {HTMLDomElement}\r\n\t     */\r\n\t    echartsProto.getDom = function () {\r\n\t        return this._dom;\r\n\t    };\r\n\r\n\t    /**\r\n\t     * @return {module:zrender~ZRender}\r\n\t     */\r\n\t    echartsProto.getZr = function () {\r\n\t        return this._zr;\r\n\t    };\r\n\r\n\t    /**\r\n\t     * @param {Object} option\r\n\t     * @param {boolean} notMerge\r\n\t     * @param {boolean} [notRefreshImmediately=false] Useful when setOption frequently.\r\n\t     */\r\n\t    echartsProto.setOption = function (option, notMerge, notRefreshImmediately) {\r\n\t        if (true) {\r\n\t            zrUtil.assert(!this[IN_MAIN_PROCESS], '`setOption` should not be called during main process.');\r\n\t        }\r\n\r\n\t        this[IN_MAIN_PROCESS] = true;\r\n\r\n\t        if (!this._model || notMerge) {\r\n\t            var optionManager = new OptionManager(this._api);\r\n\t            var theme = this._theme;\r\n\t            var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\r\n\t            ecModel.init(null, null, theme, optionManager);\r\n\t        }\r\n\r\n\t        this._model.setOption(option, optionPreprocessorFuncs);\r\n\r\n\t        updateMethods.prepareAndUpdate.call(this);\r\n\r\n\t        this[IN_MAIN_PROCESS] = false;\r\n\r\n\t        this._flushPendingActions();\r\n\r\n\t        !notRefreshImmediately && this._zr.refreshImmediately();\r\n\t    };\r\n\r\n\t    /**\r\n\t     * @DEPRECATED\r\n\t     */\r\n\t    echartsProto.setTheme = function () {\r\n\t        console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\r\n\t    };\r\n\r\n\t    /**\r\n\t     * @return {module:echarts/model/Global}\r\n\t     */\r\n\t    echartsProto.getModel = function () {\r\n\t        return this._model;\r\n\t    };\r\n\r\n\t    /**\r\n\t     * @return {Object}\r\n\t     */\r\n\t    echartsProto.getOption = function () {\r\n\t        return this._model.getOption();\r\n\t    };\r\n\r\n\t    /**\r\n\t     * @return {number}\r\n\t     */\r\n\t    echartsProto.getWidth = function () {\r\n\t        return this._zr.getWidth();\r\n\t    };\r\n\r\n\t    /**\r\n\t     * @return {number}\r\n\t     */\r\n\t    echartsProto.getHeight = function () {\r\n\t        return this._zr.getHeight();\r\n\t    };\r\n\r\n\t    /**\r\n\t     * Get canvas which has all thing rendered\r\n\t     * @param {Object} opts\r\n\t     * @param {string} [opts.backgroundColor]\r\n\t     */\r\n\t    echartsProto.getRenderedCanvas = function (opts) {\r\n\t        if (!env.canvasSupported) {\r\n\t            return;\r\n\t        }\r\n\t        opts = opts || {};\r\n\t        opts.pixelRatio = opts.pixelRatio || 1;\r\n\t        opts.backgroundColor = opts.backgroundColor\r\n\t            || this._model.get('backgroundColor');\r\n\t        var zr = this._zr;\r\n\t        var list = zr.storage.getDisplayList();\r\n\t        // Stop animations\r\n\t        zrUtil.each(list, function (el) {\r\n\t            el.stopAnimation(true);\r\n\t        });\r\n\t        return zr.painter.getRenderedCanvas(opts);\r\n\t    };\r\n\t    /**\r\n\t     * @return {string}\r\n\t     * @param {Object} opts\r\n\t     * @param {string} [opts.type='png']\r\n\t     * @param {string} [opts.pixelRatio=1]\r\n\t     * @param {string} [opts.backgroundColor]\r\n\t     */\r\n\t    echartsProto.getDataURL = function (opts) {\r\n\t        opts = opts || {};\r\n\t        var excludeComponents = opts.excludeComponents;\r\n\t        var ecModel = this._model;\r\n\t        var excludesComponentViews = [];\r\n\t        var self = this;\r\n\r\n\t        each(excludeComponents, function (componentType) {\r\n\t            ecModel.eachComponent({\r\n\t                mainType: componentType\r\n\t            }, function (component) {\r\n\t                var view = self._componentsMap[component.__viewId];\r\n\t                if (!view.group.ignore) {\r\n\t                    excludesComponentViews.push(view);\r\n\t                    view.group.ignore = true;\r\n\t                }\r\n\t            });\r\n\t        });\r\n\r\n\t        var url = this.getRenderedCanvas(opts).toDataURL(\r\n\t            'image/' + (opts && opts.type || 'png')\r\n\t        );\r\n\r\n\t        each(excludesComponentViews, function (view) {\r\n\t            view.group.ignore = false;\r\n\t        });\r\n\t        return url;\r\n\t    };\r\n\r\n\r\n\t    /**\r\n\t     * @return {string}\r\n\t     * @param {Object} opts\r\n\t     * @param {string} [opts.type='png']\r\n\t     * @param {string} [opts.pixelRatio=1]\r\n\t     * @param {string} [opts.backgroundColor]\r\n\t     */\r\n\t    echartsProto.getConnectedDataURL = function (opts) {\r\n\t        if (!env.canvasSupported) {\r\n\t            return;\r\n\t        }\r\n\t        var groupId = this.group;\r\n\t        var mathMin = Math.min;\r\n\t        var mathMax = Math.max;\r\n\t        var MAX_NUMBER = Infinity;\r\n\t        if (connectedGroups[groupId]) {\r\n\t            var left = MAX_NUMBER;\r\n\t            var top = MAX_NUMBER;\r\n\t            var right = -MAX_NUMBER;\r\n\t            var bottom = -MAX_NUMBER;\r\n\t            var canvasList = [];\r\n\t            var dpr = (opts && opts.pixelRatio) || 1;\r\n\t            for (var id in instances) {\r\n\t                var chart = instances[id];\r\n\t                if (chart.group === groupId) {\r\n\t                    var canvas = chart.getRenderedCanvas(\r\n\t                        zrUtil.clone(opts)\r\n\t                    );\r\n\t                    var boundingRect = chart.getDom().getBoundingClientRect();\r\n\t                    left = mathMin(boundingRect.left, left);\r\n\t                    top = mathMin(boundingRect.top, top);\r\n\t                    right = mathMax(boundingRect.right, right);\r\n\t                    bottom = mathMax(boundingRect.bottom, bottom);\r\n\t                    canvasList.push({\r\n\t                        dom: canvas,\r\n\t                        left: boundingRect.left,\r\n\t                        top: boundingRect.top\r\n\t                    });\r\n\t                }\r\n\t            }\r\n\r\n\t            left *= dpr;\r\n\t            top *= dpr;\r\n\t            right *= dpr;\r\n\t            bottom *= dpr;\r\n\t            var width = right - left;\r\n\t            var height = bottom - top;\r\n\t            var targetCanvas = zrUtil.createCanvas();\r\n\t            targetCanvas.width = width;\r\n\t            targetCanvas.height = height;\r\n\t            var zr = zrender.init(targetCanvas);\r\n\r\n\t            each(canvasList, function (item) {\r\n\t                var img = new graphic.Image({\r\n\t                    style: {\r\n\t                        x: item.left * dpr - left,\r\n\t                        y: item.top * dpr - top,\r\n\t                        image: item.dom\r\n\t                    }\r\n\t                });\r\n\t                zr.add(img);\r\n\t            });\r\n\t            zr.refreshImmediately();\r\n\r\n\t            return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\r\n\t        }\r\n\t        else {\r\n\t            return this.getDataURL(opts);\r\n\t        }\r\n\t    };\r\n\r\n\t    var updateMethods = {\r\n\r\n\r\n\t        /**\r\n\t         * @param {Object} payload\r\n\t         * @private\r\n\t         */\r\n\t        update: function (payload) {\r\n\t            // console.time && console.time('update');\r\n\r\n\t            var ecModel = this._model;\r\n\t            var api = this._api;\r\n\t            var coordSysMgr = this._coordSysMgr;\r\n\t            var zr = this._zr;\r\n\t            // update before setOption\r\n\t            if (!ecModel) {\r\n\t                return;\r\n\t            }\r\n\r\n\t            // Fixme First time update ?\r\n\t            ecModel.restoreData();\r\n\r\n\t            // TODO\r\n\t            // Save total ecModel here for undo/redo (after restoring data and before processing data).\r\n\t            // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\r\n\r\n\t            // Create new coordinate system each update\r\n\t            // In LineView may save the old coordinate system and use it to get the orignal point\r\n\t            coordSysMgr.create(this._model, this._api);\r\n\r\n\t            processData.call(this, ecModel, api);\r\n\r\n\t            stackSeriesData.call(this, ecModel);\r\n\r\n\t            coordSysMgr.update(ecModel, api);\r\n\r\n\t            doVisualEncoding.call(this, ecModel, payload);\r\n\r\n\t            doRender.call(this, ecModel, payload);\r\n\r\n\t            // Set background\r\n\t            var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\r\n\r\n\t            var painter = zr.painter;\r\n\t            // TODO all use clearColor ?\r\n\t            if (painter.isSingleCanvas && painter.isSingleCanvas()) {\r\n\t                zr.configLayer(0, {\r\n\t                    clearColor: backgroundColor\r\n\t                });\r\n\t            }\r\n\t            else {\r\n\t                // In IE8\r\n\t                if (!env.canvasSupported) {\r\n\t                    var colorArr = colorTool.parse(backgroundColor);\r\n\t                    backgroundColor = colorTool.stringify(colorArr, 'rgb');\r\n\t                    if (colorArr[3] === 0) {\r\n\t                        backgroundColor = 'transparent';\r\n\t                    }\r\n\t                }\r\n\t                if (backgroundColor.colorStops || backgroundColor.image) {\r\n\t                    // Gradient background\r\n\t                    // FIXME Fixed layer？\r\n\t                    zr.configLayer(0, {\r\n\t                        clearColor: backgroundColor\r\n\t                    });\r\n\t                    this[HAS_GRADIENT_OR_PATTERN_BG] = true;\r\n\r\n\t                    this._dom.style.background = 'transparent';\r\n\t                }\r\n\t                else {\r\n\t                    if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\r\n\t                        zr.configLayer(0, {\r\n\t                            clearColor: null\r\n\t                        });\r\n\t                    }\r\n\t                    this[HAS_GRADIENT_OR_PATTERN_BG] = false;\r\n\r\n\t                    this._dom.style.background = backgroundColor;\r\n\t                }\r\n\t            }\r\n\r\n\t            // console.time && console.timeEnd('update');\r\n\t        },\r\n\r\n\t        // PENDING\r\n\t        /**\r\n\t         * @param {Object} payload\r\n\t         * @private\r\n\t         */\r\n\t        updateView: function (payload) {\r\n\t            var ecModel = this._model;\r\n\r\n\t            // update before setOption\r\n\t            if (!ecModel) {\r\n\t                return;\r\n\t            }\r\n\r\n\t            ecModel.eachSeries(function (seriesModel) {\r\n\t                seriesModel.getData().clearAllVisual();\r\n\t            });\r\n\r\n\t            doVisualEncoding.call(this, ecModel, payload);\r\n\r\n\t            invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\r\n\t        },\r\n\r\n\t        /**\r\n\t         * @param {Object} payload\r\n\t         * @private\r\n\t         */\r\n\t        updateVisual: function (payload) {\r\n\t            var ecModel = this._model;\r\n\r\n\t            // update before setOption\r\n\t            if (!ecModel) {\r\n\t                return;\r\n\t            }\r\n\r\n\t            ecModel.eachSeries(function (seriesModel) {\r\n\t                seriesModel.getData().clearAllVisual();\r\n\t            });\r\n\r\n\t            doVisualEncoding.call(this, ecModel, payload);\r\n\r\n\t            invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\r\n\t        },\r\n\r\n\t        /**\r\n\t         * @param {Object} payload\r\n\t         * @private\r\n\t         */\r\n\t        updateLayout: function (payload) {\r\n\t            var ecModel = this._model;\r\n\r\n\t            // update before setOption\r\n\t            if (!ecModel) {\r\n\t                return;\r\n\t            }\r\n\r\n\t            doLayout.call(this, ecModel, payload);\r\n\r\n\t            invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\r\n\t        },\r\n\r\n\t        /**\r\n\t         * @param {Object} payload\r\n\t         * @private\r\n\t         */\r\n\t        highlight: function (payload) {\r\n\t            toggleHighlight.call(this, 'highlight', payload);\r\n\t        },\r\n\r\n\t        /**\r\n\t         * @param {Object} payload\r\n\t         * @private\r\n\t         */\r\n\t        downplay: function (payload) {\r\n\t            toggleHighlight.call(this, 'downplay', payload);\r\n\t        },\r\n\r\n\t        /**\r\n\t         * @param {Object} payload\r\n\t         * @private\r\n\t         */\r\n\t        prepareAndUpdate: function (payload) {\r\n\t            var ecModel = this._model;\r\n\r\n\t            prepareView.call(this, 'component', ecModel);\r\n\r\n\t            prepareView.call(this, 'chart', ecModel);\r\n\r\n\t            updateMethods.update.call(this, payload);\r\n\t        }\r\n\t    };\r\n\r\n\t    /**\r\n\t     * @param {Object} payload\r\n\t     * @private\r\n\t     */\r\n\t    function toggleHighlight(method, payload) {\r\n\t        var ecModel = this._model;\r\n\r\n\t        // dispatchAction before setOption\r\n\t        if (!ecModel) {\r\n\t            return;\r\n\t        }\r\n\r\n\t        ecModel.eachComponent(\r\n\t            {mainType: 'series', query: payload},\r\n\t            function (seriesModel, index) {\r\n\t                var chartView = this._chartsMap[seriesModel.__viewId];\r\n\t                if (chartView && chartView.__alive) {\r\n\t                    chartView[method](\r\n\t                        seriesModel, ecModel, this._api, payload\r\n\t                    );\r\n\t                }\r\n\t            },\r\n\t            this\r\n\t        );\r\n\t    }\r\n\r\n\t    /**\r\n\t     * Resize the chart\r\n\t     */\r\n\t    echartsProto.resize = function () {\r\n\t        if (true) {\r\n\t            zrUtil.assert(!this[IN_MAIN_PROCESS], '`resize` should not be called during main process.');\r\n\t        }\r\n\r\n\t        this[IN_MAIN_PROCESS] = true;\r\n\r\n\t        this._zr.resize();\r\n\r\n\t        var optionChanged = this._model && this._model.resetOption('media');\r\n\t        updateMethods[optionChanged ? 'prepareAndUpdate' : 'update'].call(this);\r\n\r\n\t        // Resize loading effect\r\n\t        this._loadingFX && this._loadingFX.resize();\r\n\r\n\t        this[IN_MAIN_PROCESS] = false;\r\n\r\n\t        this._flushPendingActions();\r\n\t    };\r\n\r\n\t    var defaultLoadingEffect = __webpack_require__(93);\r\n\t    /**\r\n\t     * Show loading effect\r\n\t     * @param  {string} [name='default']\r\n\t     * @param  {Object} [cfg]\r\n\t     */\r\n\t    echartsProto.showLoading = function (name, cfg) {\r\n\t        if (zrUtil.isObject(name)) {\r\n\t            cfg = name;\r\n\t            name = 'default';\r\n\t        }\r\n\t        this.hideLoading();\r\n\t        var el = defaultLoadingEffect(this._api, cfg);\r\n\t        var zr = this._zr;\r\n\t        this._loadingFX = el;\r\n\r\n\t        zr.add(el);\r\n\t    };\r\n\r\n\t    /**\r\n\t     * Hide loading effect\r\n\t     */\r\n\t    echartsProto.hideLoading = function () {\r\n\t        this._loadingFX && this._zr.remove(this._loadingFX);\r\n\t        this._loadingFX = null;\r\n\t    };\r\n\r\n\t    /**\r\n\t     * @param {Object} eventObj\r\n\t     * @return {Object}\r\n\t     */\r\n\t    echartsProto.makeActionFromEvent = function (eventObj) {\r\n\t        var payload = zrUtil.extend({}, eventObj);\r\n\t        payload.type = eventActionMap[eventObj.type];\r\n\t        return payload;\r\n\t    };\r\n\r\n\t    /**\r\n\t     * @pubilc\r\n\t     * @param {Object} payload\r\n\t     * @param {string} [payload.type] Action type\r\n\t     * @param {boolean} [silent=false] Whether trigger event.\r\n\t     */\r\n\t    echartsProto.dispatchAction = function (payload, silent) {\r\n\t        var actionWrap = actions[payload.type];\r\n\t        if (!actionWrap) {\r\n\t            return;\r\n\t        }\r\n\r\n\t        var actionInfo = actionWrap.actionInfo;\r\n\t        var updateMethod = actionInfo.update || 'update';\r\n\r\n\t        // if (__DEV__) {\r\n\t        //     zrUtil.assert(\r\n\t        //         !this[IN_MAIN_PROCESS],\r\n\t        //         '`dispatchAction` should not be called during main process.'\r\n\t        //         + 'unless updateMathod is \"none\".'\r\n\t        //     );\r\n\t        // }\r\n\r\n\t        // May dispatchAction in rendering procedure\r\n\t        if (this[IN_MAIN_PROCESS]) {\r\n\t            this._pendingActions.push(payload);\r\n\t            return;\r\n\t        }\r\n\r\n\t        this[IN_MAIN_PROCESS] = true;\r\n\r\n\t        var payloads = [payload];\r\n\t        var batched = false;\r\n\t        // Batch action\r\n\t        if (payload.batch) {\r\n\t            batched = true;\r\n\t            payloads = zrUtil.map(payload.batch, function (item) {\r\n\t                item = zrUtil.defaults(zrUtil.extend({}, item), payload);\r\n\t                item.batch = null;\r\n\t                return item;\r\n\t            });\r\n\t        }\r\n\r\n\t        var eventObjBatch = [];\r\n\t        var eventObj;\r\n\t        var isHighlightOrDownplay = payload.type === 'highlight' || payload.type === 'downplay';\r\n\t        for (var i = 0; i < payloads.length; i++) {\r\n\t            var batchItem = payloads[i];\r\n\t            // Action can specify the event by return it.\r\n\t            eventObj = actionWrap.action(batchItem, this._model);\r\n\t            // Emit event outside\r\n\t            eventObj = eventObj || zrUtil.extend({}, batchItem);\r\n\t            // Convert type to eventType\r\n\t            eventObj.type = actionInfo.event || eventObj.type;\r\n\t            eventObjBatch.push(eventObj);\r\n\r\n\t            // Highlight and downplay are special.\r\n\t            isHighlightOrDownplay && updateMethods[updateMethod].call(this, batchItem);\r\n\t        }\r\n\r\n\t        (updateMethod !== 'none' && !isHighlightOrDownplay)\r\n\t            && updateMethods[updateMethod].call(this, payload);\r\n\r\n\t        // Follow the rule of action batch\r\n\t        if (batched) {\r\n\t            eventObj = {\r\n\t                type: actionInfo.event || payload.type,\r\n\t                batch: eventObjBatch\r\n\t            };\r\n\t        }\r\n\t        else {\r\n\t            eventObj = eventObjBatch[0];\r\n\t        }\r\n\r\n\t        this[IN_MAIN_PROCESS] = false;\r\n\r\n\t        !silent && this._messageCenter.trigger(eventObj.type, eventObj);\r\n\r\n\t        this._flushPendingActions();\r\n\r\n\t    };\r\n\r\n\t    echartsProto._flushPendingActions = function () {\r\n\t        var pendingActions = this._pendingActions;\r\n\t        while (pendingActions.length) {\r\n\t            var payload = pendingActions.shift();\r\n\t            this.dispatchAction(payload);\r\n\t        }\r\n\t    };\r\n\r\n\t    /**\r\n\t     * Register event\r\n\t     * @method\r\n\t     */\r\n\t    echartsProto.on = createRegisterEventWithLowercaseName('on');\r\n\t    echartsProto.off = createRegisterEventWithLowercaseName('off');\r\n\t    echartsProto.one = createRegisterEventWithLowercaseName('one');\r\n\r\n\t    /**\r\n\t     * @param {string} methodName\r\n\t     * @private\r\n\t     */\r\n\t    function invokeUpdateMethod(methodName, ecModel, payload) {\r\n\t        var api = this._api;\r\n\r\n\t        // Update all components\r\n\t        each(this._componentsViews, function (component) {\r\n\t            var componentModel = component.__model;\r\n\t            component[methodName](componentModel, ecModel, api, payload);\r\n\r\n\t            updateZ(componentModel, component);\r\n\t        }, this);\r\n\r\n\t        // Upate all charts\r\n\t        ecModel.eachSeries(function (seriesModel, idx) {\r\n\t            var chart = this._chartsMap[seriesModel.__viewId];\r\n\t            chart[methodName](seriesModel, ecModel, api, payload);\r\n\r\n\t            updateZ(seriesModel, chart);\r\n\r\n\t            updateProgressiveAndBlend(seriesModel, chart);\r\n\t        }, this);\r\n\r\n\t        // If use hover layer\r\n\t        updateHoverLayerStatus(this._zr, ecModel);\r\n\t    }\r\n\r\n\t    /**\r\n\t     * Prepare view instances of charts and components\r\n\t     * @param  {module:echarts/model/Global} ecModel\r\n\t     * @private\r\n\t     */\r\n\t    function prepareView(type, ecModel) {\r\n\t        var isComponent = type === 'component';\r\n\t        var viewList = isComponent ? this._componentsViews : this._chartsViews;\r\n\t        var viewMap = isComponent ? this._componentsMap : this._chartsMap;\r\n\t        var zr = this._zr;\r\n\r\n\t        for (var i = 0; i < viewList.length; i++) {\r\n\t            viewList[i].__alive = false;\r\n\t        }\r\n\r\n\t        ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\r\n\t            if (isComponent) {\r\n\t                if (componentType === 'series') {\r\n\t                    return;\r\n\t                }\r\n\t            }\r\n\t            else {\r\n\t                model = componentType;\r\n\t            }\r\n\r\n\t            // Consider: id same and type changed.\r\n\t            var viewId = model.id + '_' + model.type;\r\n\t            var view = viewMap[viewId];\r\n\t            if (!view) {\r\n\t                var classType = ComponentModel.parseClassType(model.type);\r\n\t                var Clazz = isComponent\r\n\t                    ? ComponentView.getClass(classType.main, classType.sub)\r\n\t                    : ChartView.getClass(classType.sub);\r\n\t                if (Clazz) {\r\n\t                    view = new Clazz();\r\n\t                    view.init(ecModel, this._api);\r\n\t                    viewMap[viewId] = view;\r\n\t                    viewList.push(view);\r\n\t                    zr.add(view.group);\r\n\t                }\r\n\t                else {\r\n\t                    // Error\r\n\t                    return;\r\n\t                }\r\n\t            }\r\n\r\n\t            model.__viewId = viewId;\r\n\t            view.__alive = true;\r\n\t            view.__id = viewId;\r\n\t            view.__model = model;\r\n\t        }, this);\r\n\r\n\t        for (var i = 0; i < viewList.length;) {\r\n\t            var view = viewList[i];\r\n\t            if (!view.__alive) {\r\n\t                zr.remove(view.group);\r\n\t                view.dispose(ecModel, this._api);\r\n\t                viewList.splice(i, 1);\r\n\t                delete viewMap[view.__id];\r\n\t            }\r\n\t            else {\r\n\t                i++;\r\n\t            }\r\n\t        }\r\n\t    }\r\n\r\n\t    /**\r\n\t     * Processor data in each series\r\n\t     *\r\n\t     * @param {module:echarts/model/Global} ecModel\r\n\t     * @private\r\n\t     */\r\n\t    function processData(ecModel, api) {\r\n\t        each(dataProcessorFuncs, function (process) {\r\n\t            process.func(ecModel, api);\r\n\t        });\r\n\t    }\r\n\r\n\t    /**\r\n\t     * @private\r\n\t     */\r\n\t    function stackSeriesData(ecModel) {\r\n\t        var stackedDataMap = {};\r\n\t        ecModel.eachSeries(function (series) {\r\n\t            var stack = series.get('stack');\r\n\t            var data = series.getData();\r\n\t            if (stack && data.type === 'list') {\r\n\t                var previousStack = stackedDataMap[stack];\r\n\t                if (previousStack) {\r\n\t                    data.stackedOn = previousStack;\r\n\t                }\r\n\t                stackedDataMap[stack] = data;\r\n\t            }\r\n\t        });\r\n\t    }\r\n\r\n\t    /**\r\n\t     * Layout before each chart render there series, special visual encoding stage\r\n\t     *\r\n\t     * @param {module:echarts/model/Global} ecModel\r\n\t     * @private\r\n\t     */\r\n\t    function doLayout(ecModel, payload) {\r\n\t        var api = this._api;\r\n\t        each(visualFuncs, function (visual) {\r\n\t            if (visual.isLayout) {\r\n\t                visual.func(ecModel, api, payload);\r\n\t            }\r\n\t        });\r\n\t    }\r\n\r\n\t    /**\r\n\t     * Encode visual infomation from data after data processing\r\n\t     *\r\n\t     * @param {module:echarts/model/Global} ecModel\r\n\t     * @private\r\n\t     */\r\n\t    function doVisualEncoding(ecModel, payload) {\r\n\t        var api = this._api;\r\n\t        ecModel.clearColorPalette();\r\n\t        ecModel.eachSeries(function (seriesModel) {\r\n\t            seriesModel.clearColorPalette();\r\n\t        });\r\n\t        each(visualFuncs, function (visual) {\r\n\t            visual.func(ecModel, api, payload);\r\n\t        });\r\n\t    }\r\n\r\n\t    /**\r\n\t     * Render each chart and component\r\n\t     * @private\r\n\t     */\r\n\t    function doRender(ecModel, payload) {\r\n\t        var api = this._api;\r\n\t        // Render all components\r\n\t        each(this._componentsViews, function (componentView) {\r\n\t            var componentModel = componentView.__model;\r\n\t            componentView.render(componentModel, ecModel, api, payload);\r\n\r\n\t            updateZ(componentModel, componentView);\r\n\t        }, this);\r\n\r\n\t        each(this._chartsViews, function (chart) {\r\n\t            chart.__alive = false;\r\n\t        }, this);\r\n\r\n\t        // Render all charts\r\n\t        ecModel.eachSeries(function (seriesModel, idx) {\r\n\t            var chartView = this._chartsMap[seriesModel.__viewId];\r\n\t            chartView.__alive = true;\r\n\t            chartView.render(seriesModel, ecModel, api, payload);\r\n\r\n\t            chartView.group.silent = !!seriesModel.get('silent');\r\n\r\n\t            updateZ(seriesModel, chartView);\r\n\r\n\t            updateProgressiveAndBlend(seriesModel, chartView);\r\n\r\n\t        }, this);\r\n\r\n\t        // If use hover layer\r\n\t        updateHoverLayerStatus(this._zr, ecModel);\r\n\r\n\t        // Remove groups of unrendered charts\r\n\t        each(this._chartsViews, function (chart) {\r\n\t            if (!chart.__alive) {\r\n\t                chart.remove(ecModel, api);\r\n\t            }\r\n\t        }, this);\r\n\t    }\r\n\r\n\t    var MOUSE_EVENT_NAMES = [\r\n\t        'click', 'dblclick', 'mouseover', 'mouseout', 'mousedown', 'mouseup', 'globalout'\r\n\t    ];\r\n\t    /**\r\n\t     * @private\r\n\t     */\r\n\t    echartsProto._initEvents = function () {\r\n\t        each(MOUSE_EVENT_NAMES, function (eveName) {\r\n\t            this._zr.on(eveName, function (e) {\r\n\t                var ecModel = this.getModel();\r\n\t                var el = e.target;\r\n\t                if (el && el.dataIndex != null) {\r\n\t                    var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\r\n\t                    var params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\r\n\t                    params.event = e;\r\n\t                    params.type = eveName;\r\n\t                    this.trigger(eveName, params);\r\n\t                }\r\n\t                // If element has custom eventData of components\r\n\t                else if (el && el.eventData) {\r\n\t                    this.trigger(eveName, el.eventData);\r\n\t                }\r\n\t            }, this);\r\n\t        }, this);\r\n\r\n\t        each(eventActionMap, function (actionType, eventType) {\r\n\t            this._messageCenter.on(eventType, function (event) {\r\n\t                this.trigger(eventType, event);\r\n\t            }, this);\r\n\t        }, this);\r\n\t    };\r\n\r\n\t    /**\r\n\t     * @return {boolean}\r\n\t     */\r\n\t    echartsProto.isDisposed = function () {\r\n\t        return this._disposed;\r\n\t    };\r\n\r\n\t    /**\r\n\t     * Clear\r\n\t     */\r\n\t    echartsProto.clear = function () {\r\n\t        this.setOption({}, true);\r\n\t    };\r\n\t    /**\r\n\t     * Dispose instance\r\n\t     */\r\n\t    echartsProto.dispose = function () {\r\n\t        if (this._disposed) {\r\n\t            if (true) {\r\n\t                console.warn('Instance ' + this.id + ' has been disposed');\r\n\t            }\r\n\t            return;\r\n\t        }\r\n\t        this._disposed = true;\r\n\r\n\t        var api = this._api;\r\n\t        var ecModel = this._model;\r\n\r\n\t        each(this._componentsViews, function (component) {\r\n\t            component.dispose(ecModel, api);\r\n\t        });\r\n\t        each(this._chartsViews, function (chart) {\r\n\t            chart.dispose(ecModel, api);\r\n\t        });\r\n\r\n\t        // Dispose after all views disposed\r\n\t        this._zr.dispose();\r\n\r\n\t        delete instances[this.id];\r\n\t    };\r\n\r\n\t    zrUtil.mixin(ECharts, Eventful);\r\n\r\n\t    function updateHoverLayerStatus(zr, ecModel) {\r\n\t        var storage = zr.storage;\r\n\t        var elCount = 0;\r\n\t        storage.traverse(function (el) {\r\n\t            if (!el.isGroup) {\r\n\t                elCount++;\r\n\t            }\r\n\t        });\r\n\t        if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\r\n\t            storage.traverse(function (el) {\r\n\t                if (!el.isGroup) {\r\n\t                    el.useHoverLayer = true;\r\n\t                }\r\n\t            });\r\n\t        }\r\n\t    }\r\n\t    /**\r\n\t     * Update chart progressive and blend.\r\n\t     * @param {module:echarts/model/Series|module:echarts/model/Component} model\r\n\t     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\r\n\t     */\r\n\t    function updateProgressiveAndBlend(seriesModel, chartView) {\r\n\t        // Progressive configuration\r\n\t        var elCount = 0;\r\n\t        chartView.group.traverse(function (el) {\r\n\t            if (el.type !== 'group' && !el.ignore) {\r\n\t                elCount++;\r\n\t            }\r\n\t        });\r\n\t        var frameDrawNum = +seriesModel.get('progressive');\r\n\t        var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\r\n\t        if (needProgressive) {\r\n\t            chartView.group.traverse(function (el) {\r\n\t                // FIXME marker and other components\r\n\t                if (!el.isGroup) {\r\n\t                    el.progressive = needProgressive ?\r\n\t                        Math.floor(elCount++ / frameDrawNum) : -1;\r\n\t                    if (needProgressive) {\r\n\t                        el.stopAnimation(true);\r\n\t                    }\r\n\t                }\r\n\t            });\r\n\t        }\r\n\r\n\t        // Blend configration\r\n\t        var blendMode = seriesModel.get('blendMode') || null;\r\n\t        if (true) {\r\n\t            if (!env.canvasSupported && blendMode && blendMode !== 'source-over') {\r\n\t                console.warn('Only canvas support blendMode');\r\n\t            }\r\n\t        }\r\n\t        chartView.group.traverse(function (el) {\r\n\t            // FIXME marker and other components\r\n\t            if (!el.isGroup) {\r\n\t                el.setStyle('blend', blendMode);\r\n\t            }\r\n\t        });\r\n\t    }\r\n\t    /**\r\n\t     * @param {module:echarts/model/Series|module:echarts/model/Component} model\r\n\t     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\r\n\t     */\r\n\t    function updateZ(model, view) {\r\n\t        var z = model.get('z');\r\n\t        var zlevel = model.get('zlevel');\r\n\t        // Set z and zlevel\r\n\t        view.group.traverse(function (el) {\r\n\t            if (el.type !== 'group') {\r\n\t                z != null && (el.z = z);\r\n\t                zlevel != null && (el.zlevel = zlevel);\r\n\t            }\r\n\t        });\r\n\t    }\r\n\t    /**\r\n\t     * @type {Array.<Function>}\r\n\t     * @inner\r\n\t     */\r\n\t    var actions = [];\r\n\r\n\t    /**\r\n\t     * Map eventType to actionType\r\n\t     * @type {Object}\r\n\t     */\r\n\t    var eventActionMap = {};\r\n\r\n\t    /**\r\n\t     * Data processor functions of each stage\r\n\t     * @type {Array.<Object.<string, Function>>}\r\n\t     * @inner\r\n\t     */\r\n\t    var dataProcessorFuncs = [];\r\n\r\n\t    /**\r\n\t     * @type {Array.<Function>}\r\n\t     * @inner\r\n\t     */\r\n\t    var optionPreprocessorFuncs = [];\r\n\r\n\t    /**\r\n\t     * Visual encoding functions of each stage\r\n\t     * @type {Array.<Object.<string, Function>>}\r\n\t     * @inner\r\n\t     */\r\n\t    var visualFuncs = [];\r\n\t    /**\r\n\t     * Theme storage\r\n\t     * @type {Object.<key, Object>}\r\n\t     */\r\n\t    var themeStorage = {};\r\n\r\n\r\n\t    var instances = {};\r\n\t    var connectedGroups = {};\r\n\r\n\t    var idBase = new Date() - 0;\r\n\t    var groupIdBase = new Date() - 0;\r\n\t    var DOM_ATTRIBUTE_KEY = '_echarts_instance_';\r\n\t    /**\r\n\t     * @alias module:echarts\r\n\t     */\r\n\t    var echarts = {\r\n\t        /**\r\n\t         * @type {number}\r\n\t         */\r\n\t        version: '3.2.2',\r\n\t        dependencies: {\r\n\t            zrender: '3.1.2'\r\n\t        }\r\n\t    };\r\n\r\n\t    function enableConnect(chart) {\r\n\r\n\t        var STATUS_PENDING = 0;\r\n\t        var STATUS_UPDATING = 1;\r\n\t        var STATUS_UPDATED = 2;\r\n\t        var STATUS_KEY = '__connectUpdateStatus';\r\n\t        function updateConnectedChartsStatus(charts, status) {\r\n\t            for (var i = 0; i < charts.length; i++) {\r\n\t                var otherChart = charts[i];\r\n\t                otherChart[STATUS_KEY] = status;\r\n\t            }\r\n\t        }\r\n\t        zrUtil.each(eventActionMap, function (actionType, eventType) {\r\n\t            chart._messageCenter.on(eventType, function (event) {\r\n\t                if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\r\n\t                    var action = chart.makeActionFromEvent(event);\r\n\t                    var otherCharts = [];\r\n\t                    for (var id in instances) {\r\n\t                        var otherChart = instances[id];\r\n\t                        if (otherChart !== chart && otherChart.group === chart.group) {\r\n\t                            otherCharts.push(otherChart);\r\n\t                        }\r\n\t                    }\r\n\t                    updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\r\n\t                    each(otherCharts, function (otherChart) {\r\n\t                        if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\r\n\t                            otherChart.dispatchAction(action);\r\n\t                        }\r\n\t                    });\r\n\t                    updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\r\n\t                }\r\n\t            });\r\n\t        });\r\n\r\n\t    }\r\n\t    /**\r\n\t     * @param {HTMLDomElement} dom\r\n\t     * @param {Object} [theme]\r\n\t     * @param {Object} opts\r\n\t     */\r\n\t    echarts.init = function (dom, theme, opts) {\r\n\t        if (true) {\r\n\t            // Check version\r\n\t            if ((zrender.version.replace('.', '') - 0) < (echarts.dependencies.zrender.replace('.', '') - 0)) {\r\n\t                throw new Error(\r\n\t                    'ZRender ' + zrender.version\r\n\t                    + ' is too old for ECharts ' + echarts.version\r\n\t                    + '. Current version need ZRender '\r\n\t                    + echarts.dependencies.zrender + '+'\r\n\t                );\r\n\t            }\r\n\t            if (!dom) {\r\n\t                throw new Error('Initialize failed: invalid dom.');\r\n\t            }\r\n\t            if (zrUtil.isDom(dom) && dom.nodeName.toUpperCase() !== 'CANVAS' && (!dom.clientWidth || !dom.clientHeight)) {\r\n\t                console.warn('Can\\'t get dom width or height');\r\n\t            }\r\n\t        }\r\n\r\n\t        var chart = new ECharts(dom, theme, opts);\r\n\t        chart.id = 'ec_' + idBase++;\r\n\t        instances[chart.id] = chart;\r\n\r\n\t        dom.setAttribute &&\r\n\t            dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\r\n\r\n\t        enableConnect(chart);\r\n\r\n\t        return chart;\r\n\t    };\r\n\r\n\t    /**\r\n\t     * @return {string|Array.<module:echarts~ECharts>} groupId\r\n\t     */\r\n\t    echarts.connect = function (groupId) {\r\n\t        // Is array of charts\r\n\t        if (zrUtil.isArray(groupId)) {\r\n\t            var charts = groupId;\r\n\t            groupId = null;\r\n\t            // If any chart has group\r\n\t            zrUtil.each(charts, function (chart) {\r\n\t                if (chart.group != null) {\r\n\t                    groupId = chart.group;\r\n\t                }\r\n\t            });\r\n\t            groupId = groupId || ('g_' + groupIdBase++);\r\n\t            zrUtil.each(charts, function (chart) {\r\n\t                chart.group = groupId;\r\n\t            });\r\n\t        }\r\n\t        connectedGroups[groupId] = true;\r\n\t        return groupId;\r\n\t    };\r\n\r\n\t    /**\r\n\t     * @return {string} groupId\r\n\t     */\r\n\t    echarts.disConnect = function (groupId) {\r\n\t        connectedGroups[groupId] = false;\r\n\t    };\r\n\r\n\t    /**\r\n\t     * Dispose a chart instance\r\n\t     * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\r\n\t     */\r\n\t    echarts.dispose = function (chart) {\r\n\t        if (zrUtil.isDom(chart)) {\r\n\t            chart = echarts.getInstanceByDom(chart);\r\n\t        }\r\n\t        else if (typeof chart === 'string') {\r\n\t            chart = instances[chart];\r\n\t        }\r\n\t        if ((chart instanceof ECharts) && !chart.isDisposed()) {\r\n\t            chart.dispose();\r\n\t        }\r\n\t    };\r\n\r\n\t    /**\r\n\t     * @param  {HTMLDomElement} dom\r\n\t     * @return {echarts~ECharts}\r\n\t     */\r\n\t    echarts.getInstanceByDom = function (dom) {\r\n\t        var key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\r\n\t        return instances[key];\r\n\t    };\r\n\t    /**\r\n\t     * @param {string} key\r\n\t     * @return {echarts~ECharts}\r\n\t     */\r\n\t    echarts.getInstanceById = function (key) {\r\n\t        return instances[key];\r\n\t    };\r\n\r\n\t    /**\r\n\t     * Register theme\r\n\t     */\r\n\t    echarts.registerTheme = function (name, theme) {\r\n\t        themeStorage[name] = theme;\r\n\t    };\r\n\r\n\t    /**\r\n\t     * Register option preprocessor\r\n\t     * @param {Function} preprocessorFunc\r\n\t     */\r\n\t    echarts.registerPreprocessor = function (preprocessorFunc) {\r\n\t        optionPreprocessorFuncs.push(preprocessorFunc);\r\n\t    };\r\n\r\n\t    /**\r\n\t     * @param {number} [priority=1000]\r\n\t     * @param {Function} processorFunc\r\n\t     */\r\n\t    echarts.registerProcessor = function (priority, processorFunc) {\r\n\t        if (typeof priority === 'function') {\r\n\t            processorFunc = priority;\r\n\t            priority = PRIORITY_PROCESSOR_FILTER;\r\n\t        }\r\n\t        if (true) {\r\n\t            if (isNaN(priority)) {\r\n\t                throw new Error('Unkown processor priority');\r\n\t            }\r\n\t        }\r\n\t        dataProcessorFuncs.push({\r\n\t            prio: priority,\r\n\t            func: processorFunc\r\n\t        });\r\n\t    };\r\n\r\n\t    /**\r\n\t     * Usage:\r\n\t     * registerAction('someAction', 'someEvent', function () { ... });\r\n\t     * registerAction('someAction', function () { ... });\r\n\t     * registerAction(\r\n\t     *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\r\n\t     *     function () { ... }\r\n\t     * );\r\n\t     *\r\n\t     * @param {(string|Object)} actionInfo\r\n\t     * @param {string} actionInfo.type\r\n\t     * @param {string} [actionInfo.event]\r\n\t     * @param {string} [actionInfo.update]\r\n\t     * @param {string} [eventName]\r\n\t     * @param {Function} action\r\n\t     */\r\n\t    echarts.registerAction = function (actionInfo, eventName, action) {\r\n\t        if (typeof eventName === 'function') {\r\n\t            action = eventName;\r\n\t            eventName = '';\r\n\t        }\r\n\t        var actionType = zrUtil.isObject(actionInfo)\r\n\t            ? actionInfo.type\r\n\t            : ([actionInfo, actionInfo = {\r\n\t                event: eventName\r\n\t            }][0]);\r\n\r\n\t        // Event name is all lowercase\r\n\t        actionInfo.event = (actionInfo.event || actionType).toLowerCase();\r\n\t        eventName = actionInfo.event;\r\n\r\n\t        if (!actions[actionType]) {\r\n\t            actions[actionType] = {action: action, actionInfo: actionInfo};\r\n\t        }\r\n\t        eventActionMap[eventName] = actionType;\r\n\t    };\r\n\r\n\t    /**\r\n\t     * @param {string} type\r\n\t     * @param {*} CoordinateSystem\r\n\t     */\r\n\t    echarts.registerCoordinateSystem = function (type, CoordinateSystem) {\r\n\t        CoordinateSystemManager.register(type, CoordinateSystem);\r\n\t    };\r\n\r\n\t    /**\r\n\t     * Layout is a special stage of visual encoding\r\n\t     * Most visual encoding like color are common for different chart\r\n\t     * But each chart has it's own layout algorithm\r\n\t     *\r\n\t     * @param {string} [priority=1000]\r\n\t     * @param {Function} layoutFunc\r\n\t     */\r\n\t    echarts.registerLayout = function (priority, layoutFunc) {\r\n\t        if (typeof priority === 'function') {\r\n\t            layoutFunc = priority;\r\n\t            priority = PRIORITY_VISUAL_LAYOUT;\r\n\t        }\r\n\t        if (true) {\r\n\t            if (isNaN(priority)) {\r\n\t                throw new Error('Unkown layout priority');\r\n\t            }\r\n\t        }\r\n\t        visualFuncs.push({\r\n\t            prio: priority,\r\n\t            func: layoutFunc,\r\n\t            isLayout: true\r\n\t        });\r\n\t    };\r\n\r\n\t    /**\r\n\t     * @param {string} [priority=3000]\r\n\t     * @param {Function} visualFunc\r\n\t     */\r\n\t    echarts.registerVisual = function (priority, visualFunc) {\r\n\t        if (typeof priority === 'function') {\r\n\t            visualFunc = priority;\r\n\t            priority = PRIORITY_VISUAL_CHART;\r\n\t        }\r\n\t        if (true) {\r\n\t            if (isNaN(priority)) {\r\n\t                throw new Error('Unkown visual priority');\r\n\t            }\r\n\t        }\r\n\t        visualFuncs.push({\r\n\t            prio: priority,\r\n\t            func: visualFunc\r\n\t        });\r\n\t    };\r\n\r\n\t    var parseClassType = ComponentModel.parseClassType;\r\n\t    /**\r\n\t     * @param {Object} opts\r\n\t     * @param {string} [superClass]\r\n\t     */\r\n\t    echarts.extendComponentModel = function (opts, superClass) {\r\n\t        var Clazz = ComponentModel;\r\n\t        if (superClass) {\r\n\t            var classType = parseClassType(superClass);\r\n\t            Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\r\n\t        }\r\n\t        return Clazz.extend(opts);\r\n\t    };\r\n\r\n\t    /**\r\n\t     * @param {Object} opts\r\n\t     * @param {string} [superClass]\r\n\t     */\r\n\t    echarts.extendComponentView = function (opts, superClass) {\r\n\t        var Clazz = ComponentView;\r\n\t        if (superClass) {\r\n\t            var classType = parseClassType(superClass);\r\n\t            Clazz = ComponentView.getClass(classType.main, classType.sub, true);\r\n\t        }\r\n\t        return Clazz.extend(opts);\r\n\t    };\r\n\r\n\t    /**\r\n\t     * @param {Object} opts\r\n\t     * @param {string} [superClass]\r\n\t     */\r\n\t    echarts.extendSeriesModel = function (opts, superClass) {\r\n\t        var Clazz = SeriesModel;\r\n\t        if (superClass) {\r\n\t            superClass = 'series.' + superClass.replace('series.', '');\r\n\t            var classType = parseClassType(superClass);\r\n\t            Clazz = SeriesModel.getClass(classType.main, classType.sub, true);\r\n\t        }\r\n\t        return Clazz.extend(opts);\r\n\t    };\r\n\r\n\t    /**\r\n\t     * @param {Object} opts\r\n\t     * @param {string} [superClass]\r\n\t     */\r\n\t    echarts.extendChartView = function (opts, superClass) {\r\n\t        var Clazz = ChartView;\r\n\t        if (superClass) {\r\n\t            superClass.replace('series.', '');\r\n\t            var classType = parseClassType(superClass);\r\n\t            Clazz = ChartView.getClass(classType.main, true);\r\n\t        }\r\n\t        return ChartView.extend(opts);\r\n\t    };\r\n\r\n\t    /**\r\n\t     * ZRender need a canvas context to do measureText.\r\n\t     * But in node environment canvas may be created by node-canvas.\r\n\t     * So we need to specify how to create a canvas instead of using document.createElement('canvas')\r\n\t     *\r\n\t     * Be careful of using it in the browser.\r\n\t     *\r\n\t     * @param {Function} creator\r\n\t     * @example\r\n\t     *     var Canvas = require('canvas');\r\n\t     *     var echarts = require('echarts');\r\n\t     *     echarts.setCanvasCreator(function () {\r\n\t     *         // Small size is enough.\r\n\t     *         return new Canvas(32, 32);\r\n\t     *     });\r\n\t     */\r\n\t    echarts.setCanvasCreator = function (creator) {\r\n\t        zrUtil.createCanvas = creator;\r\n\t    };\r\n\r\n\t    echarts.registerVisual(PRIORITY_VISUAL_GLOBAL, __webpack_require__(94));\r\n\t    echarts.registerPreprocessor(__webpack_require__(95));\r\n\r\n\t    // Default action\r\n\t    echarts.registerAction({\r\n\t        type: 'highlight',\r\n\t        event: 'highlight',\r\n\t        update: 'highlight'\r\n\t    }, zrUtil.noop);\r\n\t    echarts.registerAction({\r\n\t        type: 'downplay',\r\n\t        event: 'downplay',\r\n\t        update: 'downplay'\r\n\t    }, zrUtil.noop);\r\n\r\n\r\n\t    // --------\r\n\t    // Exports\r\n\t    // --------\r\n\t    //\r\n\t    echarts.List = __webpack_require__(97);\r\n\t    echarts.Model = __webpack_require__(12);\r\n\r\n\t    echarts.graphic = __webpack_require__(43);\r\n\t    echarts.number = __webpack_require__(7);\r\n\t    echarts.format = __webpack_require__(6);\r\n\t    echarts.matrix = __webpack_require__(11);\r\n\t    echarts.vector = __webpack_require__(10);\r\n\t    echarts.color = __webpack_require__(39);\r\n\r\n\t    echarts.util = {};\r\n\t    each([\r\n\t            'map', 'each', 'filter', 'indexOf', 'inherits',\r\n\t            'reduce', 'filter', 'bind', 'curry', 'isArray',\r\n\t            'isString', 'isObject', 'isFunction', 'extend', 'defaults'\r\n\t        ],\r\n\t        function (name) {\r\n\t            echarts.util[name] = zrUtil[name];\r\n\t        }\r\n\t    );\r\n\r\n\t    // PRIORITY\r\n\t    echarts.PRIORITY = {\r\n\t        PROCESSOR: {\r\n\t            FILTER: PRIORITY_PROCESSOR_FILTER,\r\n\t            STATISTIC: PRIORITY_PROCESSOR_STATISTIC\r\n\t        },\r\n\t        VISUAL: {\r\n\t            LAYOUT: PRIORITY_VISUAL_LAYOUT,\r\n\t            GLOBAL: PRIORITY_VISUAL_GLOBAL,\r\n\t            CHART: PRIORITY_VISUAL_CHART,\r\n\t            COMPONENT: PRIORITY_VISUAL_COMPONENT,\r\n\t            BRUSH: PRIORITY_VISUAL_BRUSH\r\n\t        }\r\n\t    };\r\n\r\n\t    module.exports = echarts;\r\n\r\n\r\n/***/ },\r\n/* 2 */\r\n/***/ function(module, exports) {\r\n\r\n\t/**\r\n\t * echarts设备环境识别\r\n\t *\r\n\t * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\r\n\t * @author firede[firede@firede.us]\r\n\t * @desc thanks zepto.\r\n\t */\r\n\r\n\t    var env = {};\r\n\t    if (typeof navigator === 'undefined') {\r\n\t        // In node\r\n\t        env = {\r\n\t            browser: {},\r\n\t            os: {},\r\n\t            node: true,\r\n\t            // Assume canvas is supported\r\n\t            canvasSupported: true\r\n\t        };\r\n\t    }\r\n\t    else {\r\n\t        env = detect(navigator.userAgent);\r\n\t    }\r\n\r\n\t    module.exports = env;\r\n\r\n\t    // Zepto.js\r\n\t    // (c) 2010-2013 Thomas Fuchs\r\n\t    // Zepto.js may be freely distributed under the MIT license.\r\n\r\n\t    function detect(ua) {\r\n\t        var os = {};\r\n\t        var browser = {};\r\n\t        // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\r\n\t        // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\r\n\t        // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\r\n\t        // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\r\n\t        // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\r\n\t        // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\r\n\t        // var touchpad = webos && ua.match(/TouchPad/);\r\n\t        // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\r\n\t        // var silk = ua.match(/Silk\\/([\\d._]+)/);\r\n\t        // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\r\n\t        // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\r\n\t        // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\r\n\t        // var playbook = ua.match(/PlayBook/);\r\n\t        // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\r\n\t        var firefox = ua.match(/Firefox\\/([\\d.]+)/);\r\n\t        // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\r\n\t        // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\r\n\t        var ie = ua.match(/MSIE\\s([\\d.]+)/)\r\n\t            // IE 11 Trident/7.0; rv:11.0\r\n\t            || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\r\n\t        var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\r\n\r\n\t        // Todo: clean this up with a better OS/browser seperation:\r\n\t        // - discern (more) between multiple browsers on android\r\n\t        // - decide if kindle fire in silk mode is android or not\r\n\t        // - Firefox on Android doesn't specify the Android version\r\n\t        // - possibly devide in os, device and browser hashes\r\n\r\n\t        // if (browser.webkit = !!webkit) browser.version = webkit[1];\r\n\r\n\t        // if (android) os.android = true, os.version = android[2];\r\n\t        // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\r\n\t        // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\r\n\t        // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\r\n\t        // if (webos) os.webos = true, os.version = webos[2];\r\n\t        // if (touchpad) os.touchpad = true;\r\n\t        // if (blackberry) os.blackberry = true, os.version = blackberry[2];\r\n\t        // if (bb10) os.bb10 = true, os.version = bb10[2];\r\n\t        // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\r\n\t        // if (playbook) browser.playbook = true;\r\n\t        // if (kindle) os.kindle = true, os.version = kindle[1];\r\n\t        // if (silk) browser.silk = true, browser.version = silk[1];\r\n\t        // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\r\n\t        // if (chrome) browser.chrome = true, browser.version = chrome[1];\r\n\t        if (firefox) browser.firefox = true, browser.version = firefox[1];\r\n\t        // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\r\n\t        // if (webview) browser.webview = true;\r\n\t        if (ie) {\r\n\t            browser.ie = true; browser.version = ie[1];\r\n\t        }\r\n\t        if (ie) {\r\n\t            browser.ie = true;\r\n\t            browser.version = ie[1];\r\n\t        }\r\n\t        if (edge) {\r\n\t            browser.edge = true;\r\n\t            browser.version = edge[1];\r\n\t        }\r\n\r\n\t        // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\r\n\t        //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\r\n\t        // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\r\n\t        //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\r\n\t        //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\r\n\r\n\t        return {\r\n\t            browser: browser,\r\n\t            os: os,\r\n\t            node: false,\r\n\t            // 原生canvas支持，改极端点了\r\n\t            // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\r\n\t            canvasSupported : document.createElement('canvas').getContext ? true : false,\r\n\t            // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\r\n\t            // works on most browsers\r\n\t            // IE10/11 does not support touch event, and MS Edge supports them but not by\r\n\t            // default, so we dont check navigator.maxTouchPoints for them here.\r\n\t            touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\r\n\t            // <http://caniuse.com/#search=pointer%20event>.\r\n\t            pointerEventsSupported: 'onpointerdown' in window\r\n\t                // Firefox supports pointer but not by default,\r\n\t                // only MS browsers are reliable on pointer events currently.\r\n\t                && (browser.edge || (browser.ie && browser.version >= 10))\r\n\t        };\r\n\t    }\r\n\r\n\r\n/***/ },\r\n/* 3 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t/**\r\n\t * ECharts global model\r\n\t *\r\n\t * @module {echarts/model/Global}\r\n\t *\r\n\t */\r\n\r\n\r\n\r\n\t    var zrUtil = __webpack_require__(4);\r\n\t    var modelUtil = __webpack_require__(5);\r\n\t    var Model = __webpack_require__(12);\r\n\t    var each = zrUtil.each;\r\n\t    var filter = zrUtil.filter;\r\n\t    var map = zrUtil.map;\r\n\t    var isArray = zrUtil.isArray;\r\n\t    var indexOf = zrUtil.indexOf;\r\n\t    var isObject = zrUtil.isObject;\r\n\r\n\t    var ComponentModel = __webpack_require__(19);\r\n\r\n\t    var globalDefault = __webpack_require__(23);\r\n\r\n\t    var OPTION_INNER_KEY = '\\0_ec_inner';\r\n\r\n\t    /**\r\n\t     * @alias module:echarts/model/Global\r\n\t     *\r\n\t     * @param {Object} option\r\n\t     * @param {module:echarts/model/Model} parentModel\r\n\t     * @param {Object} theme\r\n\t     */\r\n\t    var GlobalModel = Model.extend({\r\n\r\n\t        constructor: GlobalModel,\r\n\r\n\t        init: function (option, parentModel, theme, optionManager) {\r\n\t            theme = theme || {};\r\n\r\n\t            this.option = null; // Mark as not initialized.\r\n\r\n\t            /**\r\n\t             * @type {module:echarts/model/Model}\r\n\t             * @private\r\n\t             */\r\n\t            this._theme = new Model(theme);\r\n\r\n\t            /**\r\n\t             * @type {module:echarts/model/OptionManager}\r\n\t             */\r\n\t            this._optionManager = optionManager;\r\n\t        },\r\n\r\n\t        setOption: function (option, optionPreprocessorFuncs) {\r\n\t            zrUtil.assert(\r\n\t                !(OPTION_INNER_KEY in option),\r\n\t                'please use chart.getOption()'\r\n\t            );\r\n\r\n\t            this._optionManager.setOption(option, optionPreprocessorFuncs);\r\n\r\n\t            this.resetOption();\r\n\t        },\r\n\r\n\t        /**\r\n\t         * @param {string} type null/undefined: reset all.\r\n\t         *                      'recreate': force recreate all.\r\n\t         *                      'timeline': only reset timeline option\r\n\t         *                      'media': only reset media query option\r\n\t         * @return {boolean} Whether option changed.\r\n\t         */\r\n\t        resetOption: function (type) {\r\n\t            var optionChanged = false;\r\n\t            var optionManager = this._optionManager;\r\n\r\n\t            if (!type || type === 'recreate') {\r\n\t                var baseOption = optionManager.mountOption(type === 'recreate');\r\n\r\n\t                if (!this.option || type === 'recreate') {\r\n\t                    initBase.call(this, baseOption);\r\n\t                }\r\n\t                else {\r\n\t                    this.restoreData();\r\n\t                    this.mergeOption(baseOption);\r\n\t                }\r\n\t                optionChanged = true;\r\n\t            }\r\n\r\n\t            if (type === 'timeline' || type === 'media') {\r\n\t                this.restoreData();\r\n\t            }\r\n\r\n\t            if (!type || type === 'recreate' || type === 'timeline') {\r\n\t                var timelineOption = optionManager.getTimelineOption(this);\r\n\t                timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\r\n\t            }\r\n\r\n\t            if (!type || type === 'recreate' || type === 'media') {\r\n\t                var mediaOptions = optionManager.getMediaOption(this, this._api);\r\n\t                if (mediaOptions.length) {\r\n\t                    each(mediaOptions, function (mediaOption) {\r\n\t                        this.mergeOption(mediaOption, optionChanged = true);\r\n\t                    }, this);\r\n\t                }\r\n\t            }\r\n\r\n\t            return optionChanged;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * @protected\r\n\t         */\r\n\t        mergeOption: function (newOption) {\r\n\t            var option = this.option;\r\n\t            var componentsMap = this._componentsMap;\r\n\t            var newCptTypes = [];\r\n\r\n\t            // 如果不存在对应的 component model 则直接 merge\r\n\t            each(newOption, function (componentOption, mainType) {\r\n\t                if (componentOption == null) {\r\n\t                    return;\r\n\t                }\r\n\r\n\t                if (!ComponentModel.hasClass(mainType)) {\r\n\t                    option[mainType] = option[mainType] == null\r\n\t                        ? zrUtil.clone(componentOption)\r\n\t                        : zrUtil.merge(option[mainType], componentOption, true);\r\n\t                }\r\n\t                else {\r\n\t                    newCptTypes.push(mainType);\r\n\t                }\r\n\t            });\r\n\r\n\t            // FIXME OPTION 同步是否要改回原来的\r\n\t            ComponentModel.topologicalTravel(\r\n\t                newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this\r\n\t            );\r\n\r\n\t            function visitComponent(mainType, dependencies) {\r\n\t                var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\r\n\r\n\t                var mapResult = modelUtil.mappingToExists(\r\n\t                    componentsMap[mainType], newCptOptionList\r\n\t                );\r\n\r\n\t                makeKeyInfo(mainType, mapResult);\r\n\r\n\t                var dependentModels = getComponentsByTypes(\r\n\t                    componentsMap, dependencies\r\n\t                );\r\n\r\n\t                option[mainType] = [];\r\n\t                componentsMap[mainType] = [];\r\n\r\n\t                each(mapResult, function (resultItem, index) {\r\n\t                    var componentModel = resultItem.exist;\r\n\t                    var newCptOption = resultItem.option;\r\n\r\n\t                    zrUtil.assert(\r\n\t                        isObject(newCptOption) || componentModel,\r\n\t                        'Empty component definition'\r\n\t                    );\r\n\r\n\t                    // Consider where is no new option and should be merged using {},\r\n\t                    // see removeEdgeAndAdd in topologicalTravel and\r\n\t                    // ComponentModel.getAllClassMainTypes.\r\n\t                    if (!newCptOption) {\r\n\t                        componentModel.mergeOption({}, this);\r\n\t                        componentModel.optionUpdated({}, false);\r\n\t                    }\r\n\t                    else {\r\n\t                        var ComponentModelClass = ComponentModel.getClass(\r\n\t                            mainType, resultItem.keyInfo.subType, true\r\n\t                        );\r\n\r\n\t                        if (componentModel && componentModel instanceof ComponentModelClass) {\r\n\t                            componentModel.mergeOption(newCptOption, this);\r\n\t                            componentModel.optionUpdated(newCptOption, false);\r\n\t                        }\r\n\t                        else {\r\n\t                            // PENDING Global as parent ?\r\n\t                            var extraOpt = zrUtil.extend(\r\n\t                                {\r\n\t                                    dependentModels: dependentModels,\r\n\t                                    componentIndex: index\r\n\t                                },\r\n\t                                resultItem.keyInfo\r\n\t                            );\r\n\t                            componentModel = new ComponentModelClass(\r\n\t                                newCptOption, this, this, extraOpt\r\n\t                            );\r\n\t                            componentModel.init(newCptOption, this, this, extraOpt);\r\n\t                            // Call optionUpdated after init.\r\n\t                            // newCptOption has been used as componentModel.option\r\n\t                            // and may be merged with theme and default, so pass null\r\n\t                            // to avoid confusion.\r\n\t                            componentModel.optionUpdated(null, true);\r\n\t                        }\r\n\t                    }\r\n\r\n\t                    componentsMap[mainType][index] = componentModel;\r\n\t                    option[mainType][index] = componentModel.option;\r\n\t                }, this);\r\n\r\n\t                // Backup series for filtering.\r\n\t                if (mainType === 'series') {\r\n\t                    this._seriesIndices = createSeriesIndices(componentsMap.series);\r\n\t                }\r\n\t            }\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Get option for output (cloned option and inner info removed)\r\n\t         * @public\r\n\t         * @return {Object}\r\n\t         */\r\n\t        getOption: function () {\r\n\t            var option = zrUtil.clone(this.option);\r\n\r\n\t            each(option, function (opts, mainType) {\r\n\t                if (ComponentModel.hasClass(mainType)) {\r\n\t                    var opts = modelUtil.normalizeToArray(opts);\r\n\t                    for (var i = opts.length - 1; i >= 0; i--) {\r\n\t                        // Remove options with inner id.\r\n\t                        if (modelUtil.isIdInner(opts[i])) {\r\n\t                            opts.splice(i, 1);\r\n\t                        }\r\n\t                    }\r\n\t                    option[mainType] = opts;\r\n\t                }\r\n\t            });\r\n\r\n\t            delete option[OPTION_INNER_KEY];\r\n\r\n\t            return option;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * @return {module:echarts/model/Model}\r\n\t         */\r\n\t        getTheme: function () {\r\n\t            return this._theme;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * @param {string} mainType\r\n\t         * @param {number} [idx=0]\r\n\t         * @return {module:echarts/model/Component}\r\n\t         */\r\n\t        getComponent: function (mainType, idx) {\r\n\t            var list = this._componentsMap[mainType];\r\n\t            if (list) {\r\n\t                return list[idx || 0];\r\n\t            }\r\n\t        },\r\n\r\n\t        /**\r\n\t         * @param {Object} condition\r\n\t         * @param {string} condition.mainType\r\n\t         * @param {string} [condition.subType] If ignore, only query by mainType\r\n\t         * @param {number} [condition.index] Either input index or id or name.\r\n\t         * @param {string} [condition.id] Either input index or id or name.\r\n\t         * @param {string} [condition.name] Either input index or id or name.\r\n\t         * @return {Array.<module:echarts/model/Component>}\r\n\t         */\r\n\t        queryComponents: function (condition) {\r\n\t            var mainType = condition.mainType;\r\n\t            if (!mainType) {\r\n\t                return [];\r\n\t            }\r\n\r\n\t            var index = condition.index;\r\n\t            var id = condition.id;\r\n\t            var name = condition.name;\r\n\r\n\t            var cpts = this._componentsMap[mainType];\r\n\r\n\t            if (!cpts || !cpts.length) {\r\n\t                return [];\r\n\t            }\r\n\r\n\t            var result;\r\n\r\n\t            if (index != null) {\r\n\t                if (!isArray(index)) {\r\n\t                    index = [index];\r\n\t                }\r\n\t                result = filter(map(index, function (idx) {\r\n\t                    return cpts[idx];\r\n\t                }), function (val) {\r\n\t                    return !!val;\r\n\t                });\r\n\t            }\r\n\t            else if (id != null) {\r\n\t                var isIdArray = isArray(id);\r\n\t                result = filter(cpts, function (cpt) {\r\n\t                    return (isIdArray && indexOf(id, cpt.id) >= 0)\r\n\t                        || (!isIdArray && cpt.id === id);\r\n\t                });\r\n\t            }\r\n\t            else if (name != null) {\r\n\t                var isNameArray = isArray(name);\r\n\t                result = filter(cpts, function (cpt) {\r\n\t                    return (isNameArray && indexOf(name, cpt.name) >= 0)\r\n\t                        || (!isNameArray && cpt.name === name);\r\n\t                });\r\n\t            }\r\n\r\n\t            return filterBySubType(result, condition);\r\n\t        },\r\n\r\n\t        /**\r\n\t         * The interface is different from queryComponents,\r\n\t         * which is convenient for inner usage.\r\n\t         *\r\n\t         * @usage\r\n\t         * var result = findComponents(\r\n\t         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\r\n\t         * );\r\n\t         * var result = findComponents(\r\n\t         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\r\n\t         * );\r\n\t         * var result = findComponents(\r\n\t         *     {mainType: 'series'},\r\n\t         *     function (model, index) {...}\r\n\t         * );\r\n\t         * // result like [component0, componnet1, ...]\r\n\t         *\r\n\t         * @param {Object} condition\r\n\t         * @param {string} condition.mainType Mandatory.\r\n\t         * @param {string} [condition.subType] Optional.\r\n\t         * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\r\n\t         *        where xxx is mainType.\r\n\t         *        If query attribute is null/undefined or has no index/id/name,\r\n\t         *        do not filtering by query conditions, which is convenient for\r\n\t         *        no-payload situations or when target of action is global.\r\n\t         * @param {Function} [condition.filter] parameter: component, return boolean.\r\n\t         * @return {Array.<module:echarts/model/Component>}\r\n\t         */\r\n\t        findComponents: function (condition) {\r\n\t            var query = condition.query;\r\n\t            var mainType = condition.mainType;\r\n\r\n\t            var queryCond = getQueryCond(query);\r\n\t            var result = queryCond\r\n\t                ? this.queryComponents(queryCond)\r\n\t                : this._componentsMap[mainType];\r\n\r\n\t            return doFilter(filterBySubType(result, condition));\r\n\r\n\t            function getQueryCond(q) {\r\n\t                var indexAttr = mainType + 'Index';\r\n\t                var idAttr = mainType + 'Id';\r\n\t                var nameAttr = mainType + 'Name';\r\n\t                return q && (\r\n\t                        q.hasOwnProperty(indexAttr)\r\n\t                        || q.hasOwnProperty(idAttr)\r\n\t                        || q.hasOwnProperty(nameAttr)\r\n\t                    )\r\n\t                    ? {\r\n\t                        mainType: mainType,\r\n\t                        // subType will be filtered finally.\r\n\t                        index: q[indexAttr],\r\n\t                        id: q[idAttr],\r\n\t                        name: q[nameAttr]\r\n\t                    }\r\n\t                    : null;\r\n\t            }\r\n\r\n\t            function doFilter(res) {\r\n\t                return condition.filter\r\n\t                     ? filter(res, condition.filter)\r\n\t                     : res;\r\n\t            }\r\n\t        },\r\n\r\n\t        /**\r\n\t         * @usage\r\n\t         * eachComponent('legend', function (legendModel, index) {\r\n\t         *     ...\r\n\t         * });\r\n\t         * eachComponent(function (componentType, model, index) {\r\n\t         *     // componentType does not include subType\r\n\t         *     // (componentType is 'xxx' but not 'xxx.aa')\r\n\t         * });\r\n\t         * eachComponent(\r\n\t         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\r\n\t         *     function (model, index) {...}\r\n\t         * );\r\n\t         * eachComponent(\r\n\t         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\r\n\t         *     function (model, index) {...}\r\n\t         * );\r\n\t         *\r\n\t         * @param {string|Object=} mainType When mainType is object, the definition\r\n\t         *                                  is the same as the method 'findComponents'.\r\n\t         * @param {Function} cb\r\n\t         * @param {*} context\r\n\t         */\r\n\t        eachComponent: function (mainType, cb, context) {\r\n\t            var componentsMap = this._componentsMap;\r\n\r\n\t            if (typeof mainType === 'function') {\r\n\t                context = cb;\r\n\t                cb = mainType;\r\n\t                each(componentsMap, function (components, componentType) {\r\n\t                    each(components, function (component, index) {\r\n\t                        cb.call(context, componentType, component, index);\r\n\t                    });\r\n\t                });\r\n\t            }\r\n\t            else if (zrUtil.isString(mainType)) {\r\n\t                each(componentsMap[mainType], cb, context);\r\n\t            }\r\n\t            else if (isObject(mainType)) {\r\n\t                var queryResult = this.findComponents(mainType);\r\n\t                each(queryResult, cb, context);\r\n\t            }\r\n\t        },\r\n\r\n\t        /**\r\n\t         * @param {string} name\r\n\t         * @return {Array.<module:echarts/model/Series>}\r\n\t         */\r\n\t        getSeriesByName: function (name) {\r\n\t            var series = this._componentsMap.series;\r\n\t            return filter(series, function (oneSeries) {\r\n\t                return oneSeries.name === name;\r\n\t            });\r\n\t        },\r\n\r\n\t        /**\r\n\t         * @param {number} seriesIndex\r\n\t         * @return {module:echarts/model/Series}\r\n\t         */\r\n\t        getSeriesByIndex: function (seriesIndex) {\r\n\t            return this._componentsMap.series[seriesIndex];\r\n\t        },\r\n\r\n\t        /**\r\n\t         * @param {string} subType\r\n\t         * @return {Array.<module:echarts/model/Series>}\r\n\t         */\r\n\t        getSeriesByType: function (subType) {\r\n\t            var series = this._componentsMap.series;\r\n\t            return filter(series, function (oneSeries) {\r\n\t                return oneSeries.subType === subType;\r\n\t            });\r\n\t        },\r\n\r\n\t        /**\r\n\t         * @return {Array.<module:echarts/model/Series>}\r\n\t         */\r\n\t        getSeries: function () {\r\n\t            return this._componentsMap.series.slice();\r\n\t        },\r\n\r\n\t        /**\r\n\t         * After filtering, series may be different\r\n\t         * frome raw series.\r\n\t         *\r\n\t         * @param {Function} cb\r\n\t         * @param {*} context\r\n\t         */\r\n\t        eachSeries: function (cb, context) {\r\n\t            assertSeriesInitialized(this);\r\n\t            each(this._seriesIndices, function (rawSeriesIndex) {\r\n\t                var series = this._componentsMap.series[rawSeriesIndex];\r\n\t                cb.call(context, series, rawSeriesIndex);\r\n\t            }, this);\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Iterate raw series before filtered.\r\n\t         *\r\n\t         * @param {Function} cb\r\n\t         * @param {*} context\r\n\t         */\r\n\t        eachRawSeries: function (cb, context) {\r\n\t            each(this._componentsMap.series, cb, context);\r\n\t        },\r\n\r\n\t        /**\r\n\t         * After filtering, series may be different.\r\n\t         * frome raw series.\r\n\t         *\r\n\t         * @parma {string} subType\r\n\t         * @param {Function} cb\r\n\t         * @param {*} context\r\n\t         */\r\n\t        eachSeriesByType: function (subType, cb, context) {\r\n\t            assertSeriesInitialized(this);\r\n\t            each(this._seriesIndices, function (rawSeriesIndex) {\r\n\t                var series = this._componentsMap.series[rawSeriesIndex];\r\n\t                if (series.subType === subType) {\r\n\t                    cb.call(context, series, rawSeriesIndex);\r\n\t                }\r\n\t            }, this);\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Iterate raw series before filtered of given type.\r\n\t         *\r\n\t         * @parma {string} subType\r\n\t         * @param {Function} cb\r\n\t         * @param {*} context\r\n\t         */\r\n\t        eachRawSeriesByType: function (subType, cb, context) {\r\n\t            return each(this.getSeriesByType(subType), cb, context);\r\n\t        },\r\n\r\n\t        /**\r\n\t         * @param {module:echarts/model/Series} seriesModel\r\n\t         */\r\n\t        isSeriesFiltered: function (seriesModel) {\r\n\t            assertSeriesInitialized(this);\r\n\t            return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * @param {Function} cb\r\n\t         * @param {*} context\r\n\t         */\r\n\t        filterSeries: function (cb, context) {\r\n\t            assertSeriesInitialized(this);\r\n\t            var filteredSeries = filter(\r\n\t                this._componentsMap.series, cb, context\r\n\t            );\r\n\t            this._seriesIndices = createSeriesIndices(filteredSeries);\r\n\t        },\r\n\r\n\t        restoreData: function () {\r\n\t            var componentsMap = this._componentsMap;\r\n\r\n\t            this._seriesIndices = createSeriesIndices(componentsMap.series);\r\n\r\n\t            var componentTypes = [];\r\n\t            each(componentsMap, function (components, componentType) {\r\n\t                componentTypes.push(componentType);\r\n\t            });\r\n\r\n\t            ComponentModel.topologicalTravel(\r\n\t                componentTypes,\r\n\t                ComponentModel.getAllClassMainTypes(),\r\n\t                function (componentType, dependencies) {\r\n\t                    each(componentsMap[componentType], function (component) {\r\n\t                        component.restoreData();\r\n\t                    });\r\n\t                }\r\n\t            );\r\n\t        }\r\n\r\n\t    });\r\n\r\n\t    /**\r\n\t     * @inner\r\n\t     */\r\n\t    function mergeTheme(option, theme) {\r\n\t        for (var name in theme) {\r\n\t            // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\r\n\t            if (!ComponentModel.hasClass(name)) {\r\n\t                if (typeof theme[name] === 'object') {\r\n\t                    option[name] = !option[name]\r\n\t                        ? zrUtil.clone(theme[name])\r\n\t                        : zrUtil.merge(option[name], theme[name], false);\r\n\t                }\r\n\t                else {\r\n\t                    if (option[name] == null) {\r\n\t                        option[name] = theme[name];\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t    }\r\n\r\n\t    function initBase(baseOption) {\r\n\t        baseOption = baseOption;\r\n\r\n\t        // Using OPTION_INNER_KEY to mark that this option can not be used outside,\r\n\t        // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\r\n\t        this.option = {};\r\n\t        this.option[OPTION_INNER_KEY] = 1;\r\n\r\n\t        /**\r\n\t         * @type {Object.<string, Array.<module:echarts/model/Model>>}\r\n\t         * @private\r\n\t         */\r\n\t        this._componentsMap = {};\r\n\r\n\t        /**\r\n\t         * Mapping between filtered series list and raw series list.\r\n\t         * key: filtered series indices, value: raw series indices.\r\n\t         * @type {Array.<nubmer>}\r\n\t         * @private\r\n\t         */\r\n\t        this._seriesIndices = null;\r\n\r\n\t        mergeTheme(baseOption, this._theme.option);\r\n\r\n\t        // TODO Needs clone when merging to the unexisted property\r\n\t        zrUtil.merge(baseOption, globalDefault, false);\r\n\r\n\t        this.mergeOption(baseOption);\r\n\t    }\r\n\r\n\t    /**\r\n\t     * @inner\r\n\t     * @param {Array.<string>|string} types model types\r\n\t     * @return {Object} key: {string} type, value: {Array.<Object>} models\r\n\t     */\r\n\t    function getComponentsByTypes(componentsMap, types) {\r\n\t        if (!zrUtil.isArray(types)) {\r\n\t            types = types ? [types] : [];\r\n\t        }\r\n\r\n\t        var ret = {};\r\n\t        each(types, function (type) {\r\n\t            ret[type] = (componentsMap[type] || []).slice();\r\n\t        });\r\n\r\n\t        return ret;\r\n\t    }\r\n\r\n\t    /**\r\n\t     * @inner\r\n\t     */\r\n\t    function makeKeyInfo(mainType, mapResult) {\r\n\t        // We use this id to hash component models and view instances\r\n\t        // in echarts. id can be specified by user, or auto generated.\r\n\r\n\t        // The id generation rule ensures new view instance are able\r\n\t        // to mapped to old instance when setOption are called in\r\n\t        // no-merge mode. So we generate model id by name and plus\r\n\t        // type in view id.\r\n\r\n\t        // name can be duplicated among components, which is convenient\r\n\t        // to specify multi components (like series) by one name.\r\n\r\n\t        // Ensure that each id is distinct.\r\n\t        var idMap = {};\r\n\r\n\t        each(mapResult, function (item, index) {\r\n\t            var existCpt = item.exist;\r\n\t            existCpt && (idMap[existCpt.id] = item);\r\n\t        });\r\n\r\n\t        each(mapResult, function (item, index) {\r\n\t            var opt = item.option;\r\n\r\n\t            zrUtil.assert(\r\n\t                !opt || opt.id == null || !idMap[opt.id] || idMap[opt.id] === item,\r\n\t                'id duplicates: ' + (opt && opt.id)\r\n\t            );\r\n\r\n\t            opt && opt.id != null && (idMap[opt.id] = item);\r\n\r\n\t            // Complete subType\r\n\t            if (isObject(opt)) {\r\n\t                var subType = determineSubType(mainType, opt, item.exist);\r\n\t                item.keyInfo = {mainType: mainType, subType: subType};\r\n\t            }\r\n\t        });\r\n\r\n\t        // Make name and id.\r\n\t        each(mapResult, function (item, index) {\r\n\t            var existCpt = item.exist;\r\n\t            var opt = item.option;\r\n\t            var keyInfo = item.keyInfo;\r\n\r\n\t            if (!isObject(opt)) {\r\n\t                return;\r\n\t            }\r\n\r\n\t            // name can be overwitten. Consider case: axis.name = '20km'.\r\n\t            // But id generated by name will not be changed, which affect\r\n\t            // only in that case: setOption with 'not merge mode' and view\r\n\t            // instance will be recreated, which can be accepted.\r\n\t            keyInfo.name = opt.name != null\r\n\t                ? opt.name + ''\r\n\t                : existCpt\r\n\t                ? existCpt.name\r\n\t                : '\\0-';\r\n\r\n\t            if (existCpt) {\r\n\t                keyInfo.id = existCpt.id;\r\n\t            }\r\n\t            else if (opt.id != null) {\r\n\t                keyInfo.id = opt.id + '';\r\n\t            }\r\n\t            else {\r\n\t                // Consider this situatoin:\r\n\t                //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\r\n\t                //  optionB [{..}, {name: 'a'}, {name: 'a'}]\r\n\t                // Series with the same name between optionA and optionB\r\n\t                // should be mapped.\r\n\t                var idNum = 0;\r\n\t                do {\r\n\t                    keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\r\n\t                }\r\n\t                while (idMap[keyInfo.id]);\r\n\t            }\r\n\r\n\t            idMap[keyInfo.id] = item;\r\n\t        });\r\n\t    }\r\n\r\n\t    /**\r\n\t     * @inner\r\n\t     */\r\n\t    function determineSubType(mainType, newCptOption, existComponent) {\r\n\t        var subType = newCptOption.type\r\n\t            ? newCptOption.type\r\n\t            : existComponent\r\n\t            ? existComponent.subType\r\n\t            // Use determineSubType only when there is no existComponent.\r\n\t            : ComponentModel.determineSubType(mainType, newCptOption);\r\n\r\n\t        // tooltip, markline, markpoint may always has no subType\r\n\t        return subType;\r\n\t    }\r\n\r\n\t    /**\r\n\t     * @inner\r\n\t     */\r\n\t    function createSeriesIndices(seriesModels) {\r\n\t        return map(seriesModels, function (series) {\r\n\t            return series.componentIndex;\r\n\t        }) || [];\r\n\t    }\r\n\r\n\t    /**\r\n\t     * @inner\r\n\t     */\r\n\t    function filterBySubType(components, condition) {\r\n\t        // Using hasOwnProperty for restrict. Consider\r\n\t        // subType is undefined in user payload.\r\n\t        return condition.hasOwnProperty('subType')\r\n\t            ? filter(components, function (cpt) {\r\n\t                return cpt.subType === condition.subType;\r\n\t            })\r\n\t            : components;\r\n\t    }\r\n\r\n\t    /**\r\n\t     * @inner\r\n\t     */\r\n\t    function assertSeriesInitialized(ecModel) {\r\n\t        // Components that use _seriesIndices should depends on series component,\r\n\t        // which make sure that their initialization is after series.\r\n\t        if (true) {\r\n\t            if (!ecModel._seriesIndices) {\r\n\t                throw new Error('Series has not been initialized yet.');\r\n\t            }\r\n\t        }\r\n\t    }\r\n\r\n\t    zrUtil.mixin(GlobalModel, __webpack_require__(24));\r\n\r\n\t    module.exports = GlobalModel;\r\n\r\n\r\n/***/ },\r\n/* 4 */\r\n/***/ function(module, exports) {\r\n\r\n\t/**\r\n\t * @module zrender/core/util\r\n\t */\r\n\r\n\r\n\t    // 用于处理merge时无法遍历Date等对象的问题\r\n\t    var BUILTIN_OBJECT = {\r\n\t        '[object Function]': 1,\r\n\t        '[object RegExp]': 1,\r\n\t        '[object Date]': 1,\r\n\t        '[object Error]': 1,\r\n\t        '[object CanvasGradient]': 1,\r\n\t        '[object CanvasPattern]': 1,\r\n\t        // In node-canvas Image can be Canvas.Image\r\n\t        '[object Image]': 1\r\n\t    };\r\n\r\n\t    var objToString = Object.prototype.toString;\r\n\r\n\t    var arrayProto = Array.prototype;\r\n\t    var nativeForEach = arrayProto.forEach;\r\n\t    var nativeFilter = arrayProto.filter;\r\n\t    var nativeSlice = arrayProto.slice;\r\n\t    var nativeMap = arrayProto.map;\r\n\t    var nativeReduce = arrayProto.reduce;\r\n\r\n\t    /**\r\n\t     * @param {*} source\r\n\t     * @return {*} 拷贝后的新对象\r\n\t     */\r\n\t    function clone(source) {\r\n\t        if (typeof source == 'object' && source !== null) {\r\n\t            var result = source;\r\n\t            if (source instanceof Array) {\r\n\t                result = [];\r\n\t                for (var i = 0, len = source.length; i < len; i++) {\r\n\t                    result[i] = clone(source[i]);\r\n\t                }\r\n\t            }\r\n\t            else if (\r\n\t                !isBuildInObject(source)\r\n\t                // 是否为 dom 对象\r\n\t                && !isDom(source)\r\n\t            ) {\r\n\t                result = {};\r\n\t                for (var key in source) {\r\n\t                    if (source.hasOwnProperty(key)) {\r\n\t                        result[key] = clone(source[key]);\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\r\n\t            return result;\r\n\t        }\r\n\r\n\t        return source;\r\n\t    }\r\n\r\n\t    /**\r\n\t     * @memberOf module:zrender/core/util\r\n\t     * @param {*} target\r\n\t     * @param {*} source\r\n\t     * @param {boolean} [overwrite=false]\r\n\t     */\r\n\t    function merge(target, source, overwrite) {\r\n\t        // We should escapse that source is string\r\n\t        // and enter for ... in ...\r\n\t        if (!isObject(source) || !isObject(target)) {\r\n\t            return overwrite ? clone(source) : target;\r\n\t        }\r\n\r\n\t        for (var key in source) {\r\n\t            if (source.hasOwnProperty(key)) {\r\n\t                var targetProp = target[key];\r\n\t                var sourceProp = source[key];\r\n\r\n\t                if (isObject(sourceProp)\r\n\t                    && isObject(targetProp)\r\n\t                    && !isArray(sourceProp)\r\n\t                    && !isArray(targetProp)\r\n\t                    && !isDom(sourceProp)\r\n\t                    && !isDom(targetProp)\r\n\t                    && !isBuildInObject(sourceProp)\r\n\t                    && !isBuildInObject(targetProp)\r\n\t                ) {\r\n\t                    // 如果需要递归覆盖，就递归调用merge\r\n\t                    merge(targetProp, sourceProp, overwrite);\r\n\t                }\r\n\t                else if (overwrite || !(key in target)) {\r\n\t                    // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\r\n\t                    // NOTE，在 target[key] 不存在的时候也是直接覆盖\r\n\t                    target[key] = clone(source[key], true);\r\n\t                }\r\n\t            }\r\n\t        }\r\n\r\n\t        return target;\r\n\t    }\r\n\r\n\t    /**\r\n\t     * @param {Array} targetAndSources The first item is target, and the rests are source.\r\n\t     * @param {boolean} [overwrite=false]\r\n\t     * @return {*} target\r\n\t     */\r\n\t    function mergeAll(targetAndSources, overwrite) {\r\n\t        var result = targetAndSources[0];\r\n\t        for (var i = 1, len = targetAndSources.length; i < len; i++) {\r\n\t            result = merge(result, targetAndSources[i], overwrite);\r\n\t        }\r\n\t        return result;\r\n\t    }\r\n\r\n\t    /**\r\n\t     * @param {*} target\r\n\t     * @param {*} source\r\n\t     * @memberOf module:zrender/core/util\r\n\t     */\r\n\t    function extend(target, source) {\r\n\t        for (var key in source) {\r\n\t            if (source.hasOwnProperty(key)) {\r\n\t                target[key] = source[key];\r\n\t            }\r\n\t        }\r\n\t        return target;\r\n\t    }\r\n\r\n\t    /**\r\n\t     * @param {*} target\r\n\t     * @param {*} source\r\n\t     * @param {boolen} [overlay=false]\r\n\t     * @memberOf module:zrender/core/util\r\n\t     */\r\n\t    function defaults(target, source, overlay) {\r\n\t        for (var key in source) {\r\n\t            if (source.hasOwnProperty(key)\r\n\t                && (overlay ? source[key] != null : target[key] == null)\r\n\t            ) {\r\n\t                target[key] = source[key];\r\n\t            }\r\n\t        }\r\n\t        return target;\r\n\t    }\r\n\r\n\t    function createCanvas() {\r\n\t        return document.createElement('canvas');\r\n\t    }\r\n\t    // FIXME\r\n\t    var _ctx;\r\n\t    function getContext() {\r\n\t        if (!_ctx) {\r\n\t            // Use util.createCanvas instead of createCanvas\r\n\t            // because createCanvas may be overwritten in different environment\r\n\t            _ctx = util.createCanvas().getContext('2d');\r\n\t        }\r\n\t        return _ctx;\r\n\t    }\r\n\r\n\t    /**\r\n\t     * 查询数组中元素的index\r\n\t     * @memberOf module:zrender/core/util\r\n\t     */\r\n\t    function indexOf(array, value) {\r\n\t        if (array) {\r\n\t            if (array.indexOf) {\r\n\t                return array.indexOf(value);\r\n\t            }\r\n\t            for (var i = 0, len = array.length; i < len; i++) {\r\n\t                if (array[i] === value) {\r\n\t                    return i;\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        return -1;\r\n\t    }\r\n\r\n\t    /**\r\n\t     * 构造类继承关系\r\n\t     *\r\n\t     * @memberOf module:zrender/core/util\r\n\t     * @param {Function} clazz 源类\r\n\t     * @param {Function} baseClazz 基类\r\n\t     */\r\n\t    function inherits(clazz, baseClazz) {\r\n\t        var clazzPrototype = clazz.prototype;\r\n\t        function F() {}\r\n\t        F.prototype = baseClazz.prototype;\r\n\t        clazz.prototype = new F();\r\n\r\n\t        for (var prop in clazzPrototype) {\r\n\t            clazz.prototype[prop] = clazzPrototype[prop];\r\n\t        }\r\n\t        clazz.prototype.constructor = clazz;\r\n\t        clazz.superClass = baseClazz;\r\n\t    }\r\n\r\n\t    /**\r\n\t     * @memberOf module:zrender/core/util\r\n\t     * @param {Object|Function} target\r\n\t     * @param {Object|Function} sorce\r\n\t     * @param {boolean} overlay\r\n\t     */\r\n\t    function mixin(target, source, overlay) {\r\n\t        target = 'prototype' in target ? target.prototype : target;\r\n\t        source = 'prototype' in source ? source.prototype : source;\r\n\r\n\t        defaults(target, source, overlay);\r\n\t    }\r\n\r\n\t    /**\r\n\t     * @param {Array|TypedArray} data\r\n\t     */\r\n\t    function isArrayLike(data) {\r\n\t        if (! data) {\r\n\t            return;\r\n\t        }\r\n\t        if (typeof data == 'string') {\r\n\t            return false;\r\n\t        }\r\n\t        return typeof data.length == 'number';\r\n\t    }\r\n\r\n\t    /**\r\n\t     * 数组或对象遍历\r\n\t     * @memberOf module:zrender/core/util\r\n\t     * @param {Object|Array} obj\r\n\t     * @param {Function} cb\r\n\t     * @param {*} [context]\r\n\t     */\r\n\t    function each(obj, cb, context) {\r\n\t        if (!(obj && cb)) {\r\n\t            return;\r\n\t        }\r\n\t        if (obj.forEach && obj.forEach === nativeForEach) {\r\n\t            obj.forEach(cb, context);\r\n\t        }\r\n\t        else if (obj.length === +obj.length) {\r\n\t            for (var i = 0, len = obj.length; i < len; i++) {\r\n\t                cb.call(context, obj[i], i, obj);\r\n\t            }\r\n\t        }\r\n\t        else {\r\n\t            for (var key in obj) {\r\n\t                if (obj.hasOwnProperty(key)) {\r\n\t                    cb.call(context, obj[key], key, obj);\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t    }\r\n\r\n\t    /**\r\n\t     * 数组映射\r\n\t     * @memberOf module:zrender/core/util\r\n\t     * @param {Array} obj\r\n\t     * @param {Function} cb\r\n\t     * @param {*} [context]\r\n\t     * @return {Array}\r\n\t     */\r\n\t    function map(obj, cb, context) {\r\n\t        if (!(obj && cb)) {\r\n\t            return;\r\n\t        }\r\n\t        if (obj.map && obj.map === nativeMap) {\r\n\t            return obj.map(cb, context);\r\n\t        }\r\n\t        else {\r\n\t            var result = [];\r\n\t            for (var i = 0, len = obj.length; i < len; i++) {\r\n\t                result.push(cb.call(context, obj[i], i, obj));\r\n\t            }\r\n\t            return result;\r\n\t        }\r\n\t    }\r\n\r\n\t    /**\r\n\t     * @memberOf module:zrender/core/util\r\n\t     * @param {Array} obj\r\n\t     * @param {Function} cb\r\n\t     * @param {Object} [memo]\r\n\t     * @param {*} [context]\r\n\t     * @return {Array}\r\n\t     */\r\n\t    function reduce(obj, cb, memo, context) {\r\n\t        if (!(obj && cb)) {\r\n\t            return;\r\n\t        }\r\n\t        if (obj.reduce && obj.reduce === nativeReduce) {\r\n\t            return obj.reduce(cb, memo, context);\r\n\t        }\r\n\t        else {\r\n\t            for (var i = 0, len = obj.length; i < len; i++) {\r\n\t                memo = cb.call(context, memo, obj[i], i, obj);\r\n\t            }\r\n\t            return memo;\r\n\t        }\r\n\t    }\r\n\r\n\t    /**\r\n\t     * 数组过滤\r\n\t     * @memberOf module:zrender/core/util\r\n\t     * @param {Array} obj\r\n\t     * @param {Function} cb\r\n\t     * @param {*} [context]\r\n\t     * @return {Array}\r\n\t     */\r\n\t    function filter(obj, cb, context) {\r\n\t        if (!(obj && cb)) {\r\n\t            return;\r\n\t        }\r\n\t        if (obj.filter && obj.filter === nativeFilter) {\r\n\t            return obj.filter(cb, context);\r\n\t        }\r\n\t        else {\r\n\t            var result = [];\r\n\t            for (var i = 0, len = obj.length; i < len; i++) {\r\n\t                if (cb.call(context, obj[i], i, obj)) {\r\n\t                    result.push(obj[i]);\r\n\t                }\r\n\t            }\r\n\t            return result;\r\n\t        }\r\n\t    }\r\n\r\n\t    /**\r\n\t     * 数组项查找\r\n\t     * @memberOf module:zrender/core/util\r\n\t     * @param {Array} obj\r\n\t     * @param {Function} cb\r\n\t     * @param {*} [context]\r\n\t     * @return {Array}\r\n\t     */\r\n\t    function find(obj, cb, context) {\r\n\t        if (!(obj && cb)) {\r\n\t            return;\r\n\t        }\r\n\t        for (var i = 0, len = obj.length; i < len; i++) {\r\n\t            if (cb.call(context, obj[i], i, obj)) {\r\n\t                return obj[i];\r\n\t            }\r\n\t        }\r\n\t    }\r\n\r\n\t    /**\r\n\t     * @memberOf module:zrender/core/util\r\n\t     * @param {Function} func\r\n\t     * @param {*} context\r\n\t     * @return {Function}\r\n\t     */\r\n\t    function bind(func, context) {\r\n\t        var args = nativeSlice.call(arguments, 2);\r\n\t        return function () {\r\n\t            return func.apply(context, args.concat(nativeSlice.call(arguments)));\r\n\t        };\r\n\t    }\r\n\r\n\t    /**\r\n\t     * @memberOf module:zrender/core/util\r\n\t     * @param {Function} func\r\n\t     * @return {Function}\r\n\t     */\r\n\t    function curry(func) {\r\n\t        var args = nativeSlice.call(arguments, 1);\r\n\t        return function () {\r\n\t            return func.apply(this, args.concat(nativeSlice.call(arguments)));\r\n\t        };\r\n\t    }\r\n\r\n\t    /**\r\n\t     * @memberOf module:zrender/core/util\r\n\t     * @param {*} value\r\n\t     * @return {boolean}\r\n\t     */\r\n\t    function isArray(value) {\r\n\t        return objToString.call(value) === '[object Array]';\r\n\t    }\r\n\r\n\t    /**\r\n\t     * @memberOf module:zrender/core/util\r\n\t     * @param {*} value\r\n\t     * @return {boolean}\r\n\t     */\r\n\t    function isFunction(value) {\r\n\t        return typeof value === 'function';\r\n\t    }\r\n\r\n\t    /**\r\n\t     * @memberOf module:zrender/core/util\r\n\t     * @param {*} value\r\n\t     * @return {boolean}\r\n\t     */\r\n\t    function isString(value) {\r\n\t        return objToString.call(value) === '[object String]';\r\n\t    }\r\n\r\n\t    /**\r\n\t     * @memberOf module:zrender/core/util\r\n\t     * @param {*} value\r\n\t     * @return {boolean}\r\n\t     */\r\n\t    function isObject(value) {\r\n\t        // Avoid a V8 JIT bug in Chrome 19-20.\r\n\t        // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\r\n\t        var type = typeof value;\r\n\t        return type === 'function' || (!!value && type == 'object');\r\n\t    }\r\n\r\n\t    /**\r\n\t     * @memberOf module:zrender/core/util\r\n\t     * @param {*} value\r\n\t     * @return {boolean}\r\n\t     */\r\n\t    function isBuildInObject(value) {\r\n\t        return !!BUILTIN_OBJECT[objToString.call(value)];\r\n\t    }\r\n\r\n\t    /**\r\n\t     * @memberOf module:zrender/core/util\r\n\t     * @param {*} value\r\n\t     * @return {boolean}\r\n\t     */\r\n\t    function isDom(value) {\r\n\t        return value && value.nodeType === 1\r\n\t               && typeof(value.nodeName) == 'string';\r\n\t    }\r\n\r\n\t    /**\r\n\t     * If value1 is not null, then return value1, otherwise judget rest of values.\r\n\t     * @memberOf module:zrender/core/util\r\n\t     * @return {*} Final value\r\n\t     */\r\n\t    function retrieve(values) {\r\n\t        for (var i = 0, len = arguments.length; i < len; i++) {\r\n\t            if (arguments[i] != null) {\r\n\t                return arguments[i];\r\n\t            }\r\n\t        }\r\n\t    }\r\n\r\n\t    /**\r\n\t     * @memberOf module:zrender/core/util\r\n\t     * @param {Array} arr\r\n\t     * @param {number} startIndex\r\n\t     * @param {number} endIndex\r\n\t     * @return {Array}\r\n\t     */\r\n\t    function slice() {\r\n\t        return Function.call.apply(nativeSlice, arguments);\r\n\t    }\r\n\r\n\t    /**\r\n\t     * @memberOf module:zrender/core/util\r\n\t     * @param {boolean} condition\r\n\t     * @param {string} message\r\n\t     */\r\n\t    function assert(condition, message) {\r\n\t        if (!condition) {\r\n\t            throw new Error(message);\r\n\t        }\r\n\t    }\r\n\r\n\t    var util = {\r\n\t        inherits: inherits,\r\n\t        mixin: mixin,\r\n\t        clone: clone,\r\n\t        merge: merge,\r\n\t        mergeAll: mergeAll,\r\n\t        extend: extend,\r\n\t        defaults: defaults,\r\n\t        getContext: getContext,\r\n\t        createCanvas: createCanvas,\r\n\t        indexOf: indexOf,\r\n\t        slice: slice,\r\n\t        find: find,\r\n\t        isArrayLike: isArrayLike,\r\n\t        each: each,\r\n\t        map: map,\r\n\t        reduce: reduce,\r\n\t        filter: filter,\r\n\t        bind: bind,\r\n\t        curry: curry,\r\n\t        isArray: isArray,\r\n\t        isString: isString,\r\n\t        isObject: isObject,\r\n\t        isFunction: isFunction,\r\n\t        isBuildInObject: isBuildInObject,\r\n\t        isDom: isDom,\r\n\t        retrieve: retrieve,\r\n\t        assert: assert,\r\n\t        noop: function () {}\r\n\t    };\r\n\t    module.exports = util;\r\n\r\n\r\n\r\n/***/ },\r\n/* 5 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t\r\n\r\n\t    var formatUtil = __webpack_require__(6);\r\n\t    var nubmerUtil = __webpack_require__(7);\r\n\t    var Model = __webpack_require__(12);\r\n\t    var zrUtil = __webpack_require__(4);\r\n\r\n\t    var AXIS_DIMS = ['x', 'y', 'z', 'radius', 'angle'];\r\n\r\n\t    var modelUtil = {};\r\n\r\n\t    /**\r\n\t     * Create \"each\" method to iterate names.\r\n\t     *\r\n\t     * @pubilc\r\n\t     * @param  {Array.<string>} names\r\n\t     * @param  {Array.<string>=} attrs\r\n\t     * @return {Function}\r\n\t     */\r\n\t    modelUtil.createNameEach = function (names, attrs) {\r\n\t        names = names.slice();\r\n\t        var capitalNames = zrUtil.map(names, modelUtil.capitalFirst);\r\n\t        attrs = (attrs || []).slice();\r\n\t        var capitalAttrs = zrUtil.map(attrs, modelUtil.capitalFirst);\r\n\r\n\t        return function (callback, context) {\r\n\t            zrUtil.each(names, function (name, index) {\r\n\t                var nameObj = {name: name, capital: capitalNames[index]};\r\n\r\n\t                for (var j = 0; j < attrs.length; j++) {\r\n\t                    nameObj[attrs[j]] = name + capitalAttrs[j];\r\n\t                }\r\n\r\n\t                callback.call(context, nameObj);\r\n\t            });\r\n\t        };\r\n\t    };\r\n\r\n\t    /**\r\n\t     * @public\r\n\t     */\r\n\t    modelUtil.capitalFirst = function (str) {\r\n\t        return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\r\n\t    };\r\n\r\n\t    /**\r\n\t     * Iterate each dimension name.\r\n\t     *\r\n\t     * @public\r\n\t     * @param {Function} callback The parameter is like:\r\n\t     *                            {\r\n\t     *                                name: 'angle',\r\n\t     *                                capital: 'Angle',\r\n\t     *                                axis: 'angleAxis',\r\n\t     *                                axisIndex: 'angleAixs',\r\n\t     *                                index: 'angleIndex'\r\n\t     *                            }\r\n\t     * @param {Object} context\r\n\t     */\r\n\t    modelUtil.eachAxisDim = modelUtil.createNameEach(AXIS_DIMS, ['axisIndex', 'axis', 'index']);\r\n\r\n\t    /**\r\n\t     * If value is not array, then translate it to array.\r\n\t     * @param  {*} value\r\n\t     * @return {Array} [value] or value\r\n\t     */\r\n\t    modelUtil.normalizeToArray = function (value) {\r\n\t        return value instanceof Array\r\n\t            ? value\r\n\t            : value == null\r\n\t            ? []\r\n\t            : [value];\r\n\t    };\r\n\r\n\t    /**\r\n\t     * If tow dataZoomModels has the same axis controlled, we say that they are 'linked'.\r\n\t     * dataZoomModels and 'links' make up one or more graphics.\r\n\t     * This function finds the graphic where the source dataZoomModel is in.\r\n\t     *\r\n\t     * @public\r\n\t     * @param {Function} forEachNode Node iterator.\r\n\t     * @param {Function} forEachEdgeType edgeType iterator\r\n\t     * @param {Function} edgeIdGetter Giving node and edgeType, return an array of edge id.\r\n\t     * @return {Function} Input: sourceNode, Output: Like {nodes: [], dims: {}}\r\n\t     */\r\n\t    modelUtil.createLinkedNodesFinder = function (forEachNode, forEachEdgeType, edgeIdGetter) {\r\n\r\n\t        return function (sourceNode) {\r\n\t            var result = {\r\n\t                nodes: [],\r\n\t                records: {} // key: edgeType.name, value: Object (key: edge id, value: boolean).\r\n\t            };\r\n\r\n\t            forEachEdgeType(function (edgeType) {\r\n\t                result.records[edgeType.name] = {};\r\n\t            });\r\n\r\n\t            if (!sourceNode) {\r\n\t                return result;\r\n\t            }\r\n\r\n\t            absorb(sourceNode, result);\r\n\r\n\t            var existsLink;\r\n\t            do {\r\n\t                existsLink = false;\r\n\t                forEachNode(processSingleNode);\r\n\t            }\r\n\t            while (existsLink);\r\n\r\n\t            function processSingleNode(node) {\r\n\t                if (!isNodeAbsorded(node, result) && isLinked(node, result)) {\r\n\t                    absorb(node, result);\r\n\t                    existsLink = true;\r\n\t                }\r\n\t            }\r\n\r\n\t            return result;\r\n\t        };\r\n\r\n\t        function isNodeAbsorded(node, result) {\r\n\t            return zrUtil.indexOf(result.nodes, node) >= 0;\r\n\t        }\r\n\r\n\t        function isLinked(node, result) {\r\n\t            var hasLink = false;\r\n\t            forEachEdgeType(function (edgeType) {\r\n\t                zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\r\n\t                    result.records[edgeType.name][edgeId] && (hasLink = true);\r\n\t                });\r\n\t            });\r\n\t            return hasLink;\r\n\t        }\r\n\r\n\t        function absorb(node, result) {\r\n\t            result.nodes.push(node);\r\n\t            forEachEdgeType(function (edgeType) {\r\n\t                zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\r\n\t                    result.records[edgeType.name][edgeId] = true;\r\n\t                });\r\n\t            });\r\n\t        }\r\n\t    };\r\n\r\n\t    /**\r\n\t     * Sync default option between normal and emphasis like `position` and `show`\r\n\t     * In case some one will write code like\r\n\t     *     label: {\r\n\t     *         normal: {\r\n\t     *             show: false,\r\n\t     *             position: 'outside',\r\n\t     *             textStyle: {\r\n\t     *                 fontSize: 18\r\n\t     *             }\r\n\t     *         },\r\n\t     *         emphasis: {\r\n\t     *             show: true\r\n\t     *         }\r\n\t     *     }\r\n\t     * @param {Object} opt\r\n\t     * @param {Array.<string>} subOpts\r\n\t     */\r\n\t     modelUtil.defaultEmphasis = function (opt, subOpts) {\r\n\t        if (opt) {\r\n\t            var emphasisOpt = opt.emphasis = opt.emphasis || {};\r\n\t            var normalOpt = opt.normal = opt.normal || {};\r\n\r\n\t            // Default emphasis option from normal\r\n\t            zrUtil.each(subOpts, function (subOptName) {\r\n\t                var val = zrUtil.retrieve(emphasisOpt[subOptName], normalOpt[subOptName]);\r\n\t                if (val != null) {\r\n\t                    emphasisOpt[subOptName] = val;\r\n\t                }\r\n\t            });\r\n\t        }\r\n\t    };\r\n\r\n\t    modelUtil.LABEL_OPTIONS = ['position', 'show', 'textStyle', 'distance', 'formatter'];\r\n\r\n\t    /**\r\n\t     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\r\n\t     * This helper method retieves value from data.\r\n\t     * @param {string|number|Date|Array|Object} dataItem\r\n\t     * @return {number|string|Date|Array.<number|string|Date>}\r\n\t     */\r\n\t    modelUtil.getDataItemValue = function (dataItem) {\r\n\t        // Performance sensitive.\r\n\t        return dataItem && (dataItem.value == null ? dataItem : dataItem.value);\r\n\t    };\r\n\r\n\t    /**\r\n\t     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\r\n\t     * This helper method determine if dataItem has extra option besides value\r\n\t     * @param {string|number|Date|Array|Object} dataItem\r\n\t     */\r\n\t    modelUtil.isDataItemOption = function (dataItem) {\r\n\t        return zrUtil.isObject(dataItem)\r\n\t            && !(dataItem instanceof Array);\r\n\t            // // markLine data can be array\r\n\t            // && !(dataItem[0] && zrUtil.isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\r\n\t    };\r\n\r\n\t    /**\r\n\t     * This helper method convert value in data.\r\n\t     * @param {string|number|Date} value\r\n\t     * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\r\n\t     */\r\n\t    modelUtil.converDataValue = function (value, dimInfo) {\r\n\t        // Performance sensitive.\r\n\t        var dimType = dimInfo && dimInfo.type;\r\n\t        if (dimType === 'ordinal') {\r\n\t            return value;\r\n\t        }\r\n\r\n\t        if (dimType === 'time' && !isFinite(value) && value != null && value !== '-') {\r\n\t            value = +nubmerUtil.parseDate(value);\r\n\t        }\r\n\r\n\t        // dimType defaults 'number'.\r\n\t        // If dimType is not ordinal and value is null or undefined or NaN or '-',\r\n\t        // parse to NaN.\r\n\t        return (value == null || value === '')\r\n\t            ? NaN : +value; // If string (like '-'), using '+' parse to NaN\r\n\t    };\r\n\r\n\t    /**\r\n\t     * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.\r\n\t     * @param {module:echarts/data/List} data\r\n\t     * @param {Object} opt\r\n\t     * @param {string} [opt.seriesIndex]\r\n\t     * @param {Object} [opt.name]\r\n\t     * @param {Object} [opt.mainType]\r\n\t     * @param {Object} [opt.subType]\r\n\t     */\r\n\t    modelUtil.createDataFormatModel = function (data, opt) {\r\n\t        var model = new Model();\r\n\t        zrUtil.mixin(model, modelUtil.dataFormatMixin);\r\n\t        model.seriesIndex = opt.seriesIndex;\r\n\t        model.name = opt.name || '';\r\n\t        model.mainType = opt.mainType;\r\n\t        model.subType = opt.subType;\r\n\r\n\t        model.getData = function () {\r\n\t            return data;\r\n\t        };\r\n\t        return model;\r\n\t    };\r\n\r\n\t    // PENDING A little ugly\r\n\t    modelUtil.dataFormatMixin = {\r\n\t        /**\r\n\t         * Get params for formatter\r\n\t         * @param {number} dataIndex\r\n\t         * @param {string} [dataType]\r\n\t         * @return {Object}\r\n\t         */\r\n\t        getDataParams: function (dataIndex, dataType) {\r\n\t            var data = this.getData(dataType);\r\n\r\n\t            var seriesIndex = this.seriesIndex;\r\n\t            var seriesName = this.name;\r\n\r\n\t            var rawValue = this.getRawValue(dataIndex, dataType);\r\n\t            var rawDataIndex = data.getRawIndex(dataIndex);\r\n\t            var name = data.getName(dataIndex, true);\r\n\t            var itemOpt = data.getRawDataItem(dataIndex);\r\n\r\n\t            return {\r\n\t                componentType: this.mainType,\r\n\t                componentSubType: this.subType,\r\n\t                seriesType: this.mainType === 'series' ? this.subType : null,\r\n\t                seriesIndex: seriesIndex,\r\n\t                seriesName: seriesName,\r\n\t                name: name,\r\n\t                dataIndex: rawDataIndex,\r\n\t                data: itemOpt,\r\n\t                dataType: dataType,\r\n\t                value: rawValue,\r\n\t                color: data.getItemVisual(dataIndex, 'color'),\r\n\r\n\t                // Param name list for mapping `a`, `b`, `c`, `d`, `e`\r\n\t                $vars: ['seriesName', 'name', 'value']\r\n\t            };\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Format label\r\n\t         * @param {number} dataIndex\r\n\t         * @param {string} [status='normal'] 'normal' or 'emphasis'\r\n\t         * @param {string} [dataType]\r\n\t         * @param {number} [dimIndex]\r\n\t         * @return {string}\r\n\t         */\r\n\t        getFormattedLabel: function (dataIndex, status, dataType, dimIndex) {\r\n\t            status = status || 'normal';\r\n\t            var data = this.getData(dataType);\r\n\t            var itemModel = data.getItemModel(dataIndex);\r\n\r\n\t            var params = this.getDataParams(dataIndex, dataType);\r\n\t            if (dimIndex != null && (params.value instanceof Array)) {\r\n\t                params.value = params.value[dimIndex];\r\n\t            }\r\n\r\n\t            var formatter = itemModel.get(['label', status, 'formatter']);\r\n\r\n\t            if (typeof formatter === 'function') {\r\n\t                params.status = status;\r\n\t                return formatter(params);\r\n\t            }\r\n\t            else if (typeof formatter === 'string') {\r\n\t                return formatUtil.formatTpl(formatter, params);\r\n\t            }\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Get raw value in option\r\n\t         * @param {number} idx\r\n\t         * @param {string} [dataType]\r\n\t         * @return {Object}\r\n\t         */\r\n\t        getRawValue: function (idx, dataType) {\r\n\t            var data = this.getData(dataType);\r\n\t            var dataItem = data.getRawDataItem(idx);\r\n\t            if (dataItem != null) {\r\n\t                return (zrUtil.isObject(dataItem) && !(dataItem instanceof Array))\r\n\t                    ? dataItem.value : dataItem;\r\n\t            }\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Should be implemented.\r\n\t         * @param {number} dataIndex\r\n\t         * @param {boolean} [multipleSeries=false]\r\n\t         * @param {number} [dataType]\r\n\t         * @return {string} tooltip string\r\n\t         */\r\n\t        formatTooltip: zrUtil.noop\r\n\t    };\r\n\r\n\t    /**\r\n\t     * Mapping to exists for merge.\r\n\t     *\r\n\t     * @public\r\n\t     * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\r\n\t     * @param {Object|Array.<Object>} newCptOptions\r\n\t     * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\r\n\t     *                          which order is the same as exists.\r\n\t     */\r\n\t    modelUtil.mappingToExists = function (exists, newCptOptions) {\r\n\t        // Mapping by the order by original option (but not order of\r\n\t        // new option) in merge mode. Because we should ensure\r\n\t        // some specified index (like xAxisIndex) is consistent with\r\n\t        // original option, which is easy to understand, espatially in\r\n\t        // media query. And in most case, merge option is used to\r\n\t        // update partial option but not be expected to change order.\r\n\t        newCptOptions = (newCptOptions || []).slice();\r\n\r\n\t        var result = zrUtil.map(exists || [], function (obj, index) {\r\n\t            return {exist: obj};\r\n\t        });\r\n\r\n\t        // Mapping by id or name if specified.\r\n\t        zrUtil.each(newCptOptions, function (cptOption, index) {\r\n\t            if (!zrUtil.isObject(cptOption)) {\r\n\t                return;\r\n\t            }\r\n\r\n\t            for (var i = 0; i < result.length; i++) {\r\n\t                var exist = result[i].exist;\r\n\t                if (!result[i].option // Consider name: two map to one.\r\n\t                    && (\r\n\t                        // id has highest priority.\r\n\t                        (cptOption.id != null && exist.id === cptOption.id + '')\r\n\t                        || (cptOption.name != null\r\n\t                            && !modelUtil.isIdInner(cptOption)\r\n\t                            && !modelUtil.isIdInner(exist)\r\n\t                            && exist.name === cptOption.name + ''\r\n\t                        )\r\n\t                    )\r\n\t                ) {\r\n\t                    result[i].option = cptOption;\r\n\t                    newCptOptions[index] = null;\r\n\t                    break;\r\n\t                }\r\n\t            }\r\n\t        });\r\n\r\n\t        // Otherwise mapping by index.\r\n\t        zrUtil.each(newCptOptions, function (cptOption, index) {\r\n\t            if (!zrUtil.isObject(cptOption)) {\r\n\t                return;\r\n\t            }\r\n\r\n\t            var i = 0;\r\n\t            for (; i < result.length; i++) {\r\n\t                var exist = result[i].exist;\r\n\t                if (!result[i].option\r\n\t                    && !modelUtil.isIdInner(exist)\r\n\t                    // Caution:\r\n\t                    // Do not overwrite id. But name can be overwritten,\r\n\t                    // because axis use name as 'show label text'.\r\n\t                    // 'exist' always has id and name and we dont\r\n\t                    // need to check it.\r\n\t                    && cptOption.id == null\r\n\t                ) {\r\n\t                    result[i].option = cptOption;\r\n\t                    break;\r\n\t                }\r\n\t            }\r\n\r\n\t            if (i >= result.length) {\r\n\t                result.push({option: cptOption});\r\n\t            }\r\n\t        });\r\n\r\n\t        return result;\r\n\t    };\r\n\r\n\t    /**\r\n\t     * @public\r\n\t     * @param {Object} cptOption\r\n\t     * @return {boolean}\r\n\t     */\r\n\t    modelUtil.isIdInner = function (cptOption) {\r\n\t        return zrUtil.isObject(cptOption)\r\n\t            && cptOption.id\r\n\t            && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\r\n\t    };\r\n\r\n\t    /**\r\n\t     * A helper for removing duplicate items between batchA and batchB,\r\n\t     * and in themselves, and categorize by series.\r\n\t     *\r\n\t     * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\r\n\t     * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\r\n\t     * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\r\n\t     */\r\n\t    modelUtil.compressBatches = function (batchA, batchB) {\r\n\t        var mapA = {};\r\n\t        var mapB = {};\r\n\r\n\t        makeMap(batchA || [], mapA);\r\n\t        makeMap(batchB || [], mapB, mapA);\r\n\r\n\t        return [mapToArray(mapA), mapToArray(mapB)];\r\n\r\n\t        function makeMap(sourceBatch, map, otherMap) {\r\n\t            for (var i = 0, len = sourceBatch.length; i < len; i++) {\r\n\t                var seriesId = sourceBatch[i].seriesId;\r\n\t                var dataIndices = modelUtil.normalizeToArray(sourceBatch[i].dataIndex);\r\n\t                var otherDataIndices = otherMap && otherMap[seriesId];\r\n\r\n\t                for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\r\n\t                    var dataIndex = dataIndices[j];\r\n\r\n\t                    if (otherDataIndices && otherDataIndices[dataIndex]) {\r\n\t                        otherDataIndices[dataIndex] = null;\r\n\t                    }\r\n\t                    else {\r\n\t                        (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t        }\r\n\r\n\t        function mapToArray(map, isData) {\r\n\t            var result = [];\r\n\t            for (var i in map) {\r\n\t                if (map.hasOwnProperty(i) && map[i] != null) {\r\n\t                    if (isData) {\r\n\t                        result.push(+i);\r\n\t                    }\r\n\t                    else {\r\n\t                        var dataIndices = mapToArray(map[i], true);\r\n\t                        dataIndices.length && result.push({seriesId: i, dataIndex: dataIndices});\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t            return result;\r\n\t        }\r\n\t    };\r\n\r\n\t    module.exports = modelUtil;\r\n\r\n\r\n/***/ },\r\n/* 6 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t\r\n\r\n\t    var zrUtil = __webpack_require__(4);\r\n\t    var numberUtil = __webpack_require__(7);\r\n\t    var textContain = __webpack_require__(8);\r\n\r\n\t    /**\r\n\t     * 每三位默认加,格式化\r\n\t     * @type {string|number} x\r\n\t     */\r\n\t    function addCommas(x) {\r\n\t        if (isNaN(x)) {\r\n\t            return '-';\r\n\t        }\r\n\t        x = (x + '').split('.');\r\n\t        return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g,'$1,')\r\n\t               + (x.length > 1 ? ('.' + x[1]) : '');\r\n\t    }\r\n\r\n\t    /**\r\n\t     * @param {string} str\r\n\t     * @return {string} str\r\n\t     */\r\n\t    function toCamelCase(str) {\r\n\t        return str.toLowerCase().replace(/-(.)/g, function(match, group1) {\r\n\t            return group1.toUpperCase();\r\n\t        });\r\n\t    }\r\n\r\n\t    /**\r\n\t     * Normalize css liked array configuration\r\n\t     * e.g.\r\n\t     *  3 => [3, 3, 3, 3]\r\n\t     *  [4, 2] => [4, 2, 4, 2]\r\n\t     *  [4, 3, 2] => [4, 3, 2, 3]\r\n\t     * @param {number|Array.<number>} val\r\n\t     */\r\n\t    function normalizeCssArray(val) {\r\n\t        var len = val.length;\r\n\t        if (typeof (val) === 'number') {\r\n\t            return [val, val, val, val];\r\n\t        }\r\n\t        else if (len === 2) {\r\n\t            // vertical | horizontal\r\n\t            return [val[0], val[1], val[0], val[1]];\r\n\t        }\r\n\t        else if (len === 3) {\r\n\t            // top | horizontal | bottom\r\n\t            return [val[0], val[1], val[2], val[1]];\r\n\t        }\r\n\t        return val;\r\n\t    }\r\n\r\n\t    function encodeHTML(source) {\r\n\t        return String(source)\r\n\t            .replace(/&/g, '&amp;')\r\n\t            .replace(/</g, '&lt;')\r\n\t            .replace(/>/g, '&gt;')\r\n\t            .replace(/\"/g, '&quot;')\r\n\t            .replace(/'/g, '&#39;');\r\n\t    }\r\n\r\n\t    var TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\r\n\r\n\t    function wrapVar(varName, seriesIdx) {\r\n\t        return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\r\n\t    }\r\n\t    /**\r\n\t     * Template formatter\r\n\t     * @param  {string} tpl\r\n\t     * @param  {Array.<Object>|Object} paramsList\r\n\t     * @return {string}\r\n\t     */\r\n\t    function formatTpl(tpl, paramsList) {\r\n\t        if (!zrUtil.isArray(paramsList)) {\r\n\t            paramsList = [paramsList];\r\n\t        }\r\n\t        var seriesLen = paramsList.length;\r\n\t        if (!seriesLen) {\r\n\t            return '';\r\n\t        }\r\n\r\n\t        var $vars = paramsList[0].$vars || [];\r\n\t        for (var i = 0; i < $vars.length; i++) {\r\n\t            var alias = TPL_VAR_ALIAS[i];\r\n\t            tpl = tpl.replace(wrapVar(alias),  wrapVar(alias, 0));\r\n\t        }\r\n\t        for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\r\n\t            for (var k = 0; k < $vars.length; k++) {\r\n\t                tpl = tpl.replace(\r\n\t                    wrapVar(TPL_VAR_ALIAS[k], seriesIdx),\r\n\t                    paramsList[seriesIdx][$vars[k]]\r\n\t                );\r\n\t            }\r\n\t        }\r\n\r\n\t        return tpl;\r\n\t    }\r\n\r\n\t    /**\r\n\t     * ISO Date format\r\n\t     * @param {string} tpl\r\n\t     * @param {number} value\r\n\t     * @inner\r\n\t     */\r\n\t    function formatTime(tpl, value) {\r\n\t        if (tpl === 'week'\r\n\t            || tpl === 'month'\r\n\t            || tpl === 'quarter'\r\n\t            || tpl === 'half-year'\r\n\t            || tpl === 'year'\r\n\t        ) {\r\n\t            tpl = 'MM-dd\\nyyyy';\r\n\t        }\r\n\r\n\t        var date = numberUtil.parseDate(value);\r\n\t        var y = date.getFullYear();\r\n\t        var M = date.getMonth() + 1;\r\n\t        var d = date.getDate();\r\n\t        var h = date.getHours();\r\n\t        var m = date.getMinutes();\r\n\t        var s = date.getSeconds();\r\n\r\n\t        tpl = tpl.replace('MM', s2d(M))\r\n\t            .toLowerCase()\r\n\t            .replace('yyyy', y)\r\n\t            .replace('yy', y % 100)\r\n\t            .replace('dd', s2d(d))\r\n\t            .replace('d', d)\r\n\t            .replace('hh', s2d(h))\r\n\t            .replace('h', h)\r\n\t            .replace('mm', s2d(m))\r\n\t            .replace('m', m)\r\n\t            .replace('ss', s2d(s))\r\n\t            .replace('s', s);\r\n\r\n\t        return tpl;\r\n\t    }\r\n\r\n\t    /**\r\n\t     * @param {string} str\r\n\t     * @return {string}\r\n\t     * @inner\r\n\t     */\r\n\t    function s2d(str) {\r\n\t        return str < 10 ? ('0' + str) : str;\r\n\t    }\r\n\r\n\t    module.exports = {\r\n\r\n\t        normalizeCssArray: normalizeCssArray,\r\n\r\n\t        addCommas: addCommas,\r\n\r\n\t        toCamelCase: toCamelCase,\r\n\r\n\t        encodeHTML: encodeHTML,\r\n\r\n\t        formatTpl: formatTpl,\r\n\r\n\t        formatTime: formatTime,\r\n\r\n\t        truncateText: textContain.truncateText\r\n\t    };\r\n\r\n\r\n/***/ },\r\n/* 7 */\r\n/***/ function(module, exports) {\r\n\r\n\t/**\r\n\t * 数值处理模块\r\n\t * @module echarts/util/number\r\n\t */\r\n\r\n\r\n\r\n\t    var number = {};\r\n\r\n\t    var RADIAN_EPSILON = 1e-4;\r\n\r\n\t    function _trim(str) {\r\n\t        return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\r\n\t    }\r\n\r\n\t    /**\r\n\t     * Linear mapping a value from domain to range\r\n\t     * @memberOf module:echarts/util/number\r\n\t     * @param  {(number|Array.<number>)} val\r\n\t     * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\r\n\t     * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\r\n\t     * @param  {boolean} clamp\r\n\t     * @return {(number|Array.<number>}\r\n\t     */\r\n\t    number.linearMap = function (val, domain, range, clamp) {\r\n\t        var subDomain = domain[1] - domain[0];\r\n\t        var subRange = range[1] - range[0];\r\n\r\n\t        if (subDomain === 0) {\r\n\t            return subRange === 0\r\n\t                ? range[0]\r\n\t                : (range[0] + range[1]) / 2;\r\n\t        }\r\n\r\n\t        // Avoid accuracy problem in edge, such as\r\n\t        // 146.39 - 62.83 === 83.55999999999999.\r\n\t        // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\r\n\t        // It is a little verbose for efficiency considering this method\r\n\t        // is a hotspot.\r\n\t        if (clamp) {\r\n\t            if (subDomain > 0) {\r\n\t                if (val <= domain[0]) {\r\n\t                    return range[0];\r\n\t                }\r\n\t                else if (val >= domain[1]) {\r\n\t                    return range[1];\r\n\t                }\r\n\t            }\r\n\t            else {\r\n\t                if (val >= domain[0]) {\r\n\t                    return range[0];\r\n\t                }\r\n\t                else if (val <= domain[1]) {\r\n\t                    return range[1];\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        else {\r\n\t            if (val === domain[0]) {\r\n\t                return range[0];\r\n\t            }\r\n\t            if (val === domain[1]) {\r\n\t                return range[1];\r\n\t            }\r\n\t        }\r\n\r\n\t        return (val - domain[0]) / subDomain * subRange + range[0];\r\n\t    };\r\n\r\n\t    /**\r\n\t     * Convert a percent string to absolute number.\r\n\t     * Returns NaN if percent is not a valid string or number\r\n\t     * @memberOf module:echarts/util/number\r\n\t     * @param {string|number} percent\r\n\t     * @param {number} all\r\n\t     * @return {number}\r\n\t     */\r\n\t    number.parsePercent = function(percent, all) {\r\n\t        switch (percent) {\r\n\t            case 'center':\r\n\t            case 'middle':\r\n\t                percent = '50%';\r\n\t                break;\r\n\t            case 'left':\r\n\t            case 'top':\r\n\t                percent = '0%';\r\n\t                break;\r\n\t            case 'right':\r\n\t            case 'bottom':\r\n\t                percent = '100%';\r\n\t                break;\r\n\t        }\r\n\t        if (typeof percent === 'string') {\r\n\t            if (_trim(percent).match(/%$/)) {\r\n\t                return parseFloat(percent) / 100 * all;\r\n\t            }\r\n\r\n\t            return parseFloat(percent);\r\n\t        }\r\n\r\n\t        return percent == null ? NaN : +percent;\r\n\t    };\r\n\r\n\t    /**\r\n\t     * Fix rounding error of float numbers\r\n\t     * @param {number} x\r\n\t     * @return {number}\r\n\t     */\r\n\t    number.round = function (x) {\r\n\t        // PENDING\r\n\t        return +(+x).toFixed(10);\r\n\t    };\r\n\r\n\t    number.asc = function (arr) {\r\n\t        arr.sort(function (a, b) {\r\n\t            return a - b;\r\n\t        });\r\n\t        return arr;\r\n\t    };\r\n\r\n\t    /**\r\n\t     * Get precision\r\n\t     * @param {number} val\r\n\t     */\r\n\t    number.getPrecision = function (val) {\r\n\t        val = +val;\r\n\t        if (isNaN(val)) {\r\n\t            return 0;\r\n\t        }\r\n\t        // It is much faster than methods converting number to string as follows\r\n\t        //      var tmp = val.toString();\r\n\t        //      return tmp.length - 1 - tmp.indexOf('.');\r\n\t        // especially when precision is low\r\n\t        var e = 1;\r\n\t        var count = 0;\r\n\t        while (Math.round(val * e) / e !== val) {\r\n\t            e *= 10;\r\n\t            count++;\r\n\t        }\r\n\t        return count;\r\n\t    };\r\n\r\n\t    /**\r\n\t     * @param {Array.<number>} dataExtent\r\n\t     * @param {Array.<number>} pixelExtent\r\n\t     * @return {number}  precision\r\n\t     */\r\n\t    number.getPixelPrecision = function (dataExtent, pixelExtent) {\r\n\t        var log = Math.log;\r\n\t        var LN10 = Math.LN10;\r\n\t        var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\r\n\t        var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10);\r\n\t        return Math.max(\r\n\t            -dataQuantity + sizeQuantity,\r\n\t            0\r\n\t        );\r\n\t    };\r\n\r\n\t    // Number.MAX_SAFE_INTEGER, ie do not support.\r\n\t    number.MAX_SAFE_INTEGER = 9007199254740991;\r\n\r\n\t    /**\r\n\t     * To 0 - 2 * PI, considering negative radian.\r\n\t     * @param {number} radian\r\n\t     * @return {number}\r\n\t     */\r\n\t    number.remRadian = function (radian) {\r\n\t        var pi2 = Math.PI * 2;\r\n\t        return (radian % pi2 + pi2) % pi2;\r\n\t    };\r\n\r\n\t    /**\r\n\t     * @param {type} radian\r\n\t     * @return {boolean}\r\n\t     */\r\n\t    number.isRadianAroundZero = function (val) {\r\n\t        return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\r\n\t    };\r\n\r\n\t    /**\r\n\t     * @param {string|Date|number} value\r\n\t     * @return {number} timestamp\r\n\t     */\r\n\t    number.parseDate = function (value) {\r\n\t        return value instanceof Date\r\n\t            ? value\r\n\t            : new Date(\r\n\t                typeof value === 'string'\r\n\t                    // FIXME Date.parse('1970-01-01') is UTC, Date.parse('1970/01/01') is local\r\n\t                    ? (new Date(value.replace(/-/g, '/')) - new Date('1970/01/01'))\r\n\t                    : Math.round(value)\r\n\t            );\r\n\t    };\r\n\r\n\t    /**\r\n\t     * Quantity of a number. e.g. 0.1, 1, 10, 100\r\n\t     * @param  {number} val\r\n\t     * @return {number}\r\n\t     */\r\n\t    number.quantity = function (val) {\r\n\t        return Math.pow(10, Math.floor(Math.log(val) / Math.LN10));\r\n\t    };\r\n\r\n\t    // \"Nice Numbers for Graph Labels\" of Graphic Gems\r\n\t    /**\r\n\t     * find a “nice” number approximately equal to x. Round the number if round = true, take ceiling if round = false\r\n\t     * The primary observation is that the “nicest” numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\r\n\t     * @param  {number} val\r\n\t     * @param  {boolean} round\r\n\t     * @return {number}\r\n\t     */\r\n\t    number.nice = function (val, round) {\r\n\t        var exp10 = number.quantity(val);\r\n\t        var f = val / exp10; // between 1 and 10\r\n\t        var nf;\r\n\t        if (round) {\r\n\t            if (f < 1.5) { nf = 1; }\r\n\t            else if (f < 2.5) { nf = 2; }\r\n\t            else if (f < 4) { nf = 3; }\r\n\t            else if (f < 7) { nf = 5; }\r\n\t            else { nf = 10; }\r\n\t        }\r\n\t        else {\r\n\t            if (f < 1) { nf = 1; }\r\n\t            else if (f < 2) { nf = 2; }\r\n\t            else if (f < 3) { nf = 3; }\r\n\t            else if (f < 5) { nf = 5; }\r\n\t            else { nf = 10; }\r\n\t        }\r\n\t        return nf * exp10;\r\n\t    };\r\n\r\n\t    module.exports = number;\r\n\r\n\r\n/***/ },\r\n/* 8 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t\r\n\r\n\t    var textWidthCache = {};\r\n\t    var textWidthCacheCounter = 0;\r\n\t    var TEXT_CACHE_MAX = 5000;\r\n\r\n\t    var util = __webpack_require__(4);\r\n\t    var BoundingRect = __webpack_require__(9);\r\n\t    var retrieve = util.retrieve;\r\n\r\n\t    function getTextWidth(text, textFont) {\r\n\t        var key = text + ':' + textFont;\r\n\t        if (textWidthCache[key]) {\r\n\t            return textWidthCache[key];\r\n\t        }\r\n\r\n\t        var textLines = (text + '').split('\\n');\r\n\t        var width = 0;\r\n\r\n\t        for (var i = 0, l = textLines.length; i < l; i++) {\r\n\t            // measureText 可以被覆盖以兼容不支持 Canvas 的环境\r\n\t            width = Math.max(textContain.measureText(textLines[i], textFont).width, width);\r\n\t        }\r\n\r\n\t        if (textWidthCacheCounter > TEXT_CACHE_MAX) {\r\n\t            textWidthCacheCounter = 0;\r\n\t            textWidthCache = {};\r\n\t        }\r\n\t        textWidthCacheCounter++;\r\n\t        textWidthCache[key] = width;\r\n\r\n\t        return width;\r\n\t    }\r\n\r\n\t    function getTextRect(text, textFont, textAlign, textBaseline) {\r\n\t        var textLineLen = ((text || '') + '').split('\\n').length;\r\n\r\n\t        var width = getTextWidth(text, textFont);\r\n\t        // FIXME 高度计算比较粗暴\r\n\t        var lineHeight = getTextWidth('国', textFont);\r\n\t        var height = textLineLen * lineHeight;\r\n\r\n\t        var rect = new BoundingRect(0, 0, width, height);\r\n\t        // Text has a special line height property\r\n\t        rect.lineHeight = lineHeight;\r\n\r\n\t        switch (textBaseline) {\r\n\t            case 'bottom':\r\n\t            case 'alphabetic':\r\n\t                rect.y -= lineHeight;\r\n\t                break;\r\n\t            case 'middle':\r\n\t                rect.y -= lineHeight / 2;\r\n\t                break;\r\n\t            // case 'hanging':\r\n\t            // case 'top':\r\n\t        }\r\n\r\n\t        // FIXME Right to left language\r\n\t        switch (textAlign) {\r\n\t            case 'end':\r\n\t            case 'right':\r\n\t                rect.x -= rect.width;\r\n\t                break;\r\n\t            case 'center':\r\n\t                rect.x -= rect.width / 2;\r\n\t                break;\r\n\t            // case 'start':\r\n\t            // case 'left':\r\n\t        }\r\n\r\n\t        return rect;\r\n\t    }\r\n\r\n\t    function adjustTextPositionOnRect(textPosition, rect, textRect, distance) {\r\n\r\n\t        var x = rect.x;\r\n\t        var y = rect.y;\r\n\r\n\t        var height = rect.height;\r\n\t        var width = rect.width;\r\n\r\n\t        var textHeight = textRect.height;\r\n\r\n\t        var halfHeight = height / 2 - textHeight / 2;\r\n\r\n\t        var textAlign = 'left';\r\n\r\n\t        switch (textPosition) {\r\n\t            case 'left':\r\n\t                x -= distance;\r\n\t                y += halfHeight;\r\n\t                textAlign = 'right';\r\n\t                break;\r\n\t            case 'right':\r\n\t                x += distance + width;\r\n\t                y += halfHeight;\r\n\t                textAlign = 'left';\r\n\t                break;\r\n\t            case 'top':\r\n\t                x += width / 2;\r\n\t                y -= distance + textHeight;\r\n\t                textAlign = 'center';\r\n\t                break;\r\n\t            case 'bottom':\r\n\t                x += width / 2;\r\n\t                y += height + distance;\r\n\t                textAlign = 'center';\r\n\t                break;\r\n\t            case 'inside':\r\n\t                x += width / 2;\r\n\t                y += halfHeight;\r\n\t                textAlign = 'center';\r\n\t                break;\r\n\t            case 'insideLeft':\r\n\t                x += distance;\r\n\t                y += halfHeight;\r\n\t                textAlign = 'left';\r\n\t                break;\r\n\t            case 'insideRight':\r\n\t                x += width - distance;\r\n\t                y += halfHeight;\r\n\t                textAlign = 'right';\r\n\t                break;\r\n\t            case 'insideTop':\r\n\t                x += width / 2;\r\n\t                y += distance;\r\n\t                textAlign = 'center';\r\n\t                break;\r\n\t            case 'insideBottom':\r\n\t                x += width / 2;\r\n\t                y += height - textHeight - distance;\r\n\t                textAlign = 'center';\r\n\t                break;\r\n\t            case 'insideTopLeft':\r\n\t                x += distance;\r\n\t                y += distance;\r\n\t                textAlign = 'left';\r\n\t                break;\r\n\t            case 'insideTopRight':\r\n\t                x += width - distance;\r\n\t                y += distance;\r\n\t                textAlign = 'right';\r\n\t                break;\r\n\t            case 'insideBottomLeft':\r\n\t                x += distance;\r\n\t                y += height - textHeight - distance;\r\n\t                break;\r\n\t            case 'insideBottomRight':\r\n\t                x += width - distance;\r\n\t                y += height - textHeight - distance;\r\n\t                textAlign = 'right';\r\n\t                break;\r\n\t        }\r\n\r\n\t        return {\r\n\t            x: x,\r\n\t            y: y,\r\n\t            textAlign: textAlign,\r\n\t            textBaseline: 'top'\r\n\t        };\r\n\t    }\r\n\r\n\t    /**\r\n\t     * Show ellipsis if overflow.\r\n\t     *\r\n\t     * @param  {string} text\r\n\t     * @param  {string} containerWidth\r\n\t     * @param  {string} textFont\r\n\t     * @param  {number} [ellipsis='...']\r\n\t     * @param  {Object} [options]\r\n\t     * @param  {number} [options.maxIterations=3]\r\n\t     * @param  {number} [options.minChar=0] If truncate result are less\r\n\t     *                  then minChar, ellipsis will not show, which is\r\n\t     *                  better for user hint in some cases.\r\n\t     * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\r\n\t     * @return {string}\r\n\t     */\r\n\t    function truncateText(text, containerWidth, textFont, ellipsis, options) {\r\n\t        if (!containerWidth) {\r\n\t            return '';\r\n\t        }\r\n\r\n\t        options = options || {};\r\n\r\n\t        ellipsis = retrieve(ellipsis, '...');\r\n\t        var maxIterations = retrieve(options.maxIterations, 2);\r\n\t        var minChar = retrieve(options.minChar, 0);\r\n\t        // FIXME\r\n\t        // Other languages?\r\n\t        var cnCharWidth = getTextWidth('国', textFont);\r\n\t        // FIXME\r\n\t        // Consider proportional font?\r\n\t        var ascCharWidth = getTextWidth('a', textFont);\r\n\t        var placeholder = retrieve(options.placeholder, '');\r\n\r\n\t        // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\r\n\t        // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\r\n\t        var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\r\n\t        for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\r\n\t            contentWidth -= ascCharWidth;\r\n\t        }\r\n\r\n\t        var ellipsisWidth = getTextWidth(ellipsis);\r\n\t        if (ellipsisWidth > contentWidth) {\r\n\t            ellipsis = '';\r\n\t            ellipsisWidth = 0;\r\n\t        }\r\n\r\n\t        contentWidth = containerWidth - ellipsisWidth;\r\n\r\n\t        var textLines = (text + '').split('\\n');\r\n\r\n\t        for (var i = 0, len = textLines.length; i < len; i++) {\r\n\t            var textLine = textLines[i];\r\n\t            var lineWidth = getTextWidth(textLine, textFont);\r\n\r\n\t            if (lineWidth <= containerWidth) {\r\n\t                continue;\r\n\t            }\r\n\r\n\t            for (var j = 0;; j++) {\r\n\t                if (lineWidth <= contentWidth || j >= maxIterations) {\r\n\t                    textLine += ellipsis;\r\n\t                    break;\r\n\t                }\r\n\r\n\t                var subLength = j === 0\r\n\t                    ? estimateLength(textLine, contentWidth, ascCharWidth, cnCharWidth)\r\n\t                    : lineWidth > 0\r\n\t                    ? Math.floor(textLine.length * contentWidth / lineWidth)\r\n\t                    : 0;\r\n\r\n\t                textLine = textLine.substr(0, subLength);\r\n\t                lineWidth = getTextWidth(textLine, textFont);\r\n\t            }\r\n\r\n\t            if (textLine === '') {\r\n\t                textLine = placeholder;\r\n\t            }\r\n\r\n\t            textLines[i] = textLine;\r\n\t        }\r\n\r\n\t        return textLines.join('\\n');\r\n\t    }\r\n\r\n\t    function estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\r\n\t        var width = 0;\r\n\t        var i = 0;\r\n\t        for (var len = text.length; i < len && width < contentWidth; i++) {\r\n\t            var charCode = text.charCodeAt(i);\r\n\t            width += (0 <= charCode && charCode <= 127) ? ascCharWidth : cnCharWidth;\r\n\t        }\r\n\t        return i;\r\n\t    }\r\n\r\n\t    var textContain = {\r\n\r\n\t        getWidth: getTextWidth,\r\n\r\n\t        getBoundingRect: getTextRect,\r\n\r\n\t        adjustTextPositionOnRect: adjustTextPositionOnRect,\r\n\r\n\t        truncateText: truncateText,\r\n\r\n\t        measureText: function (text, textFont) {\r\n\t            var ctx = util.getContext();\r\n\t            ctx.font = textFont || '12px sans-serif';\r\n\t            return ctx.measureText(text);\r\n\t        }\r\n\t    };\r\n\r\n\t    module.exports = textContain;\r\n\r\n\r\n/***/ },\r\n/* 9 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t'use strict';\r\n\t/**\r\n\t * @module echarts/core/BoundingRect\r\n\t */\r\n\r\n\r\n\t    var vec2 = __webpack_require__(10);\r\n\t    var matrix = __webpack_require__(11);\r\n\r\n\t    var v2ApplyTransform = vec2.applyTransform;\r\n\t    var mathMin = Math.min;\r\n\t    var mathAbs = Math.abs;\r\n\t    var mathMax = Math.max;\r\n\t    /**\r\n\t     * @alias module:echarts/core/BoundingRect\r\n\t     */\r\n\t    function BoundingRect(x, y, width, height) {\r\n\t        /**\r\n\t         * @type {number}\r\n\t         */\r\n\t        this.x = x;\r\n\t        /**\r\n\t         * @type {number}\r\n\t         */\r\n\t        this.y = y;\r\n\t        /**\r\n\t         * @type {number}\r\n\t         */\r\n\t        this.width = width;\r\n\t        /**\r\n\t         * @type {number}\r\n\t         */\r\n\t        this.height = height;\r\n\t    }\r\n\r\n\t    BoundingRect.prototype = {\r\n\r\n\t        constructor: BoundingRect,\r\n\r\n\t        /**\r\n\t         * @param {module:echarts/core/BoundingRect} other\r\n\t         */\r\n\t        union: function (other) {\r\n\t            var x = mathMin(other.x, this.x);\r\n\t            var y = mathMin(other.y, this.y);\r\n\r\n\t            this.width = mathMax(\r\n\t                    other.x + other.width,\r\n\t                    this.x + this.width\r\n\t                ) - x;\r\n\t            this.height = mathMax(\r\n\t                    other.y + other.height,\r\n\t                    this.y + this.height\r\n\t                ) - y;\r\n\t            this.x = x;\r\n\t            this.y = y;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * @param {Array.<number>} m\r\n\t         * @methods\r\n\t         */\r\n\t        applyTransform: (function () {\r\n\t            var min = [];\r\n\t            var max = [];\r\n\t            return function (m) {\r\n\t                // In case usage like this\r\n\t                // el.getBoundingRect().applyTransform(el.transform)\r\n\t                // And element has no transform\r\n\t                if (!m) {\r\n\t                    return;\r\n\t                }\r\n\t                min[0] = this.x;\r\n\t                min[1] = this.y;\r\n\t                max[0] = this.x + this.width;\r\n\t                max[1] = this.y + this.height;\r\n\r\n\t                v2ApplyTransform(min, min, m);\r\n\t                v2ApplyTransform(max, max, m);\r\n\r\n\t                this.x = mathMin(min[0], max[0]);\r\n\t                this.y = mathMin(min[1], max[1]);\r\n\t                this.width = mathAbs(max[0] - min[0]);\r\n\t                this.height = mathAbs(max[1] - min[1]);\r\n\t            };\r\n\t        })(),\r\n\r\n\t        /**\r\n\t         * Calculate matrix of transforming from self to target rect\r\n\t         * @param  {module:zrender/core/BoundingRect} b\r\n\t         * @return {Array.<number>}\r\n\t         */\r\n\t        calculateTransform: function (b) {\r\n\t            var a = this;\r\n\t            var sx = b.width / a.width;\r\n\t            var sy = b.height / a.height;\r\n\r\n\t            var m = matrix.create();\r\n\r\n\t            // 矩阵右乘\r\n\t            matrix.translate(m, m, [-a.x, -a.y]);\r\n\t            matrix.scale(m, m, [sx, sy]);\r\n\t            matrix.translate(m, m, [b.x, b.y]);\r\n\r\n\t            return m;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * @param {(module:echarts/core/BoundingRect|Object)} b\r\n\t         * @return {boolean}\r\n\t         */\r\n\t        intersect: function (b) {\r\n\t            var a = this;\r\n\t            var ax0 = a.x;\r\n\t            var ax1 = a.x + a.width;\r\n\t            var ay0 = a.y;\r\n\t            var ay1 = a.y + a.height;\r\n\r\n\t            var bx0 = b.x;\r\n\t            var bx1 = b.x + b.width;\r\n\t            var by0 = b.y;\r\n\t            var by1 = b.y + b.height;\r\n\r\n\t            return ! (ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\r\n\t        },\r\n\r\n\t        contain: function (x, y) {\r\n\t            var rect = this;\r\n\t            return x >= rect.x\r\n\t                && x <= (rect.x + rect.width)\r\n\t                && y >= rect.y\r\n\t                && y <= (rect.y + rect.height);\r\n\t        },\r\n\r\n\t        /**\r\n\t         * @return {module:echarts/core/BoundingRect}\r\n\t         */\r\n\t        clone: function () {\r\n\t            return new BoundingRect(this.x, this.y, this.width, this.height);\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Copy from another rect\r\n\t         */\r\n\t        copy: function (other) {\r\n\t            this.x = other.x;\r\n\t            this.y = other.y;\r\n\t            this.width = other.width;\r\n\t            this.height = other.height;\r\n\t        }\r\n\t    };\r\n\r\n\t    module.exports = BoundingRect;\r\n\r\n\r\n/***/ },\r\n/* 10 */\r\n/***/ function(module, exports) {\r\n\r\n\t\r\n\t    var ArrayCtor = typeof Float32Array === 'undefined'\r\n\t        ? Array\r\n\t        : Float32Array;\r\n\r\n\t    /**\r\n\t     * @typedef {Float32Array|Array.<number>} Vector2\r\n\t     */\r\n\t    /**\r\n\t     * 二维向量类\r\n\t     * @exports zrender/tool/vector\r\n\t     */\r\n\t    var vector = {\r\n\t        /**\r\n\t         * 创建一个向量\r\n\t         * @param {number} [x=0]\r\n\t         * @param {number} [y=0]\r\n\t         * @return {Vector2}\r\n\t         */\r\n\t        create: function (x, y) {\r\n\t            var out = new ArrayCtor(2);\r\n\t            if (x == null) {\r\n\t                x = 0;\r\n\t            }\r\n\t            if (y == null) {\r\n\t                y = 0;\r\n\t            }\r\n\t            out[0] = x;\r\n\t            out[1] = y;\r\n\t            return out;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * 复制向量数据\r\n\t         * @param {Vector2} out\r\n\t         * @param {Vector2} v\r\n\t         * @return {Vector2}\r\n\t         */\r\n\t        copy: function (out, v) {\r\n\t            out[0] = v[0];\r\n\t            out[1] = v[1];\r\n\t            return out;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * 克隆一个向量\r\n\t         * @param {Vector2} v\r\n\t         * @return {Vector2}\r\n\t         */\r\n\t        clone: function (v) {\r\n\t            var out = new ArrayCtor(2);\r\n\t            out[0] = v[0];\r\n\t            out[1] = v[1];\r\n\t            return out;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * 设置向量的两个项\r\n\t         * @param {Vector2} out\r\n\t         * @param {number} a\r\n\t         * @param {number} b\r\n\t         * @return {Vector2} 结果\r\n\t         */\r\n\t        set: function (out, a, b) {\r\n\t            out[0] = a;\r\n\t            out[1] = b;\r\n\t            return out;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * 向量相加\r\n\t         * @param {Vector2} out\r\n\t         * @param {Vector2} v1\r\n\t         * @param {Vector2} v2\r\n\t         */\r\n\t        add: function (out, v1, v2) {\r\n\t            out[0] = v1[0] + v2[0];\r\n\t            out[1] = v1[1] + v2[1];\r\n\t            return out;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * 向量缩放后相加\r\n\t         * @param {Vector2} out\r\n\t         * @param {Vector2} v1\r\n\t         * @param {Vector2} v2\r\n\t         * @param {number} a\r\n\t         */\r\n\t        scaleAndAdd: function (out, v1, v2, a) {\r\n\t            out[0] = v1[0] + v2[0] * a;\r\n\t            out[1] = v1[1] + v2[1] * a;\r\n\t            return out;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * 向量相减\r\n\t         * @param {Vector2} out\r\n\t         * @param {Vector2} v1\r\n\t         * @param {Vector2} v2\r\n\t         */\r\n\t        sub: function (out, v1, v2) {\r\n\t            out[0] = v1[0] - v2[0];\r\n\t            out[1] = v1[1] - v2[1];\r\n\t            return out;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * 向量长度\r\n\t         * @param {Vector2} v\r\n\t         * @return {number}\r\n\t         */\r\n\t        len: function (v) {\r\n\t            return Math.sqrt(this.lenSquare(v));\r\n\t        },\r\n\r\n\t        /**\r\n\t         * 向量长度平方\r\n\t         * @param {Vector2} v\r\n\t         * @return {number}\r\n\t         */\r\n\t        lenSquare: function (v) {\r\n\t            return v[0] * v[0] + v[1] * v[1];\r\n\t        },\r\n\r\n\t        /**\r\n\t         * 向量乘法\r\n\t         * @param {Vector2} out\r\n\t         * @param {Vector2} v1\r\n\t         * @param {Vector2} v2\r\n\t         */\r\n\t        mul: function (out, v1, v2) {\r\n\t            out[0] = v1[0] * v2[0];\r\n\t            out[1] = v1[1] * v2[1];\r\n\t            return out;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * 向量除法\r\n\t         * @param {Vector2} out\r\n\t         * @param {Vector2} v1\r\n\t         * @param {Vector2} v2\r\n\t         */\r\n\t        div: function (out, v1, v2) {\r\n\t            out[0] = v1[0] / v2[0];\r\n\t            out[1] = v1[1] / v2[1];\r\n\t            return out;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * 向量点乘\r\n\t         * @param {Vector2} v1\r\n\t         * @param {Vector2} v2\r\n\t         * @return {number}\r\n\t         */\r\n\t        dot: function (v1, v2) {\r\n\t            return v1[0] * v2[0] + v1[1] * v2[1];\r\n\t        },\r\n\r\n\t        /**\r\n\t         * 向量缩放\r\n\t         * @param {Vector2} out\r\n\t         * @param {Vector2} v\r\n\t         * @param {number} s\r\n\t         */\r\n\t        scale: function (out, v, s) {\r\n\t            out[0] = v[0] * s;\r\n\t            out[1] = v[1] * s;\r\n\t            return out;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * 向量归一化\r\n\t         * @param {Vector2} out\r\n\t         * @param {Vector2} v\r\n\t         */\r\n\t        normalize: function (out, v) {\r\n\t            var d = vector.len(v);\r\n\t            if (d === 0) {\r\n\t                out[0] = 0;\r\n\t                out[1] = 0;\r\n\t            }\r\n\t            else {\r\n\t                out[0] = v[0] / d;\r\n\t                out[1] = v[1] / d;\r\n\t            }\r\n\t            return out;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * 计算向量间距离\r\n\t         * @param {Vector2} v1\r\n\t         * @param {Vector2} v2\r\n\t         * @return {number}\r\n\t         */\r\n\t        distance: function (v1, v2) {\r\n\t            return Math.sqrt(\r\n\t                (v1[0] - v2[0]) * (v1[0] - v2[0])\r\n\t                + (v1[1] - v2[1]) * (v1[1] - v2[1])\r\n\t            );\r\n\t        },\r\n\r\n\t        /**\r\n\t         * 向量距离平方\r\n\t         * @param {Vector2} v1\r\n\t         * @param {Vector2} v2\r\n\t         * @return {number}\r\n\t         */\r\n\t        distanceSquare: function (v1, v2) {\r\n\t            return (v1[0] - v2[0]) * (v1[0] - v2[0])\r\n\t                + (v1[1] - v2[1]) * (v1[1] - v2[1]);\r\n\t        },\r\n\r\n\t        /**\r\n\t         * 求负向量\r\n\t         * @param {Vector2} out\r\n\t         * @param {Vector2} v\r\n\t         */\r\n\t        negate: function (out, v) {\r\n\t            out[0] = -v[0];\r\n\t            out[1] = -v[1];\r\n\t            return out;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * 插值两个点\r\n\t         * @param {Vector2} out\r\n\t         * @param {Vector2} v1\r\n\t         * @param {Vector2} v2\r\n\t         * @param {number} t\r\n\t         */\r\n\t        lerp: function (out, v1, v2, t) {\r\n\t            out[0] = v1[0] + t * (v2[0] - v1[0]);\r\n\t            out[1] = v1[1] + t * (v2[1] - v1[1]);\r\n\t            return out;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * 矩阵左乘向量\r\n\t         * @param {Vector2} out\r\n\t         * @param {Vector2} v\r\n\t         * @param {Vector2} m\r\n\t         */\r\n\t        applyTransform: function (out, v, m) {\r\n\t            var x = v[0];\r\n\t            var y = v[1];\r\n\t            out[0] = m[0] * x + m[2] * y + m[4];\r\n\t            out[1] = m[1] * x + m[3] * y + m[5];\r\n\t            return out;\r\n\t        },\r\n\t        /**\r\n\t         * 求两个向量最小值\r\n\t         * @param  {Vector2} out\r\n\t         * @param  {Vector2} v1\r\n\t         * @param  {Vector2} v2\r\n\t         */\r\n\t        min: function (out, v1, v2) {\r\n\t            out[0] = Math.min(v1[0], v2[0]);\r\n\t            out[1] = Math.min(v1[1], v2[1]);\r\n\t            return out;\r\n\t        },\r\n\t        /**\r\n\t         * 求两个向量最大值\r\n\t         * @param  {Vector2} out\r\n\t         * @param  {Vector2} v1\r\n\t         * @param  {Vector2} v2\r\n\t         */\r\n\t        max: function (out, v1, v2) {\r\n\t            out[0] = Math.max(v1[0], v2[0]);\r\n\t            out[1] = Math.max(v1[1], v2[1]);\r\n\t            return out;\r\n\t        }\r\n\t    };\r\n\r\n\t    vector.length = vector.len;\r\n\t    vector.lengthSquare = vector.lenSquare;\r\n\t    vector.dist = vector.distance;\r\n\t    vector.distSquare = vector.distanceSquare;\r\n\r\n\t    module.exports = vector;\r\n\r\n\r\n\r\n/***/ },\r\n/* 11 */\r\n/***/ function(module, exports) {\r\n\r\n\t\r\n\t    var ArrayCtor = typeof Float32Array === 'undefined'\r\n\t        ? Array\r\n\t        : Float32Array;\r\n\t    /**\r\n\t     * 3x2矩阵操作类\r\n\t     * @exports zrender/tool/matrix\r\n\t     */\r\n\t    var matrix = {\r\n\t        /**\r\n\t         * 创建一个单位矩阵\r\n\t         * @return {Float32Array|Array.<number>}\r\n\t         */\r\n\t        create : function() {\r\n\t            var out = new ArrayCtor(6);\r\n\t            matrix.identity(out);\r\n\r\n\t            return out;\r\n\t        },\r\n\t        /**\r\n\t         * 设置矩阵为单位矩阵\r\n\t         * @param {Float32Array|Array.<number>} out\r\n\t         */\r\n\t        identity : function(out) {\r\n\t            out[0] = 1;\r\n\t            out[1] = 0;\r\n\t            out[2] = 0;\r\n\t            out[3] = 1;\r\n\t            out[4] = 0;\r\n\t            out[5] = 0;\r\n\t            return out;\r\n\t        },\r\n\t        /**\r\n\t         * 复制矩阵\r\n\t         * @param {Float32Array|Array.<number>} out\r\n\t         * @param {Float32Array|Array.<number>} m\r\n\t         */\r\n\t        copy: function(out, m) {\r\n\t            out[0] = m[0];\r\n\t            out[1] = m[1];\r\n\t            out[2] = m[2];\r\n\t            out[3] = m[3];\r\n\t            out[4] = m[4];\r\n\t            out[5] = m[5];\r\n\t            return out;\r\n\t        },\r\n\t        /**\r\n\t         * 矩阵相乘\r\n\t         * @param {Float32Array|Array.<number>} out\r\n\t         * @param {Float32Array|Array.<number>} m1\r\n\t         * @param {Float32Array|Array.<number>} m2\r\n\t         */\r\n\t        mul : function (out, m1, m2) {\r\n\t            // Consider matrix.mul(m, m2, m);\r\n\t            // where out is the same as m2.\r\n\t            // So use temp variable to escape error.\r\n\t            var out0 = m1[0] * m2[0] + m1[2] * m2[1];\r\n\t            var out1 = m1[1] * m2[0] + m1[3] * m2[1];\r\n\t            var out2 = m1[0] * m2[2] + m1[2] * m2[3];\r\n\t            var out3 = m1[1] * m2[2] + m1[3] * m2[3];\r\n\t            var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\r\n\t            var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\r\n\t            out[0] = out0;\r\n\t            out[1] = out1;\r\n\t            out[2] = out2;\r\n\t            out[3] = out3;\r\n\t            out[4] = out4;\r\n\t            out[5] = out5;\r\n\t            return out;\r\n\t        },\r\n\t        /**\r\n\t         * 平移变换\r\n\t         * @param {Float32Array|Array.<number>} out\r\n\t         * @param {Float32Array|Array.<number>} a\r\n\t         * @param {Float32Array|Array.<number>} v\r\n\t         */\r\n\t        translate : function(out, a, v) {\r\n\t            out[0] = a[0];\r\n\t            out[1] = a[1];\r\n\t            out[2] = a[2];\r\n\t            out[3] = a[3];\r\n\t            out[4] = a[4] + v[0];\r\n\t            out[5] = a[5] + v[1];\r\n\t            return out;\r\n\t        },\r\n\t        /**\r\n\t         * 旋转变换\r\n\t         * @param {Float32Array|Array.<number>} out\r\n\t         * @param {Float32Array|Array.<number>} a\r\n\t         * @param {number} rad\r\n\t         */\r\n\t        rotate : function(out, a, rad) {\r\n\t            var aa = a[0];\r\n\t            var ac = a[2];\r\n\t            var atx = a[4];\r\n\t            var ab = a[1];\r\n\t            var ad = a[3];\r\n\t            var aty = a[5];\r\n\t            var st = Math.sin(rad);\r\n\t            var ct = Math.cos(rad);\r\n\r\n\t            out[0] = aa * ct + ab * st;\r\n\t            out[1] = -aa * st + ab * ct;\r\n\t            out[2] = ac * ct + ad * st;\r\n\t            out[3] = -ac * st + ct * ad;\r\n\t            out[4] = ct * atx + st * aty;\r\n\t            out[5] = ct * aty - st * atx;\r\n\t            return out;\r\n\t        },\r\n\t        /**\r\n\t         * 缩放变换\r\n\t         * @param {Float32Array|Array.<number>} out\r\n\t         * @param {Float32Array|Array.<number>} a\r\n\t         * @param {Float32Array|Array.<number>} v\r\n\t         */\r\n\t        scale : function(out, a, v) {\r\n\t            var vx = v[0];\r\n\t            var vy = v[1];\r\n\t            out[0] = a[0] * vx;\r\n\t            out[1] = a[1] * vy;\r\n\t            out[2] = a[2] * vx;\r\n\t            out[3] = a[3] * vy;\r\n\t            out[4] = a[4] * vx;\r\n\t            out[5] = a[5] * vy;\r\n\t            return out;\r\n\t        },\r\n\t        /**\r\n\t         * 求逆矩阵\r\n\t         * @param {Float32Array|Array.<number>} out\r\n\t         * @param {Float32Array|Array.<number>} a\r\n\t         */\r\n\t        invert : function(out, a) {\r\n\r\n\t            var aa = a[0];\r\n\t            var ac = a[2];\r\n\t            var atx = a[4];\r\n\t            var ab = a[1];\r\n\t            var ad = a[3];\r\n\t            var aty = a[5];\r\n\r\n\t            var det = aa * ad - ab * ac;\r\n\t            if (!det) {\r\n\t                return null;\r\n\t            }\r\n\t            det = 1.0 / det;\r\n\r\n\t            out[0] = ad * det;\r\n\t            out[1] = -ab * det;\r\n\t            out[2] = -ac * det;\r\n\t            out[3] = aa * det;\r\n\t            out[4] = (ac * aty - ad * atx) * det;\r\n\t            out[5] = (ab * atx - aa * aty) * det;\r\n\t            return out;\r\n\t        }\r\n\t    };\r\n\r\n\t    module.exports = matrix;\r\n\r\n\r\n\r\n/***/ },\r\n/* 12 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t/**\r\n\t * @module echarts/model/Model\r\n\t */\r\n\r\n\r\n\t    var zrUtil = __webpack_require__(4);\r\n\t    var clazzUtil = __webpack_require__(13);\r\n\r\n\t    /**\r\n\t     * @alias module:echarts/model/Model\r\n\t     * @constructor\r\n\t     * @param {Object} option\r\n\t     * @param {module:echarts/model/Model} [parentModel]\r\n\t     * @param {module:echarts/model/Global} [ecModel]\r\n\t     */\r\n\t    function Model(option, parentModel, ecModel) {\r\n\t        /**\r\n\t         * @type {module:echarts/model/Model}\r\n\t         * @readOnly\r\n\t         */\r\n\t        this.parentModel = parentModel;\r\n\r\n\t        /**\r\n\t         * @type {module:echarts/model/Global}\r\n\t         * @readOnly\r\n\t         */\r\n\t        this.ecModel = ecModel;\r\n\r\n\t        /**\r\n\t         * @type {Object}\r\n\t         * @protected\r\n\t         */\r\n\t        this.option = option;\r\n\r\n\t        // Simple optimization\r\n\t        // if (this.init) {\r\n\t        //     if (arguments.length <= 4) {\r\n\t        //         this.init(option, parentModel, ecModel, extraOpt);\r\n\t        //     }\r\n\t        //     else {\r\n\t        //         this.init.apply(this, arguments);\r\n\t        //     }\r\n\t        // }\r\n\t    }\r\n\r\n\t    Model.prototype = {\r\n\r\n\t        constructor: Model,\r\n\r\n\t        /**\r\n\t         * Model 的初始化函数\r\n\t         * @param {Object} option\r\n\t         */\r\n\t        init: null,\r\n\r\n\t        /**\r\n\t         * 从新的 Option merge\r\n\t         */\r\n\t        mergeOption: function (option) {\r\n\t            zrUtil.merge(this.option, option, true);\r\n\t        },\r\n\r\n\t        /**\r\n\t         * @param {string} path\r\n\t         * @param {boolean} [ignoreParent=false]\r\n\t         * @return {*}\r\n\t         */\r\n\t        get: function (path, ignoreParent) {\r\n\t            if (!path) {\r\n\t                return this.option;\r\n\t            }\r\n\r\n\t            if (typeof path === 'string') {\r\n\t                path = path.split('.');\r\n\t            }\r\n\r\n\t            var obj = this.option;\r\n\t            var parentModel = this.parentModel;\r\n\t            for (var i = 0; i < path.length; i++) {\r\n\t                // Ignore empty\r\n\t                if (!path[i]) {\r\n\t                    continue;\r\n\t                }\r\n\t                // obj could be number/string/... (like 0)\r\n\t                obj = (obj && typeof obj === 'object') ? obj[path[i]] : null;\r\n\t                if (obj == null) {\r\n\t                    break;\r\n\t                }\r\n\t            }\r\n\t            if (obj == null && parentModel && !ignoreParent) {\r\n\t                obj = parentModel.get(path);\r\n\t            }\r\n\t            return obj;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * @param {string} key\r\n\t         * @param {boolean} [ignoreParent=false]\r\n\t         * @return {*}\r\n\t         */\r\n\t        getShallow: function (key, ignoreParent) {\r\n\t            var option = this.option;\r\n\t            var val = option && option[key];\r\n\t            var parentModel = this.parentModel;\r\n\t            if (val == null && parentModel && !ignoreParent) {\r\n\t                val = parentModel.getShallow(key);\r\n\t            }\r\n\t            return val;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * @param {string} path\r\n\t         * @param {module:echarts/model/Model} [parentModel]\r\n\t         * @return {module:echarts/model/Model}\r\n\t         */\r\n\t        getModel: function (path, parentModel) {\r\n\t            var obj = this.get(path, true);\r\n\t            var thisParentModel = this.parentModel;\r\n\t            var model = new Model(\r\n\t                obj, parentModel || (thisParentModel && thisParentModel.getModel(path)),\r\n\t                this.ecModel\r\n\t            );\r\n\t            return model;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * If model has option\r\n\t         */\r\n\t        isEmpty: function () {\r\n\t            return this.option == null;\r\n\t        },\r\n\r\n\t        restoreData: function () {},\r\n\r\n\t        // Pending\r\n\t        clone: function () {\r\n\t            var Ctor = this.constructor;\r\n\t            return new Ctor(zrUtil.clone(this.option));\r\n\t        },\r\n\r\n\t        setReadOnly: function (properties) {\r\n\t            clazzUtil.setReadOnly(this, properties);\r\n\t        }\r\n\t    };\r\n\r\n\t    // Enable Model.extend.\r\n\t    clazzUtil.enableClassExtend(Model);\r\n\r\n\t    var mixin = zrUtil.mixin;\r\n\t    mixin(Model, __webpack_require__(14));\r\n\t    mixin(Model, __webpack_require__(16));\r\n\t    mixin(Model, __webpack_require__(17));\r\n\t    mixin(Model, __webpack_require__(18));\r\n\r\n\t    module.exports = Model;\r\n\r\n\r\n/***/ },\r\n/* 13 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t\r\n\r\n\t    var zrUtil = __webpack_require__(4);\r\n\r\n\t    var clazz = {};\r\n\r\n\t    var TYPE_DELIMITER = '.';\r\n\t    var IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\r\n\t    /**\r\n\t     * @public\r\n\t     */\r\n\t    var parseClassType = clazz.parseClassType = function (componentType) {\r\n\t        var ret = {main: '', sub: ''};\r\n\t        if (componentType) {\r\n\t            componentType = componentType.split(TYPE_DELIMITER);\r\n\t            ret.main = componentType[0] || '';\r\n\t            ret.sub = componentType[1] || '';\r\n\t        }\r\n\t        return ret;\r\n\t    };\r\n\t    /**\r\n\t     * @public\r\n\t     */\r\n\t    clazz.enableClassExtend = function (RootClass) {\r\n\r\n\t        RootClass.$constructor = RootClass;\r\n\t        RootClass.extend = function (proto) {\r\n\t            var superClass = this;\r\n\t            var ExtendedClass = function () {\r\n\t                if (!proto.$constructor) {\r\n\t                    superClass.apply(this, arguments);\r\n\t                }\r\n\t                else {\r\n\t                    proto.$constructor.apply(this, arguments);\r\n\t                }\r\n\t            };\r\n\r\n\t            zrUtil.extend(ExtendedClass.prototype, proto);\r\n\r\n\t            ExtendedClass.extend = this.extend;\r\n\t            ExtendedClass.superCall = superCall;\r\n\t            ExtendedClass.superApply = superApply;\r\n\t            zrUtil.inherits(ExtendedClass, this);\r\n\t            ExtendedClass.superClass = superClass;\r\n\r\n\t            return ExtendedClass;\r\n\t        };\r\n\t    };\r\n\r\n\t    // superCall should have class info, which can not be fetch from 'this'.\r\n\t    // Consider this case:\r\n\t    // class A has method f,\r\n\t    // class B inherits class A, overrides method f, f call superApply('f'),\r\n\t    // class C inherits class B, do not overrides method f,\r\n\t    // then when method of class C is called, dead loop occured.\r\n\t    function superCall(context, methodName) {\r\n\t        var args = zrUtil.slice(arguments, 2);\r\n\t        return this.superClass.prototype[methodName].apply(context, args);\r\n\t    }\r\n\r\n\t    function superApply(context, methodName, args) {\r\n\t        return this.superClass.prototype[methodName].apply(context, args);\r\n\t    }\r\n\r\n\t    /**\r\n\t     * @param {Object} entity\r\n\t     * @param {Object} options\r\n\t     * @param {boolean} [options.registerWhenExtend]\r\n\t     * @public\r\n\t     */\r\n\t    clazz.enableClassManagement = function (entity, options) {\r\n\t        options = options || {};\r\n\r\n\t        /**\r\n\t         * Component model classes\r\n\t         * key: componentType,\r\n\t         * value:\r\n\t         *     componentClass, when componentType is 'xxx'\r\n\t         *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\r\n\t         * @type {Object}\r\n\t         */\r\n\t        var storage = {};\r\n\r\n\t        entity.registerClass = function (Clazz, componentType) {\r\n\t            if (componentType) {\r\n\t                componentType = parseClassType(componentType);\r\n\r\n\t                if (!componentType.sub) {\r\n\t                    if (true) {\r\n\t                        if (storage[componentType.main]) {\r\n\t                            console.warn(componentType.main + ' exists.');\r\n\t                        }\r\n\t                    }\r\n\t                    storage[componentType.main] = Clazz;\r\n\t                }\r\n\t                else if (componentType.sub !== IS_CONTAINER) {\r\n\t                    var container = makeContainer(componentType);\r\n\t                    container[componentType.sub] = Clazz;\r\n\t                }\r\n\t            }\r\n\t            return Clazz;\r\n\t        };\r\n\r\n\t        entity.getClass = function (componentTypeMain, subType, throwWhenNotFound) {\r\n\t            var Clazz = storage[componentTypeMain];\r\n\r\n\t            if (Clazz && Clazz[IS_CONTAINER]) {\r\n\t                Clazz = subType ? Clazz[subType] : null;\r\n\t            }\r\n\r\n\t            if (throwWhenNotFound && !Clazz) {\r\n\t                throw new Error(\r\n\t                    'Component ' + componentTypeMain + '.' + (subType || '') + ' not exists. Load it first.'\r\n\t                );\r\n\t            }\r\n\r\n\t            return Clazz;\r\n\t        };\r\n\r\n\t        entity.getClassesByMainType = function (componentType) {\r\n\t            componentType = parseClassType(componentType);\r\n\r\n\t            var result = [];\r\n\t            var obj = storage[componentType.main];\r\n\r\n\t            if (obj && obj[IS_CONTAINER]) {\r\n\t                zrUtil.each(obj, function (o, type) {\r\n\t                    type !== IS_CONTAINER && result.push(o);\r\n\t                });\r\n\t            }\r\n\t            else {\r\n\t                result.push(obj);\r\n\t            }\r\n\r\n\t            return result;\r\n\t        };\r\n\r\n\t        entity.hasClass = function (componentType) {\r\n\t            // Just consider componentType.main.\r\n\t            componentType = parseClassType(componentType);\r\n\t            return !!storage[componentType.main];\r\n\t        };\r\n\r\n\t        /**\r\n\t         * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\r\n\t         */\r\n\t        entity.getAllClassMainTypes = function () {\r\n\t            var types = [];\r\n\t            zrUtil.each(storage, function (obj, type) {\r\n\t                types.push(type);\r\n\t            });\r\n\t            return types;\r\n\t        };\r\n\r\n\t        /**\r\n\t         * If a main type is container and has sub types\r\n\t         * @param  {string}  mainType\r\n\t         * @return {boolean}\r\n\t         */\r\n\t        entity.hasSubTypes = function (componentType) {\r\n\t            componentType = parseClassType(componentType);\r\n\t            var obj = storage[componentType.main];\r\n\t            return obj && obj[IS_CONTAINER];\r\n\t        };\r\n\r\n\t        entity.parseClassType = parseClassType;\r\n\r\n\t        function makeContainer(componentType) {\r\n\t            var container = storage[componentType.main];\r\n\t            if (!container || !container[IS_CONTAINER]) {\r\n\t                container = storage[componentType.main] = {};\r\n\t                container[IS_CONTAINER] = true;\r\n\t            }\r\n\t            return container;\r\n\t        }\r\n\r\n\t        if (options.registerWhenExtend) {\r\n\t            var originalExtend = entity.extend;\r\n\t            if (originalExtend) {\r\n\t                entity.extend = function (proto) {\r\n\t                    var ExtendedClass = originalExtend.call(this, proto);\r\n\t                    return entity.registerClass(ExtendedClass, proto.type);\r\n\t                };\r\n\t            }\r\n\t        }\r\n\r\n\t        return entity;\r\n\t    };\r\n\r\n\t    /**\r\n\t     * @param {string|Array.<string>} properties\r\n\t     */\r\n\t    clazz.setReadOnly = function (obj, properties) {\r\n\t        // FIXME It seems broken in IE8 simulation of IE11\r\n\t        // if (!zrUtil.isArray(properties)) {\r\n\t        //     properties = properties != null ? [properties] : [];\r\n\t        // }\r\n\t        // zrUtil.each(properties, function (prop) {\r\n\t        //     var value = obj[prop];\r\n\r\n\t        //     Object.defineProperty\r\n\t        //         && Object.defineProperty(obj, prop, {\r\n\t        //             value: value, writable: false\r\n\t        //         });\r\n\t        //     zrUtil.isArray(obj[prop])\r\n\t        //         && Object.freeze\r\n\t        //         && Object.freeze(obj[prop]);\r\n\t        // });\r\n\t    };\r\n\r\n\t    module.exports = clazz;\r\n\r\n\r\n/***/ },\r\n/* 14 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t\r\n\t    var getLineStyle = __webpack_require__(15)(\r\n\t        [\r\n\t            ['lineWidth', 'width'],\r\n\t            ['stroke', 'color'],\r\n\t            ['opacity'],\r\n\t            ['shadowBlur'],\r\n\t            ['shadowOffsetX'],\r\n\t            ['shadowOffsetY'],\r\n\t            ['shadowColor']\r\n\t        ]\r\n\t    );\r\n\t    module.exports = {\r\n\t        getLineStyle: function (excludes) {\r\n\t            var style = getLineStyle.call(this, excludes);\r\n\t            var lineDash = this.getLineDash();\r\n\t            lineDash && (style.lineDash = lineDash);\r\n\t            return style;\r\n\t        },\r\n\r\n\t        getLineDash: function () {\r\n\t            var lineType = this.get('type');\r\n\t            return (lineType === 'solid' || lineType == null) ? null\r\n\t                : (lineType === 'dashed' ? [5, 5] : [1, 1]);\r\n\t        }\r\n\t    };\r\n\r\n\r\n/***/ },\r\n/* 15 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t// TODO Parse shadow style\r\n\t// TODO Only shallow path support\r\n\r\n\t    var zrUtil = __webpack_require__(4);\r\n\r\n\t    module.exports = function (properties) {\r\n\t        // Normalize\r\n\t        for (var i = 0; i < properties.length; i++) {\r\n\t            if (!properties[i][1]) {\r\n\t               properties[i][1] = properties[i][0];\r\n\t            }\r\n\t        }\r\n\t        return function (excludes) {\r\n\t            var style = {};\r\n\t            for (var i = 0; i < properties.length; i++) {\r\n\t                var propName = properties[i][1];\r\n\t                if (excludes && zrUtil.indexOf(excludes, propName) >= 0) {\r\n\t                    continue;\r\n\t                }\r\n\t                var val = this.getShallow(propName);\r\n\t                if (val != null) {\r\n\t                    style[properties[i][0]] = val;\r\n\t                }\r\n\t            }\r\n\t            return style;\r\n\t        };\r\n\t    };\r\n\r\n\r\n/***/ },\r\n/* 16 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t\r\n\t    module.exports = {\r\n\t        getAreaStyle: __webpack_require__(15)(\r\n\t            [\r\n\t                ['fill', 'color'],\r\n\t                ['shadowBlur'],\r\n\t                ['shadowOffsetX'],\r\n\t                ['shadowOffsetY'],\r\n\t                ['opacity'],\r\n\t                ['shadowColor']\r\n\t            ]\r\n\t        )\r\n\t    };\r\n\r\n\r\n/***/ },\r\n/* 17 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t\r\n\r\n\t    var textContain = __webpack_require__(8);\r\n\r\n\t    function getShallow(model, path) {\r\n\t        return model && model.getShallow(path);\r\n\t    }\r\n\r\n\t    module.exports = {\r\n\t        /**\r\n\t         * Get color property or get color from option.textStyle.color\r\n\t         * @return {string}\r\n\t         */\r\n\t        getTextColor: function () {\r\n\t            var ecModel = this.ecModel;\r\n\t            return this.getShallow('color')\r\n\t                || (ecModel && ecModel.get('textStyle.color'));\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Create font string from fontStyle, fontWeight, fontSize, fontFamily\r\n\t         * @return {string}\r\n\t         */\r\n\t        getFont: function () {\r\n\t            var ecModel = this.ecModel;\r\n\t            var gTextStyleModel = ecModel && ecModel.getModel('textStyle');\r\n\t            return [\r\n\t                // FIXME in node-canvas fontWeight is before fontStyle\r\n\t                this.getShallow('fontStyle') || getShallow(gTextStyleModel, 'fontStyle'),\r\n\t                this.getShallow('fontWeight') || getShallow(gTextStyleModel, 'fontWeight'),\r\n\t                (this.getShallow('fontSize') || getShallow(gTextStyleModel, 'fontSize') || 12) + 'px',\r\n\t                this.getShallow('fontFamily') || getShallow(gTextStyleModel, 'fontFamily') || 'sans-serif'\r\n\t            ].join(' ');\r\n\t        },\r\n\r\n\t        getTextRect: function (text) {\r\n\t            var textStyle = this.get('textStyle') || {};\r\n\t            return textContain.getBoundingRect(\r\n\t                text,\r\n\t                this.getFont(),\r\n\t                textStyle.align,\r\n\t                textStyle.baseline\r\n\t            );\r\n\t        },\r\n\r\n\t        truncateText: function (text, containerWidth, ellipsis, options) {\r\n\t            return textContain.truncateText(\r\n\t                text, containerWidth, this.getFont(), ellipsis, options\r\n\t            );\r\n\t        }\r\n\t    };\r\n\r\n\r\n/***/ },\r\n/* 18 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t\r\n\t    var getItemStyle = __webpack_require__(15)(\r\n\t        [\r\n\t            ['fill', 'color'],\r\n\t            ['stroke', 'borderColor'],\r\n\t            ['lineWidth', 'borderWidth'],\r\n\t            ['opacity'],\r\n\t            ['shadowBlur'],\r\n\t            ['shadowOffsetX'],\r\n\t            ['shadowOffsetY'],\r\n\t            ['shadowColor']\r\n\t        ]\r\n\t    );\r\n\t    module.exports = {\r\n\t        getItemStyle: function (excludes) {\r\n\t            var style = getItemStyle.call(this, excludes);\r\n\t            var lineDash = this.getBorderLineDash();\r\n\t            lineDash && (style.lineDash = lineDash);\r\n\t            return style;\r\n\t        },\r\n\r\n\t        getBorderLineDash: function () {\r\n\t            var lineType = this.get('borderType');\r\n\t            return (lineType === 'solid' || lineType == null) ? null\r\n\t                : (lineType === 'dashed' ? [5, 5] : [1, 1]);\r\n\t        }\r\n\t    };\r\n\r\n\r\n/***/ },\r\n/* 19 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t/**\r\n\t * Component model\r\n\t *\r\n\t * @module echarts/model/Component\r\n\t */\r\n\r\n\r\n\t    var Model = __webpack_require__(12);\r\n\t    var zrUtil = __webpack_require__(4);\r\n\t    var arrayPush = Array.prototype.push;\r\n\t    var componentUtil = __webpack_require__(20);\r\n\t    var clazzUtil = __webpack_require__(13);\r\n\t    var layout = __webpack_require__(21);\r\n\r\n\t    /**\r\n\t     * @alias module:echarts/model/Component\r\n\t     * @constructor\r\n\t     * @param {Object} option\r\n\t     * @param {module:echarts/model/Model} parentModel\r\n\t     * @param {module:echarts/model/Model} ecModel\r\n\t     */\r\n\t    var ComponentModel = Model.extend({\r\n\r\n\t        type: 'component',\r\n\r\n\t        /**\r\n\t         * @readOnly\r\n\t         * @type {string}\r\n\t         */\r\n\t        id: '',\r\n\r\n\t        /**\r\n\t         * @readOnly\r\n\t         */\r\n\t        name: '',\r\n\r\n\t        /**\r\n\t         * @readOnly\r\n\t         * @type {string}\r\n\t         */\r\n\t        mainType: '',\r\n\r\n\t        /**\r\n\t         * @readOnly\r\n\t         * @type {string}\r\n\t         */\r\n\t        subType: '',\r\n\r\n\t        /**\r\n\t         * @readOnly\r\n\t         * @type {number}\r\n\t         */\r\n\t        componentIndex: 0,\r\n\r\n\t        /**\r\n\t         * @type {Object}\r\n\t         * @protected\r\n\t         */\r\n\t        defaultOption: null,\r\n\r\n\t        /**\r\n\t         * @type {module:echarts/model/Global}\r\n\t         * @readOnly\r\n\t         */\r\n\t        ecModel: null,\r\n\r\n\t        /**\r\n\t         * key: componentType\r\n\t         * value:  Component model list, can not be null.\r\n\t         * @type {Object.<string, Array.<module:echarts/model/Model>>}\r\n\t         * @readOnly\r\n\t         */\r\n\t        dependentModels: [],\r\n\r\n\t        /**\r\n\t         * @type {string}\r\n\t         * @readOnly\r\n\t         */\r\n\t        uid: null,\r\n\r\n\t        /**\r\n\t         * Support merge layout params.\r\n\t         * Only support 'box' now (left/right/top/bottom/width/height).\r\n\t         * @type {string|Object} Object can be {ignoreSize: true}\r\n\t         * @readOnly\r\n\t         */\r\n\t        layoutMode: null,\r\n\r\n\t        $constructor: function (option, parentModel, ecModel, extraOpt) {\r\n\t            Model.call(this, option, parentModel, ecModel, extraOpt);\r\n\r\n\t            // Set dependentModels, componentIndex, name, id, mainType, subType.\r\n\t            zrUtil.extend(this, extraOpt);\r\n\r\n\t            this.uid = componentUtil.getUID('componentModel');\r\n\t        },\r\n\r\n\r\n\t        init: function (option, parentModel, ecModel, extraOpt) {\r\n\t            this.mergeDefaultAndTheme(option, ecModel);\r\n\t        },\r\n\r\n\t        mergeDefaultAndTheme: function (option, ecModel) {\r\n\t            var layoutMode = this.layoutMode;\r\n\t            var inputPositionParams = layoutMode\r\n\t                ? layout.getLayoutParams(option) : {};\r\n\r\n\t            var themeModel = ecModel.getTheme();\r\n\t            zrUtil.merge(option, themeModel.get(this.mainType));\r\n\t            zrUtil.merge(option, this.getDefaultOption());\r\n\r\n\t            if (layoutMode) {\r\n\t                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\r\n\t            }\r\n\t        },\r\n\r\n\t        mergeOption: function (option) {\r\n\t            zrUtil.merge(this.option, option, true);\r\n\r\n\t            var layoutMode = this.layoutMode;\r\n\t            if (layoutMode) {\r\n\t                layout.mergeLayoutParam(this.option, option, layoutMode);\r\n\t            }\r\n\t        },\r\n\r\n\t        // Hooker after init or mergeOption\r\n\t        optionUpdated: function (newCptOption, isInit) {},\r\n\r\n\t        getDefaultOption: function () {\r\n\t            if (!this.hasOwnProperty('__defaultOption')) {\r\n\t                var optList = [];\r\n\t                var Class = this.constructor;\r\n\t                while (Class) {\r\n\t                    var opt = Class.prototype.defaultOption;\r\n\t                    opt && optList.push(opt);\r\n\t                    Class = Class.superClass;\r\n\t                }\r\n\r\n\t                var defaultOption = {};\r\n\t                for (var i = optList.length - 1; i >= 0; i--) {\r\n\t                    defaultOption = zrUtil.merge(defaultOption, optList[i], true);\r\n\t                }\r\n\t                this.__defaultOption = defaultOption;\r\n\t            }\r\n\t            return this.__defaultOption;\r\n\t        }\r\n\r\n\t    });\r\n\r\n\t    // Reset ComponentModel.extend, add preConstruct.\r\n\t    // clazzUtil.enableClassExtend(\r\n\t    //     ComponentModel,\r\n\t    //     function (option, parentModel, ecModel, extraOpt) {\r\n\t    //         // Set dependentModels, componentIndex, name, id, mainType, subType.\r\n\t    //         zrUtil.extend(this, extraOpt);\r\n\r\n\t    //         this.uid = componentUtil.getUID('componentModel');\r\n\r\n\t    //         // this.setReadOnly([\r\n\t    //         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\r\n\t    //         //     'dependentModels', 'componentIndex'\r\n\t    //         // ]);\r\n\t    //     }\r\n\t    // );\r\n\r\n\t    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\r\n\t    clazzUtil.enableClassManagement(\r\n\t        ComponentModel, {registerWhenExtend: true}\r\n\t    );\r\n\t    componentUtil.enableSubTypeDefaulter(ComponentModel);\r\n\r\n\t    // Add capability of ComponentModel.topologicalTravel.\r\n\t    componentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\r\n\r\n\t    function getDependencies(componentType) {\r\n\t        var deps = [];\r\n\t        zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\r\n\t            arrayPush.apply(deps, Clazz.prototype.dependencies || []);\r\n\t        });\r\n\t        // Ensure main type\r\n\t        return zrUtil.map(deps, function (type) {\r\n\t            return clazzUtil.parseClassType(type).main;\r\n\t        });\r\n\t    }\r\n\r\n\t    zrUtil.mixin(ComponentModel, __webpack_require__(22));\r\n\r\n\t    module.exports = ComponentModel;\r\n\r\n\r\n/***/ },\r\n/* 20 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t\r\n\r\n\t    var zrUtil = __webpack_require__(4);\r\n\t    var clazz = __webpack_require__(13);\r\n\r\n\t    var parseClassType = clazz.parseClassType;\r\n\r\n\t    var base = 0;\r\n\r\n\t    var componentUtil = {};\r\n\r\n\t    var DELIMITER = '_';\r\n\r\n\t    /**\r\n\t     * @public\r\n\t     * @param {string} type\r\n\t     * @return {string}\r\n\t     */\r\n\t    componentUtil.getUID = function (type) {\r\n\t        // Considering the case of crossing js context,\r\n\t        // use Math.random to make id as unique as possible.\r\n\t        return [(type || ''), base++, Math.random()].join(DELIMITER);\r\n\t    };\r\n\r\n\t    /**\r\n\t     * @inner\r\n\t     */\r\n\t    componentUtil.enableSubTypeDefaulter = function (entity) {\r\n\r\n\t        var subTypeDefaulters = {};\r\n\r\n\t        entity.registerSubTypeDefaulter = function (componentType, defaulter) {\r\n\t            componentType = parseClassType(componentType);\r\n\t            subTypeDefaulters[componentType.main] = defaulter;\r\n\t        };\r\n\r\n\t        entity.determineSubType = function (componentType, option) {\r\n\t            var type = option.type;\r\n\t            if (!type) {\r\n\t                var componentTypeMain = parseClassType(componentType).main;\r\n\t                if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\r\n\t                    type = subTypeDefaulters[componentTypeMain](option);\r\n\t                }\r\n\t            }\r\n\t            return type;\r\n\t        };\r\n\r\n\t        return entity;\r\n\t    };\r\n\r\n\t    /**\r\n\t     * Topological travel on Activity Network (Activity On Vertices).\r\n\t     * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\r\n\t     *\r\n\t     * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\r\n\t     *\r\n\t     * If there is circle dependencey, Error will be thrown.\r\n\t     *\r\n\t     */\r\n\t    componentUtil.enableTopologicalTravel = function (entity, dependencyGetter) {\r\n\r\n\t        /**\r\n\t         * @public\r\n\t         * @param {Array.<string>} targetNameList Target Component type list.\r\n\t         *                                           Can be ['aa', 'bb', 'aa.xx']\r\n\t         * @param {Array.<string>} fullNameList By which we can build dependency graph.\r\n\t         * @param {Function} callback Params: componentType, dependencies.\r\n\t         * @param {Object} context Scope of callback.\r\n\t         */\r\n\t        entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\r\n\t            if (!targetNameList.length) {\r\n\t                return;\r\n\t            }\r\n\r\n\t            var result = makeDepndencyGraph(fullNameList);\r\n\t            var graph = result.graph;\r\n\t            var stack = result.noEntryList;\r\n\r\n\t            var targetNameSet = {};\r\n\t            zrUtil.each(targetNameList, function (name) {\r\n\t                targetNameSet[name] = true;\r\n\t            });\r\n\r\n\t            while (stack.length) {\r\n\t                var currComponentType = stack.pop();\r\n\t                var currVertex = graph[currComponentType];\r\n\t                var isInTargetNameSet = !!targetNameSet[currComponentType];\r\n\t                if (isInTargetNameSet) {\r\n\t                    callback.call(context, currComponentType, currVertex.originalDeps.slice());\r\n\t                    delete targetNameSet[currComponentType];\r\n\t                }\r\n\t                zrUtil.each(\r\n\t                    currVertex.successor,\r\n\t                    isInTargetNameSet ? removeEdgeAndAdd : removeEdge\r\n\t                );\r\n\t            }\r\n\r\n\t            zrUtil.each(targetNameSet, function () {\r\n\t                throw new Error('Circle dependency may exists');\r\n\t            });\r\n\r\n\t            function removeEdge(succComponentType) {\r\n\t                graph[succComponentType].entryCount--;\r\n\t                if (graph[succComponentType].entryCount === 0) {\r\n\t                    stack.push(succComponentType);\r\n\t                }\r\n\t            }\r\n\r\n\t            // Consider this case: legend depends on series, and we call\r\n\t            // chart.setOption({series: [...]}), where only series is in option.\r\n\t            // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\r\n\t            // not be called, but only sereis.mergeOption is called. Thus legend\r\n\t            // have no chance to update its local record about series (like which\r\n\t            // name of series is available in legend).\r\n\t            function removeEdgeAndAdd(succComponentType) {\r\n\t                targetNameSet[succComponentType] = true;\r\n\t                removeEdge(succComponentType);\r\n\t            }\r\n\t        };\r\n\r\n\t        /**\r\n\t         * DepndencyGraph: {Object}\r\n\t         * key: conponentType,\r\n\t         * value: {\r\n\t         *     successor: [conponentTypes...],\r\n\t         *     originalDeps: [conponentTypes...],\r\n\t         *     entryCount: {number}\r\n\t         * }\r\n\t         */\r\n\t        function makeDepndencyGraph(fullNameList) {\r\n\t            var graph = {};\r\n\t            var noEntryList = [];\r\n\r\n\t            zrUtil.each(fullNameList, function (name) {\r\n\r\n\t                var thisItem = createDependencyGraphItem(graph, name);\r\n\t                var originalDeps = thisItem.originalDeps = dependencyGetter(name);\r\n\r\n\t                var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\r\n\t                thisItem.entryCount = availableDeps.length;\r\n\t                if (thisItem.entryCount === 0) {\r\n\t                    noEntryList.push(name);\r\n\t                }\r\n\r\n\t                zrUtil.each(availableDeps, function (dependentName) {\r\n\t                    if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\r\n\t                        thisItem.predecessor.push(dependentName);\r\n\t                    }\r\n\t                    var thatItem = createDependencyGraphItem(graph, dependentName);\r\n\t                    if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\r\n\t                        thatItem.successor.push(name);\r\n\t                    }\r\n\t                });\r\n\t            });\r\n\r\n\t            return {graph: graph, noEntryList: noEntryList};\r\n\t        }\r\n\r\n\t        function createDependencyGraphItem(graph, name) {\r\n\t            if (!graph[name]) {\r\n\t                graph[name] = {predecessor: [], successor: []};\r\n\t            }\r\n\t            return graph[name];\r\n\t        }\r\n\r\n\t        function getAvailableDependencies(originalDeps, fullNameList) {\r\n\t            var availableDeps = [];\r\n\t            zrUtil.each(originalDeps, function (dep) {\r\n\t                zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\r\n\t            });\r\n\t            return availableDeps;\r\n\t        }\r\n\t    };\r\n\r\n\t    module.exports = componentUtil;\r\n\r\n\r\n/***/ },\r\n/* 21 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t'use strict';\r\n\t// Layout helpers for each component positioning\r\n\r\n\r\n\t    var zrUtil = __webpack_require__(4);\r\n\t    var BoundingRect = __webpack_require__(9);\r\n\t    var numberUtil = __webpack_require__(7);\r\n\t    var formatUtil = __webpack_require__(6);\r\n\t    var parsePercent = numberUtil.parsePercent;\r\n\t    var each = zrUtil.each;\r\n\r\n\t    var layout = {};\r\n\r\n\t    var LOCATION_PARAMS = ['left', 'right', 'top', 'bottom', 'width', 'height'];\r\n\r\n\t    function boxLayout(orient, group, gap, maxWidth, maxHeight) {\r\n\t        var x = 0;\r\n\t        var y = 0;\r\n\t        if (maxWidth == null) {\r\n\t            maxWidth = Infinity;\r\n\t        }\r\n\t        if (maxHeight == null) {\r\n\t            maxHeight = Infinity;\r\n\t        }\r\n\t        var currentLineMaxSize = 0;\r\n\t        group.eachChild(function (child, idx) {\r\n\t            var position = child.position;\r\n\t            var rect = child.getBoundingRect();\r\n\t            var nextChild = group.childAt(idx + 1);\r\n\t            var nextChildRect = nextChild && nextChild.getBoundingRect();\r\n\t            var nextX;\r\n\t            var nextY;\r\n\t            if (orient === 'horizontal') {\r\n\t                var moveX = rect.width + (nextChildRect ? (-nextChildRect.x + rect.x) : 0);\r\n\t                nextX = x + moveX;\r\n\t                // Wrap when width exceeds maxWidth or meet a `newline` group\r\n\t                if (nextX > maxWidth || child.newline) {\r\n\t                    x = 0;\r\n\t                    nextX = moveX;\r\n\t                    y += currentLineMaxSize + gap;\r\n\t                    currentLineMaxSize = rect.height;\r\n\t                }\r\n\t                else {\r\n\t                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\r\n\t                }\r\n\t            }\r\n\t            else {\r\n\t                var moveY = rect.height + (nextChildRect ? (-nextChildRect.y + rect.y) : 0);\r\n\t                nextY = y + moveY;\r\n\t                // Wrap when width exceeds maxHeight or meet a `newline` group\r\n\t                if (nextY > maxHeight || child.newline) {\r\n\t                    x += currentLineMaxSize + gap;\r\n\t                    y = 0;\r\n\t                    nextY = moveY;\r\n\t                    currentLineMaxSize = rect.width;\r\n\t                }\r\n\t                else {\r\n\t                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\r\n\t                }\r\n\t            }\r\n\r\n\t            if (child.newline) {\r\n\t                return;\r\n\t            }\r\n\r\n\t            position[0] = x;\r\n\t            position[1] = y;\r\n\r\n\t            orient === 'horizontal'\r\n\t                ? (x = nextX + gap)\r\n\t                : (y = nextY + gap);\r\n\t        });\r\n\t    }\r\n\r\n\t    /**\r\n\t     * VBox or HBox layouting\r\n\t     * @param {string} orient\r\n\t     * @param {module:zrender/container/Group} group\r\n\t     * @param {number} gap\r\n\t     * @param {number} [width=Infinity]\r\n\t     * @param {number} [height=Infinity]\r\n\t     */\r\n\t    layout.box = boxLayout;\r\n\r\n\t    /**\r\n\t     * VBox layouting\r\n\t     * @param {module:zrender/container/Group} group\r\n\t     * @param {number} gap\r\n\t     * @param {number} [width=Infinity]\r\n\t     * @param {number} [height=Infinity]\r\n\t     */\r\n\t    layout.vbox = zrUtil.curry(boxLayout, 'vertical');\r\n\r\n\t    /**\r\n\t     * HBox layouting\r\n\t     * @param {module:zrender/container/Group} group\r\n\t     * @param {number} gap\r\n\t     * @param {number} [width=Infinity]\r\n\t     * @param {number} [height=Infinity]\r\n\t     */\r\n\t    layout.hbox = zrUtil.curry(boxLayout, 'horizontal');\r\n\r\n\t    /**\r\n\t     * If x or x2 is not specified or 'center' 'left' 'right',\r\n\t     * the width would be as long as possible.\r\n\t     * If y or y2 is not specified or 'middle' 'top' 'bottom',\r\n\t     * the height would be as long as possible.\r\n\t     *\r\n\t     * @param {Object} positionInfo\r\n\t     * @param {number|string} [positionInfo.x]\r\n\t     * @param {number|string} [positionInfo.y]\r\n\t     * @param {number|string} [positionInfo.x2]\r\n\t     * @param {number|string} [positionInfo.y2]\r\n\t     * @param {Object} containerRect\r\n\t     * @param {string|number} margin\r\n\t     * @return {Object} {width, height}\r\n\t     */\r\n\t    layout.getAvailableSize = function (positionInfo, containerRect, margin) {\r\n\t        var containerWidth = containerRect.width;\r\n\t        var containerHeight = containerRect.height;\r\n\r\n\t        var x = parsePercent(positionInfo.x, containerWidth);\r\n\t        var y = parsePercent(positionInfo.y, containerHeight);\r\n\t        var x2 = parsePercent(positionInfo.x2, containerWidth);\r\n\t        var y2 = parsePercent(positionInfo.y2, containerHeight);\r\n\r\n\t        (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\r\n\t        (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\r\n\t        (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\r\n\t        (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\r\n\r\n\t        margin = formatUtil.normalizeCssArray(margin || 0);\r\n\r\n\t        return {\r\n\t            width: Math.max(x2 - x - margin[1] - margin[3], 0),\r\n\t            height: Math.max(y2 - y - margin[0] - margin[2], 0)\r\n\t        };\r\n\t    };\r\n\r\n\t    /**\r\n\t     * Parse position info.\r\n\t     *\r\n\t     * @param {Object} positionInfo\r\n\t     * @param {number|string} [positionInfo.left]\r\n\t     * @param {number|string} [positionInfo.top]\r\n\t     * @param {number|string} [positionInfo.right]\r\n\t     * @param {number|string} [positionInfo.bottom]\r\n\t     * @param {number|string} [positionInfo.width]\r\n\t     * @param {number|string} [positionInfo.height]\r\n\t     * @param {number|string} [positionInfo.aspect] Aspect is width / height\r\n\t     * @param {Object} containerRect\r\n\t     * @param {string|number} [margin]\r\n\t     *\r\n\t     * @return {module:zrender/core/BoundingRect}\r\n\t     */\r\n\t    layout.getLayoutRect = function (\r\n\t        positionInfo, containerRect, margin\r\n\t    ) {\r\n\t        margin = formatUtil.normalizeCssArray(margin || 0);\r\n\r\n\t        var containerWidth = containerRect.width;\r\n\t        var containerHeight = containerRect.height;\r\n\r\n\t        var left = parsePercent(positionInfo.left, containerWidth);\r\n\t        var top = parsePercent(positionInfo.top, containerHeight);\r\n\t        var right = parsePercent(positionInfo.right, containerWidth);\r\n\t        var bottom = parsePercent(positionInfo.bottom, containerHeight);\r\n\t        var width = parsePercent(positionInfo.width, containerWidth);\r\n\t        var height = parsePercent(positionInfo.height, containerHeight);\r\n\r\n\t        var verticalMargin = margin[2] + margin[0];\r\n\t        var horizontalMargin = margin[1] + margin[3];\r\n\t        var aspect = positionInfo.aspect;\r\n\r\n\t        // If width is not specified, calculate width from left and right\r\n\t        if (isNaN(width)) {\r\n\t            width = containerWidth - right - horizontalMargin - left;\r\n\t        }\r\n\t        if (isNaN(height)) {\r\n\t            height = containerHeight - bottom - verticalMargin - top;\r\n\t        }\r\n\r\n\t        // If width and height are not given\r\n\t        // 1. Graph should not exceeds the container\r\n\t        // 2. Aspect must be keeped\r\n\t        // 3. Graph should take the space as more as possible\r\n\t        if (isNaN(width) && isNaN(height)) {\r\n\t            if (aspect > containerWidth / containerHeight) {\r\n\t                width = containerWidth * 0.8;\r\n\t            }\r\n\t            else {\r\n\t                height = containerHeight * 0.8;\r\n\t            }\r\n\t        }\r\n\r\n\t        if (aspect != null) {\r\n\t            // Calculate width or height with given aspect\r\n\t            if (isNaN(width)) {\r\n\t                width = aspect * height;\r\n\t            }\r\n\t            if (isNaN(height)) {\r\n\t                height = width / aspect;\r\n\t            }\r\n\t        }\r\n\r\n\t        // If left is not specified, calculate left from right and width\r\n\t        if (isNaN(left)) {\r\n\t            left = containerWidth - right - width - horizontalMargin;\r\n\t        }\r\n\t        if (isNaN(top)) {\r\n\t            top = containerHeight - bottom - height - verticalMargin;\r\n\t        }\r\n\r\n\t        // Align left and top\r\n\t        switch (positionInfo.left || positionInfo.right) {\r\n\t            case 'center':\r\n\t                left = containerWidth / 2 - width / 2 - margin[3];\r\n\t                break;\r\n\t            case 'right':\r\n\t                left = containerWidth - width - horizontalMargin;\r\n\t                break;\r\n\t        }\r\n\t        switch (positionInfo.top || positionInfo.bottom) {\r\n\t            case 'middle':\r\n\t            case 'center':\r\n\t                top = containerHeight / 2 - height / 2 - margin[0];\r\n\t                break;\r\n\t            case 'bottom':\r\n\t                top = containerHeight - height - verticalMargin;\r\n\t                break;\r\n\t        }\r\n\t        // If something is wrong and left, top, width, height are calculated as NaN\r\n\t        left = left || 0;\r\n\t        top = top || 0;\r\n\t        if (isNaN(width)) {\r\n\t            // Width may be NaN if only one value is given except width\r\n\t            width = containerWidth - left - (right || 0);\r\n\t        }\r\n\t        if (isNaN(height)) {\r\n\t            // Height may be NaN if only one value is given except height\r\n\t            height = containerHeight - top - (bottom || 0);\r\n\t        }\r\n\r\n\t        var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\r\n\t        rect.margin = margin;\r\n\t        return rect;\r\n\t    };\r\n\r\n\t    /**\r\n\t     * Position group of component in viewport\r\n\t     *  Group position is specified by either\r\n\t     *  {left, top}, {right, bottom}\r\n\t     *  If all properties exists, right and bottom will be igonred.\r\n\t     *\r\n\t     * @param {module:zrender/container/Group} group\r\n\t     * @param {Object} positionInfo\r\n\t     * @param {number|string} [positionInfo.left]\r\n\t     * @param {number|string} [positionInfo.top]\r\n\t     * @param {number|string} [positionInfo.right]\r\n\t     * @param {number|string} [positionInfo.bottom]\r\n\t     * @param {Object} containerRect\r\n\t     * @param {string|number} margin\r\n\t     */\r\n\t    layout.positionGroup = function (\r\n\t        group, positionInfo, containerRect, margin\r\n\t    ) {\r\n\t        var groupRect = group.getBoundingRect();\r\n\r\n\t        positionInfo = zrUtil.extend(zrUtil.clone(positionInfo), {\r\n\t            width: groupRect.width,\r\n\t            height: groupRect.height\r\n\t        });\r\n\r\n\t        positionInfo = layout.getLayoutRect(\r\n\t            positionInfo, containerRect, margin\r\n\t        );\r\n\r\n\t        group.attr('position', [\r\n\t            positionInfo.x - groupRect.x,\r\n\t            positionInfo.y - groupRect.y\r\n\t        ]);\r\n\t    };\r\n\r\n\t    /**\r\n\t     * Consider Case:\r\n\t     * When defulat option has {left: 0, width: 100}, and we set {right: 0}\r\n\t     * through setOption or media query, using normal zrUtil.merge will cause\r\n\t     * {right: 0} does not take effect.\r\n\t     *\r\n\t     * @example\r\n\t     * ComponentModel.extend({\r\n\t     *     init: function () {\r\n\t     *         ...\r\n\t     *         var inputPositionParams = layout.getLayoutParams(option);\r\n\t     *         this.mergeOption(inputPositionParams);\r\n\t     *     },\r\n\t     *     mergeOption: function (newOption) {\r\n\t     *         newOption && zrUtil.merge(thisOption, newOption, true);\r\n\t     *         layout.mergeLayoutParam(thisOption, newOption);\r\n\t     *     }\r\n\t     * });\r\n\t     *\r\n\t     * @param {Object} targetOption\r\n\t     * @param {Object} newOption\r\n\t     * @param {Object|string} [opt]\r\n\t     * @param {boolean} [opt.ignoreSize=false] Some component must has width and height.\r\n\t     */\r\n\t    layout.mergeLayoutParam = function (targetOption, newOption, opt) {\r\n\t        !zrUtil.isObject(opt) && (opt = {});\r\n\t        var hNames = ['width', 'left', 'right']; // Order by priority.\r\n\t        var vNames = ['height', 'top', 'bottom']; // Order by priority.\r\n\t        var hResult = merge(hNames);\r\n\t        var vResult = merge(vNames);\r\n\r\n\t        copy(hNames, targetOption, hResult);\r\n\t        copy(vNames, targetOption, vResult);\r\n\r\n\t        function merge(names) {\r\n\t            var newParams = {};\r\n\t            var newValueCount = 0;\r\n\t            var merged = {};\r\n\t            var mergedValueCount = 0;\r\n\t            var enoughParamNumber = opt.ignoreSize ? 1 : 2;\r\n\r\n\t            each(names, function (name) {\r\n\t                merged[name] = targetOption[name];\r\n\t            });\r\n\t            each(names, function (name) {\r\n\t                // Consider case: newOption.width is null, which is\r\n\t                // set by user for removing width setting.\r\n\t                hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\r\n\t                hasValue(newParams, name) && newValueCount++;\r\n\t                hasValue(merged, name) && mergedValueCount++;\r\n\t            });\r\n\r\n\t            // Case: newOption: {width: ..., right: ...},\r\n\t            // or targetOption: {right: ...} and newOption: {width: ...},\r\n\t            // There is no conflict when merged only has params count\r\n\t            // little than enoughParamNumber.\r\n\t            if (mergedValueCount === enoughParamNumber || !newValueCount) {\r\n\t                return merged;\r\n\t            }\r\n\t            // Case: newOption: {width: ..., right: ...},\r\n\t            // Than we can make sure user only want those two, and ignore\r\n\t            // all origin params in targetOption.\r\n\t            else if (newValueCount >= enoughParamNumber) {\r\n\t                return newParams;\r\n\t            }\r\n\t            else {\r\n\t                // Chose another param from targetOption by priority.\r\n\t                // When 'ignoreSize', enoughParamNumber is 1 and those will not happen.\r\n\t                for (var i = 0; i < names.length; i++) {\r\n\t                    var name = names[i];\r\n\t                    if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\r\n\t                        newParams[name] = targetOption[name];\r\n\t                        break;\r\n\t                    }\r\n\t                }\r\n\t                return newParams;\r\n\t            }\r\n\t        }\r\n\r\n\t        function hasProp(obj, name) {\r\n\t            return obj.hasOwnProperty(name);\r\n\t        }\r\n\r\n\t        function hasValue(obj, name) {\r\n\t            return obj[name] != null && obj[name] !== 'auto';\r\n\t        }\r\n\r\n\t        function copy(names, target, source) {\r\n\t            each(names, function (name) {\r\n\t                target[name] = source[name];\r\n\t            });\r\n\t        }\r\n\t    };\r\n\r\n\t    /**\r\n\t     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\r\n\t     * @param {Object} source\r\n\t     * @return {Object} Result contains those props.\r\n\t     */\r\n\t    layout.getLayoutParams = function (source) {\r\n\t        return layout.copyLayoutParams({}, source);\r\n\t    };\r\n\r\n\t    /**\r\n\t     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\r\n\t     * @param {Object} source\r\n\t     * @return {Object} Result contains those props.\r\n\t     */\r\n\t    layout.copyLayoutParams = function (target, source) {\r\n\t        source && target && each(LOCATION_PARAMS, function (name) {\r\n\t            source.hasOwnProperty(name) && (target[name] = source[name]);\r\n\t        });\r\n\t        return target;\r\n\t    };\r\n\r\n\t    module.exports = layout;\r\n\r\n\r\n/***/ },\r\n/* 22 */\r\n/***/ function(module, exports) {\r\n\r\n\t\r\n\r\n\t    module.exports = {\r\n\t        getBoxLayoutParams: function () {\r\n\t            return {\r\n\t                left: this.get('left'),\r\n\t                top: this.get('top'),\r\n\t                right: this.get('right'),\r\n\t                bottom: this.get('bottom'),\r\n\t                width: this.get('width'),\r\n\t                height: this.get('height')\r\n\t            };\r\n\t        }\r\n\t    };\r\n\r\n\r\n/***/ },\r\n/* 23 */\r\n/***/ function(module, exports) {\r\n\r\n\t\r\n\t    var platform = '';\r\n\t    // Navigator not exists in node\r\n\t    if (typeof navigator !== 'undefined') {\r\n\t        platform = navigator.platform || '';\r\n\t    }\r\n\t    module.exports = {\r\n\t        // 全图默认背景\r\n\t        // backgroundColor: 'rgba(0,0,0,0)',\r\n\r\n\t        // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\r\n\t        // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\r\n\t        // 浅色\r\n\t        // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\r\n\t        // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\r\n\t        // 深色\r\n\t        color: ['#c23531','#2f4554', '#61a0a8', '#d48265', '#91c7ae','#749f83',  '#ca8622', '#bda29a','#6e7074', '#546570', '#c4ccd3'],\r\n\r\n\t        // 默认需要 Grid 配置项\r\n\t        grid: {},\r\n\t        // 主题，主题\r\n\t        textStyle: {\r\n\t            // color: '#000',\r\n\t            // decoration: 'none',\r\n\t            // PENDING\r\n\t            fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\r\n\t            // fontFamily: 'Arial, Verdana, sans-serif',\r\n\t            fontSize: 12,\r\n\t            fontStyle: 'normal',\r\n\t            fontWeight: 'normal'\r\n\t        },\r\n\r\n\t        // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\r\n\t        // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\r\n\t        // Default is source-over\r\n\t        blendMode: null,\r\n\r\n\t        animation: true,\r\n\t        animationDuration: 1000,\r\n\t        animationDurationUpdate: 300,\r\n\t        animationEasing: 'exponentialOut',\r\n\t        animationEasingUpdate: 'cubicOut',\r\n\r\n\t        animationThreshold: 2000,\r\n\t        // Configuration for progressive/incremental rendering\r\n\t        progressiveThreshold: 3000,\r\n\t        progressive: 400,\r\n\r\n\t        // Threshold of if use single hover layer to optimize.\r\n\t        hoverLayerThreshold: 3000\r\n\t    };\r\n\r\n\r\n/***/ },\r\n/* 24 */\r\n/***/ function(module, exports) {\r\n\r\n\t\r\n\t    module.exports = {\r\n\t        clearColorPalette: function () {\r\n\t            this._colorIdx = 0;\r\n\t            this._colorNameMap = {};\r\n\t        },\r\n\r\n\t        getColorFromPalette: function (name, scope) {\r\n\t            scope = scope || this;\r\n\t            var colorIdx = scope._colorIdx || 0;\r\n\t            var colorNameMap = scope._colorNameMap || (scope._colorNameMap = {});\r\n\t            if (colorNameMap[name]) {\r\n\t                return colorNameMap[name];\r\n\t            }\r\n\t            var colorPalette = this.get('color', true) || [];\r\n\t            if (!colorPalette.length) {\r\n\t                return;\r\n\t            }\r\n\r\n\t            var color = colorPalette[colorIdx];\r\n\t            if (name) {\r\n\t                colorNameMap[name] = color;\r\n\t            }\r\n\t            scope._colorIdx = (colorIdx + 1) % colorPalette.length;\r\n\r\n\t            return color;\r\n\t        }\r\n\t    };\r\n\r\n\r\n/***/ },\r\n/* 25 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t'use strict';\r\n\r\n\r\n\t    var zrUtil = __webpack_require__(4);\r\n\r\n\t    var echartsAPIList = [\r\n\t        'getDom', 'getZr', 'getWidth', 'getHeight', 'dispatchAction', 'isDisposed',\r\n\t        'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption'\r\n\t    ];\r\n\r\n\t    function ExtensionAPI(chartInstance) {\r\n\t        zrUtil.each(echartsAPIList, function (name) {\r\n\t            this[name] = zrUtil.bind(chartInstance[name], chartInstance);\r\n\t        }, this);\r\n\t    }\r\n\r\n\t    module.exports = ExtensionAPI;\r\n\r\n\r\n/***/ },\r\n/* 26 */\r\n/***/ function(module, exports) {\r\n\r\n\t'use strict';\r\n\r\n\r\n\t    var coordinateSystemCreators = {};\r\n\r\n\t    function CoordinateSystemManager() {\r\n\r\n\t        this._coordinateSystems = [];\r\n\t    }\r\n\r\n\t    CoordinateSystemManager.prototype = {\r\n\r\n\t        constructor: CoordinateSystemManager,\r\n\r\n\t        create: function (ecModel, api) {\r\n\t            var coordinateSystems = [];\r\n\t            for (var type in coordinateSystemCreators) {\r\n\t                var list = coordinateSystemCreators[type].create(ecModel, api);\r\n\t                list && (coordinateSystems = coordinateSystems.concat(list));\r\n\t            }\r\n\r\n\t            this._coordinateSystems = coordinateSystems;\r\n\t        },\r\n\r\n\t        update: function (ecModel, api) {\r\n\t            var coordinateSystems = this._coordinateSystems;\r\n\t            for (var i = 0; i < coordinateSystems.length; i++) {\r\n\t                // FIXME MUST have\r\n\t                coordinateSystems[i].update && coordinateSystems[i].update(ecModel, api);\r\n\t            }\r\n\t        }\r\n\t    };\r\n\r\n\t    CoordinateSystemManager.register = function (type, coordinateSystemCreator) {\r\n\t        coordinateSystemCreators[type] = coordinateSystemCreator;\r\n\t    };\r\n\r\n\t    CoordinateSystemManager.get = function (type) {\r\n\t        return coordinateSystemCreators[type];\r\n\t    };\r\n\r\n\t    module.exports = CoordinateSystemManager;\r\n\r\n\r\n/***/ },\r\n/* 27 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t/**\r\n\t * ECharts option manager\r\n\t *\r\n\t * @module {echarts/model/OptionManager}\r\n\t */\r\n\r\n\r\n\r\n\t    var zrUtil = __webpack_require__(4);\r\n\t    var modelUtil = __webpack_require__(5);\r\n\t    var ComponentModel = __webpack_require__(19);\r\n\t    var each = zrUtil.each;\r\n\t    var clone = zrUtil.clone;\r\n\t    var map = zrUtil.map;\r\n\t    var merge = zrUtil.merge;\r\n\r\n\t    var QUERY_REG = /^(min|max)?(.+)$/;\r\n\r\n\t    /**\r\n\t     * TERM EXPLANATIONS:\r\n\t     *\r\n\t     * [option]:\r\n\t     *\r\n\t     *     An object that contains definitions of components. For example:\r\n\t     *     var option = {\r\n\t     *         title: {...},\r\n\t     *         legend: {...},\r\n\t     *         visualMap: {...},\r\n\t     *         series: [\r\n\t     *             {data: [...]},\r\n\t     *             {data: [...]},\r\n\t     *             ...\r\n\t     *         ]\r\n\t     *     };\r\n\t     *\r\n\t     * [rawOption]:\r\n\t     *\r\n\t     *     An object input to echarts.setOption. 'rawOption' may be an\r\n\t     *     'option', or may be an object contains multi-options. For example:\r\n\t     *     var option = {\r\n\t     *         baseOption: {\r\n\t     *             title: {...},\r\n\t     *             legend: {...},\r\n\t     *             series: [\r\n\t     *                 {data: [...]},\r\n\t     *                 {data: [...]},\r\n\t     *                 ...\r\n\t     *             ]\r\n\t     *         },\r\n\t     *         timeline: {...},\r\n\t     *         options: [\r\n\t     *             {title: {...}, series: {data: [...]}},\r\n\t     *             {title: {...}, series: {data: [...]}},\r\n\t     *             ...\r\n\t     *         ],\r\n\t     *         media: [\r\n\t     *             {\r\n\t     *                 query: {maxWidth: 320},\r\n\t     *                 option: {series: {x: 20}, visualMap: {show: false}}\r\n\t     *             },\r\n\t     *             {\r\n\t     *                 query: {minWidth: 320, maxWidth: 720},\r\n\t     *                 option: {series: {x: 500}, visualMap: {show: true}}\r\n\t     *             },\r\n\t     *             {\r\n\t     *                 option: {series: {x: 1200}, visualMap: {show: true}}\r\n\t     *             }\r\n\t     *         ]\r\n\t     *     };\r\n\t     *\r\n\t     * @alias module:echarts/model/OptionManager\r\n\t     * @param {module:echarts/ExtensionAPI} api\r\n\t     */\r\n\t    function OptionManager(api) {\r\n\r\n\t        /**\r\n\t         * @private\r\n\t         * @type {module:echarts/ExtensionAPI}\r\n\t         */\r\n\t        this._api = api;\r\n\r\n\t        /**\r\n\t         * @private\r\n\t         * @type {Array.<number>}\r\n\t         */\r\n\t        this._timelineOptions = [];\r\n\r\n\t        /**\r\n\t         * @private\r\n\t         * @type {Array.<Object>}\r\n\t         */\r\n\t        this._mediaList = [];\r\n\r\n\t        /**\r\n\t         * @private\r\n\t         * @type {Object}\r\n\t         */\r\n\t        this._mediaDefault;\r\n\r\n\t        /**\r\n\t         * -1, means default.\r\n\t         * empty means no media.\r\n\t         * @private\r\n\t         * @type {Array.<number>}\r\n\t         */\r\n\t        this._currentMediaIndices = [];\r\n\r\n\t        /**\r\n\t         * @private\r\n\t         * @type {Object}\r\n\t         */\r\n\t        this._optionBackup;\r\n\r\n\t        /**\r\n\t         * @private\r\n\t         * @type {Object}\r\n\t         */\r\n\t        this._newBaseOption;\r\n\t    }\r\n\r\n\t    // timeline.notMerge is not supported in ec3. Firstly there is rearly\r\n\t    // case that notMerge is needed. Secondly supporting 'notMerge' requires\r\n\t    // rawOption cloned and backuped when timeline changed, which does no\r\n\t    // good to performance. What's more, that both timeline and setOption\r\n\t    // method supply 'notMerge' brings complex and some problems.\r\n\t    // Consider this case:\r\n\t    // (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\r\n\t    // (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\r\n\r\n\t    OptionManager.prototype = {\r\n\r\n\t        constructor: OptionManager,\r\n\r\n\t        /**\r\n\t         * @public\r\n\t         * @param {Object} rawOption Raw option.\r\n\t         * @param {module:echarts/model/Global} ecModel\r\n\t         * @param {Array.<Function>} optionPreprocessorFuncs\r\n\t         * @return {Object} Init option\r\n\t         */\r\n\t        setOption: function (rawOption, optionPreprocessorFuncs) {\r\n\t            rawOption = clone(rawOption, true);\r\n\r\n\t            // FIXME\r\n\t            // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\r\n\r\n\t            var oldOptionBackup = this._optionBackup;\r\n\t            var newParsedOption = parseRawOption.call(\r\n\t                this, rawOption, optionPreprocessorFuncs, !oldOptionBackup\r\n\t            );\r\n\t            this._newBaseOption = newParsedOption.baseOption;\r\n\r\n\t            // For setOption at second time (using merge mode);\r\n\t            if (oldOptionBackup) {\r\n\t                // Only baseOption can be merged.\r\n\t                mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption);\r\n\r\n\t                // For simplicity, timeline options and media options do not support merge,\r\n\t                // that is, if you `setOption` twice and both has timeline options, the latter\r\n\t                // timeline opitons will not be merged to the formers, but just substitude them.\r\n\t                if (newParsedOption.timelineOptions.length) {\r\n\t                    oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\r\n\t                }\r\n\t                if (newParsedOption.mediaList.length) {\r\n\t                    oldOptionBackup.mediaList = newParsedOption.mediaList;\r\n\t                }\r\n\t                if (newParsedOption.mediaDefault) {\r\n\t                    oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\r\n\t                }\r\n\t            }\r\n\t            else {\r\n\t                this._optionBackup = newParsedOption;\r\n\t            }\r\n\t        },\r\n\r\n\t        /**\r\n\t         * @param {boolean} isRecreate\r\n\t         * @return {Object}\r\n\t         */\r\n\t        mountOption: function (isRecreate) {\r\n\t            var optionBackup = this._optionBackup;\r\n\r\n\t            // TODO\r\n\t            // 如果没有reset功能则不clone。\r\n\r\n\t            this._timelineOptions = map(optionBackup.timelineOptions, clone);\r\n\t            this._mediaList = map(optionBackup.mediaList, clone);\r\n\t            this._mediaDefault = clone(optionBackup.mediaDefault);\r\n\t            this._currentMediaIndices = [];\r\n\r\n\t            return clone(isRecreate\r\n\t                // this._optionBackup.baseOption, which is created at the first `setOption`\r\n\t                // called, and is merged into every new option by inner method `mergeOption`\r\n\t                // each time `setOption` called, can be only used in `isRecreate`, because\r\n\t                // its reliability is under suspicion. In other cases option merge is\r\n\t                // proformed by `model.mergeOption`.\r\n\t                ? optionBackup.baseOption : this._newBaseOption\r\n\t            );\r\n\t        },\r\n\r\n\t        /**\r\n\t         * @param {module:echarts/model/Global} ecModel\r\n\t         * @return {Object}\r\n\t         */\r\n\t        getTimelineOption: function (ecModel) {\r\n\t            var option;\r\n\t            var timelineOptions = this._timelineOptions;\r\n\r\n\t            if (timelineOptions.length) {\r\n\t                // getTimelineOption can only be called after ecModel inited,\r\n\t                // so we can get currentIndex from timelineModel.\r\n\t                var timelineModel = ecModel.getComponent('timeline');\r\n\t                if (timelineModel) {\r\n\t                    option = clone(\r\n\t                        timelineOptions[timelineModel.getCurrentIndex()],\r\n\t                        true\r\n\t                    );\r\n\t                }\r\n\t            }\r\n\r\n\t            return option;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * @param {module:echarts/model/Global} ecModel\r\n\t         * @return {Array.<Object>}\r\n\t         */\r\n\t        getMediaOption: function (ecModel) {\r\n\t            var ecWidth = this._api.getWidth();\r\n\t            var ecHeight = this._api.getHeight();\r\n\t            var mediaList = this._mediaList;\r\n\t            var mediaDefault = this._mediaDefault;\r\n\t            var indices = [];\r\n\t            var result = [];\r\n\r\n\t            // No media defined.\r\n\t            if (!mediaList.length && !mediaDefault) {\r\n\t                return result;\r\n\t            }\r\n\r\n\t            // Multi media may be applied, the latter defined media has higher priority.\r\n\t            for (var i = 0, len = mediaList.length; i < len; i++) {\r\n\t                if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\r\n\t                    indices.push(i);\r\n\t                }\r\n\t            }\r\n\r\n\t            // FIXME\r\n\t            // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\r\n\t            if (!indices.length && mediaDefault) {\r\n\t                indices = [-1];\r\n\t            }\r\n\r\n\t            if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\r\n\t                result = map(indices, function (index) {\r\n\t                    return clone(\r\n\t                        index === -1 ? mediaDefault.option : mediaList[index].option\r\n\t                    );\r\n\t                });\r\n\t            }\r\n\t            // Otherwise return nothing.\r\n\r\n\t            this._currentMediaIndices = indices;\r\n\r\n\t            return result;\r\n\t        }\r\n\t    };\r\n\r\n\t    function parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\r\n\t        var timelineOptions = [];\r\n\t        var mediaList = [];\r\n\t        var mediaDefault;\r\n\t        var baseOption;\r\n\r\n\t        // Compatible with ec2.\r\n\t        var timelineOpt = rawOption.timeline;\r\n\r\n\t        if (rawOption.baseOption) {\r\n\t            baseOption = rawOption.baseOption;\r\n\t        }\r\n\r\n\t        // For timeline\r\n\t        if (timelineOpt || rawOption.options) {\r\n\t            baseOption = baseOption || {};\r\n\t            timelineOptions = (rawOption.options || []).slice();\r\n\t        }\r\n\r\n\t        // For media query\r\n\t        if (rawOption.media) {\r\n\t            baseOption = baseOption || {};\r\n\t            var media = rawOption.media;\r\n\t            each(media, function (singleMedia) {\r\n\t                if (singleMedia && singleMedia.option) {\r\n\t                    if (singleMedia.query) {\r\n\t                        mediaList.push(singleMedia);\r\n\t                    }\r\n\t                    else if (!mediaDefault) {\r\n\t                        // Use the first media default.\r\n\t                        mediaDefault = singleMedia;\r\n\t                    }\r\n\t                }\r\n\t            });\r\n\t        }\r\n\r\n\t        // For normal option\r\n\t        if (!baseOption) {\r\n\t            baseOption = rawOption;\r\n\t        }\r\n\r\n\t        // Set timelineOpt to baseOption in ec3,\r\n\t        // which is convenient for merge option.\r\n\t        if (!baseOption.timeline) {\r\n\t            baseOption.timeline = timelineOpt;\r\n\t        }\r\n\r\n\t        // Preprocess.\r\n\t        each([baseOption].concat(timelineOptions)\r\n\t            .concat(zrUtil.map(mediaList, function (media) {\r\n\t                return media.option;\r\n\t            })),\r\n\t            function (option) {\r\n\t                each(optionPreprocessorFuncs, function (preProcess) {\r\n\t                    preProcess(option, isNew);\r\n\t                });\r\n\t            }\r\n\t        );\r\n\r\n\t        return {\r\n\t            baseOption: baseOption,\r\n\t            timelineOptions: timelineOptions,\r\n\t            mediaDefault: mediaDefault,\r\n\t            mediaList: mediaList\r\n\t        };\r\n\t    }\r\n\r\n\t    /**\r\n\t     * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\r\n\t     * Support: width, height, aspectRatio\r\n\t     * Can use max or min as prefix.\r\n\t     */\r\n\t    function applyMediaQuery(query, ecWidth, ecHeight) {\r\n\t        var realMap = {\r\n\t            width: ecWidth,\r\n\t            height: ecHeight,\r\n\t            aspectratio: ecWidth / ecHeight // lowser case for convenientce.\r\n\t        };\r\n\r\n\t        var applicatable = true;\r\n\r\n\t        zrUtil.each(query, function (value, attr) {\r\n\t            var matched = attr.match(QUERY_REG);\r\n\r\n\t            if (!matched || !matched[1] || !matched[2]) {\r\n\t                return;\r\n\t            }\r\n\r\n\t            var operator = matched[1];\r\n\t            var realAttr = matched[2].toLowerCase();\r\n\r\n\t            if (!compare(realMap[realAttr], value, operator)) {\r\n\t                applicatable = false;\r\n\t            }\r\n\t        });\r\n\r\n\t        return applicatable;\r\n\t    }\r\n\r\n\t    function compare(real, expect, operator) {\r\n\t        if (operator === 'min') {\r\n\t            return real >= expect;\r\n\t        }\r\n\t        else if (operator === 'max') {\r\n\t            return real <= expect;\r\n\t        }\r\n\t        else { // Equals\r\n\t            return real === expect;\r\n\t        }\r\n\t    }\r\n\r\n\t    function indicesEquals(indices1, indices2) {\r\n\t        // indices is always order by asc and has only finite number.\r\n\t        return indices1.join(',') === indices2.join(',');\r\n\t    }\r\n\r\n\t    /**\r\n\t     * Consider case:\r\n\t     * `chart.setOption(opt1);`\r\n\t     * Then user do some interaction like dataZoom, dataView changing.\r\n\t     * `chart.setOption(opt2);`\r\n\t     * Then user press 'reset button' in toolbox.\r\n\t     *\r\n\t     * After doing that all of the interaction effects should be reset, the\r\n\t     * chart should be the same as the result of invoke\r\n\t     * `chart.setOption(opt1); chart.setOption(opt2);`.\r\n\t     *\r\n\t     * Although it is not able ensure that\r\n\t     * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\r\n\t     * `chart.setOption(merge(opt1, opt2));` exactly,\r\n\t     * this might be the only simple way to implement that feature.\r\n\t     *\r\n\t     * MEMO: We've considered some other approaches:\r\n\t     * 1. Each model handle its self restoration but not uniform treatment.\r\n\t     *     (Too complex in logic and error-prone)\r\n\t     * 2. Use a shadow ecModel. (Performace expensive)\r\n\t     */\r\n\t    function mergeOption(oldOption, newOption) {\r\n\t        newOption = newOption || {};\r\n\r\n\t        each(newOption, function (newCptOpt, mainType) {\r\n\t            if (newCptOpt == null) {\r\n\t                return;\r\n\t            }\r\n\r\n\t            var oldCptOpt = oldOption[mainType];\r\n\r\n\t            if (!ComponentModel.hasClass(mainType)) {\r\n\t                oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\r\n\t            }\r\n\t            else {\r\n\t                newCptOpt = modelUtil.normalizeToArray(newCptOpt);\r\n\t                oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\r\n\r\n\t                var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\r\n\r\n\t                oldOption[mainType] = map(mapResult, function (item) {\r\n\t                    return (item.option && item.exist)\r\n\t                        ? merge(item.exist, item.option, true)\r\n\t                        : (item.exist || item.option);\r\n\t                });\r\n\t            }\r\n\t        });\r\n\t    }\r\n\r\n\t    module.exports = OptionManager;\r\n\r\n\r\n/***/ },\r\n/* 28 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t'use strict';\r\n\r\n\r\n\t    var zrUtil = __webpack_require__(4);\r\n\t    var formatUtil = __webpack_require__(6);\r\n\t    var modelUtil = __webpack_require__(5);\r\n\t    var ComponentModel = __webpack_require__(19);\r\n\t    var colorPaletteMixin = __webpack_require__(24);\r\n\t    var env = __webpack_require__(2);\r\n\r\n\t    var encodeHTML = formatUtil.encodeHTML;\r\n\t    var addCommas = formatUtil.addCommas;\r\n\r\n\t    var SeriesModel = ComponentModel.extend({\r\n\r\n\t        type: 'series.__base__',\r\n\r\n\t        /**\r\n\t         * @readOnly\r\n\t         */\r\n\t        seriesIndex: 0,\r\n\r\n\t        // coodinateSystem will be injected in the echarts/CoordinateSystem\r\n\t        coordinateSystem: null,\r\n\r\n\t        /**\r\n\t         * @type {Object}\r\n\t         * @protected\r\n\t         */\r\n\t        defaultOption: null,\r\n\r\n\t        /**\r\n\t         * Data provided for legend\r\n\t         * @type {Function}\r\n\t         */\r\n\t        // PENDING\r\n\t        legendDataProvider: null,\r\n\r\n\t        /**\r\n\t         * Access path of color for visual\r\n\t         */\r\n\t        visualColorAccessPath: 'itemStyle.normal.color',\r\n\r\n\t        init: function (option, parentModel, ecModel, extraOpt) {\r\n\r\n\t            /**\r\n\t             * @type {number}\r\n\t             * @readOnly\r\n\t             */\r\n\t            this.seriesIndex = this.componentIndex;\r\n\r\n\t            this.mergeDefaultAndTheme(option, ecModel);\r\n\r\n\t            /**\r\n\t             * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\r\n\t             * @private\r\n\t             */\r\n\t            this._dataBeforeProcessed = this.getInitialData(option, ecModel);\r\n\r\n\t            // If we reverse the order (make this._data firstly, and then make\r\n\t            // this._dataBeforeProcessed by cloneShallow), cloneShallow will\r\n\t            // cause this._data.graph.data !== this._data when using\r\n\t            // module:echarts/data/Graph or module:echarts/data/Tree.\r\n\t            // See module:echarts/data/helper/linkList\r\n\t            this._data = this._dataBeforeProcessed.cloneShallow();\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Util for merge default and theme to option\r\n\t         * @param  {Object} option\r\n\t         * @param  {module:echarts/model/Global} ecModel\r\n\t         */\r\n\t        mergeDefaultAndTheme: function (option, ecModel) {\r\n\t            zrUtil.merge(\r\n\t                option,\r\n\t                ecModel.getTheme().get(this.subType)\r\n\t            );\r\n\t            zrUtil.merge(option, this.getDefaultOption());\r\n\r\n\t            // Default label emphasis `position` and `show`\r\n\t            // FIXME Set label in mergeOption\r\n\t            modelUtil.defaultEmphasis(option.label, modelUtil.LABEL_OPTIONS);\r\n\r\n\t            this.fillDataTextStyle(option.data);\r\n\t        },\r\n\r\n\t        mergeOption: function (newSeriesOption, ecModel) {\r\n\t            newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\r\n\t            this.fillDataTextStyle(newSeriesOption.data);\r\n\r\n\t            var data = this.getInitialData(newSeriesOption, ecModel);\r\n\t            // TODO Merge data?\r\n\t            if (data) {\r\n\t                this._data = data;\r\n\t                this._dataBeforeProcessed = data.cloneShallow();\r\n\t            }\r\n\t        },\r\n\r\n\t        fillDataTextStyle: function (data) {\r\n\t            // Default data label emphasis `position` and `show`\r\n\t            // FIXME Tree structure data ?\r\n\t            // FIXME Performance ?\r\n\t            if (data) {\r\n\t                for (var i = 0; i < data.length; i++) {\r\n\t                    if (data[i] && data[i].label) {\r\n\t                        modelUtil.defaultEmphasis(data[i].label, modelUtil.LABEL_OPTIONS);\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Init a data structure from data related option in series\r\n\t         * Must be overwritten\r\n\t         */\r\n\t        getInitialData: function () {},\r\n\r\n\t        /**\r\n\t         * @param {string} [dataType]\r\n\t         * @return {module:echarts/data/List}\r\n\t         */\r\n\t        getData: function (dataType) {\r\n\t            return dataType == null ? this._data : this._data.getLinkedData(dataType);\r\n\t        },\r\n\r\n\t        /**\r\n\t         * @param {module:echarts/data/List} data\r\n\t         */\r\n\t        setData: function (data) {\r\n\t            this._data = data;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Get data before processed\r\n\t         * @return {module:echarts/data/List}\r\n\t         */\r\n\t        getRawData: function () {\r\n\t            return this._dataBeforeProcessed;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Coord dimension to data dimension.\r\n\t         *\r\n\t         * By default the result is the same as dimensions of series data.\r\n\t         * But in some series data dimensions are different from coord dimensions (i.e.\r\n\t         * candlestick and boxplot). Override this method to handle those cases.\r\n\t         *\r\n\t         * Coord dimension to data dimension can be one-to-many\r\n\t         *\r\n\t         * @param {string} coordDim\r\n\t         * @return {Array.<string>} dimensions on the axis.\r\n\t         */\r\n\t        coordDimToDataDim: function (coordDim) {\r\n\t            return [coordDim];\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Convert data dimension to coord dimension.\r\n\t         *\r\n\t         * @param {string|number} dataDim\r\n\t         * @return {string}\r\n\t         */\r\n\t        dataDimToCoordDim: function (dataDim) {\r\n\t            return dataDim;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Get base axis if has coordinate system and has axis.\r\n\t         * By default use coordSys.getBaseAxis();\r\n\t         * Can be overrided for some chart.\r\n\t         * @return {type} description\r\n\t         */\r\n\t        getBaseAxis: function () {\r\n\t            var coordSys = this.coordinateSystem;\r\n\t            return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\r\n\t        },\r\n\r\n\t        // FIXME\r\n\t        /**\r\n\t         * Default tooltip formatter\r\n\t         *\r\n\t         * @param {number} dataIndex\r\n\t         * @param {boolean} [multipleSeries=false]\r\n\t         * @param {number} [dataType]\r\n\t         */\r\n\t        formatTooltip: function (dataIndex, multipleSeries, dataType) {\r\n\t            function formatArrayValue(value) {\r\n\t                return zrUtil.map(value, function (val, idx) {\r\n\t                    var dimInfo = data.getDimensionInfo(idx);\r\n\t                    var dimType = dimInfo && dimInfo.type;\r\n\t                    if (dimType === 'ordinal') {\r\n\t                        return val;\r\n\t                    }\r\n\t                    else if (dimType === 'time') {\r\n\t                        return multipleSeries ? '' : formatUtil.formatTime('yyyy/mm/dd hh:mm:ss', val);\r\n\t                    }\r\n\t                    else {\r\n\t                        return addCommas(val);\r\n\t                    }\r\n\t                }).filter(function (val) {\r\n\t                    return !!val;\r\n\t                }).join(', ');\r\n\t            }\r\n\r\n\t            var data = this._data;\r\n\r\n\t            var value = this.getRawValue(dataIndex);\r\n\t            var formattedValue = zrUtil.isArray(value)\r\n\t                ? formatArrayValue(value) : addCommas(value);\r\n\t            var name = data.getName(dataIndex);\r\n\t            var color = data.getItemVisual(dataIndex, 'color');\r\n\t            var colorEl = '<span style=\"display:inline-block;margin-right:5px;'\r\n\t                + 'border-radius:10px;width:9px;height:9px;background-color:' + color + '\"></span>';\r\n\r\n\t            var seriesName = this.name;\r\n\t            // FIXME\r\n\t            if (seriesName === '\\0-') {\r\n\t                // Not show '-'\r\n\t                seriesName = '';\r\n\t            }\r\n\t            return !multipleSeries\r\n\t                ? ((seriesName && encodeHTML(seriesName) + '<br />') + colorEl\r\n\t                    + (name\r\n\t                        ? encodeHTML(name) + ' : ' + formattedValue\r\n\t                        : formattedValue)\r\n\t                  )\r\n\t                : (colorEl + encodeHTML(this.name) + ' : ' + formattedValue);\r\n\t        },\r\n\r\n\t        /**\r\n\t         * @return {boolean}\r\n\t         */\r\n\t        ifEnableAnimation: function () {\r\n\t            if (env.node) {\r\n\t                return false;\r\n\t            }\r\n\r\n\t            var animationEnabled = this.getShallow('animation');\r\n\t            if (animationEnabled) {\r\n\t                if (this.getData().count() > this.getShallow('animationThreshold')) {\r\n\t                    animationEnabled = false;\r\n\t                }\r\n\t            }\r\n\t            return animationEnabled;\r\n\t        },\r\n\r\n\t        restoreData: function () {\r\n\t            this._data = this._dataBeforeProcessed.cloneShallow();\r\n\t        },\r\n\r\n\t        getColorFromPalette: function (name, scope) {\r\n\t            var ecModel = this.ecModel;\r\n\t            // PENDING\r\n\t            var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\r\n\t            if (!color) {\r\n\t                color = ecModel.getColorFromPalette(name, scope);\r\n\t            }\r\n\t            return color;\r\n\t        },\r\n\r\n\t        getAxisTooltipDataIndex: null\r\n\t    });\r\n\r\n\t    zrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\r\n\t    zrUtil.mixin(SeriesModel, colorPaletteMixin);\r\n\r\n\t    module.exports = SeriesModel;\r\n\r\n\r\n/***/ },\r\n/* 29 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t\r\n\r\n\t    var Group = __webpack_require__(30);\r\n\t    var componentUtil = __webpack_require__(20);\r\n\t    var clazzUtil = __webpack_require__(13);\r\n\r\n\t    var Component = function () {\r\n\t        /**\r\n\t         * @type {module:zrender/container/Group}\r\n\t         * @readOnly\r\n\t         */\r\n\t        this.group = new Group();\r\n\r\n\t        /**\r\n\t         * @type {string}\r\n\t         * @readOnly\r\n\t         */\r\n\t        this.uid = componentUtil.getUID('viewComponent');\r\n\t    };\r\n\r\n\t    Component.prototype = {\r\n\r\n\t        constructor: Component,\r\n\r\n\t        init: function (ecModel, api) {},\r\n\r\n\t        render: function (componentModel, ecModel, api, payload) {},\r\n\r\n\t        dispose: function () {}\r\n\t    };\r\n\r\n\t    var componentProto = Component.prototype;\r\n\t    componentProto.updateView\r\n\t        = componentProto.updateLayout\r\n\t        = componentProto.updateVisual\r\n\t        = function (seriesModel, ecModel, api, payload) {\r\n\t            // Do nothing;\r\n\t        };\r\n\t    // Enable Component.extend.\r\n\t    clazzUtil.enableClassExtend(Component);\r\n\r\n\t    // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\r\n\t    clazzUtil.enableClassManagement(Component, {registerWhenExtend: true});\r\n\r\n\t    module.exports = Component;\r\n\r\n\r\n/***/ },\r\n/* 30 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t/**\r\n\t * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\r\n\t * @module zrender/graphic/Group\r\n\t * @example\r\n\t *     var Group = require('zrender/lib/container/Group');\r\n\t *     var Circle = require('zrender/lib/graphic/shape/Circle');\r\n\t *     var g = new Group();\r\n\t *     g.position[0] = 100;\r\n\t *     g.position[1] = 100;\r\n\t *     g.add(new Circle({\r\n\t *         style: {\r\n\t *             x: 100,\r\n\t *             y: 100,\r\n\t *             r: 20,\r\n\t *         }\r\n\t *     }));\r\n\t *     zr.add(g);\r\n\t */\r\n\r\n\r\n\t    var zrUtil = __webpack_require__(4);\r\n\t    var Element = __webpack_require__(31);\r\n\t    var BoundingRect = __webpack_require__(9);\r\n\r\n\t    /**\r\n\t     * @alias module:zrender/graphic/Group\r\n\t     * @constructor\r\n\t     * @extends module:zrender/mixin/Transformable\r\n\t     * @extends module:zrender/mixin/Eventful\r\n\t     */\r\n\t    var Group = function (opts) {\r\n\r\n\t        opts = opts || {};\r\n\r\n\t        Element.call(this, opts);\r\n\r\n\t        for (var key in opts) {\r\n\t            this[key] = opts[key];\r\n\t        }\r\n\r\n\t        this._children = [];\r\n\r\n\t        this.__storage = null;\r\n\r\n\t        this.__dirty = true;\r\n\t    };\r\n\r\n\t    Group.prototype = {\r\n\r\n\t        constructor: Group,\r\n\r\n\t        isGroup: true,\r\n\r\n\t        /**\r\n\t         * @type {string}\r\n\t         */\r\n\t        type: 'group',\r\n\r\n\t        /**\r\n\t         * 所有子孙元素是否响应鼠标事件\r\n\t         * @name module:/zrender/container/Group#silent\r\n\t         * @type {boolean}\r\n\t         * @default false\r\n\t         */\r\n\t        silent: false,\r\n\r\n\t        /**\r\n\t         * @return {Array.<module:zrender/Element>}\r\n\t         */\r\n\t        children: function () {\r\n\t            return this._children.slice();\r\n\t        },\r\n\r\n\t        /**\r\n\t         * 获取指定 index 的儿子节点\r\n\t         * @param  {number} idx\r\n\t         * @return {module:zrender/Element}\r\n\t         */\r\n\t        childAt: function (idx) {\r\n\t            return this._children[idx];\r\n\t        },\r\n\r\n\t        /**\r\n\t         * 获取指定名字的儿子节点\r\n\t         * @param  {string} name\r\n\t         * @return {module:zrender/Element}\r\n\t         */\r\n\t        childOfName: function (name) {\r\n\t            var children = this._children;\r\n\t            for (var i = 0; i < children.length; i++) {\r\n\t                if (children[i].name === name) {\r\n\t                    return children[i];\r\n\t                }\r\n\t             }\r\n\t        },\r\n\r\n\t        /**\r\n\t         * @return {number}\r\n\t         */\r\n\t        childCount: function () {\r\n\t            return this._children.length;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * 添加子节点到最后\r\n\t         * @param {module:zrender/Element} child\r\n\t         */\r\n\t        add: function (child) {\r\n\t            if (child && child !== this && child.parent !== this) {\r\n\r\n\t                this._children.push(child);\r\n\r\n\t                this._doAdd(child);\r\n\t            }\r\n\r\n\t            return this;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * 添加子节点在 nextSibling 之前\r\n\t         * @param {module:zrender/Element} child\r\n\t         * @param {module:zrender/Element} nextSibling\r\n\t         */\r\n\t        addBefore: function (child, nextSibling) {\r\n\t            if (child && child !== this && child.parent !== this\r\n\t                && nextSibling && nextSibling.parent === this) {\r\n\r\n\t                var children = this._children;\r\n\t                var idx = children.indexOf(nextSibling);\r\n\r\n\t                if (idx >= 0) {\r\n\t                    children.splice(idx, 0, child);\r\n\t                    this._doAdd(child);\r\n\t                }\r\n\t            }\r\n\r\n\t            return this;\r\n\t        },\r\n\r\n\t        _doAdd: function (child) {\r\n\t            if (child.parent) {\r\n\t                child.parent.remove(child);\r\n\t            }\r\n\r\n\t            child.parent = this;\r\n\r\n\t            var storage = this.__storage;\r\n\t            var zr = this.__zr;\r\n\t            if (storage && storage !== child.__storage) {\r\n\r\n\t                storage.addToMap(child);\r\n\r\n\t                if (child instanceof Group) {\r\n\t                    child.addChildrenToStorage(storage);\r\n\t                }\r\n\t            }\r\n\r\n\t            zr && zr.refresh();\r\n\t        },\r\n\r\n\t        /**\r\n\t         * 移除子节点\r\n\t         * @param {module:zrender/Element} child\r\n\t         */\r\n\t        remove: function (child) {\r\n\t            var zr = this.__zr;\r\n\t            var storage = this.__storage;\r\n\t            var children = this._children;\r\n\r\n\t            var idx = zrUtil.indexOf(children, child);\r\n\t            if (idx < 0) {\r\n\t                return this;\r\n\t            }\r\n\t            children.splice(idx, 1);\r\n\r\n\t            child.parent = null;\r\n\r\n\t            if (storage) {\r\n\r\n\t                storage.delFromMap(child.id);\r\n\r\n\t                if (child instanceof Group) {\r\n\t                    child.delChildrenFromStorage(storage);\r\n\t                }\r\n\t            }\r\n\r\n\t            zr && zr.refresh();\r\n\r\n\t            return this;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * 移除所有子节点\r\n\t         */\r\n\t        removeAll: function () {\r\n\t            var children = this._children;\r\n\t            var storage = this.__storage;\r\n\t            var child;\r\n\t            var i;\r\n\t            for (i = 0; i < children.length; i++) {\r\n\t                child = children[i];\r\n\t                if (storage) {\r\n\t                    storage.delFromMap(child.id);\r\n\t                    if (child instanceof Group) {\r\n\t                        child.delChildrenFromStorage(storage);\r\n\t                    }\r\n\t                }\r\n\t                child.parent = null;\r\n\t            }\r\n\t            children.length = 0;\r\n\r\n\t            return this;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * 遍历所有子节点\r\n\t         * @param  {Function} cb\r\n\t         * @param  {}   context\r\n\t         */\r\n\t        eachChild: function (cb, context) {\r\n\t            var children = this._children;\r\n\t            for (var i = 0; i < children.length; i++) {\r\n\t                var child = children[i];\r\n\t                cb.call(context, child, i);\r\n\t            }\r\n\t            return this;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * 深度优先遍历所有子孙节点\r\n\t         * @param  {Function} cb\r\n\t         * @param  {}   context\r\n\t         */\r\n\t        traverse: function (cb, context) {\r\n\t            for (var i = 0; i < this._children.length; i++) {\r\n\t                var child = this._children[i];\r\n\t                cb.call(context, child);\r\n\r\n\t                if (child.type === 'group') {\r\n\t                    child.traverse(cb, context);\r\n\t                }\r\n\t            }\r\n\t            return this;\r\n\t        },\r\n\r\n\t        addChildrenToStorage: function (storage) {\r\n\t            for (var i = 0; i < this._children.length; i++) {\r\n\t                var child = this._children[i];\r\n\t                storage.addToMap(child);\r\n\t                if (child instanceof Group) {\r\n\t                    child.addChildrenToStorage(storage);\r\n\t                }\r\n\t            }\r\n\t        },\r\n\r\n\t        delChildrenFromStorage: function (storage) {\r\n\t            for (var i = 0; i < this._children.length; i++) {\r\n\t                var child = this._children[i];\r\n\t                storage.delFromMap(child.id);\r\n\t                if (child instanceof Group) {\r\n\t                    child.delChildrenFromStorage(storage);\r\n\t                }\r\n\t            }\r\n\t        },\r\n\r\n\t        dirty: function () {\r\n\t            this.__dirty = true;\r\n\t            this.__zr && this.__zr.refresh();\r\n\t            return this;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * @return {module:zrender/core/BoundingRect}\r\n\t         */\r\n\t        getBoundingRect: function (includeChildren) {\r\n\t            // TODO Caching\r\n\t            // TODO Transform\r\n\t            var rect = null;\r\n\t            var tmpRect = new BoundingRect(0, 0, 0, 0);\r\n\t            var children = includeChildren || this._children;\r\n\t            var tmpMat = [];\r\n\r\n\t            for (var i = 0; i < children.length; i++) {\r\n\t                var child = children[i];\r\n\t                if (child.ignore || child.invisible) {\r\n\t                    continue;\r\n\t                }\r\n\r\n\t                var childRect = child.getBoundingRect();\r\n\t                var transform = child.getLocalTransform(tmpMat);\r\n\t                if (transform) {\r\n\t                    tmpRect.copy(childRect);\r\n\t                    tmpRect.applyTransform(transform);\r\n\t                    rect = rect || tmpRect.clone();\r\n\t                    rect.union(tmpRect);\r\n\t                }\r\n\t                else {\r\n\t                    rect = rect || childRect.clone();\r\n\t                    rect.union(childRect);\r\n\t                }\r\n\t            }\r\n\t            return rect || tmpRect;\r\n\t        }\r\n\t    };\r\n\r\n\t    zrUtil.inherits(Group, Element);\r\n\r\n\t    module.exports = Group;\r\n\r\n\r\n/***/ },\r\n/* 31 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t'use strict';\r\n\t/**\r\n\t * @module zrender/Element\r\n\t */\r\n\r\n\r\n\t    var guid = __webpack_require__(32);\r\n\t    var Eventful = __webpack_require__(33);\r\n\t    var Transformable = __webpack_require__(34);\r\n\t    var Animatable = __webpack_require__(35);\r\n\t    var zrUtil = __webpack_require__(4);\r\n\r\n\t    /**\r\n\t     * @alias module:zrender/Element\r\n\t     * @constructor\r\n\t     * @extends {module:zrender/mixin/Animatable}\r\n\t     * @extends {module:zrender/mixin/Transformable}\r\n\t     * @extends {module:zrender/mixin/Eventful}\r\n\t     */\r\n\t    var Element = function (opts) {\r\n\r\n\t        Transformable.call(this, opts);\r\n\t        Eventful.call(this, opts);\r\n\t        Animatable.call(this, opts);\r\n\r\n\t        /**\r\n\t         * 画布元素ID\r\n\t         * @type {string}\r\n\t         */\r\n\t        this.id = opts.id || guid();\r\n\t    };\r\n\r\n\t    Element.prototype = {\r\n\r\n\t        /**\r\n\t         * 元素类型\r\n\t         * Element type\r\n\t         * @type {string}\r\n\t         */\r\n\t        type: 'element',\r\n\r\n\t        /**\r\n\t         * 元素名字\r\n\t         * Element name\r\n\t         * @type {string}\r\n\t         */\r\n\t        name: '',\r\n\r\n\t        /**\r\n\t         * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\r\n\t         * ZRender instance will be assigned when element is associated with zrender\r\n\t         * @name module:/zrender/Element#__zr\r\n\t         * @type {module:zrender/ZRender}\r\n\t         */\r\n\t        __zr: null,\r\n\r\n\t        /**\r\n\t         * 图形是否忽略，为true时忽略图形的绘制以及事件触发\r\n\t         * If ignore drawing and events of the element object\r\n\t         * @name module:/zrender/Element#ignore\r\n\t         * @type {boolean}\r\n\t         * @default false\r\n\t         */\r\n\t        ignore: false,\r\n\r\n\t        /**\r\n\t         * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\r\n\t         * 该路径会继承被裁减对象的变换\r\n\t         * @type {module:zrender/graphic/Path}\r\n\t         * @see http://www.w3.org/TR/2dcontext/#clipping-region\r\n\t         * @readOnly\r\n\t         */\r\n\t        clipPath: null,\r\n\r\n\t        /**\r\n\t         * Drift element\r\n\t         * @param  {number} dx dx on the global space\r\n\t         * @param  {number} dy dy on the global space\r\n\t         */\r\n\t        drift: function (dx, dy) {\r\n\t            switch (this.draggable) {\r\n\t                case 'horizontal':\r\n\t                    dy = 0;\r\n\t                    break;\r\n\t                case 'vertical':\r\n\t                    dx = 0;\r\n\t                    break;\r\n\t            }\r\n\r\n\t            var m = this.transform;\r\n\t            if (!m) {\r\n\t                m = this.transform = [1, 0, 0, 1, 0, 0];\r\n\t            }\r\n\t            m[4] += dx;\r\n\t            m[5] += dy;\r\n\r\n\t            this.decomposeTransform();\r\n\t            this.dirty(false);\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Hook before update\r\n\t         */\r\n\t        beforeUpdate: function () {},\r\n\t        /**\r\n\t         * Hook after update\r\n\t         */\r\n\t        afterUpdate: function () {},\r\n\t        /**\r\n\t         * Update each frame\r\n\t         */\r\n\t        update: function () {\r\n\t            this.updateTransform();\r\n\t        },\r\n\r\n\t        /**\r\n\t         * @param  {Function} cb\r\n\t         * @param  {}   context\r\n\t         */\r\n\t        traverse: function (cb, context) {},\r\n\r\n\t        /**\r\n\t         * @protected\r\n\t         */\r\n\t        attrKV: function (key, value) {\r\n\t            if (key === 'position' || key === 'scale' || key === 'origin') {\r\n\t                // Copy the array\r\n\t                if (value) {\r\n\t                    var target = this[key];\r\n\t                    if (!target) {\r\n\t                        target = this[key] = [];\r\n\t                    }\r\n\t                    target[0] = value[0];\r\n\t                    target[1] = value[1];\r\n\t                }\r\n\t            }\r\n\t            else {\r\n\t                this[key] = value;\r\n\t            }\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Hide the element\r\n\t         */\r\n\t        hide: function () {\r\n\t            this.ignore = true;\r\n\t            this.__zr && this.__zr.refresh();\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Show the element\r\n\t         */\r\n\t        show: function () {\r\n\t            this.ignore = false;\r\n\t            this.__zr && this.__zr.refresh();\r\n\t        },\r\n\r\n\t        /**\r\n\t         * @param {string|Object} key\r\n\t         * @param {*} value\r\n\t         */\r\n\t        attr: function (key, value) {\r\n\t            if (typeof key === 'string') {\r\n\t                this.attrKV(key, value);\r\n\t            }\r\n\t            else if (zrUtil.isObject(key)) {\r\n\t                for (var name in key) {\r\n\t                    if (key.hasOwnProperty(name)) {\r\n\t                        this.attrKV(name, key[name]);\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\r\n\t            this.dirty(false);\r\n\r\n\t            return this;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * @param {module:zrender/graphic/Path} clipPath\r\n\t         */\r\n\t        setClipPath: function (clipPath) {\r\n\t            var zr = this.__zr;\r\n\t            if (zr) {\r\n\t                clipPath.addSelfToZr(zr);\r\n\t            }\r\n\r\n\t            // Remove previous clip path\r\n\t            if (this.clipPath && this.clipPath !== clipPath) {\r\n\t                this.removeClipPath();\r\n\t            }\r\n\r\n\t            this.clipPath = clipPath;\r\n\t            clipPath.__zr = zr;\r\n\t            clipPath.__clipTarget = this;\r\n\r\n\t            this.dirty(false);\r\n\t        },\r\n\r\n\t        /**\r\n\t         */\r\n\t        removeClipPath: function () {\r\n\t            var clipPath = this.clipPath;\r\n\t            if (clipPath) {\r\n\t                if (clipPath.__zr) {\r\n\t                    clipPath.removeSelfFromZr(clipPath.__zr);\r\n\t                }\r\n\r\n\t                clipPath.__zr = null;\r\n\t                clipPath.__clipTarget = null;\r\n\t                this.clipPath = null;\r\n\r\n\t                this.dirty(false);\r\n\t            }\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Add self from zrender instance.\r\n\t         * Not recursively because it will be invoked when element added to storage.\r\n\t         * @param {module:zrender/ZRender} zr\r\n\t         */\r\n\t        addSelfToZr: function (zr) {\r\n\t            this.__zr = zr;\r\n\t            // 添加动画\r\n\t            var animators = this.animators;\r\n\t            if (animators) {\r\n\t                for (var i = 0; i < animators.length; i++) {\r\n\t                    zr.animation.addAnimator(animators[i]);\r\n\t                }\r\n\t            }\r\n\r\n\t            if (this.clipPath) {\r\n\t                this.clipPath.addSelfToZr(zr);\r\n\t            }\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Remove self from zrender instance.\r\n\t         * Not recursively because it will be invoked when element added to storage.\r\n\t         * @param {module:zrender/ZRender} zr\r\n\t         */\r\n\t        removeSelfFromZr: function (zr) {\r\n\t            this.__zr = null;\r\n\t            // 移除动画\r\n\t            var animators = this.animators;\r\n\t            if (animators) {\r\n\t                for (var i = 0; i < animators.length; i++) {\r\n\t                    zr.animation.removeAnimator(animators[i]);\r\n\t                }\r\n\t            }\r\n\r\n\t            if (this.clipPath) {\r\n\t                this.clipPath.removeSelfFromZr(zr);\r\n\t            }\r\n\t        }\r\n\t    };\r\n\r\n\t    zrUtil.mixin(Element, Animatable);\r\n\t    zrUtil.mixin(Element, Transformable);\r\n\t    zrUtil.mixin(Element, Eventful);\r\n\r\n\t    module.exports = Element;\r\n\r\n\r\n/***/ },\r\n/* 32 */\r\n/***/ function(module, exports) {\r\n\r\n\t/**\r\n\t * zrender: 生成唯一id\r\n\t *\r\n\t * @author errorrik (errorrik@gmail.com)\r\n\t */\r\n\r\n\r\n\t    var idStart = 0x0907;\r\n\r\n\t    module.exports = function () {\r\n\t        return idStart++;\r\n\t    };\r\n\r\n\r\n\r\n/***/ },\r\n/* 33 */\r\n/***/ function(module, exports) {\r\n\r\n\t/**\r\n\t * 事件扩展\r\n\t * @module zrender/mixin/Eventful\r\n\t * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n\t *         pissang (https://www.github.com/pissang)\r\n\t */\r\n\r\n\r\n\t    var arrySlice = Array.prototype.slice;\r\n\r\n\t    /**\r\n\t     * 事件分发器\r\n\t     * @alias module:zrender/mixin/Eventful\r\n\t     * @constructor\r\n\t     */\r\n\t    var Eventful = function () {\r\n\t        this._$handlers = {};\r\n\t    };\r\n\r\n\t    Eventful.prototype = {\r\n\r\n\t        constructor: Eventful,\r\n\r\n\t        /**\r\n\t         * 单次触发绑定，trigger后销毁\r\n\t         *\r\n\t         * @param {string} event 事件名\r\n\t         * @param {Function} handler 响应函数\r\n\t         * @param {Object} context\r\n\t         */\r\n\t        one: function (event, handler, context) {\r\n\t            var _h = this._$handlers;\r\n\r\n\t            if (!handler || !event) {\r\n\t                return this;\r\n\t            }\r\n\r\n\t            if (!_h[event]) {\r\n\t                _h[event] = [];\r\n\t            }\r\n\r\n\t            for (var i = 0; i < _h[event].length; i++) {\r\n\t                if (_h[event][i].h === handler) {\r\n\t                    return this;\r\n\t                }\r\n\t            }\r\n\r\n\t            _h[event].push({\r\n\t                h: handler,\r\n\t                one: true,\r\n\t                ctx: context || this\r\n\t            });\r\n\r\n\t            return this;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * 绑定事件\r\n\t         * @param {string} event 事件名\r\n\t         * @param {Function} handler 事件处理函数\r\n\t         * @param {Object} [context]\r\n\t         */\r\n\t        on: function (event, handler, context) {\r\n\t            var _h = this._$handlers;\r\n\r\n\t            if (!handler || !event) {\r\n\t                return this;\r\n\t            }\r\n\r\n\t            if (!_h[event]) {\r\n\t                _h[event] = [];\r\n\t            }\r\n\r\n\t            for (var i = 0; i < _h[event].length; i++) {\r\n\t                if (_h[event][i].h === handler) {\r\n\t                    return this;\r\n\t                }\r\n\t            }\r\n\r\n\t            _h[event].push({\r\n\t                h: handler,\r\n\t                one: false,\r\n\t                ctx: context || this\r\n\t            });\r\n\r\n\t            return this;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * 是否绑定了事件\r\n\t         * @param  {string}  event\r\n\t         * @return {boolean}\r\n\t         */\r\n\t        isSilent: function (event) {\r\n\t            var _h = this._$handlers;\r\n\t            return _h[event] && _h[event].length;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * 解绑事件\r\n\t         * @param {string} event 事件名\r\n\t         * @param {Function} [handler] 事件处理函数\r\n\t         */\r\n\t        off: function (event, handler) {\r\n\t            var _h = this._$handlers;\r\n\r\n\t            if (!event) {\r\n\t                this._$handlers = {};\r\n\t                return this;\r\n\t            }\r\n\r\n\t            if (handler) {\r\n\t                if (_h[event]) {\r\n\t                    var newList = [];\r\n\t                    for (var i = 0, l = _h[event].length; i < l; i++) {\r\n\t                        if (_h[event][i]['h'] != handler) {\r\n\t                            newList.push(_h[event][i]);\r\n\t                        }\r\n\t                    }\r\n\t                    _h[event] = newList;\r\n\t                }\r\n\r\n\t                if (_h[event] && _h[event].length === 0) {\r\n\t                    delete _h[event];\r\n\t                }\r\n\t            }\r\n\t            else {\r\n\t                delete _h[event];\r\n\t            }\r\n\r\n\t            return this;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * 事件分发\r\n\t         *\r\n\t         * @param {string} type 事件类型\r\n\t         */\r\n\t        trigger: function (type) {\r\n\t            if (this._$handlers[type]) {\r\n\t                var args = arguments;\r\n\t                var argLen = args.length;\r\n\r\n\t                if (argLen > 3) {\r\n\t                    args = arrySlice.call(args, 1);\r\n\t                }\r\n\r\n\t                var _h = this._$handlers[type];\r\n\t                var len = _h.length;\r\n\t                for (var i = 0; i < len;) {\r\n\t                    // Optimize advise from backbone\r\n\t                    switch (argLen) {\r\n\t                        case 1:\r\n\t                            _h[i]['h'].call(_h[i]['ctx']);\r\n\t                            break;\r\n\t                        case 2:\r\n\t                            _h[i]['h'].call(_h[i]['ctx'], args[1]);\r\n\t                            break;\r\n\t                        case 3:\r\n\t                            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\r\n\t                            break;\r\n\t                        default:\r\n\t                            // have more than 2 given arguments\r\n\t                            _h[i]['h'].apply(_h[i]['ctx'], args);\r\n\t                            break;\r\n\t                    }\r\n\r\n\t                    if (_h[i]['one']) {\r\n\t                        _h.splice(i, 1);\r\n\t                        len--;\r\n\t                    }\r\n\t                    else {\r\n\t                        i++;\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\r\n\t            return this;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * 带有context的事件分发, 最后一个参数是事件回调的context\r\n\t         * @param {string} type 事件类型\r\n\t         */\r\n\t        triggerWithContext: function (type) {\r\n\t            if (this._$handlers[type]) {\r\n\t                var args = arguments;\r\n\t                var argLen = args.length;\r\n\r\n\t                if (argLen > 4) {\r\n\t                    args = arrySlice.call(args, 1, args.length - 1);\r\n\t                }\r\n\t                var ctx = args[args.length - 1];\r\n\r\n\t                var _h = this._$handlers[type];\r\n\t                var len = _h.length;\r\n\t                for (var i = 0; i < len;) {\r\n\t                    // Optimize advise from backbone\r\n\t                    switch (argLen) {\r\n\t                        case 1:\r\n\t                            _h[i]['h'].call(ctx);\r\n\t                            break;\r\n\t                        case 2:\r\n\t                            _h[i]['h'].call(ctx, args[1]);\r\n\t                            break;\r\n\t                        case 3:\r\n\t                            _h[i]['h'].call(ctx, args[1], args[2]);\r\n\t                            break;\r\n\t                        default:\r\n\t                            // have more than 2 given arguments\r\n\t                            _h[i]['h'].apply(ctx, args);\r\n\t                            break;\r\n\t                    }\r\n\r\n\t                    if (_h[i]['one']) {\r\n\t                        _h.splice(i, 1);\r\n\t                        len--;\r\n\t                    }\r\n\t                    else {\r\n\t                        i++;\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\r\n\t            return this;\r\n\t        }\r\n\t    };\r\n\r\n\t    // 对象可以通过 onxxxx 绑定事件\r\n\t    /**\r\n\t     * @event module:zrender/mixin/Eventful#onclick\r\n\t     * @type {Function}\r\n\t     * @default null\r\n\t     */\r\n\t    /**\r\n\t     * @event module:zrender/mixin/Eventful#onmouseover\r\n\t     * @type {Function}\r\n\t     * @default null\r\n\t     */\r\n\t    /**\r\n\t     * @event module:zrender/mixin/Eventful#onmouseout\r\n\t     * @type {Function}\r\n\t     * @default null\r\n\t     */\r\n\t    /**\r\n\t     * @event module:zrender/mixin/Eventful#onmousemove\r\n\t     * @type {Function}\r\n\t     * @default null\r\n\t     */\r\n\t    /**\r\n\t     * @event module:zrender/mixin/Eventful#onmousewheel\r\n\t     * @type {Function}\r\n\t     * @default null\r\n\t     */\r\n\t    /**\r\n\t     * @event module:zrender/mixin/Eventful#onmousedown\r\n\t     * @type {Function}\r\n\t     * @default null\r\n\t     */\r\n\t    /**\r\n\t     * @event module:zrender/mixin/Eventful#onmouseup\r\n\t     * @type {Function}\r\n\t     * @default null\r\n\t     */\r\n\t    /**\r\n\t     * @event module:zrender/mixin/Eventful#ondragstart\r\n\t     * @type {Function}\r\n\t     * @default null\r\n\t     */\r\n\t    /**\r\n\t     * @event module:zrender/mixin/Eventful#ondragend\r\n\t     * @type {Function}\r\n\t     * @default null\r\n\t     */\r\n\t    /**\r\n\t     * @event module:zrender/mixin/Eventful#ondragenter\r\n\t     * @type {Function}\r\n\t     * @default null\r\n\t     */\r\n\t    /**\r\n\t     * @event module:zrender/mixin/Eventful#ondragleave\r\n\t     * @type {Function}\r\n\t     * @default null\r\n\t     */\r\n\t    /**\r\n\t     * @event module:zrender/mixin/Eventful#ondragover\r\n\t     * @type {Function}\r\n\t     * @default null\r\n\t     */\r\n\t    /**\r\n\t     * @event module:zrender/mixin/Eventful#ondrop\r\n\t     * @type {Function}\r\n\t     * @default null\r\n\t     */\r\n\r\n\t    module.exports = Eventful;\r\n\r\n\r\n\r\n/***/ },\r\n/* 34 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t'use strict';\r\n\t/**\r\n\t * 提供变换扩展\r\n\t * @module zrender/mixin/Transformable\r\n\t * @author pissang (https://www.github.com/pissang)\r\n\t */\r\n\r\n\r\n\t    var matrix = __webpack_require__(11);\r\n\t    var vector = __webpack_require__(10);\r\n\t    var mIdentity = matrix.identity;\r\n\r\n\t    var EPSILON = 5e-5;\r\n\r\n\t    function isNotAroundZero(val) {\r\n\t        return val > EPSILON || val < -EPSILON;\r\n\t    }\r\n\r\n\t    /**\r\n\t     * @alias module:zrender/mixin/Transformable\r\n\t     * @constructor\r\n\t     */\r\n\t    var Transformable = function (opts) {\r\n\t        opts = opts || {};\r\n\t        // If there are no given position, rotation, scale\r\n\t        if (!opts.position) {\r\n\t            /**\r\n\t             * 平移\r\n\t             * @type {Array.<number>}\r\n\t             * @default [0, 0]\r\n\t             */\r\n\t            this.position = [0, 0];\r\n\t        }\r\n\t        if (opts.rotation == null) {\r\n\t            /**\r\n\t             * 旋转\r\n\t             * @type {Array.<number>}\r\n\t             * @default 0\r\n\t             */\r\n\t            this.rotation = 0;\r\n\t        }\r\n\t        if (!opts.scale) {\r\n\t            /**\r\n\t             * 缩放\r\n\t             * @type {Array.<number>}\r\n\t             * @default [1, 1]\r\n\t             */\r\n\t            this.scale = [1, 1];\r\n\t        }\r\n\t        /**\r\n\t         * 旋转和缩放的原点\r\n\t         * @type {Array.<number>}\r\n\t         * @default null\r\n\t         */\r\n\t        this.origin = this.origin || null;\r\n\t    };\r\n\r\n\t    var transformableProto = Transformable.prototype;\r\n\t    transformableProto.transform = null;\r\n\r\n\t    /**\r\n\t     * 判断是否需要有坐标变换\r\n\t     * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\r\n\t     */\r\n\t    transformableProto.needLocalTransform = function () {\r\n\t        return isNotAroundZero(this.rotation)\r\n\t            || isNotAroundZero(this.position[0])\r\n\t            || isNotAroundZero(this.position[1])\r\n\t            || isNotAroundZero(this.scale[0] - 1)\r\n\t            || isNotAroundZero(this.scale[1] - 1);\r\n\t    };\r\n\r\n\t    transformableProto.updateTransform = function () {\r\n\t        var parent = this.parent;\r\n\t        var parentHasTransform = parent && parent.transform;\r\n\t        var needLocalTransform = this.needLocalTransform();\r\n\r\n\t        var m = this.transform;\r\n\t        if (!(needLocalTransform || parentHasTransform)) {\r\n\t            m && mIdentity(m);\r\n\t            return;\r\n\t        }\r\n\r\n\t        m = m || matrix.create();\r\n\r\n\t        if (needLocalTransform) {\r\n\t            this.getLocalTransform(m);\r\n\t        }\r\n\t        else {\r\n\t            mIdentity(m);\r\n\t        }\r\n\r\n\t        // 应用父节点变换\r\n\t        if (parentHasTransform) {\r\n\t            if (needLocalTransform) {\r\n\t                matrix.mul(m, parent.transform, m);\r\n\t            }\r\n\t            else {\r\n\t                matrix.copy(m, parent.transform);\r\n\t            }\r\n\t        }\r\n\t        // 保存这个变换矩阵\r\n\t        this.transform = m;\r\n\r\n\t        this.invTransform = this.invTransform || matrix.create();\r\n\t        matrix.invert(this.invTransform, m);\r\n\t    };\r\n\r\n\t    transformableProto.getLocalTransform = function (m) {\r\n\t        m = m || [];\r\n\t        mIdentity(m);\r\n\r\n\t        var origin = this.origin;\r\n\r\n\t        var scale = this.scale;\r\n\t        var rotation = this.rotation;\r\n\t        var position = this.position;\r\n\t        if (origin) {\r\n\t            // Translate to origin\r\n\t            m[4] -= origin[0];\r\n\t            m[5] -= origin[1];\r\n\t        }\r\n\t        matrix.scale(m, m, scale);\r\n\t        if (rotation) {\r\n\t            matrix.rotate(m, m, rotation);\r\n\t        }\r\n\t        if (origin) {\r\n\t            // Translate back from origin\r\n\t            m[4] += origin[0];\r\n\t            m[5] += origin[1];\r\n\t        }\r\n\r\n\t        m[4] += position[0];\r\n\t        m[5] += position[1];\r\n\r\n\t        return m;\r\n\t    };\r\n\t    /**\r\n\t     * 将自己的transform应用到context上\r\n\t     * @param {Context2D} ctx\r\n\t     */\r\n\t    transformableProto.setTransform = function (ctx) {\r\n\t        var m = this.transform;\r\n\t        if (m) {\r\n\t            ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\r\n\t        }\r\n\t    };\r\n\r\n\t    transformableProto.restoreTransform = function (ctx) {\r\n\t        var m = this.invTransform;\r\n\t        if (m) {\r\n\t            ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\r\n\t        }\r\n\t    }\r\n\r\n\t    var tmpTransform = [];\r\n\r\n\t    /**\r\n\t     * 分解`transform`矩阵到`position`, `rotation`, `scale`\r\n\t     */\r\n\t    transformableProto.decomposeTransform = function () {\r\n\t        if (!this.transform) {\r\n\t            return;\r\n\t        }\r\n\t        var parent = this.parent;\r\n\t        var m = this.transform;\r\n\t        if (parent && parent.transform) {\r\n\t            // Get local transform and decompose them to position, scale, rotation\r\n\t            matrix.mul(tmpTransform, parent.invTransform, m);\r\n\t            m = tmpTransform;\r\n\t        }\r\n\t        var sx = m[0] * m[0] + m[1] * m[1];\r\n\t        var sy = m[2] * m[2] + m[3] * m[3];\r\n\t        var position = this.position;\r\n\t        var scale = this.scale;\r\n\t        if (isNotAroundZero(sx - 1)) {\r\n\t            sx = Math.sqrt(sx);\r\n\t        }\r\n\t        if (isNotAroundZero(sy - 1)) {\r\n\t            sy = Math.sqrt(sy);\r\n\t        }\r\n\t        if (m[0] < 0) {\r\n\t            sx = -sx;\r\n\t        }\r\n\t        if (m[3] < 0) {\r\n\t            sy = -sy;\r\n\t        }\r\n\t        position[0] = m[4];\r\n\t        position[1] = m[5];\r\n\t        scale[0] = sx;\r\n\t        scale[1] = sy;\r\n\t        this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\r\n\t    };\r\n\r\n\t    /**\r\n\t     * Get global scale\r\n\t     * @return {Array.<number>}\r\n\t     */\r\n\t    transformableProto.getGlobalScale = function () {\r\n\t        var m = this.transform;\r\n\t        if (!m) {\r\n\t            return [1, 1];\r\n\t        }\r\n\t        var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\r\n\t        var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\r\n\t        if (m[0] < 0) {\r\n\t            sx = -sx;\r\n\t        }\r\n\t        if (m[3] < 0) {\r\n\t            sy = -sy;\r\n\t        }\r\n\t        return [sx, sy];\r\n\t    };\r\n\t    /**\r\n\t     * 变换坐标位置到 shape 的局部坐标空间\r\n\t     * @method\r\n\t     * @param {number} x\r\n\t     * @param {number} y\r\n\t     * @return {Array.<number>}\r\n\t     */\r\n\t    transformableProto.transformCoordToLocal = function (x, y) {\r\n\t        var v2 = [x, y];\r\n\t        var invTransform = this.invTransform;\r\n\t        if (invTransform) {\r\n\t            vector.applyTransform(v2, v2, invTransform);\r\n\t        }\r\n\t        return v2;\r\n\t    };\r\n\r\n\t    /**\r\n\t     * 变换局部坐标位置到全局坐标空间\r\n\t     * @method\r\n\t     * @param {number} x\r\n\t     * @param {number} y\r\n\t     * @return {Array.<number>}\r\n\t     */\r\n\t    transformableProto.transformCoordToGlobal = function (x, y) {\r\n\t        var v2 = [x, y];\r\n\t        var transform = this.transform;\r\n\t        if (transform) {\r\n\t            vector.applyTransform(v2, v2, transform);\r\n\t        }\r\n\t        return v2;\r\n\t    };\r\n\r\n\t    module.exports = Transformable;\r\n\r\n\r\n\r\n/***/ },\r\n/* 35 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t'use strict';\r\n\t/**\r\n\t * @module zrender/mixin/Animatable\r\n\t */\r\n\r\n\r\n\t    var Animator = __webpack_require__(36);\r\n\t    var util = __webpack_require__(4);\r\n\t    var isString = util.isString;\r\n\t    var isFunction = util.isFunction;\r\n\t    var isObject = util.isObject;\r\n\t    var log = __webpack_require__(40);\r\n\r\n\t    /**\r\n\t     * @alias modue:zrender/mixin/Animatable\r\n\t     * @constructor\r\n\t     */\r\n\t    var Animatable = function () {\r\n\r\n\t        /**\r\n\t         * @type {Array.<module:zrender/animation/Animator>}\r\n\t         * @readOnly\r\n\t         */\r\n\t        this.animators = [];\r\n\t    };\r\n\r\n\t    Animatable.prototype = {\r\n\r\n\t        constructor: Animatable,\r\n\r\n\t        /**\r\n\t         * 动画\r\n\t         *\r\n\t         * @param {string} path 需要添加动画的属性获取路径，可以通过a.b.c来获取深层的属性\r\n\t         * @param {boolean} [loop] 动画是否循环\r\n\t         * @return {module:zrender/animation/Animator}\r\n\t         * @example:\r\n\t         *     el.animate('style', false)\r\n\t         *         .when(1000, {x: 10} )\r\n\t         *         .done(function(){ // Animation done })\r\n\t         *         .start()\r\n\t         */\r\n\t        animate: function (path, loop) {\r\n\t            var target;\r\n\t            var animatingShape = false;\r\n\t            var el = this;\r\n\t            var zr = this.__zr;\r\n\t            if (path) {\r\n\t                var pathSplitted = path.split('.');\r\n\t                var prop = el;\r\n\t                // If animating shape\r\n\t                animatingShape = pathSplitted[0] === 'shape';\r\n\t                for (var i = 0, l = pathSplitted.length; i < l; i++) {\r\n\t                    if (!prop) {\r\n\t                        continue;\r\n\t                    }\r\n\t                    prop = prop[pathSplitted[i]];\r\n\t                }\r\n\t                if (prop) {\r\n\t                    target = prop;\r\n\t                }\r\n\t            }\r\n\t            else {\r\n\t                target = el;\r\n\t            }\r\n\r\n\t            if (!target) {\r\n\t                log(\r\n\t                    'Property \"'\r\n\t                    + path\r\n\t                    + '\" is not existed in element '\r\n\t                    + el.id\r\n\t                );\r\n\t                return;\r\n\t            }\r\n\r\n\t            var animators = el.animators;\r\n\r\n\t            var animator = new Animator(target, loop);\r\n\r\n\t            animator.during(function (target) {\r\n\t                el.dirty(animatingShape);\r\n\t            })\r\n\t            .done(function () {\r\n\t                // FIXME Animator will not be removed if use `Animator#stop` to stop animation\r\n\t                animators.splice(util.indexOf(animators, animator), 1);\r\n\t            });\r\n\r\n\t            animators.push(animator);\r\n\r\n\t            // If animate after added to the zrender\r\n\t            if (zr) {\r\n\t                zr.animation.addAnimator(animator);\r\n\t            }\r\n\r\n\t            return animator;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * 停止动画\r\n\t         * @param {boolean} forwardToLast If move to last frame before stop\r\n\t         */\r\n\t        stopAnimation: function (forwardToLast) {\r\n\t            var animators = this.animators;\r\n\t            var len = animators.length;\r\n\t            for (var i = 0; i < len; i++) {\r\n\t                animators[i].stop(forwardToLast);\r\n\t            }\r\n\t            animators.length = 0;\r\n\r\n\t            return this;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * @param {Object} target\r\n\t         * @param {number} [time=500] Time in ms\r\n\t         * @param {string} [easing='linear']\r\n\t         * @param {number} [delay=0]\r\n\t         * @param {Function} [callback]\r\n\t         *\r\n\t         * @example\r\n\t         *  // Animate position\r\n\t         *  el.animateTo({\r\n\t         *      position: [10, 10]\r\n\t         *  }, function () { // done })\r\n\t         *\r\n\t         *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\r\n\t         *  el.animateTo({\r\n\t         *      shape: {\r\n\t         *          width: 500\r\n\t         *      },\r\n\t         *      style: {\r\n\t         *          fill: 'red'\r\n\t         *      }\r\n\t         *      position: [10, 10]\r\n\t         *  }, 100, 100, 'cubicOut', function () { // done })\r\n\t         */\r\n\t         // TODO Return animation key\r\n\t        animateTo: function (target, time, delay, easing, callback) {\r\n\t            // animateTo(target, time, easing, callback);\r\n\t            if (isString(delay)) {\r\n\t                callback = easing;\r\n\t                easing = delay;\r\n\t                delay = 0;\r\n\t            }\r\n\t            // animateTo(target, time, delay, callback);\r\n\t            else if (isFunction(easing)) {\r\n\t                callback = easing;\r\n\t                easing = 'linear';\r\n\t                delay = 0;\r\n\t            }\r\n\t            // animateTo(target, time, callback);\r\n\t            else if (isFunction(delay)) {\r\n\t                callback = delay;\r\n\t                delay = 0;\r\n\t            }\r\n\t            // animateTo(target, callback)\r\n\t            else if (isFunction(time)) {\r\n\t                callback = time;\r\n\t                time = 500;\r\n\t            }\r\n\t            // animateTo(target)\r\n\t            else if (!time) {\r\n\t                time = 500;\r\n\t            }\r\n\t            // Stop all previous animations\r\n\t            this.stopAnimation();\r\n\t            this._animateToShallow('', this, target, time, delay, easing, callback);\r\n\r\n\t            // Animators may be removed immediately after start\r\n\t            // if there is nothing to animate\r\n\t            var animators = this.animators.slice();\r\n\t            var count = animators.length;\r\n\t            function done() {\r\n\t                count--;\r\n\t                if (!count) {\r\n\t                    callback && callback();\r\n\t                }\r\n\t            }\r\n\r\n\t            // No animators. This should be checked before animators[i].start(),\r\n\t            // because 'done' may be executed immediately if no need to animate.\r\n\t            if (!count) {\r\n\t                callback && callback();\r\n\t            }\r\n\t            // Start after all animators created\r\n\t            // Incase any animator is done immediately when all animation properties are not changed\r\n\t            for (var i = 0; i < animators.length; i++) {\r\n\t                animators[i]\r\n\t                    .done(done)\r\n\t                    .start(easing);\r\n\t            }\r\n\t        },\r\n\r\n\t        /**\r\n\t         * @private\r\n\t         * @param {string} path=''\r\n\t         * @param {Object} source=this\r\n\t         * @param {Object} target\r\n\t         * @param {number} [time=500]\r\n\t         * @param {number} [delay=0]\r\n\t         *\r\n\t         * @example\r\n\t         *  // Animate position\r\n\t         *  el._animateToShallow({\r\n\t         *      position: [10, 10]\r\n\t         *  })\r\n\t         *\r\n\t         *  // Animate shape, style and position in 100ms, delayed 100ms\r\n\t         *  el._animateToShallow({\r\n\t         *      shape: {\r\n\t         *          width: 500\r\n\t         *      },\r\n\t         *      style: {\r\n\t         *          fill: 'red'\r\n\t         *      }\r\n\t         *      position: [10, 10]\r\n\t         *  }, 100, 100)\r\n\t         */\r\n\t        _animateToShallow: function (path, source, target, time, delay) {\r\n\t            var objShallow = {};\r\n\t            var propertyCount = 0;\r\n\t            for (var name in target) {\r\n\t                if (source[name] != null) {\r\n\t                    if (isObject(target[name]) && !util.isArrayLike(target[name])) {\r\n\t                        this._animateToShallow(\r\n\t                            path ? path + '.' + name : name,\r\n\t                            source[name],\r\n\t                            target[name],\r\n\t                            time,\r\n\t                            delay\r\n\t                        );\r\n\t                    }\r\n\t                    else {\r\n\t                        objShallow[name] = target[name];\r\n\t                        propertyCount++;\r\n\t                    }\r\n\t                }\r\n\t                else if (target[name] != null) {\r\n\t                    // Attr directly if not has property\r\n\t                    // FIXME, if some property not needed for element ?\r\n\t                    if (!path) {\r\n\t                        this.attr(name, target[name]);\r\n\t                    }\r\n\t                    else {  // Shape or style\r\n\t                        var props = {};\r\n\t                        props[path] = {};\r\n\t                        props[path][name] = target[name];\r\n\t                        this.attr(props);\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\r\n\t            if (propertyCount > 0) {\r\n\t                this.animate(path, false)\r\n\t                    .when(time == null ? 500 : time, objShallow)\r\n\t                    .delay(delay || 0);\r\n\t            }\r\n\r\n\t            return this;\r\n\t        }\r\n\t    };\r\n\r\n\t    module.exports = Animatable;\r\n\r\n\r\n/***/ },\r\n/* 36 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t/**\r\n\t * @module echarts/animation/Animator\r\n\t */\r\n\r\n\r\n\t    var Clip = __webpack_require__(37);\r\n\t    var color = __webpack_require__(39);\r\n\t    var util = __webpack_require__(4);\r\n\t    var isArrayLike = util.isArrayLike;\r\n\r\n\t    var arraySlice = Array.prototype.slice;\r\n\r\n\t    function defaultGetter(target, key) {\r\n\t        return target[key];\r\n\t    }\r\n\r\n\t    function defaultSetter(target, key, value) {\r\n\t        target[key] = value;\r\n\t    }\r\n\r\n\t    /**\r\n\t     * @param  {number} p0\r\n\t     * @param  {number} p1\r\n\t     * @param  {number} percent\r\n\t     * @return {number}\r\n\t     */\r\n\t    function interpolateNumber(p0, p1, percent) {\r\n\t        return (p1 - p0) * percent + p0;\r\n\t    }\r\n\r\n\t    /**\r\n\t     * @param  {string} p0\r\n\t     * @param  {string} p1\r\n\t     * @param  {number} percent\r\n\t     * @return {string}\r\n\t     */\r\n\t    function interpolateString(p0, p1, percent) {\r\n\t        return percent > 0.5 ? p1 : p0;\r\n\t    }\r\n\r\n\t    /**\r\n\t     * @param  {Array} p0\r\n\t     * @param  {Array} p1\r\n\t     * @param  {number} percent\r\n\t     * @param  {Array} out\r\n\t     * @param  {number} arrDim\r\n\t     */\r\n\t    function interpolateArray(p0, p1, percent, out, arrDim) {\r\n\t        var len = p0.length;\r\n\t        if (arrDim == 1) {\r\n\t            for (var i = 0; i < len; i++) {\r\n\t                out[i] = interpolateNumber(p0[i], p1[i], percent);\r\n\t            }\r\n\t        }\r\n\t        else {\r\n\t            var len2 = p0[0].length;\r\n\t            for (var i = 0; i < len; i++) {\r\n\t                for (var j = 0; j < len2; j++) {\r\n\t                    out[i][j] = interpolateNumber(\r\n\t                        p0[i][j], p1[i][j], percent\r\n\t                    );\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t    }\r\n\r\n\t    // arr0 is source array, arr1 is target array.\r\n\t    // Do some preprocess to avoid error happened when interpolating from arr0 to arr1\r\n\t    function fillArr(arr0, arr1, arrDim) {\r\n\t        var arr0Len = arr0.length;\r\n\t        var arr1Len = arr1.length;\r\n\t        if (arr0Len !== arr1Len) {\r\n\t            // FIXME Not work for TypedArray\r\n\t            var isPreviousLarger = arr0Len > arr1Len;\r\n\t            if (isPreviousLarger) {\r\n\t                // Cut the previous\r\n\t                arr0.length = arr1Len;\r\n\t            }\r\n\t            else {\r\n\t                // Fill the previous\r\n\t                for (var i = arr0Len; i < arr1Len; i++) {\r\n\t                    arr0.push(\r\n\t                        arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i])\r\n\t                    );\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        // Handling NaN value\r\n\t        var len2 = arr0[0] && arr0[0].length;\r\n\t        for (var i = 0; i < arr0.length; i++) {\r\n\t            if (arrDim === 1) {\r\n\t                if (isNaN(arr0[i])) {\r\n\t                    arr0[i] = arr1[i];\r\n\t                }\r\n\t            }\r\n\t            else {\r\n\t                for (var j = 0; j < len2; j++) {\r\n\t                    if (isNaN(arr0[i][j])) {\r\n\t                        arr0[i][j] = arr1[i][j];\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t    }\r\n\r\n\t    /**\r\n\t     * @param  {Array} arr0\r\n\t     * @param  {Array} arr1\r\n\t     * @param  {number} arrDim\r\n\t     * @return {boolean}\r\n\t     */\r\n\t    function isArraySame(arr0, arr1, arrDim) {\r\n\t        if (arr0 === arr1) {\r\n\t            return true;\r\n\t        }\r\n\t        var len = arr0.length;\r\n\t        if (len !== arr1.length) {\r\n\t            return false;\r\n\t        }\r\n\t        if (arrDim === 1) {\r\n\t            for (var i = 0; i < len; i++) {\r\n\t                if (arr0[i] !== arr1[i]) {\r\n\t                    return false;\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        else {\r\n\t            var len2 = arr0[0].length;\r\n\t            for (var i = 0; i < len; i++) {\r\n\t                for (var j = 0; j < len2; j++) {\r\n\t                    if (arr0[i][j] !== arr1[i][j]) {\r\n\t                        return false;\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        return true;\r\n\t    }\r\n\r\n\t    /**\r\n\t     * Catmull Rom interpolate array\r\n\t     * @param  {Array} p0\r\n\t     * @param  {Array} p1\r\n\t     * @param  {Array} p2\r\n\t     * @param  {Array} p3\r\n\t     * @param  {number} t\r\n\t     * @param  {number} t2\r\n\t     * @param  {number} t3\r\n\t     * @param  {Array} out\r\n\t     * @param  {number} arrDim\r\n\t     */\r\n\t    function catmullRomInterpolateArray(\r\n\t        p0, p1, p2, p3, t, t2, t3, out, arrDim\r\n\t    ) {\r\n\t        var len = p0.length;\r\n\t        if (arrDim == 1) {\r\n\t            for (var i = 0; i < len; i++) {\r\n\t                out[i] = catmullRomInterpolate(\r\n\t                    p0[i], p1[i], p2[i], p3[i], t, t2, t3\r\n\t                );\r\n\t            }\r\n\t        }\r\n\t        else {\r\n\t            var len2 = p0[0].length;\r\n\t            for (var i = 0; i < len; i++) {\r\n\t                for (var j = 0; j < len2; j++) {\r\n\t                    out[i][j] = catmullRomInterpolate(\r\n\t                        p0[i][j], p1[i][j], p2[i][j], p3[i][j],\r\n\t                        t, t2, t3\r\n\t                    );\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t    }\r\n\r\n\t    /**\r\n\t     * Catmull Rom interpolate number\r\n\t     * @param  {number} p0\r\n\t     * @param  {number} p1\r\n\t     * @param  {number} p2\r\n\t     * @param  {number} p3\r\n\t     * @param  {number} t\r\n\t     * @param  {number} t2\r\n\t     * @param  {number} t3\r\n\t     * @return {number}\r\n\t     */\r\n\t    function catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\r\n\t        var v0 = (p2 - p0) * 0.5;\r\n\t        var v1 = (p3 - p1) * 0.5;\r\n\t        return (2 * (p1 - p2) + v0 + v1) * t3\r\n\t                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\r\n\t                + v0 * t + p1;\r\n\t    }\r\n\r\n\t    function cloneValue(value) {\r\n\t        if (isArrayLike(value)) {\r\n\t            var len = value.length;\r\n\t            if (isArrayLike(value[0])) {\r\n\t                var ret = [];\r\n\t                for (var i = 0; i < len; i++) {\r\n\t                    ret.push(arraySlice.call(value[i]));\r\n\t                }\r\n\t                return ret;\r\n\t            }\r\n\r\n\t            return arraySlice.call(value);\r\n\t        }\r\n\r\n\t        return value;\r\n\t    }\r\n\r\n\t    function rgba2String(rgba) {\r\n\t        rgba[0] = Math.floor(rgba[0]);\r\n\t        rgba[1] = Math.floor(rgba[1]);\r\n\t        rgba[2] = Math.floor(rgba[2]);\r\n\r\n\t        return 'rgba(' + rgba.join(',') + ')';\r\n\t    }\r\n\r\n\t    function createTrackClip (animator, easing, oneTrackDone, keyframes, propName) {\r\n\t        var getter = animator._getter;\r\n\t        var setter = animator._setter;\r\n\t        var useSpline = easing === 'spline';\r\n\r\n\t        var trackLen = keyframes.length;\r\n\t        if (!trackLen) {\r\n\t            return;\r\n\t        }\r\n\t        // Guess data type\r\n\t        var firstVal = keyframes[0].value;\r\n\t        var isValueArray = isArrayLike(firstVal);\r\n\t        var isValueColor = false;\r\n\t        var isValueString = false;\r\n\r\n\t        // For vertices morphing\r\n\t        var arrDim = (\r\n\t                isValueArray\r\n\t                && isArrayLike(firstVal[0])\r\n\t            )\r\n\t            ? 2 : 1;\r\n\t        var trackMaxTime;\r\n\t        // Sort keyframe as ascending\r\n\t        keyframes.sort(function(a, b) {\r\n\t            return a.time - b.time;\r\n\t        });\r\n\r\n\t        trackMaxTime = keyframes[trackLen - 1].time;\r\n\t        // Percents of each keyframe\r\n\t        var kfPercents = [];\r\n\t        // Value of each keyframe\r\n\t        var kfValues = [];\r\n\t        var prevValue = keyframes[0].value;\r\n\t        var isAllValueEqual = true;\r\n\t        for (var i = 0; i < trackLen; i++) {\r\n\t            kfPercents.push(keyframes[i].time / trackMaxTime);\r\n\t            // Assume value is a color when it is a string\r\n\t            var value = keyframes[i].value;\r\n\r\n\t            // Check if value is equal, deep check if value is array\r\n\t            if (!((isValueArray && isArraySame(value, prevValue, arrDim))\r\n\t                || (!isValueArray && value === prevValue))) {\r\n\t                isAllValueEqual = false;\r\n\t            }\r\n\t            prevValue = value;\r\n\r\n\t            // Try converting a string to a color array\r\n\t            if (typeof value == 'string') {\r\n\t                var colorArray = color.parse(value);\r\n\t                if (colorArray) {\r\n\t                    value = colorArray;\r\n\t                    isValueColor = true;\r\n\t                }\r\n\t                else {\r\n\t                    isValueString = true;\r\n\t                }\r\n\t            }\r\n\t            kfValues.push(value);\r\n\t        }\r\n\t        if (isAllValueEqual) {\r\n\t            return;\r\n\t        }\r\n\r\n\t        var lastValue = kfValues[trackLen - 1];\r\n\t        // Polyfill array and NaN value\r\n\t        for (var i = 0; i < trackLen - 1; i++) {\r\n\t            if (isValueArray) {\r\n\t                fillArr(kfValues[i], lastValue, arrDim);\r\n\t            }\r\n\t            else {\r\n\t                if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\r\n\t                    kfValues[i] = lastValue;\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim);\r\n\r\n\t        // Cache the key of last frame to speed up when\r\n\t        // animation playback is sequency\r\n\t        var lastFrame = 0;\r\n\t        var lastFramePercent = 0;\r\n\t        var start;\r\n\t        var w;\r\n\t        var p0;\r\n\t        var p1;\r\n\t        var p2;\r\n\t        var p3;\r\n\r\n\t        if (isValueColor) {\r\n\t            var rgba = [0, 0, 0, 0];\r\n\t        }\r\n\r\n\t        var onframe = function (target, percent) {\r\n\t            // Find the range keyframes\r\n\t            // kf1-----kf2---------current--------kf3\r\n\t            // find kf2 and kf3 and do interpolation\r\n\t            var frame;\r\n\t            if (percent < lastFramePercent) {\r\n\t                // Start from next key\r\n\t                // PENDING start from lastFrame ?\r\n\t                start = Math.min(lastFrame + 1, trackLen - 1);\r\n\t                for (frame = start; frame >= 0; frame--) {\r\n\t                    if (kfPercents[frame] <= percent) {\r\n\t                        break;\r\n\t                    }\r\n\t                }\r\n\t                // PENDING really need to do this ?\r\n\t                frame = Math.min(frame, trackLen - 2);\r\n\t            }\r\n\t            else {\r\n\t                for (frame = lastFrame; frame < trackLen; frame++) {\r\n\t                    if (kfPercents[frame] > percent) {\r\n\t                        break;\r\n\t                    }\r\n\t                }\r\n\t                frame = Math.min(frame - 1, trackLen - 2);\r\n\t            }\r\n\t            lastFrame = frame;\r\n\t            lastFramePercent = percent;\r\n\r\n\t            var range = (kfPercents[frame + 1] - kfPercents[frame]);\r\n\t            if (range === 0) {\r\n\t                return;\r\n\t            }\r\n\t            else {\r\n\t                w = (percent - kfPercents[frame]) / range;\r\n\t            }\r\n\t            if (useSpline) {\r\n\t                p1 = kfValues[frame];\r\n\t                p0 = kfValues[frame === 0 ? frame : frame - 1];\r\n\t                p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\r\n\t                p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\r\n\t                if (isValueArray) {\r\n\t                    catmullRomInterpolateArray(\r\n\t                        p0, p1, p2, p3, w, w * w, w * w * w,\r\n\t                        getter(target, propName),\r\n\t                        arrDim\r\n\t                    );\r\n\t                }\r\n\t                else {\r\n\t                    var value;\r\n\t                    if (isValueColor) {\r\n\t                        value = catmullRomInterpolateArray(\r\n\t                            p0, p1, p2, p3, w, w * w, w * w * w,\r\n\t                            rgba, 1\r\n\t                        );\r\n\t                        value = rgba2String(rgba);\r\n\t                    }\r\n\t                    else if (isValueString) {\r\n\t                        // String is step(0.5)\r\n\t                        return interpolateString(p1, p2, w);\r\n\t                    }\r\n\t                    else {\r\n\t                        value = catmullRomInterpolate(\r\n\t                            p0, p1, p2, p3, w, w * w, w * w * w\r\n\t                        );\r\n\t                    }\r\n\t                    setter(\r\n\t                        target,\r\n\t                        propName,\r\n\t                        value\r\n\t                    );\r\n\t                }\r\n\t            }\r\n\t            else {\r\n\t                if (isValueArray) {\r\n\t                    interpolateArray(\r\n\t                        kfValues[frame], kfValues[frame + 1], w,\r\n\t                        getter(target, propName),\r\n\t                        arrDim\r\n\t                    );\r\n\t                }\r\n\t                else {\r\n\t                    var value;\r\n\t                    if (isValueColor) {\r\n\t                        interpolateArray(\r\n\t                            kfValues[frame], kfValues[frame + 1], w,\r\n\t                            rgba, 1\r\n\t                        );\r\n\t                        value = rgba2String(rgba);\r\n\t                    }\r\n\t                    else if (isValueString) {\r\n\t                        // String is step(0.5)\r\n\t                        return interpolateString(kfValues[frame], kfValues[frame + 1], w);\r\n\t                    }\r\n\t                    else {\r\n\t                        value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\r\n\t                    }\r\n\t                    setter(\r\n\t                        target,\r\n\t                        propName,\r\n\t                        value\r\n\t                    );\r\n\t                }\r\n\t            }\r\n\t        };\r\n\r\n\t        var clip = new Clip({\r\n\t            target: animator._target,\r\n\t            life: trackMaxTime,\r\n\t            loop: animator._loop,\r\n\t            delay: animator._delay,\r\n\t            onframe: onframe,\r\n\t            ondestroy: oneTrackDone\r\n\t        });\r\n\r\n\t        if (easing && easing !== 'spline') {\r\n\t            clip.easing = easing;\r\n\t        }\r\n\r\n\t        return clip;\r\n\t    }\r\n\r\n\t    /**\r\n\t     * @alias module:zrender/animation/Animator\r\n\t     * @constructor\r\n\t     * @param {Object} target\r\n\t     * @param {boolean} loop\r\n\t     * @param {Function} getter\r\n\t     * @param {Function} setter\r\n\t     */\r\n\t    var Animator = function(target, loop, getter, setter) {\r\n\t        this._tracks = {};\r\n\t        this._target = target;\r\n\r\n\t        this._loop = loop || false;\r\n\r\n\t        this._getter = getter || defaultGetter;\r\n\t        this._setter = setter || defaultSetter;\r\n\r\n\t        this._clipCount = 0;\r\n\r\n\t        this._delay = 0;\r\n\r\n\t        this._doneList = [];\r\n\r\n\t        this._onframeList = [];\r\n\r\n\t        this._clipList = [];\r\n\t    };\r\n\r\n\t    Animator.prototype = {\r\n\t        /**\r\n\t         * 设置动画关键帧\r\n\t         * @param  {number} time 关键帧时间，单位是ms\r\n\t         * @param  {Object} props 关键帧的属性值，key-value表示\r\n\t         * @return {module:zrender/animation/Animator}\r\n\t         */\r\n\t        when: function(time /* ms */, props) {\r\n\t            var tracks = this._tracks;\r\n\t            for (var propName in props) {\r\n\t                if (!tracks[propName]) {\r\n\t                    tracks[propName] = [];\r\n\t                    // Invalid value\r\n\t                    var value = this._getter(this._target, propName);\r\n\t                    if (value == null) {\r\n\t                        // zrLog('Invalid property ' + propName);\r\n\t                        continue;\r\n\t                    }\r\n\t                    // If time is 0\r\n\t                    //  Then props is given initialize value\r\n\t                    // Else\r\n\t                    //  Initialize value from current prop value\r\n\t                    if (time !== 0) {\r\n\t                        tracks[propName].push({\r\n\t                            time: 0,\r\n\t                            value: cloneValue(value)\r\n\t                        });\r\n\t                    }\r\n\t                }\r\n\t                tracks[propName].push({\r\n\t                    time: time,\r\n\t                    value: props[propName]\r\n\t                });\r\n\t            }\r\n\t            return this;\r\n\t        },\r\n\t        /**\r\n\t         * 添加动画每一帧的回调函数\r\n\t         * @param  {Function} callback\r\n\t         * @return {module:zrender/animation/Animator}\r\n\t         */\r\n\t        during: function (callback) {\r\n\t            this._onframeList.push(callback);\r\n\t            return this;\r\n\t        },\r\n\r\n\t        _doneCallback: function () {\r\n\t            // Clear all tracks\r\n\t            this._tracks = {};\r\n\t            // Clear all clips\r\n\t            this._clipList.length = 0;\r\n\r\n\t            var doneList = this._doneList;\r\n\t            var len = doneList.length;\r\n\t            for (var i = 0; i < len; i++) {\r\n\t                doneList[i].call(this);\r\n\t            }\r\n\t        },\r\n\t        /**\r\n\t         * 开始执行动画\r\n\t         * @param  {string|Function} easing\r\n\t         *         动画缓动函数，详见{@link module:zrender/animation/easing}\r\n\t         * @return {module:zrender/animation/Animator}\r\n\t         */\r\n\t        start: function (easing) {\r\n\r\n\t            var self = this;\r\n\t            var clipCount = 0;\r\n\r\n\t            var oneTrackDone = function() {\r\n\t                clipCount--;\r\n\t                if (!clipCount) {\r\n\t                    self._doneCallback();\r\n\t                }\r\n\t            };\r\n\r\n\t            var lastClip;\r\n\t            for (var propName in this._tracks) {\r\n\t                var clip = createTrackClip(\r\n\t                    this, easing, oneTrackDone,\r\n\t                    this._tracks[propName], propName\r\n\t                );\r\n\t                if (clip) {\r\n\t                    this._clipList.push(clip);\r\n\t                    clipCount++;\r\n\r\n\t                    // If start after added to animation\r\n\t                    if (this.animation) {\r\n\t                        this.animation.addClip(clip);\r\n\t                    }\r\n\r\n\t                    lastClip = clip;\r\n\t                }\r\n\t            }\r\n\r\n\t            // Add during callback on the last clip\r\n\t            if (lastClip) {\r\n\t                var oldOnFrame = lastClip.onframe;\r\n\t                lastClip.onframe = function (target, percent) {\r\n\t                    oldOnFrame(target, percent);\r\n\r\n\t                    for (var i = 0; i < self._onframeList.length; i++) {\r\n\t                        self._onframeList[i](target, percent);\r\n\t                    }\r\n\t                };\r\n\t            }\r\n\r\n\t            if (!clipCount) {\r\n\t                this._doneCallback();\r\n\t            }\r\n\t            return this;\r\n\t        },\r\n\t        /**\r\n\t         * 停止动画\r\n\t         * @param {boolean} forwardToLast If move to last frame before stop\r\n\t         */\r\n\t        stop: function (forwardToLast) {\r\n\t            var clipList = this._clipList;\r\n\t            var animation = this.animation;\r\n\t            for (var i = 0; i < clipList.length; i++) {\r\n\t                var clip = clipList[i];\r\n\t                if (forwardToLast) {\r\n\t                    // Move to last frame before stop\r\n\t                    clip.onframe(this._target, 1);\r\n\t                }\r\n\t                animation && animation.removeClip(clip);\r\n\t            }\r\n\t            clipList.length = 0;\r\n\t        },\r\n\t        /**\r\n\t         * 设置动画延迟开始的时间\r\n\t         * @param  {number} time 单位ms\r\n\t         * @return {module:zrender/animation/Animator}\r\n\t         */\r\n\t        delay: function (time) {\r\n\t            this._delay = time;\r\n\t            return this;\r\n\t        },\r\n\t        /**\r\n\t         * 添加动画结束的回调\r\n\t         * @param  {Function} cb\r\n\t         * @return {module:zrender/animation/Animator}\r\n\t         */\r\n\t        done: function(cb) {\r\n\t            if (cb) {\r\n\t                this._doneList.push(cb);\r\n\t            }\r\n\t            return this;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * @return {Array.<module:zrender/animation/Clip>}\r\n\t         */\r\n\t        getClips: function () {\r\n\t            return this._clipList;\r\n\t        }\r\n\t    };\r\n\r\n\t    module.exports = Animator;\r\n\r\n\r\n/***/ },\r\n/* 37 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t/**\r\n\t * 动画主控制器\r\n\t * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\r\n\t * @config life(1000) 动画时长\r\n\t * @config delay(0) 动画延迟时间\r\n\t * @config loop(true)\r\n\t * @config gap(0) 循环的间隔时间\r\n\t * @config onframe\r\n\t * @config easing(optional)\r\n\t * @config ondestroy(optional)\r\n\t * @config onrestart(optional)\r\n\t *\r\n\t * TODO pause\r\n\t */\r\n\r\n\r\n\t    var easingFuncs = __webpack_require__(38);\r\n\r\n\t    function Clip(options) {\r\n\r\n\t        this._target = options.target;\r\n\r\n\t        // 生命周期\r\n\t        this._life = options.life || 1000;\r\n\t        // 延时\r\n\t        this._delay = options.delay || 0;\r\n\t        // 开始时间\r\n\t        // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\r\n\t        this._initialized = false;\r\n\r\n\t        // 是否循环\r\n\t        this.loop = options.loop == null ? false : options.loop;\r\n\r\n\t        this.gap = options.gap || 0;\r\n\r\n\t        this.easing = options.easing || 'Linear';\r\n\r\n\t        this.onframe = options.onframe;\r\n\t        this.ondestroy = options.ondestroy;\r\n\t        this.onrestart = options.onrestart;\r\n\t    }\r\n\r\n\t    Clip.prototype = {\r\n\r\n\t        constructor: Clip,\r\n\r\n\t        step: function (time) {\r\n\t            // Set startTime on first step, or _startTime may has milleseconds different between clips\r\n\t            // PENDING\r\n\t            if (!this._initialized) {\r\n\t                this._startTime = new Date().getTime() + this._delay;\r\n\t                this._initialized = true;\r\n\t            }\r\n\r\n\t            var percent = (time - this._startTime) / this._life;\r\n\r\n\t            // 还没开始\r\n\t            if (percent < 0) {\r\n\t                return;\r\n\t            }\r\n\r\n\t            percent = Math.min(percent, 1);\r\n\r\n\t            var easing = this.easing;\r\n\t            var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\r\n\t            var schedule = typeof easingFunc === 'function'\r\n\t                ? easingFunc(percent)\r\n\t                : percent;\r\n\r\n\t            this.fire('frame', schedule);\r\n\r\n\t            // 结束\r\n\t            if (percent == 1) {\r\n\t                if (this.loop) {\r\n\t                    this.restart();\r\n\t                    // 重新开始周期\r\n\t                    // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\r\n\t                    return 'restart';\r\n\t                }\r\n\r\n\t                // 动画完成将这个控制器标识为待删除\r\n\t                // 在Animation.update中进行批量删除\r\n\t                this._needsRemove = true;\r\n\t                return 'destroy';\r\n\t            }\r\n\r\n\t            return null;\r\n\t        },\r\n\r\n\t        restart: function() {\r\n\t            var time = new Date().getTime();\r\n\t            var remainder = (time - this._startTime) % this._life;\r\n\t            this._startTime = new Date().getTime() - remainder + this.gap;\r\n\r\n\t            this._needsRemove = false;\r\n\t        },\r\n\r\n\t        fire: function(eventType, arg) {\r\n\t            eventType = 'on' + eventType;\r\n\t            if (this[eventType]) {\r\n\t                this[eventType](this._target, arg);\r\n\t            }\r\n\t        }\r\n\t    };\r\n\r\n\t    module.exports = Clip;\r\n\r\n\r\n\r\n/***/ },\r\n/* 38 */\r\n/***/ function(module, exports) {\r\n\r\n\t/**\r\n\t * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\r\n\t * @see http://sole.github.io/tween.js/examples/03_graphs.html\r\n\t * @exports zrender/animation/easing\r\n\t */\r\n\r\n\t    var easing = {\r\n\t        /**\r\n\t        * @param {number} k\r\n\t        * @return {number}\r\n\t        */\r\n\t        linear: function (k) {\r\n\t            return k;\r\n\t        },\r\n\r\n\t        /**\r\n\t        * @param {number} k\r\n\t        * @return {number}\r\n\t        */\r\n\t        quadraticIn: function (k) {\r\n\t            return k * k;\r\n\t        },\r\n\t        /**\r\n\t        * @param {number} k\r\n\t        * @return {number}\r\n\t        */\r\n\t        quadraticOut: function (k) {\r\n\t            return k * (2 - k);\r\n\t        },\r\n\t        /**\r\n\t        * @param {number} k\r\n\t        * @return {number}\r\n\t        */\r\n\t        quadraticInOut: function (k) {\r\n\t            if ((k *= 2) < 1) {\r\n\t                return 0.5 * k * k;\r\n\t            }\r\n\t            return -0.5 * (--k * (k - 2) - 1);\r\n\t        },\r\n\r\n\t        // 三次方的缓动（t^3）\r\n\t        /**\r\n\t        * @param {number} k\r\n\t        * @return {number}\r\n\t        */\r\n\t        cubicIn: function (k) {\r\n\t            return k * k * k;\r\n\t        },\r\n\t        /**\r\n\t        * @param {number} k\r\n\t        * @return {number}\r\n\t        */\r\n\t        cubicOut: function (k) {\r\n\t            return --k * k * k + 1;\r\n\t        },\r\n\t        /**\r\n\t        * @param {number} k\r\n\t        * @return {number}\r\n\t        */\r\n\t        cubicInOut: function (k) {\r\n\t            if ((k *= 2) < 1) {\r\n\t                return 0.5 * k * k * k;\r\n\t            }\r\n\t            return 0.5 * ((k -= 2) * k * k + 2);\r\n\t        },\r\n\r\n\t        // 四次方的缓动（t^4）\r\n\t        /**\r\n\t        * @param {number} k\r\n\t        * @return {number}\r\n\t        */\r\n\t        quarticIn: function (k) {\r\n\t            return k * k * k * k;\r\n\t        },\r\n\t        /**\r\n\t        * @param {number} k\r\n\t        * @return {number}\r\n\t        */\r\n\t        quarticOut: function (k) {\r\n\t            return 1 - (--k * k * k * k);\r\n\t        },\r\n\t        /**\r\n\t        * @param {number} k\r\n\t        * @return {number}\r\n\t        */\r\n\t        quarticInOut: function (k) {\r\n\t            if ((k *= 2) < 1) {\r\n\t                return 0.5 * k * k * k * k;\r\n\t            }\r\n\t            return -0.5 * ((k -= 2) * k * k * k - 2);\r\n\t        },\r\n\r\n\t        // 五次方的缓动（t^5）\r\n\t        /**\r\n\t        * @param {number} k\r\n\t        * @return {number}\r\n\t        */\r\n\t        quinticIn: function (k) {\r\n\t            return k * k * k * k * k;\r\n\t        },\r\n\t        /**\r\n\t        * @param {number} k\r\n\t        * @return {number}\r\n\t        */\r\n\t        quinticOut: function (k) {\r\n\t            return --k * k * k * k * k + 1;\r\n\t        },\r\n\t        /**\r\n\t        * @param {number} k\r\n\t        * @return {number}\r\n\t        */\r\n\t        quinticInOut: function (k) {\r\n\t            if ((k *= 2) < 1) {\r\n\t                return 0.5 * k * k * k * k * k;\r\n\t            }\r\n\t            return 0.5 * ((k -= 2) * k * k * k * k + 2);\r\n\t        },\r\n\r\n\t        // 正弦曲线的缓动（sin(t)）\r\n\t        /**\r\n\t        * @param {number} k\r\n\t        * @return {number}\r\n\t        */\r\n\t        sinusoidalIn: function (k) {\r\n\t            return 1 - Math.cos(k * Math.PI / 2);\r\n\t        },\r\n\t        /**\r\n\t        * @param {number} k\r\n\t        * @return {number}\r\n\t        */\r\n\t        sinusoidalOut: function (k) {\r\n\t            return Math.sin(k * Math.PI / 2);\r\n\t        },\r\n\t        /**\r\n\t        * @param {number} k\r\n\t        * @return {number}\r\n\t        */\r\n\t        sinusoidalInOut: function (k) {\r\n\t            return 0.5 * (1 - Math.cos(Math.PI * k));\r\n\t        },\r\n\r\n\t        // 指数曲线的缓动（2^t）\r\n\t        /**\r\n\t        * @param {number} k\r\n\t        * @return {number}\r\n\t        */\r\n\t        exponentialIn: function (k) {\r\n\t            return k === 0 ? 0 : Math.pow(1024, k - 1);\r\n\t        },\r\n\t        /**\r\n\t        * @param {number} k\r\n\t        * @return {number}\r\n\t        */\r\n\t        exponentialOut: function (k) {\r\n\t            return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\r\n\t        },\r\n\t        /**\r\n\t        * @param {number} k\r\n\t        * @return {number}\r\n\t        */\r\n\t        exponentialInOut: function (k) {\r\n\t            if (k === 0) {\r\n\t                return 0;\r\n\t            }\r\n\t            if (k === 1) {\r\n\t                return 1;\r\n\t            }\r\n\t            if ((k *= 2) < 1) {\r\n\t                return 0.5 * Math.pow(1024, k - 1);\r\n\t            }\r\n\t            return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\r\n\t        },\r\n\r\n\t        // 圆形曲线的缓动（sqrt(1-t^2)）\r\n\t        /**\r\n\t        * @param {number} k\r\n\t        * @return {number}\r\n\t        */\r\n\t        circularIn: function (k) {\r\n\t            return 1 - Math.sqrt(1 - k * k);\r\n\t        },\r\n\t        /**\r\n\t        * @param {number} k\r\n\t        * @return {number}\r\n\t        */\r\n\t        circularOut: function (k) {\r\n\t            return Math.sqrt(1 - (--k * k));\r\n\t        },\r\n\t        /**\r\n\t        * @param {number} k\r\n\t        * @return {number}\r\n\t        */\r\n\t        circularInOut: function (k) {\r\n\t            if ((k *= 2) < 1) {\r\n\t                return -0.5 * (Math.sqrt(1 - k * k) - 1);\r\n\t            }\r\n\t            return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\r\n\t        },\r\n\r\n\t        // 创建类似于弹簧在停止前来回振荡的动画\r\n\t        /**\r\n\t        * @param {number} k\r\n\t        * @return {number}\r\n\t        */\r\n\t        elasticIn: function (k) {\r\n\t            var s;\r\n\t            var a = 0.1;\r\n\t            var p = 0.4;\r\n\t            if (k === 0) {\r\n\t                return 0;\r\n\t            }\r\n\t            if (k === 1) {\r\n\t                return 1;\r\n\t            }\r\n\t            if (!a || a < 1) {\r\n\t                a = 1; s = p / 4;\r\n\t            }\r\n\t            else {\r\n\t                s = p * Math.asin(1 / a) / (2 * Math.PI);\r\n\t            }\r\n\t            return -(a * Math.pow(2, 10 * (k -= 1)) *\r\n\t                        Math.sin((k - s) * (2 * Math.PI) / p));\r\n\t        },\r\n\t        /**\r\n\t        * @param {number} k\r\n\t        * @return {number}\r\n\t        */\r\n\t        elasticOut: function (k) {\r\n\t            var s;\r\n\t            var a = 0.1;\r\n\t            var p = 0.4;\r\n\t            if (k === 0) {\r\n\t                return 0;\r\n\t            }\r\n\t            if (k === 1) {\r\n\t                return 1;\r\n\t            }\r\n\t            if (!a || a < 1) {\r\n\t                a = 1; s = p / 4;\r\n\t            }\r\n\t            else {\r\n\t                s = p * Math.asin(1 / a) / (2 * Math.PI);\r\n\t            }\r\n\t            return (a * Math.pow(2, -10 * k) *\r\n\t                    Math.sin((k - s) * (2 * Math.PI) / p) + 1);\r\n\t        },\r\n\t        /**\r\n\t        * @param {number} k\r\n\t        * @return {number}\r\n\t        */\r\n\t        elasticInOut: function (k) {\r\n\t            var s;\r\n\t            var a = 0.1;\r\n\t            var p = 0.4;\r\n\t            if (k === 0) {\r\n\t                return 0;\r\n\t            }\r\n\t            if (k === 1) {\r\n\t                return 1;\r\n\t            }\r\n\t            if (!a || a < 1) {\r\n\t                a = 1; s = p / 4;\r\n\t            }\r\n\t            else {\r\n\t                s = p * Math.asin(1 / a) / (2 * Math.PI);\r\n\t            }\r\n\t            if ((k *= 2) < 1) {\r\n\t                return -0.5 * (a * Math.pow(2, 10 * (k -= 1))\r\n\t                    * Math.sin((k - s) * (2 * Math.PI) / p));\r\n\t            }\r\n\t            return a * Math.pow(2, -10 * (k -= 1))\r\n\t                    * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\r\n\r\n\t        },\r\n\r\n\t        // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\r\n\t        /**\r\n\t        * @param {number} k\r\n\t        * @return {number}\r\n\t        */\r\n\t        backIn: function (k) {\r\n\t            var s = 1.70158;\r\n\t            return k * k * ((s + 1) * k - s);\r\n\t        },\r\n\t        /**\r\n\t        * @param {number} k\r\n\t        * @return {number}\r\n\t        */\r\n\t        backOut: function (k) {\r\n\t            var s = 1.70158;\r\n\t            return --k * k * ((s + 1) * k + s) + 1;\r\n\t        },\r\n\t        /**\r\n\t        * @param {number} k\r\n\t        * @return {number}\r\n\t        */\r\n\t        backInOut: function (k) {\r\n\t            var s = 1.70158 * 1.525;\r\n\t            if ((k *= 2) < 1) {\r\n\t                return 0.5 * (k * k * ((s + 1) * k - s));\r\n\t            }\r\n\t            return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\r\n\t        },\r\n\r\n\t        // 创建弹跳效果\r\n\t        /**\r\n\t        * @param {number} k\r\n\t        * @return {number}\r\n\t        */\r\n\t        bounceIn: function (k) {\r\n\t            return 1 - easing.bounceOut(1 - k);\r\n\t        },\r\n\t        /**\r\n\t        * @param {number} k\r\n\t        * @return {number}\r\n\t        */\r\n\t        bounceOut: function (k) {\r\n\t            if (k < (1 / 2.75)) {\r\n\t                return 7.5625 * k * k;\r\n\t            }\r\n\t            else if (k < (2 / 2.75)) {\r\n\t                return 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\r\n\t            }\r\n\t            else if (k < (2.5 / 2.75)) {\r\n\t                return 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\r\n\t            }\r\n\t            else {\r\n\t                return 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\r\n\t            }\r\n\t        },\r\n\t        /**\r\n\t        * @param {number} k\r\n\t        * @return {number}\r\n\t        */\r\n\t        bounceInOut: function (k) {\r\n\t            if (k < 0.5) {\r\n\t                return easing.bounceIn(k * 2) * 0.5;\r\n\t            }\r\n\t            return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\r\n\t        }\r\n\t    };\r\n\r\n\t    module.exports = easing;\r\n\r\n\r\n\r\n\r\n/***/ },\r\n/* 39 */\r\n/***/ function(module, exports) {\r\n\r\n\t/**\r\n\t * @module zrender/tool/color\r\n\t */\r\n\r\n\r\n\t    var kCSSColorTable = {\r\n\t        'transparent': [0,0,0,0], 'aliceblue': [240,248,255,1],\r\n\t        'antiquewhite': [250,235,215,1], 'aqua': [0,255,255,1],\r\n\t        'aquamarine': [127,255,212,1], 'azure': [240,255,255,1],\r\n\t        'beige': [245,245,220,1], 'bisque': [255,228,196,1],\r\n\t        'black': [0,0,0,1], 'blanchedalmond': [255,235,205,1],\r\n\t        'blue': [0,0,255,1], 'blueviolet': [138,43,226,1],\r\n\t        'brown': [165,42,42,1], 'burlywood': [222,184,135,1],\r\n\t        'cadetblue': [95,158,160,1], 'chartreuse': [127,255,0,1],\r\n\t        'chocolate': [210,105,30,1], 'coral': [255,127,80,1],\r\n\t        'cornflowerblue': [100,149,237,1], 'cornsilk': [255,248,220,1],\r\n\t        'crimson': [220,20,60,1], 'cyan': [0,255,255,1],\r\n\t        'darkblue': [0,0,139,1], 'darkcyan': [0,139,139,1],\r\n\t        'darkgoldenrod': [184,134,11,1], 'darkgray': [169,169,169,1],\r\n\t        'darkgreen': [0,100,0,1], 'darkgrey': [169,169,169,1],\r\n\t        'darkkhaki': [189,183,107,1], 'darkmagenta': [139,0,139,1],\r\n\t        'darkolivegreen': [85,107,47,1], 'darkorange': [255,140,0,1],\r\n\t        'darkorchid': [153,50,204,1], 'darkred': [139,0,0,1],\r\n\t        'darksalmon': [233,150,122,1], 'darkseagreen': [143,188,143,1],\r\n\t        'darkslateblue': [72,61,139,1], 'darkslategray': [47,79,79,1],\r\n\t        'darkslategrey': [47,79,79,1], 'darkturquoise': [0,206,209,1],\r\n\t        'darkviolet': [148,0,211,1], 'deeppink': [255,20,147,1],\r\n\t        'deepskyblue': [0,191,255,1], 'dimgray': [105,105,105,1],\r\n\t        'dimgrey': [105,105,105,1], 'dodgerblue': [30,144,255,1],\r\n\t        'firebrick': [178,34,34,1], 'floralwhite': [255,250,240,1],\r\n\t        'forestgreen': [34,139,34,1], 'fuchsia': [255,0,255,1],\r\n\t        'gainsboro': [220,220,220,1], 'ghostwhite': [248,248,255,1],\r\n\t        'gold': [255,215,0,1], 'goldenrod': [218,165,32,1],\r\n\t        'gray': [128,128,128,1], 'green': [0,128,0,1],\r\n\t        'greenyellow': [173,255,47,1], 'grey': [128,128,128,1],\r\n\t        'honeydew': [240,255,240,1], 'hotpink': [255,105,180,1],\r\n\t        'indianred': [205,92,92,1], 'indigo': [75,0,130,1],\r\n\t        'ivory': [255,255,240,1], 'khaki': [240,230,140,1],\r\n\t        'lavender': [230,230,250,1], 'lavenderblush': [255,240,245,1],\r\n\t        'lawngreen': [124,252,0,1], 'lemonchiffon': [255,250,205,1],\r\n\t        'lightblue': [173,216,230,1], 'lightcoral': [240,128,128,1],\r\n\t        'lightcyan': [224,255,255,1], 'lightgoldenrodyellow': [250,250,210,1],\r\n\t        'lightgray': [211,211,211,1], 'lightgreen': [144,238,144,1],\r\n\t        'lightgrey': [211,211,211,1], 'lightpink': [255,182,193,1],\r\n\t        'lightsalmon': [255,160,122,1], 'lightseagreen': [32,178,170,1],\r\n\t        'lightskyblue': [135,206,250,1], 'lightslategray': [119,136,153,1],\r\n\t        'lightslategrey': [119,136,153,1], 'lightsteelblue': [176,196,222,1],\r\n\t        'lightyellow': [255,255,224,1], 'lime': [0,255,0,1],\r\n\t        'limegreen': [50,205,50,1], 'linen': [250,240,230,1],\r\n\t        'magenta': [255,0,255,1], 'maroon': [128,0,0,1],\r\n\t        'mediumaquamarine': [102,205,170,1], 'mediumblue': [0,0,205,1],\r\n\t        'mediumorchid': [186,85,211,1], 'mediumpurple': [147,112,219,1],\r\n\t        'mediumseagreen': [60,179,113,1], 'mediumslateblue': [123,104,238,1],\r\n\t        'mediumspringgreen': [0,250,154,1], 'mediumturquoise': [72,209,204,1],\r\n\t        'mediumvioletred': [199,21,133,1], 'midnightblue': [25,25,112,1],\r\n\t        'mintcream': [245,255,250,1], 'mistyrose': [255,228,225,1],\r\n\t        'moccasin': [255,228,181,1], 'navajowhite': [255,222,173,1],\r\n\t        'navy': [0,0,128,1], 'oldlace': [253,245,230,1],\r\n\t        'olive': [128,128,0,1], 'olivedrab': [107,142,35,1],\r\n\t        'orange': [255,165,0,1], 'orangered': [255,69,0,1],\r\n\t        'orchid': [218,112,214,1], 'palegoldenrod': [238,232,170,1],\r\n\t        'palegreen': [152,251,152,1], 'paleturquoise': [175,238,238,1],\r\n\t        'palevioletred': [219,112,147,1], 'papayawhip': [255,239,213,1],\r\n\t        'peachpuff': [255,218,185,1], 'peru': [205,133,63,1],\r\n\t        'pink': [255,192,203,1], 'plum': [221,160,221,1],\r\n\t        'powderblue': [176,224,230,1], 'purple': [128,0,128,1],\r\n\t        'red': [255,0,0,1], 'rosybrown': [188,143,143,1],\r\n\t        'royalblue': [65,105,225,1], 'saddlebrown': [139,69,19,1],\r\n\t        'salmon': [250,128,114,1], 'sandybrown': [244,164,96,1],\r\n\t        'seagreen': [46,139,87,1], 'seashell': [255,245,238,1],\r\n\t        'sienna': [160,82,45,1], 'silver': [192,192,192,1],\r\n\t        'skyblue': [135,206,235,1], 'slateblue': [106,90,205,1],\r\n\t        'slategray': [112,128,144,1], 'slategrey': [112,128,144,1],\r\n\t        'snow': [255,250,250,1], 'springgreen': [0,255,127,1],\r\n\t        'steelblue': [70,130,180,1], 'tan': [210,180,140,1],\r\n\t        'teal': [0,128,128,1], 'thistle': [216,191,216,1],\r\n\t        'tomato': [255,99,71,1], 'turquoise': [64,224,208,1],\r\n\t        'violet': [238,130,238,1], 'wheat': [245,222,179,1],\r\n\t        'white': [255,255,255,1], 'whitesmoke': [245,245,245,1],\r\n\t        'yellow': [255,255,0,1], 'yellowgreen': [154,205,50,1]\r\n\t    };\r\n\r\n\t    function clampCssByte(i) {  // Clamp to integer 0 .. 255.\r\n\t        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\r\n\t        return i < 0 ? 0 : i > 255 ? 255 : i;\r\n\t    }\r\n\r\n\t    function clampCssAngle(i) {  // Clamp to integer 0 .. 360.\r\n\t        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\r\n\t        return i < 0 ? 0 : i > 360 ? 360 : i;\r\n\t    }\r\n\r\n\t    function clampCssFloat(f) {  // Clamp to float 0.0 .. 1.0.\r\n\t        return f < 0 ? 0 : f > 1 ? 1 : f;\r\n\t    }\r\n\r\n\t    function parseCssInt(str) {  // int or percentage.\r\n\t        if (str.length && str.charAt(str.length - 1) === '%') {\r\n\t            return clampCssByte(parseFloat(str) / 100 * 255);\r\n\t        }\r\n\t        return clampCssByte(parseInt(str, 10));\r\n\t    }\r\n\r\n\t    function parseCssFloat(str) {  // float or percentage.\r\n\t        if (str.length && str.charAt(str.length - 1) === '%') {\r\n\t            return clampCssFloat(parseFloat(str) / 100);\r\n\t        }\r\n\t        return clampCssFloat(parseFloat(str));\r\n\t    }\r\n\r\n\t    function cssHueToRgb(m1, m2, h) {\r\n\t        if (h < 0) {\r\n\t            h += 1;\r\n\t        }\r\n\t        else if (h > 1) {\r\n\t            h -= 1;\r\n\t        }\r\n\r\n\t        if (h * 6 < 1) {\r\n\t            return m1 + (m2 - m1) * h * 6;\r\n\t        }\r\n\t        if (h * 2 < 1) {\r\n\t            return m2;\r\n\t        }\r\n\t        if (h * 3 < 2) {\r\n\t            return m1 + (m2 - m1) * (2/3 - h) * 6;\r\n\t        }\r\n\t        return m1;\r\n\t    }\r\n\r\n\t    function lerp(a, b, p) {\r\n\t        return a + (b - a) * p;\r\n\t    }\r\n\r\n\t    /**\r\n\t     * @param {string} colorStr\r\n\t     * @return {Array.<number>}\r\n\t     * @memberOf module:zrender/util/color\r\n\t     */\r\n\t    function parse(colorStr) {\r\n\t        if (!colorStr) {\r\n\t            return;\r\n\t        }\r\n\t        // colorStr may be not string\r\n\t        colorStr = colorStr + '';\r\n\t        // Remove all whitespace, not compliant, but should just be more accepting.\r\n\t        var str = colorStr.replace(/ /g, '').toLowerCase();\r\n\r\n\t        // Color keywords (and transparent) lookup.\r\n\t        if (str in kCSSColorTable) {\r\n\t            return kCSSColorTable[str].slice();  // dup.\r\n\t        }\r\n\r\n\t        // #abc and #abc123 syntax.\r\n\t        if (str.charAt(0) === '#') {\r\n\t            if (str.length === 4) {\r\n\t                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\r\n\t                if (!(iv >= 0 && iv <= 0xfff)) {\r\n\t                    return;  // Covers NaN.\r\n\t                }\r\n\t                return [\r\n\t                    ((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\r\n\t                    (iv & 0xf0) | ((iv & 0xf0) >> 4),\r\n\t                    (iv & 0xf) | ((iv & 0xf) << 4),\r\n\t                    1\r\n\t                ];\r\n\t            }\r\n\t            else if (str.length === 7) {\r\n\t                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\r\n\t                if (!(iv >= 0 && iv <= 0xffffff)) {\r\n\t                    return;  // Covers NaN.\r\n\t                }\r\n\t                return [\r\n\t                    (iv & 0xff0000) >> 16,\r\n\t                    (iv & 0xff00) >> 8,\r\n\t                    iv & 0xff,\r\n\t                    1\r\n\t                ];\r\n\t            }\r\n\r\n\t            return;\r\n\t        }\r\n\t        var op = str.indexOf('('), ep = str.indexOf(')');\r\n\t        if (op !== -1 && ep + 1 === str.length) {\r\n\t            var fname = str.substr(0, op);\r\n\t            var params = str.substr(op + 1, ep - (op + 1)).split(',');\r\n\t            var alpha = 1;  // To allow case fallthrough.\r\n\t            switch (fname) {\r\n\t                case 'rgba':\r\n\t                    if (params.length !== 4) {\r\n\t                        return;\r\n\t                    }\r\n\t                    alpha = parseCssFloat(params.pop()); // jshint ignore:line\r\n\t                // Fall through.\r\n\t                case 'rgb':\r\n\t                    if (params.length !== 3) {\r\n\t                        return;\r\n\t                    }\r\n\t                    return [\r\n\t                        parseCssInt(params[0]),\r\n\t                        parseCssInt(params[1]),\r\n\t                        parseCssInt(params[2]),\r\n\t                        alpha\r\n\t                    ];\r\n\t                case 'hsla':\r\n\t                    if (params.length !== 4) {\r\n\t                        return;\r\n\t                    }\r\n\t                    params[3] = parseCssFloat(params[3]);\r\n\t                    return hsla2rgba(params);\r\n\t                case 'hsl':\r\n\t                    if (params.length !== 3) {\r\n\t                        return;\r\n\t                    }\r\n\t                    return hsla2rgba(params);\r\n\t                default:\r\n\t                    return;\r\n\t            }\r\n\t        }\r\n\r\n\t        return;\r\n\t    }\r\n\r\n\t    /**\r\n\t     * @param {Array.<number>} hsla\r\n\t     * @return {Array.<number>} rgba\r\n\t     */\r\n\t    function hsla2rgba(hsla) {\r\n\t        var h = (((parseFloat(hsla[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\r\n\t        // NOTE(deanm): According to the CSS spec s/l should only be\r\n\t        // percentages, but we don't bother and let float or percentage.\r\n\t        var s = parseCssFloat(hsla[1]);\r\n\t        var l = parseCssFloat(hsla[2]);\r\n\t        var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\r\n\t        var m1 = l * 2 - m2;\r\n\r\n\t        var rgba = [\r\n\t            clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255),\r\n\t            clampCssByte(cssHueToRgb(m1, m2, h) * 255),\r\n\t            clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255)\r\n\t        ];\r\n\r\n\t        if (hsla.length === 4) {\r\n\t            rgba[3] = hsla[3];\r\n\t        }\r\n\r\n\t        return rgba;\r\n\t    }\r\n\r\n\t    /**\r\n\t     * @param {Array.<number>} rgba\r\n\t     * @return {Array.<number>} hsla\r\n\t     */\r\n\t    function rgba2hsla(rgba) {\r\n\t        if (!rgba) {\r\n\t            return;\r\n\t        }\r\n\r\n\t        // RGB from 0 to 255\r\n\t        var R = rgba[0] / 255;\r\n\t        var G = rgba[1] / 255;\r\n\t        var B = rgba[2] / 255;\r\n\r\n\t        var vMin = Math.min(R, G, B); // Min. value of RGB\r\n\t        var vMax = Math.max(R, G, B); // Max. value of RGB\r\n\t        var delta = vMax - vMin; // Delta RGB value\r\n\r\n\t        var L = (vMax + vMin) / 2;\r\n\t        var H;\r\n\t        var S;\r\n\t        // HSL results from 0 to 1\r\n\t        if (delta === 0) {\r\n\t            H = 0;\r\n\t            S = 0;\r\n\t        }\r\n\t        else {\r\n\t            if (L < 0.5) {\r\n\t                S = delta / (vMax + vMin);\r\n\t            }\r\n\t            else {\r\n\t                S = delta / (2 - vMax - vMin);\r\n\t            }\r\n\r\n\t            var deltaR = (((vMax - R) / 6) + (delta / 2)) / delta;\r\n\t            var deltaG = (((vMax - G) / 6) + (delta / 2)) / delta;\r\n\t            var deltaB = (((vMax - B) / 6) + (delta / 2)) / delta;\r\n\r\n\t            if (R === vMax) {\r\n\t                H = deltaB - deltaG;\r\n\t            }\r\n\t            else if (G === vMax) {\r\n\t                H = (1 / 3) + deltaR - deltaB;\r\n\t            }\r\n\t            else if (B === vMax) {\r\n\t                H = (2 / 3) + deltaG - deltaR;\r\n\t            }\r\n\r\n\t            if (H < 0) {\r\n\t                H += 1;\r\n\t            }\r\n\r\n\t            if (H > 1) {\r\n\t                H -= 1;\r\n\t            }\r\n\t        }\r\n\r\n\t        var hsla = [H * 360, S, L];\r\n\r\n\t        if (rgba[3] != null) {\r\n\t            hsla.push(rgba[3]);\r\n\t        }\r\n\r\n\t        return hsla;\r\n\t    }\r\n\r\n\t    /**\r\n\t     * @param {string} color\r\n\t     * @param {number} level\r\n\t     * @return {string}\r\n\t     * @memberOf module:zrender/util/color\r\n\t     */\r\n\t    function lift(color, level) {\r\n\t        var colorArr = parse(color);\r\n\t        if (colorArr) {\r\n\t            for (var i = 0; i < 3; i++) {\r\n\t                if (level < 0) {\r\n\t                    colorArr[i] = colorArr[i] * (1 - level) | 0;\r\n\t                }\r\n\t                else {\r\n\t                    colorArr[i] = ((255 - colorArr[i]) * level + colorArr[i]) | 0;\r\n\t                }\r\n\t            }\r\n\t            return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\r\n\t        }\r\n\t    }\r\n\r\n\t    /**\r\n\t     * @param {string} color\r\n\t     * @return {string}\r\n\t     * @memberOf module:zrender/util/color\r\n\t     */\r\n\t    function toHex(color, level) {\r\n\t        var colorArr = parse(color);\r\n\t        if (colorArr) {\r\n\t            return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + (+colorArr[2])).toString(16).slice(1);\r\n\t        }\r\n\t    }\r\n\r\n\t    /**\r\n\t     * Map value to color. Faster than mapToColor methods because color is represented by rgba array\r\n\t     * @param {number} normalizedValue A float between 0 and 1.\r\n\t     * @param {Array.<Array.<number>>} colors List of rgba color array\r\n\t     * @param {Array.<number>} [out] Mapped gba color array\r\n\t     * @return {Array.<number>}\r\n\t     */\r\n\t    function fastMapToColor(normalizedValue, colors, out) {\r\n\t        if (!(colors && colors.length)\r\n\t            || !(normalizedValue >= 0 && normalizedValue <= 1)\r\n\t        ) {\r\n\t            return;\r\n\t        }\r\n\t        out = out || [0, 0, 0, 0];\r\n\t        var value = normalizedValue * (colors.length - 1);\r\n\t        var leftIndex = Math.floor(value);\r\n\t        var rightIndex = Math.ceil(value);\r\n\t        var leftColor = colors[leftIndex];\r\n\t        var rightColor = colors[rightIndex];\r\n\t        var dv = value - leftIndex;\r\n\t        out[0] = clampCssByte(lerp(leftColor[0], rightColor[0], dv));\r\n\t        out[1] = clampCssByte(lerp(leftColor[1], rightColor[1], dv));\r\n\t        out[2] = clampCssByte(lerp(leftColor[2], rightColor[2], dv));\r\n\t        out[3] = clampCssByte(lerp(leftColor[3], rightColor[3], dv));\r\n\t        return out;\r\n\t    }\r\n\t    /**\r\n\t     * @param {number} normalizedValue A float between 0 and 1.\r\n\t     * @param {Array.<string>} colors Color list.\r\n\t     * @param {boolean=} fullOutput Default false.\r\n\t     * @return {(string|Object)} Result color. If fullOutput,\r\n\t     *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\r\n\t     * @memberOf module:zrender/util/color\r\n\t     */\r\n\t    function mapToColor(normalizedValue, colors, fullOutput) {\r\n\t        if (!(colors && colors.length)\r\n\t            || !(normalizedValue >= 0 && normalizedValue <= 1)\r\n\t        ) {\r\n\t            return;\r\n\t        }\r\n\r\n\t        var value = normalizedValue * (colors.length - 1);\r\n\t        var leftIndex = Math.floor(value);\r\n\t        var rightIndex = Math.ceil(value);\r\n\t        var leftColor = parse(colors[leftIndex]);\r\n\t        var rightColor = parse(colors[rightIndex]);\r\n\t        var dv = value - leftIndex;\r\n\r\n\t        var color = stringify(\r\n\t            [\r\n\t                clampCssByte(lerp(leftColor[0], rightColor[0], dv)),\r\n\t                clampCssByte(lerp(leftColor[1], rightColor[1], dv)),\r\n\t                clampCssByte(lerp(leftColor[2], rightColor[2], dv)),\r\n\t                clampCssFloat(lerp(leftColor[3], rightColor[3], dv))\r\n\t            ],\r\n\t            'rgba'\r\n\t        );\r\n\r\n\t        return fullOutput\r\n\t            ? {\r\n\t                color: color,\r\n\t                leftIndex: leftIndex,\r\n\t                rightIndex: rightIndex,\r\n\t                value: value\r\n\t            }\r\n\t            : color;\r\n\t    }\r\n\r\n\t    /**\r\n\t     * @param {string} color\r\n\t     * @param {number=} h 0 ~ 360, ignore when null.\r\n\t     * @param {number=} s 0 ~ 1, ignore when null.\r\n\t     * @param {number=} l 0 ~ 1, ignore when null.\r\n\t     * @return {string} Color string in rgba format.\r\n\t     * @memberOf module:zrender/util/color\r\n\t     */\r\n\t    function modifyHSL(color, h, s, l) {\r\n\t        color = parse(color);\r\n\r\n\t        if (color) {\r\n\t            color = rgba2hsla(color);\r\n\t            h != null && (color[0] = clampCssAngle(h));\r\n\t            s != null && (color[1] = parseCssFloat(s));\r\n\t            l != null && (color[2] = parseCssFloat(l));\r\n\r\n\t            return stringify(hsla2rgba(color), 'rgba');\r\n\t        }\r\n\t    }\r\n\r\n\t    /**\r\n\t     * @param {string} color\r\n\t     * @param {number=} alpha 0 ~ 1\r\n\t     * @return {string} Color string in rgba format.\r\n\t     * @memberOf module:zrender/util/color\r\n\t     */\r\n\t    function modifyAlpha(color, alpha) {\r\n\t        color = parse(color);\r\n\r\n\t        if (color && alpha != null) {\r\n\t            color[3] = clampCssFloat(alpha);\r\n\t            return stringify(color, 'rgba');\r\n\t        }\r\n\t    }\r\n\r\n\t    /**\r\n\t     * @param {Array.<string>} colors Color list.\r\n\t     * @param {string} type 'rgba', 'hsva', ...\r\n\t     * @return {string} Result color.\r\n\t     */\r\n\t    function stringify(arrColor, type) {\r\n\t        var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\r\n\t        if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\r\n\t            colorStr += ',' + arrColor[3];\r\n\t        }\r\n\t        return type + '(' + colorStr + ')';\r\n\t    }\r\n\r\n\t    module.exports = {\r\n\t        parse: parse,\r\n\t        lift: lift,\r\n\t        toHex: toHex,\r\n\t        fastMapToColor: fastMapToColor,\r\n\t        mapToColor: mapToColor,\r\n\t        modifyHSL: modifyHSL,\r\n\t        modifyAlpha: modifyAlpha,\r\n\t        stringify: stringify\r\n\t    };\r\n\r\n\r\n\r\n\r\n/***/ },\r\n/* 40 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t\r\n\t        var config = __webpack_require__(41);\r\n\r\n\t        /**\r\n\t         * @exports zrender/tool/log\r\n\t         * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n\t         */\r\n\t        module.exports = function() {\r\n\t            if (config.debugMode === 0) {\r\n\t                return;\r\n\t            }\r\n\t            else if (config.debugMode == 1) {\r\n\t                for (var k in arguments) {\r\n\t                    throw new Error(arguments[k]);\r\n\t                }\r\n\t            }\r\n\t            else if (config.debugMode > 1) {\r\n\t                for (var k in arguments) {\r\n\t                    console.log(arguments[k]);\r\n\t                }\r\n\t            }\r\n\t        };\r\n\r\n\t        /* for debug\r\n\t        return function(mes) {\r\n\t            document.getElementById('wrong-message').innerHTML =\r\n\t                mes + ' ' + (new Date() - 0)\r\n\t                + '<br/>' \r\n\t                + document.getElementById('wrong-message').innerHTML;\r\n\t        };\r\n\t        */\r\n\t    \r\n\r\n\r\n/***/ },\r\n/* 41 */\r\n/***/ function(module, exports) {\r\n\r\n\t\r\n\t    var dpr = 1;\r\n\t    // If in browser environment\r\n\t    if (typeof window !== 'undefined') {\r\n\t        dpr = Math.max(window.devicePixelRatio || 1, 1);\r\n\t    }\r\n\t    /**\r\n\t     * config默认配置项\r\n\t     * @exports zrender/config\r\n\t     * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n\t     */\r\n\t    var config = {\r\n\t        /**\r\n\t         * debug日志选项：catchBrushException为true下有效\r\n\t         * 0 : 不生成debug数据，发布用\r\n\t         * 1 : 异常抛出，调试用\r\n\t         * 2 : 控制台输出，调试用\r\n\t         */\r\n\t        debugMode: 0,\r\n\r\n\t        // retina 屏幕优化\r\n\t        devicePixelRatio: dpr\r\n\t    };\r\n\t    module.exports = config;\r\n\r\n\r\n\r\n\r\n/***/ },\r\n/* 42 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t\r\n\r\n\t    var Group = __webpack_require__(30);\r\n\t    var componentUtil = __webpack_require__(20);\r\n\t    var clazzUtil = __webpack_require__(13);\r\n\r\n\t    function Chart() {\r\n\r\n\t        /**\r\n\t         * @type {module:zrender/container/Group}\r\n\t         * @readOnly\r\n\t         */\r\n\t        this.group = new Group();\r\n\r\n\t        /**\r\n\t         * @type {string}\r\n\t         * @readOnly\r\n\t         */\r\n\t        this.uid = componentUtil.getUID('viewChart');\r\n\t    }\r\n\r\n\t    Chart.prototype = {\r\n\r\n\t        type: 'chart',\r\n\r\n\t        /**\r\n\t         * Init the chart\r\n\t         * @param  {module:echarts/model/Global} ecModel\r\n\t         * @param  {module:echarts/ExtensionAPI} api\r\n\t         */\r\n\t        init: function (ecModel, api) {},\r\n\r\n\t        /**\r\n\t         * Render the chart\r\n\t         * @param  {module:echarts/model/Series} seriesModel\r\n\t         * @param  {module:echarts/model/Global} ecModel\r\n\t         * @param  {module:echarts/ExtensionAPI} api\r\n\t         * @param  {Object} payload\r\n\t         */\r\n\t        render: function (seriesModel, ecModel, api, payload) {},\r\n\r\n\t        /**\r\n\t         * Highlight series or specified data item\r\n\t         * @param  {module:echarts/model/Series} seriesModel\r\n\t         * @param  {module:echarts/model/Global} ecModel\r\n\t         * @param  {module:echarts/ExtensionAPI} api\r\n\t         * @param  {Object} payload\r\n\t         */\r\n\t        highlight: function (seriesModel, ecModel, api, payload) {\r\n\t            toggleHighlight(seriesModel.getData(), payload, 'emphasis');\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Downplay series or specified data item\r\n\t         * @param  {module:echarts/model/Series} seriesModel\r\n\t         * @param  {module:echarts/model/Global} ecModel\r\n\t         * @param  {module:echarts/ExtensionAPI} api\r\n\t         * @param  {Object} payload\r\n\t         */\r\n\t        downplay: function (seriesModel, ecModel, api, payload) {\r\n\t            toggleHighlight(seriesModel.getData(), payload, 'normal');\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Remove self\r\n\t         * @param  {module:echarts/model/Global} ecModel\r\n\t         * @param  {module:echarts/ExtensionAPI} api\r\n\t         */\r\n\t        remove: function (ecModel, api) {\r\n\t            this.group.removeAll();\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Dispose self\r\n\t         * @param  {module:echarts/model/Global} ecModel\r\n\t         * @param  {module:echarts/ExtensionAPI} api\r\n\t         */\r\n\t        dispose: function () {}\r\n\t    };\r\n\r\n\t    var chartProto = Chart.prototype;\r\n\t    chartProto.updateView\r\n\t        = chartProto.updateLayout\r\n\t        = chartProto.updateVisual\r\n\t        = function (seriesModel, ecModel, api, payload) {\r\n\t            this.render(seriesModel, ecModel, api, payload);\r\n\t        };\r\n\r\n\t    /**\r\n\t     * Set state of single element\r\n\t     * @param  {module:zrender/Element} el\r\n\t     * @param  {string} state\r\n\t     */\r\n\t    function elSetState(el, state) {\r\n\t        if (el) {\r\n\t            el.trigger(state);\r\n\t            if (el.type === 'group') {\r\n\t                for (var i = 0; i < el.childCount(); i++) {\r\n\t                    elSetState(el.childAt(i), state);\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t    }\r\n\t    /**\r\n\t     * @param  {module:echarts/data/List} data\r\n\t     * @param  {Object} payload\r\n\t     * @param  {string} state 'normal'|'emphasis'\r\n\t     * @inner\r\n\t     */\r\n\t    function toggleHighlight(data, payload, state) {\r\n\t        var dataIndex = payload && payload.dataIndex;\r\n\t        var name = payload && payload.name;\r\n\r\n\t        if (dataIndex != null) {\r\n\t            var dataIndices = dataIndex instanceof Array ? dataIndex : [dataIndex];\r\n\t            for (var i = 0, len = dataIndices.length; i < len; i++) {\r\n\t                elSetState(data.getItemGraphicEl(dataIndices[i]), state);\r\n\t            }\r\n\t        }\r\n\t        else if (name) {\r\n\t            var names = name instanceof Array ? name : [name];\r\n\t            for (var i = 0, len = names.length; i < len; i++) {\r\n\t                var dataIndex = data.indexOfName(names[i]);\r\n\t                elSetState(data.getItemGraphicEl(dataIndex), state);\r\n\t            }\r\n\t        }\r\n\t        else {\r\n\t            data.eachItemGraphicEl(function (el) {\r\n\t                elSetState(el, state);\r\n\t            });\r\n\t        }\r\n\t    }\r\n\r\n\t    // Enable Chart.extend.\r\n\t    clazzUtil.enableClassExtend(Chart);\r\n\r\n\t    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\r\n\t    clazzUtil.enableClassManagement(Chart, {registerWhenExtend: true});\r\n\r\n\t    module.exports = Chart;\r\n\r\n\r\n/***/ },\r\n/* 43 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t'use strict';\r\n\r\n\r\n\t    var zrUtil = __webpack_require__(4);\r\n\r\n\t    var pathTool = __webpack_require__(44);\r\n\t    var round = Math.round;\r\n\t    var Path = __webpack_require__(45);\r\n\t    var colorTool = __webpack_require__(39);\r\n\t    var matrix = __webpack_require__(11);\r\n\t    var vector = __webpack_require__(10);\r\n\t    var Gradient = __webpack_require__(61);\r\n\r\n\t    var graphic = {};\r\n\r\n\t    graphic.Group = __webpack_require__(30);\r\n\r\n\t    graphic.Image = __webpack_require__(62);\r\n\r\n\t    graphic.Text = __webpack_require__(64);\r\n\r\n\t    graphic.Circle = __webpack_require__(65);\r\n\r\n\t    graphic.Sector = __webpack_require__(66);\r\n\r\n\t    graphic.Ring = __webpack_require__(67);\r\n\r\n\t    graphic.Polygon = __webpack_require__(68);\r\n\r\n\t    graphic.Polyline = __webpack_require__(72);\r\n\r\n\t    graphic.Rect = __webpack_require__(73);\r\n\r\n\t    graphic.Line = __webpack_require__(75);\r\n\r\n\t    graphic.BezierCurve = __webpack_require__(76);\r\n\r\n\t    graphic.Arc = __webpack_require__(77);\r\n\r\n\t    graphic.CompoundPath = __webpack_require__(78);\r\n\r\n\t    graphic.LinearGradient = __webpack_require__(79);\r\n\r\n\t    graphic.RadialGradient = __webpack_require__(80);\r\n\r\n\t    graphic.BoundingRect = __webpack_require__(9);\r\n\r\n\t    /**\r\n\t     * Extend shape with parameters\r\n\t     */\r\n\t    graphic.extendShape = function (opts) {\r\n\t        return Path.extend(opts);\r\n\t    };\r\n\r\n\t    /**\r\n\t     * Extend path\r\n\t     */\r\n\t    graphic.extendPath = function (pathData, opts) {\r\n\t        return pathTool.extendFromString(pathData, opts);\r\n\t    };\r\n\r\n\t    /**\r\n\t     * Create a path element from path data string\r\n\t     * @param {string} pathData\r\n\t     * @param {Object} opts\r\n\t     * @param {module:zrender/core/BoundingRect} rect\r\n\t     * @param {string} [layout=cover] 'center' or 'cover'\r\n\t     */\r\n\t    graphic.makePath = function (pathData, opts, rect, layout) {\r\n\t        var path = pathTool.createFromString(pathData, opts);\r\n\t        var boundingRect = path.getBoundingRect();\r\n\t        if (rect) {\r\n\t            var aspect = boundingRect.width / boundingRect.height;\r\n\r\n\t            if (layout === 'center') {\r\n\t                // Set rect to center, keep width / height ratio.\r\n\t                var width = rect.height * aspect;\r\n\t                var height;\r\n\t                if (width <= rect.width) {\r\n\t                    height = rect.height;\r\n\t                }\r\n\t                else {\r\n\t                    width = rect.width;\r\n\t                    height = width / aspect;\r\n\t                }\r\n\t                var cx = rect.x + rect.width / 2;\r\n\t                var cy = rect.y + rect.height / 2;\r\n\r\n\t                rect.x = cx - width / 2;\r\n\t                rect.y = cy - height / 2;\r\n\t                rect.width = width;\r\n\t                rect.height = height;\r\n\t            }\r\n\r\n\t            this.resizePath(path, rect);\r\n\t        }\r\n\t        return path;\r\n\t    };\r\n\r\n\t    graphic.mergePath = pathTool.mergePath,\r\n\r\n\t    /**\r\n\t     * Resize a path to fit the rect\r\n\t     * @param {module:zrender/graphic/Path} path\r\n\t     * @param {Object} rect\r\n\t     */\r\n\t    graphic.resizePath = function (path, rect) {\r\n\t        if (!path.applyTransform) {\r\n\t            return;\r\n\t        }\r\n\r\n\t        var pathRect = path.getBoundingRect();\r\n\r\n\t        var m = pathRect.calculateTransform(rect);\r\n\r\n\t        path.applyTransform(m);\r\n\t    };\r\n\r\n\t    /**\r\n\t     * Sub pixel optimize line for canvas\r\n\t     *\r\n\t     * @param {Object} param\r\n\t     * @param {Object} [param.shape]\r\n\t     * @param {number} [param.shape.x1]\r\n\t     * @param {number} [param.shape.y1]\r\n\t     * @param {number} [param.shape.x2]\r\n\t     * @param {number} [param.shape.y2]\r\n\t     * @param {Object} [param.style]\r\n\t     * @param {number} [param.style.lineWidth]\r\n\t     * @return {Object} Modified param\r\n\t     */\r\n\t    graphic.subPixelOptimizeLine = function (param) {\r\n\t        var subPixelOptimize = graphic.subPixelOptimize;\r\n\t        var shape = param.shape;\r\n\t        var lineWidth = param.style.lineWidth;\r\n\r\n\t        if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\r\n\t            shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\r\n\t        }\r\n\t        if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\r\n\t            shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\r\n\t        }\r\n\t        return param;\r\n\t    };\r\n\r\n\t    /**\r\n\t     * Sub pixel optimize rect for canvas\r\n\t     *\r\n\t     * @param {Object} param\r\n\t     * @param {Object} [param.shape]\r\n\t     * @param {number} [param.shape.x]\r\n\t     * @param {number} [param.shape.y]\r\n\t     * @param {number} [param.shape.width]\r\n\t     * @param {number} [param.shape.height]\r\n\t     * @param {Object} [param.style]\r\n\t     * @param {number} [param.style.lineWidth]\r\n\t     * @return {Object} Modified param\r\n\t     */\r\n\t    graphic.subPixelOptimizeRect = function (param) {\r\n\t        var subPixelOptimize = graphic.subPixelOptimize;\r\n\t        var shape = param.shape;\r\n\t        var lineWidth = param.style.lineWidth;\r\n\t        var originX = shape.x;\r\n\t        var originY = shape.y;\r\n\t        var originWidth = shape.width;\r\n\t        var originHeight = shape.height;\r\n\t        shape.x = subPixelOptimize(shape.x, lineWidth, true);\r\n\t        shape.y = subPixelOptimize(shape.y, lineWidth, true);\r\n\t        shape.width = Math.max(\r\n\t            subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x,\r\n\t            originWidth === 0 ? 0 : 1\r\n\t        );\r\n\t        shape.height = Math.max(\r\n\t            subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y,\r\n\t            originHeight === 0 ? 0 : 1\r\n\t        );\r\n\t        return param;\r\n\t    };\r\n\r\n\t    /**\r\n\t     * Sub pixel optimize for canvas\r\n\t     *\r\n\t     * @param {number} position Coordinate, such as x, y\r\n\t     * @param {number} lineWidth Should be nonnegative integer.\r\n\t     * @param {boolean=} positiveOrNegative Default false (negative).\r\n\t     * @return {number} Optimized position.\r\n\t     */\r\n\t    graphic.subPixelOptimize = function (position, lineWidth, positiveOrNegative) {\r\n\t        // Assure that (position + lineWidth / 2) is near integer edge,\r\n\t        // otherwise line will be fuzzy in canvas.\r\n\t        var doubledPosition = round(position * 2);\r\n\t        return (doubledPosition + round(lineWidth)) % 2 === 0\r\n\t            ? doubledPosition / 2\r\n\t            : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\r\n\t    };\r\n\r\n\t    function hasFillOrStroke(fillOrStroke) {\r\n\t        return fillOrStroke != null && fillOrStroke != 'none';\r\n\t    }\r\n\r\n\t    function liftColor(color) {\r\n\t        return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\r\n\t    }\r\n\r\n\t    /**\r\n\t     * @private\r\n\t     */\r\n\t    function cacheElementStl(el) {\r\n\t        if (el.__hoverStlDirty) {\r\n\t            var stroke = el.style.stroke;\r\n\t            var fill = el.style.fill;\r\n\r\n\t            // Create hoverStyle on mouseover\r\n\t            var hoverStyle = el.__hoverStl;\r\n\t            hoverStyle.fill = hoverStyle.fill\r\n\t                || (hasFillOrStroke(fill) ? liftColor(fill) : null);\r\n\t            hoverStyle.stroke = hoverStyle.stroke\r\n\t                || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\r\n\r\n\t            var normalStyle = {};\r\n\t            for (var name in hoverStyle) {\r\n\t                if (hoverStyle.hasOwnProperty(name)) {\r\n\t                    normalStyle[name] = el.style[name];\r\n\t                }\r\n\t            }\r\n\r\n\t            el.__normalStl = normalStyle;\r\n\r\n\t            el.__hoverStlDirty = false;\r\n\t        }\r\n\t    }\r\n\r\n\t    /**\r\n\t     * @private\r\n\t     */\r\n\t    function doSingleEnterHover(el) {\r\n\t        if (el.__isHover) {\r\n\t            return;\r\n\t        }\r\n\r\n\t        cacheElementStl(el);\r\n\r\n\t        if (el.useHoverLayer) {\r\n\t            el.__zr && el.__zr.addHover(el, el.__hoverStl);\r\n\t        }\r\n\t        else {\r\n\t            el.setStyle(el.__hoverStl);\r\n\t            el.z2 += 1;\r\n\t        }\r\n\r\n\t        el.__isHover = true;\r\n\t    }\r\n\r\n\t    /**\r\n\t     * @inner\r\n\t     */\r\n\t    function doSingleLeaveHover(el) {\r\n\t        if (!el.__isHover) {\r\n\t            return;\r\n\t        }\r\n\r\n\t        var normalStl = el.__normalStl;\r\n\t        if (el.useHoverLayer) {\r\n\t            el.__zr && el.__zr.removeHover(el);\r\n\t        }\r\n\t        else {\r\n\t            normalStl && el.setStyle(normalStl);\r\n\t            el.z2 -= 1;\r\n\t        }\r\n\r\n\t        el.__isHover = false;\r\n\t    }\r\n\r\n\t    /**\r\n\t     * @inner\r\n\t     */\r\n\t    function doEnterHover(el) {\r\n\t        el.type === 'group'\r\n\t            ? el.traverse(function (child) {\r\n\t                if (child.type !== 'group') {\r\n\t                    doSingleEnterHover(child);\r\n\t                }\r\n\t            })\r\n\t            : doSingleEnterHover(el);\r\n\t    }\r\n\r\n\t    function doLeaveHover(el) {\r\n\t        el.type === 'group'\r\n\t            ? el.traverse(function (child) {\r\n\t                if (child.type !== 'group') {\r\n\t                    doSingleLeaveHover(child);\r\n\t                }\r\n\t            })\r\n\t            : doSingleLeaveHover(el);\r\n\t    }\r\n\r\n\t    /**\r\n\t     * @inner\r\n\t     */\r\n\t    function setElementHoverStl(el, hoverStl) {\r\n\t        // If element has sepcified hoverStyle, then use it instead of given hoverStyle\r\n\t        // Often used when item group has a label element and it's hoverStyle is different\r\n\t        el.__hoverStl = el.hoverStyle || hoverStl || {};\r\n\t        el.__hoverStlDirty = true;\r\n\r\n\t        if (el.__isHover) {\r\n\t            cacheElementStl(el);\r\n\t        }\r\n\t    }\r\n\r\n\t    /**\r\n\t     * @inner\r\n\t     */\r\n\t    function onElementMouseOver() {\r\n\t        // Only if element is not in emphasis status\r\n\t        !this.__isEmphasis && doEnterHover(this);\r\n\t    }\r\n\r\n\t    /**\r\n\t     * @inner\r\n\t     */\r\n\t    function onElementMouseOut() {\r\n\t        // Only if element is not in emphasis status\r\n\t        !this.__isEmphasis && doLeaveHover(this);\r\n\t    }\r\n\r\n\t    /**\r\n\t     * @inner\r\n\t     */\r\n\t    function enterEmphasis() {\r\n\t        this.__isEmphasis = true;\r\n\t        doEnterHover(this);\r\n\t    }\r\n\r\n\t    /**\r\n\t     * @inner\r\n\t     */\r\n\t    function leaveEmphasis() {\r\n\t        this.__isEmphasis = false;\r\n\t        doLeaveHover(this);\r\n\t    }\r\n\r\n\t    /**\r\n\t     * Set hover style of element\r\n\t     * @param {module:zrender/Element} el\r\n\t     * @param {Object} [hoverStyle]\r\n\t     */\r\n\t    graphic.setHoverStyle = function (el, hoverStyle) {\r\n\t        el.type === 'group'\r\n\t            ? el.traverse(function (child) {\r\n\t                if (child.type !== 'group') {\r\n\t                    setElementHoverStl(child, hoverStyle);\r\n\t                }\r\n\t            })\r\n\t            : setElementHoverStl(el, hoverStyle);\r\n\t        // Remove previous bound handlers\r\n\t        el.on('mouseover', onElementMouseOver)\r\n\t          .on('mouseout', onElementMouseOut);\r\n\r\n\t        // Emphasis, normal can be triggered manually\r\n\t        el.on('emphasis', enterEmphasis)\r\n\t          .on('normal', leaveEmphasis);\r\n\t    };\r\n\r\n\t    /**\r\n\t     * Set text option in the style\r\n\t     * @param {Object} textStyle\r\n\t     * @param {module:echarts/model/Model} labelModel\r\n\t     * @param {string} color\r\n\t     */\r\n\t    graphic.setText = function (textStyle, labelModel, color) {\r\n\t        var labelPosition = labelModel.getShallow('position') || 'inside';\r\n\t        var labelColor = labelPosition.indexOf('inside') >= 0 ? 'white' : color;\r\n\t        var textStyleModel = labelModel.getModel('textStyle');\r\n\t        zrUtil.extend(textStyle, {\r\n\t            textDistance: labelModel.getShallow('distance') || 5,\r\n\t            textFont: textStyleModel.getFont(),\r\n\t            textPosition: labelPosition,\r\n\t            textFill: textStyleModel.getTextColor() || labelColor\r\n\t        });\r\n\t    };\r\n\r\n\t    function animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\r\n\t        if (typeof dataIndex === 'function') {\r\n\t            cb = dataIndex;\r\n\t            dataIndex = null;\r\n\t        }\r\n\t        var animationEnabled = animatableModel\r\n\t            && (\r\n\t                animatableModel.ifEnableAnimation\r\n\t                ? animatableModel.ifEnableAnimation()\r\n\t                // Directly use animation property\r\n\t                : animatableModel.getShallow('animation')\r\n\t            );\r\n\r\n\t        if (animationEnabled) {\r\n\t            var postfix = isUpdate ? 'Update' : '';\r\n\t            var duration = animatableModel\r\n\t                && animatableModel.getShallow('animationDuration' + postfix);\r\n\t            var animationEasing = animatableModel\r\n\t                && animatableModel.getShallow('animationEasing' + postfix);\r\n\t            var animationDelay = animatableModel\r\n\t                && animatableModel.getShallow('animationDelay' + postfix);\r\n\t            if (typeof animationDelay === 'function') {\r\n\t                animationDelay = animationDelay(dataIndex);\r\n\t            }\r\n\t            duration > 0\r\n\t                ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb)\r\n\t                : (el.attr(props), cb && cb());\r\n\t        }\r\n\t        else {\r\n\t            el.attr(props);\r\n\t            cb && cb();\r\n\t        }\r\n\t    }\r\n\t    /**\r\n\t     * Update graphic element properties with or without animation according to the configuration in series\r\n\t     * @param {module:zrender/Element} el\r\n\t     * @param {Object} props\r\n\t     * @param {module:echarts/model/Model} [animatableModel]\r\n\t     * @param {number} [dataIndex]\r\n\t     * @param {Function} [cb]\r\n\t     * @example\r\n\t     *     graphic.updateProps(el, {\r\n\t     *         position: [100, 100]\r\n\t     *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\r\n\t     *     // Or\r\n\t     *     graphic.updateProps(el, {\r\n\t     *         position: [100, 100]\r\n\t     *     }, seriesModel, function () { console.log('Animation done!'); });\r\n\t     */\r\n\t    graphic.updateProps = function (el, props, animatableModel, dataIndex, cb) {\r\n\t        animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\r\n\t    };\r\n\r\n\t    /**\r\n\t     * Init graphic element properties with or without animation according to the configuration in series\r\n\t     * @param {module:zrender/Element} el\r\n\t     * @param {Object} props\r\n\t     * @param {module:echarts/model/Model} [animatableModel]\r\n\t     * @param {number} [dataIndex]\r\n\t     * @param {Function} cb\r\n\t     */\r\n\t    graphic.initProps = function (el, props, animatableModel, dataIndex, cb) {\r\n\t        animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\r\n\t    };\r\n\r\n\t    /**\r\n\t     * Get transform matrix of target (param target),\r\n\t     * in coordinate of its ancestor (param ancestor)\r\n\t     *\r\n\t     * @param {module:zrender/mixin/Transformable} target\r\n\t     * @param {module:zrender/mixin/Transformable} [ancestor]\r\n\t     */\r\n\t    graphic.getTransform = function (target, ancestor) {\r\n\t        var mat = matrix.identity([]);\r\n\r\n\t        while (target && target !== ancestor) {\r\n\t            matrix.mul(mat, target.getLocalTransform(), mat);\r\n\t            target = target.parent;\r\n\t        }\r\n\r\n\t        return mat;\r\n\t    };\r\n\r\n\t    /**\r\n\t     * Apply transform to an vertex.\r\n\t     * @param {Array.<number>} vertex [x, y]\r\n\t     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\r\n\t     * @param {boolean=} invert Whether use invert matrix.\r\n\t     * @return {Array.<number>} [x, y]\r\n\t     */\r\n\t    graphic.applyTransform = function (vertex, transform, invert) {\r\n\t        if (invert) {\r\n\t            transform = matrix.invert([], transform);\r\n\t        }\r\n\t        return vector.applyTransform([], vertex, transform);\r\n\t    };\r\n\r\n\t    /**\r\n\t     * @param {string} direction 'left' 'right' 'top' 'bottom'\r\n\t     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\r\n\t     * @param {boolean=} invert Whether use invert matrix.\r\n\t     * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\r\n\t     */\r\n\t    graphic.transformDirection = function (direction, transform, invert) {\r\n\r\n\t        // Pick a base, ensure that transform result will not be (0, 0).\r\n\t        var hBase = (transform[4] === 0 || transform[5] === 0 || transform[0] === 0)\r\n\t            ? 1 : Math.abs(2 * transform[4] / transform[0]);\r\n\t        var vBase = (transform[4] === 0 || transform[5] === 0 || transform[2] === 0)\r\n\t            ? 1 : Math.abs(2 * transform[4] / transform[2]);\r\n\r\n\t        var vertex = [\r\n\t            direction === 'left' ? -hBase : direction === 'right' ? hBase : 0,\r\n\t            direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0\r\n\t        ];\r\n\r\n\t        vertex = graphic.applyTransform(vertex, transform, invert);\r\n\r\n\t        return Math.abs(vertex[0]) > Math.abs(vertex[1])\r\n\t            ? (vertex[0] > 0 ? 'right' : 'left')\r\n\t            : (vertex[1] > 0 ? 'bottom' : 'top');\r\n\t    };\r\n\r\n\t    /**\r\n\t     * Apply group transition animation from g1 to g2\r\n\t     */\r\n\t    graphic.groupTransition = function (g1, g2, animatableModel, cb) {\r\n\t        if (!g1 || !g2) {\r\n\t            return;\r\n\t        }\r\n\r\n\t        function getElMap(g) {\r\n\t            var elMap = {};\r\n\t            g.traverse(function (el) {\r\n\t                if (!el.isGroup && el.anid) {\r\n\t                    elMap[el.anid] = el;\r\n\t                }\r\n\t            });\r\n\t            return elMap;\r\n\t        }\r\n\t        function getAnimatableProps(el) {\r\n\t            var obj = {\r\n\t                position: vector.clone(el.position),\r\n\t                rotation: el.rotation\r\n\t            };\r\n\t            if (el.shape) {\r\n\t                obj.shape = zrUtil.extend({}, el.shape);\r\n\t            }\r\n\t            return obj;\r\n\t        }\r\n\t        var elMap1 = getElMap(g1);\r\n\r\n\t        g2.traverse(function (el) {\r\n\t            if (!el.isGroup && el.anid) {\r\n\t                var oldEl = elMap1[el.anid];\r\n\t                if (oldEl) {\r\n\t                    var newProp = getAnimatableProps(el);\r\n\t                    el.attr(getAnimatableProps(oldEl));\r\n\t                    graphic.updateProps(el, newProp, animatableModel, el.dataIndex);\r\n\t                }\r\n\t                // else {\r\n\t                //     if (el.previousProps) {\r\n\t                //         graphic.updateProps\r\n\t                //     }\r\n\t                // }\r\n\t            }\r\n\t        });\r\n\t    };\r\n\r\n\t    module.exports = graphic;\r\n\r\n\r\n/***/ },\r\n/* 44 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t\r\n\r\n\t    var Path = __webpack_require__(45);\r\n\t    var PathProxy = __webpack_require__(49);\r\n\t    var transformPath = __webpack_require__(60);\r\n\t    var matrix = __webpack_require__(11);\r\n\r\n\t    // command chars\r\n\t    var cc = [\r\n\t        'm', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z',\r\n\t        'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'\r\n\t    ];\r\n\r\n\t    var mathSqrt = Math.sqrt;\r\n\t    var mathSin = Math.sin;\r\n\t    var mathCos = Math.cos;\r\n\t    var PI = Math.PI;\r\n\r\n\t    var vMag = function(v) {\r\n\t        return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\r\n\t    };\r\n\t    var vRatio = function(u, v) {\r\n\t        return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\r\n\t    };\r\n\t    var vAngle = function(u, v) {\r\n\t        return (u[0] * v[1] < u[1] * v[0] ? -1 : 1)\r\n\t                * Math.acos(vRatio(u, v));\r\n\t    };\r\n\r\n\t    function processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\r\n\t        var psi = psiDeg * (PI / 180.0);\r\n\t        var xp = mathCos(psi) * (x1 - x2) / 2.0\r\n\t                 + mathSin(psi) * (y1 - y2) / 2.0;\r\n\t        var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0\r\n\t                 + mathCos(psi) * (y1 - y2) / 2.0;\r\n\r\n\t        var lambda = (xp * xp) / (rx * rx) + (yp * yp) / (ry * ry);\r\n\r\n\t        if (lambda > 1) {\r\n\t            rx *= mathSqrt(lambda);\r\n\t            ry *= mathSqrt(lambda);\r\n\t        }\r\n\r\n\t        var f = (fa === fs ? -1 : 1)\r\n\t            * mathSqrt((((rx * rx) * (ry * ry))\r\n\t                    - ((rx * rx) * (yp * yp))\r\n\t                    - ((ry * ry) * (xp * xp))) / ((rx * rx) * (yp * yp)\r\n\t                    + (ry * ry) * (xp * xp))\r\n\t                ) || 0;\r\n\r\n\t        var cxp = f * rx * yp / ry;\r\n\t        var cyp = f * -ry * xp / rx;\r\n\r\n\t        var cx = (x1 + x2) / 2.0\r\n\t                 + mathCos(psi) * cxp\r\n\t                 - mathSin(psi) * cyp;\r\n\t        var cy = (y1 + y2) / 2.0\r\n\t                + mathSin(psi) * cxp\r\n\t                + mathCos(psi) * cyp;\r\n\r\n\t        var theta = vAngle([ 1, 0 ], [ (xp - cxp) / rx, (yp - cyp) / ry ]);\r\n\t        var u = [ (xp - cxp) / rx, (yp - cyp) / ry ];\r\n\t        var v = [ (-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry ];\r\n\t        var dTheta = vAngle(u, v);\r\n\r\n\t        if (vRatio(u, v) <= -1) {\r\n\t            dTheta = PI;\r\n\t        }\r\n\t        if (vRatio(u, v) >= 1) {\r\n\t            dTheta = 0;\r\n\t        }\r\n\t        if (fs === 0 && dTheta > 0) {\r\n\t            dTheta = dTheta - 2 * PI;\r\n\t        }\r\n\t        if (fs === 1 && dTheta < 0) {\r\n\t            dTheta = dTheta + 2 * PI;\r\n\t        }\r\n\r\n\t        path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\r\n\t    }\r\n\r\n\t    function createPathProxyFromString(data) {\r\n\t        if (!data) {\r\n\t            return [];\r\n\t        }\r\n\r\n\t        // command string\r\n\t        var cs = data.replace(/-/g, ' -')\r\n\t            .replace(/  /g, ' ')\r\n\t            .replace(/ /g, ',')\r\n\t            .replace(/,,/g, ',');\r\n\r\n\t        var n;\r\n\t        // create pipes so that we can split the data\r\n\t        for (n = 0; n < cc.length; n++) {\r\n\t            cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\r\n\t        }\r\n\r\n\t        // create array\r\n\t        var arr = cs.split('|');\r\n\t        // init context point\r\n\t        var cpx = 0;\r\n\t        var cpy = 0;\r\n\r\n\t        var path = new PathProxy();\r\n\t        var CMD = PathProxy.CMD;\r\n\r\n\t        var prevCmd;\r\n\t        for (n = 1; n < arr.length; n++) {\r\n\t            var str = arr[n];\r\n\t            var c = str.charAt(0);\r\n\t            var off = 0;\r\n\t            var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\r\n\t            var cmd;\r\n\r\n\t            if (p.length > 0 && p[0] === '') {\r\n\t                p.shift();\r\n\t            }\r\n\r\n\t            for (var i = 0; i < p.length; i++) {\r\n\t                p[i] = parseFloat(p[i]);\r\n\t            }\r\n\t            while (off < p.length && !isNaN(p[off])) {\r\n\t                if (isNaN(p[0])) {\r\n\t                    break;\r\n\t                }\r\n\t                var ctlPtx;\r\n\t                var ctlPty;\r\n\r\n\t                var rx;\r\n\t                var ry;\r\n\t                var psi;\r\n\t                var fa;\r\n\t                var fs;\r\n\r\n\t                var x1 = cpx;\r\n\t                var y1 = cpy;\r\n\r\n\t                // convert l, H, h, V, and v to L\r\n\t                switch (c) {\r\n\t                    case 'l':\r\n\t                        cpx += p[off++];\r\n\t                        cpy += p[off++];\r\n\t                        cmd = CMD.L;\r\n\t                        path.addData(cmd, cpx, cpy);\r\n\t                        break;\r\n\t                    case 'L':\r\n\t                        cpx = p[off++];\r\n\t                        cpy = p[off++];\r\n\t                        cmd = CMD.L;\r\n\t                        path.addData(cmd, cpx, cpy);\r\n\t                        break;\r\n\t                    case 'm':\r\n\t                        cpx += p[off++];\r\n\t                        cpy += p[off++];\r\n\t                        cmd = CMD.M;\r\n\t                        path.addData(cmd, cpx, cpy);\r\n\t                        c = 'l';\r\n\t                        break;\r\n\t                    case 'M':\r\n\t                        cpx = p[off++];\r\n\t                        cpy = p[off++];\r\n\t                        cmd = CMD.M;\r\n\t                        path.addData(cmd, cpx, cpy);\r\n\t                        c = 'L';\r\n\t                        break;\r\n\t                    case 'h':\r\n\t                        cpx += p[off++];\r\n\t                        cmd = CMD.L;\r\n\t                        path.addData(cmd, cpx, cpy);\r\n\t                        break;\r\n\t                    case 'H':\r\n\t                        cpx = p[off++];\r\n\t                        cmd = CMD.L;\r\n\t                        path.addData(cmd, cpx, cpy);\r\n\t                        break;\r\n\t                    case 'v':\r\n\t                        cpy += p[off++];\r\n\t                        cmd = CMD.L;\r\n\t                        path.addData(cmd, cpx, cpy);\r\n\t                        break;\r\n\t                    case 'V':\r\n\t                        cpy = p[off++];\r\n\t                        cmd = CMD.L;\r\n\t                        path.addData(cmd, cpx, cpy);\r\n\t                        break;\r\n\t                    case 'C':\r\n\t                        cmd = CMD.C;\r\n\t                        path.addData(\r\n\t                            cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]\r\n\t                        );\r\n\t                        cpx = p[off - 2];\r\n\t                        cpy = p[off - 1];\r\n\t                        break;\r\n\t                    case 'c':\r\n\t                        cmd = CMD.C;\r\n\t                        path.addData(\r\n\t                            cmd,\r\n\t                            p[off++] + cpx, p[off++] + cpy,\r\n\t                            p[off++] + cpx, p[off++] + cpy,\r\n\t                            p[off++] + cpx, p[off++] + cpy\r\n\t                        );\r\n\t                        cpx += p[off - 2];\r\n\t                        cpy += p[off - 1];\r\n\t                        break;\r\n\t                    case 'S':\r\n\t                        ctlPtx = cpx;\r\n\t                        ctlPty = cpy;\r\n\t                        var len = path.len();\r\n\t                        var pathData = path.data;\r\n\t                        if (prevCmd === CMD.C) {\r\n\t                            ctlPtx += cpx - pathData[len - 4];\r\n\t                            ctlPty += cpy - pathData[len - 3];\r\n\t                        }\r\n\t                        cmd = CMD.C;\r\n\t                        x1 = p[off++];\r\n\t                        y1 = p[off++];\r\n\t                        cpx = p[off++];\r\n\t                        cpy = p[off++];\r\n\t                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\r\n\t                        break;\r\n\t                    case 's':\r\n\t                        ctlPtx = cpx;\r\n\t                        ctlPty = cpy;\r\n\t                        var len = path.len();\r\n\t                        var pathData = path.data;\r\n\t                        if (prevCmd === CMD.C) {\r\n\t                            ctlPtx += cpx - pathData[len - 4];\r\n\t                            ctlPty += cpy - pathData[len - 3];\r\n\t                        }\r\n\t                        cmd = CMD.C;\r\n\t                        x1 = cpx + p[off++];\r\n\t                        y1 = cpy + p[off++];\r\n\t                        cpx += p[off++];\r\n\t                        cpy += p[off++];\r\n\t                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\r\n\t                        break;\r\n\t                    case 'Q':\r\n\t                        x1 = p[off++];\r\n\t                        y1 = p[off++];\r\n\t                        cpx = p[off++];\r\n\t                        cpy = p[off++];\r\n\t                        cmd = CMD.Q;\r\n\t                        path.addData(cmd, x1, y1, cpx, cpy);\r\n\t                        break;\r\n\t                    case 'q':\r\n\t                        x1 = p[off++] + cpx;\r\n\t                        y1 = p[off++] + cpy;\r\n\t                        cpx += p[off++];\r\n\t                        cpy += p[off++];\r\n\t                        cmd = CMD.Q;\r\n\t                        path.addData(cmd, x1, y1, cpx, cpy);\r\n\t                        break;\r\n\t                    case 'T':\r\n\t                        ctlPtx = cpx;\r\n\t                        ctlPty = cpy;\r\n\t                        var len = path.len();\r\n\t                        var pathData = path.data;\r\n\t                        if (prevCmd === CMD.Q) {\r\n\t                            ctlPtx += cpx - pathData[len - 4];\r\n\t                            ctlPty += cpy - pathData[len - 3];\r\n\t                        }\r\n\t                        cpx = p[off++];\r\n\t                        cpy = p[off++];\r\n\t                        cmd = CMD.Q;\r\n\t                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\r\n\t                        break;\r\n\t                    case 't':\r\n\t                        ctlPtx = cpx;\r\n\t                        ctlPty = cpy;\r\n\t                        var len = path.len();\r\n\t                        var pathData = path.data;\r\n\t                        if (prevCmd === CMD.Q) {\r\n\t                            ctlPtx += cpx - pathData[len - 4];\r\n\t                            ctlPty += cpy - pathData[len - 3];\r\n\t                        }\r\n\t                        cpx += p[off++];\r\n\t                        cpy += p[off++];\r\n\t                        cmd = CMD.Q;\r\n\t                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\r\n\t                        break;\r\n\t                    case 'A':\r\n\t                        rx = p[off++];\r\n\t                        ry = p[off++];\r\n\t                        psi = p[off++];\r\n\t                        fa = p[off++];\r\n\t                        fs = p[off++];\r\n\r\n\t                        x1 = cpx, y1 = cpy;\r\n\t                        cpx = p[off++];\r\n\t                        cpy = p[off++];\r\n\t                        cmd = CMD.A;\r\n\t                        processArc(\r\n\t                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\r\n\t                        );\r\n\t                        break;\r\n\t                    case 'a':\r\n\t                        rx = p[off++];\r\n\t                        ry = p[off++];\r\n\t                        psi = p[off++];\r\n\t                        fa = p[off++];\r\n\t                        fs = p[off++];\r\n\r\n\t                        x1 = cpx, y1 = cpy;\r\n\t                        cpx += p[off++];\r\n\t                        cpy += p[off++];\r\n\t                        cmd = CMD.A;\r\n\t                        processArc(\r\n\t                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\r\n\t                        );\r\n\t                        break;\r\n\t                }\r\n\t            }\r\n\r\n\t            if (c === 'z' || c === 'Z') {\r\n\t                cmd = CMD.Z;\r\n\t                path.addData(cmd);\r\n\t            }\r\n\r\n\t            prevCmd = cmd;\r\n\t        }\r\n\r\n\t        path.toStatic();\r\n\r\n\t        return path;\r\n\t    }\r\n\r\n\t    // TODO Optimize double memory cost problem\r\n\t    function createPathOptions(str, opts) {\r\n\t        var pathProxy = createPathProxyFromString(str);\r\n\t        var transform;\r\n\t        opts = opts || {};\r\n\t        opts.buildPath = function (path) {\r\n\t            path.setData(pathProxy.data);\r\n\t            transform && transformPath(path, transform);\r\n\t            // Svg and vml renderer don't have context\r\n\t            var ctx = path.getContext();\r\n\t            if (ctx) {\r\n\t                path.rebuildPath(ctx);\r\n\t            }\r\n\t        };\r\n\r\n\t        opts.applyTransform = function (m) {\r\n\t            if (!transform) {\r\n\t                transform = matrix.create();\r\n\t            }\r\n\t            matrix.mul(transform, m, transform);\r\n\t        };\r\n\r\n\t        return opts;\r\n\t    }\r\n\r\n\t    module.exports = {\r\n\t        /**\r\n\t         * Create a Path object from path string data\r\n\t         * http://www.w3.org/TR/SVG/paths.html#PathData\r\n\t         * @param  {Object} opts Other options\r\n\t         */\r\n\t        createFromString: function (str, opts) {\r\n\t            return new Path(createPathOptions(str, opts));\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Create a Path class from path string data\r\n\t         * @param  {string} str\r\n\t         * @param  {Object} opts Other options\r\n\t         */\r\n\t        extendFromString: function (str, opts) {\r\n\t            return Path.extend(createPathOptions(str, opts));\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Merge multiple paths\r\n\t         */\r\n\t        // TODO Apply transform\r\n\t        // TODO stroke dash\r\n\t        // TODO Optimize double memory cost problem\r\n\t        mergePath: function (pathEls, opts) {\r\n\t            var pathList = [];\r\n\t            var len = pathEls.length;\r\n\t            for (var i = 0; i < len; i++) {\r\n\t                var pathEl = pathEls[i];\r\n\t                if (pathEl.__dirty) {\r\n\t                    pathEl.buildPath(pathEl.path, pathEl.shape, true);\r\n\t                }\r\n\t                pathList.push(pathEl.path);\r\n\t            }\r\n\r\n\t            var pathBundle = new Path(opts);\r\n\t            pathBundle.buildPath = function (path) {\r\n\t                path.appendPath(pathList);\r\n\t                // Svg and vml renderer don't have context\r\n\t                var ctx = path.getContext();\r\n\t                if (ctx) {\r\n\t                    path.rebuildPath(ctx);\r\n\t                }\r\n\t            };\r\n\r\n\t            return pathBundle;\r\n\t        }\r\n\t    };\r\n\r\n\r\n/***/ },\r\n/* 45 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t/**\r\n\t * Path element\r\n\t * @module zrender/graphic/Path\r\n\t */\r\n\r\n\r\n\r\n\t    var Displayable = __webpack_require__(46);\r\n\t    var zrUtil = __webpack_require__(4);\r\n\t    var PathProxy = __webpack_require__(49);\r\n\t    var pathContain = __webpack_require__(52);\r\n\r\n\t    var Pattern = __webpack_require__(59);\r\n\t    var getCanvasPattern = Pattern.prototype.getCanvasPattern;\r\n\r\n\t    var abs = Math.abs;\r\n\r\n\t    /**\r\n\t     * @alias module:zrender/graphic/Path\r\n\t     * @extends module:zrender/graphic/Displayable\r\n\t     * @constructor\r\n\t     * @param {Object} opts\r\n\t     */\r\n\t    function Path(opts) {\r\n\t        Displayable.call(this, opts);\r\n\r\n\t        /**\r\n\t         * @type {module:zrender/core/PathProxy}\r\n\t         * @readOnly\r\n\t         */\r\n\t        this.path = new PathProxy();\r\n\t    }\r\n\r\n\t    Path.prototype = {\r\n\r\n\t        constructor: Path,\r\n\r\n\t        type: 'path',\r\n\r\n\t        __dirtyPath: true,\r\n\r\n\t        strokeContainThreshold: 5,\r\n\r\n\t        brush: function (ctx, prevEl) {\r\n\t            var style = this.style;\r\n\t            var path = this.path;\r\n\t            var hasStroke = style.hasStroke();\r\n\t            var hasFill = style.hasFill();\r\n\t            var fill = style.fill;\r\n\t            var stroke = style.stroke;\r\n\t            var hasFillGradient = hasFill && !!(fill.colorStops);\r\n\t            var hasStrokeGradient = hasStroke && !!(stroke.colorStops);\r\n\t            var hasFillPattern = hasFill && !!(fill.image);\r\n\t            var hasStrokePattern = hasStroke && !!(stroke.image);\r\n\r\n\t            style.bind(ctx, this, prevEl);\r\n\t            this.setTransform(ctx);\r\n\r\n\t            if (this.__dirty) {\r\n\t                var rect = this.getBoundingRect();\r\n\t                // Update gradient because bounding rect may changed\r\n\t                if (hasFillGradient) {\r\n\t                    this._fillGradient = style.getGradient(ctx, fill, rect);\r\n\t                }\r\n\t                if (hasStrokeGradient) {\r\n\t                    this._strokeGradient = style.getGradient(ctx, stroke, rect);\r\n\t                }\r\n\t            }\r\n\t            // Use the gradient or pattern\r\n\t            if (hasFillGradient) {\r\n\t                // PENDING If may have affect the state\r\n\t                ctx.fillStyle = this._fillGradient;\r\n\t            }\r\n\t            else if (hasFillPattern) {\r\n\t                ctx.fillStyle = getCanvasPattern.call(fill, ctx);\r\n\t            }\r\n\t            if (hasStrokeGradient) {\r\n\t                ctx.strokeStyle = this._strokeGradient;\r\n\t            }\r\n\t            else if (hasStrokePattern) {\r\n\t                ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\r\n\t            }\r\n\r\n\t            var lineDash = style.lineDash;\r\n\t            var lineDashOffset = style.lineDashOffset;\r\n\r\n\t            var ctxLineDash = !!ctx.setLineDash;\r\n\r\n\t            // Update path sx, sy\r\n\t            var scale = this.getGlobalScale();\r\n\t            path.setScale(scale[0], scale[1]);\r\n\r\n\t            // Proxy context\r\n\t            // Rebuild path in following 2 cases\r\n\t            // 1. Path is dirty\r\n\t            // 2. Path needs javascript implemented lineDash stroking.\r\n\t            //    In this case, lineDash information will not be saved in PathProxy\r\n\t            if (this.__dirtyPath || (\r\n\t                lineDash && !ctxLineDash && hasStroke\r\n\t            )) {\r\n\t                path = this.path.beginPath(ctx);\r\n\r\n\t                // Setting line dash before build path\r\n\t                if (lineDash && !ctxLineDash) {\r\n\t                    path.setLineDash(lineDash);\r\n\t                    path.setLineDashOffset(lineDashOffset);\r\n\t                }\r\n\r\n\t                this.buildPath(path, this.shape, false);\r\n\r\n\t                // Clear path dirty flag\r\n\t                this.__dirtyPath = false;\r\n\t            }\r\n\t            else {\r\n\t                // Replay path building\r\n\t                ctx.beginPath();\r\n\t                this.path.rebuildPath(ctx);\r\n\t            }\r\n\r\n\t            hasFill && path.fill(ctx);\r\n\r\n\t            if (lineDash && ctxLineDash) {\r\n\t                ctx.setLineDash(lineDash);\r\n\t                ctx.lineDashOffset = lineDashOffset;\r\n\t            }\r\n\r\n\t            hasStroke && path.stroke(ctx);\r\n\r\n\t            if (lineDash && ctxLineDash) {\r\n\t                // PENDING\r\n\t                // Remove lineDash\r\n\t                ctx.setLineDash([]);\r\n\t            }\r\n\r\n\r\n\t            this.restoreTransform(ctx);\r\n\r\n\t            // Draw rect text\r\n\t            if (style.text || style.text === 0) {\r\n\t                // var rect = this.getBoundingRect();\r\n\t                this.drawRectText(ctx, this.getBoundingRect());\r\n\t            }\r\n\t        },\r\n\r\n\t        // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\r\n\t        // Like in circle\r\n\t        buildPath: function (ctx, shapeCfg, inBundle) {},\r\n\r\n\t        getBoundingRect: function () {\r\n\t            var rect = this._rect;\r\n\t            var style = this.style;\r\n\t            var needsUpdateRect = !rect;\r\n\t            if (needsUpdateRect) {\r\n\t                var path = this.path;\r\n\t                if (this.__dirtyPath) {\r\n\t                    path.beginPath();\r\n\t                    this.buildPath(path, this.shape, false);\r\n\t                }\r\n\t                rect = path.getBoundingRect();\r\n\t            }\r\n\t            this._rect = rect;\r\n\r\n\t            if (style.hasStroke()) {\r\n\t                // Needs update rect with stroke lineWidth when\r\n\t                // 1. Element changes scale or lineWidth\r\n\t                // 2. Shape is changed\r\n\t                var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\r\n\t                if (this.__dirty || needsUpdateRect) {\r\n\t                    rectWithStroke.copy(rect);\r\n\t                    // FIXME Must after updateTransform\r\n\t                    var w = style.lineWidth;\r\n\t                    // PENDING, Min line width is needed when line is horizontal or vertical\r\n\t                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\r\n\r\n\t                    // Only add extra hover lineWidth when there are no fill\r\n\t                    if (!style.hasFill()) {\r\n\t                        w = Math.max(w, this.strokeContainThreshold || 4);\r\n\t                    }\r\n\t                    // Consider line width\r\n\t                    // Line scale can't be 0;\r\n\t                    if (lineScale > 1e-10) {\r\n\t                        rectWithStroke.width += w / lineScale;\r\n\t                        rectWithStroke.height += w / lineScale;\r\n\t                        rectWithStroke.x -= w / lineScale / 2;\r\n\t                        rectWithStroke.y -= w / lineScale / 2;\r\n\t                    }\r\n\t                }\r\n\r\n\t                // Return rect with stroke\r\n\t                return rectWithStroke;\r\n\t            }\r\n\r\n\t            return rect;\r\n\t        },\r\n\r\n\t        contain: function (x, y) {\r\n\t            var localPos = this.transformCoordToLocal(x, y);\r\n\t            var rect = this.getBoundingRect();\r\n\t            var style = this.style;\r\n\t            x = localPos[0];\r\n\t            y = localPos[1];\r\n\r\n\t            if (rect.contain(x, y)) {\r\n\t                var pathData = this.path.data;\r\n\t                if (style.hasStroke()) {\r\n\t                    var lineWidth = style.lineWidth;\r\n\t                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\r\n\t                    // Line scale can't be 0;\r\n\t                    if (lineScale > 1e-10) {\r\n\t                        // Only add extra hover lineWidth when there are no fill\r\n\t                        if (!style.hasFill()) {\r\n\t                            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\r\n\t                        }\r\n\t                        if (pathContain.containStroke(\r\n\t                            pathData, lineWidth / lineScale, x, y\r\n\t                        )) {\r\n\t                            return true;\r\n\t                        }\r\n\t                    }\r\n\t                }\r\n\t                if (style.hasFill()) {\r\n\t                    return pathContain.contain(pathData, x, y);\r\n\t                }\r\n\t            }\r\n\t            return false;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * @param  {boolean} dirtyPath\r\n\t         */\r\n\t        dirty: function (dirtyPath) {\r\n\t            if (dirtyPath == null) {\r\n\t                dirtyPath = true;\r\n\t            }\r\n\t            // Only mark dirty, not mark clean\r\n\t            if (dirtyPath) {\r\n\t                this.__dirtyPath = dirtyPath;\r\n\t                this._rect = null;\r\n\t            }\r\n\r\n\t            this.__dirty = true;\r\n\r\n\t            this.__zr && this.__zr.refresh();\r\n\r\n\t            // Used as a clipping path\r\n\t            if (this.__clipTarget) {\r\n\t                this.__clipTarget.dirty();\r\n\t            }\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Alias for animate('shape')\r\n\t         * @param {boolean} loop\r\n\t         */\r\n\t        animateShape: function (loop) {\r\n\t            return this.animate('shape', loop);\r\n\t        },\r\n\r\n\t        // Overwrite attrKV\r\n\t        attrKV: function (key, value) {\r\n\t            // FIXME\r\n\t            if (key === 'shape') {\r\n\t                this.setShape(value);\r\n\t                this.__dirtyPath = true;\r\n\t                this._rect = null;\r\n\t            }\r\n\t            else {\r\n\t                Displayable.prototype.attrKV.call(this, key, value);\r\n\t            }\r\n\t        },\r\n\r\n\t        /**\r\n\t         * @param {Object|string} key\r\n\t         * @param {*} value\r\n\t         */\r\n\t        setShape: function (key, value) {\r\n\t            var shape = this.shape;\r\n\t            // Path from string may not have shape\r\n\t            if (shape) {\r\n\t                if (zrUtil.isObject(key)) {\r\n\t                    for (var name in key) {\r\n\t                        shape[name] = key[name];\r\n\t                    }\r\n\t                }\r\n\t                else {\r\n\t                    shape[key] = value;\r\n\t                }\r\n\t                this.dirty(true);\r\n\t            }\r\n\t            return this;\r\n\t        },\r\n\r\n\t        getLineScale: function () {\r\n\t            var m = this.transform;\r\n\t            // Get the line scale.\r\n\t            // Determinant of `m` means how much the area is enlarged by the\r\n\t            // transformation. So its square root can be used as a scale factor\r\n\t            // for width.\r\n\t            return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10\r\n\t                ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1]))\r\n\t                : 1;\r\n\t        }\r\n\t    };\r\n\r\n\t    /**\r\n\t     * 扩展一个 Path element, 比如星形，圆等。\r\n\t     * Extend a path element\r\n\t     * @param {Object} props\r\n\t     * @param {string} props.type Path type\r\n\t     * @param {Function} props.init Initialize\r\n\t     * @param {Function} props.buildPath Overwrite buildPath method\r\n\t     * @param {Object} [props.style] Extended default style config\r\n\t     * @param {Object} [props.shape] Extended default shape config\r\n\t     */\r\n\t    Path.extend = function (defaults) {\r\n\t        var Sub = function (opts) {\r\n\t            Path.call(this, opts);\r\n\r\n\t            if (defaults.style) {\r\n\t                // Extend default style\r\n\t                this.style.extendFrom(defaults.style, false);\r\n\t            }\r\n\r\n\t            // Extend default shape\r\n\t            var defaultShape = defaults.shape;\r\n\t            if (defaultShape) {\r\n\t                this.shape = this.shape || {};\r\n\t                var thisShape = this.shape;\r\n\t                for (var name in defaultShape) {\r\n\t                    if (\r\n\t                        ! thisShape.hasOwnProperty(name)\r\n\t                        && defaultShape.hasOwnProperty(name)\r\n\t                    ) {\r\n\t                        thisShape[name] = defaultShape[name];\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\r\n\t            defaults.init && defaults.init.call(this, opts);\r\n\t        };\r\n\r\n\t        zrUtil.inherits(Sub, Path);\r\n\r\n\t        // FIXME 不能 extend position, rotation 等引用对象\r\n\t        for (var name in defaults) {\r\n\t            // Extending prototype values and methods\r\n\t            if (name !== 'style' && name !== 'shape') {\r\n\t                Sub.prototype[name] = defaults[name];\r\n\t            }\r\n\t        }\r\n\r\n\t        return Sub;\r\n\t    };\r\n\r\n\t    zrUtil.inherits(Path, Displayable);\r\n\r\n\t    module.exports = Path;\r\n\r\n\r\n/***/ },\r\n/* 46 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t/**\r\n\t * 可绘制的图形基类\r\n\t * Base class of all displayable graphic objects\r\n\t * @module zrender/graphic/Displayable\r\n\t */\r\n\r\n\r\n\r\n\t    var zrUtil = __webpack_require__(4);\r\n\r\n\t    var Style = __webpack_require__(47);\r\n\r\n\t    var Element = __webpack_require__(31);\r\n\t    var RectText = __webpack_require__(48);\r\n\t    // var Stateful = require('./mixin/Stateful');\r\n\r\n\t    /**\r\n\t     * @alias module:zrender/graphic/Displayable\r\n\t     * @extends module:zrender/Element\r\n\t     * @extends module:zrender/graphic/mixin/RectText\r\n\t     */\r\n\t    function Displayable(opts) {\r\n\r\n\t        opts = opts || {};\r\n\r\n\t        Element.call(this, opts);\r\n\r\n\t        // Extend properties\r\n\t        for (var name in opts) {\r\n\t            if (\r\n\t                opts.hasOwnProperty(name) &&\r\n\t                name !== 'style'\r\n\t            ) {\r\n\t                this[name] = opts[name];\r\n\t            }\r\n\t        }\r\n\r\n\t        /**\r\n\t         * @type {module:zrender/graphic/Style}\r\n\t         */\r\n\t        this.style = new Style(opts.style);\r\n\r\n\t        this._rect = null;\r\n\t        // Shapes for cascade clipping.\r\n\t        this.__clipPaths = [];\r\n\r\n\t        // FIXME Stateful must be mixined after style is setted\r\n\t        // Stateful.call(this, opts);\r\n\t    }\r\n\r\n\t    Displayable.prototype = {\r\n\r\n\t        constructor: Displayable,\r\n\r\n\t        type: 'displayable',\r\n\r\n\t        /**\r\n\t         * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\r\n\t         * Dirty flag. From which painter will determine if this displayable object needs brush\r\n\t         * @name module:zrender/graphic/Displayable#__dirty\r\n\t         * @type {boolean}\r\n\t         */\r\n\t        __dirty: true,\r\n\r\n\t        /**\r\n\t         * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\r\n\t         * If ignore drawing of the displayable object. Mouse event will still be triggered\r\n\t         * @name module:/zrender/graphic/Displayable#invisible\r\n\t         * @type {boolean}\r\n\t         * @default false\r\n\t         */\r\n\t        invisible: false,\r\n\r\n\t        /**\r\n\t         * @name module:/zrender/graphic/Displayable#z\r\n\t         * @type {number}\r\n\t         * @default 0\r\n\t         */\r\n\t        z: 0,\r\n\r\n\t        /**\r\n\t         * @name module:/zrender/graphic/Displayable#z\r\n\t         * @type {number}\r\n\t         * @default 0\r\n\t         */\r\n\t        z2: 0,\r\n\r\n\t        /**\r\n\t         * z层level，决定绘画在哪层canvas中\r\n\t         * @name module:/zrender/graphic/Displayable#zlevel\r\n\t         * @type {number}\r\n\t         * @default 0\r\n\t         */\r\n\t        zlevel: 0,\r\n\r\n\t        /**\r\n\t         * 是否可拖拽\r\n\t         * @name module:/zrender/graphic/Displayable#draggable\r\n\t         * @type {boolean}\r\n\t         * @default false\r\n\t         */\r\n\t        draggable: false,\r\n\r\n\t        /**\r\n\t         * 是否正在拖拽\r\n\t         * @name module:/zrender/graphic/Displayable#draggable\r\n\t         * @type {boolean}\r\n\t         * @default false\r\n\t         */\r\n\t        dragging: false,\r\n\r\n\t        /**\r\n\t         * 是否相应鼠标事件\r\n\t         * @name module:/zrender/graphic/Displayable#silent\r\n\t         * @type {boolean}\r\n\t         * @default false\r\n\t         */\r\n\t        silent: false,\r\n\r\n\t        /**\r\n\t         * If enable culling\r\n\t         * @type {boolean}\r\n\t         * @default false\r\n\t         */\r\n\t        culling: false,\r\n\r\n\t        /**\r\n\t         * Mouse cursor when hovered\r\n\t         * @name module:/zrender/graphic/Displayable#cursor\r\n\t         * @type {string}\r\n\t         */\r\n\t        cursor: 'pointer',\r\n\r\n\t        /**\r\n\t         * If hover area is bounding rect\r\n\t         * @name module:/zrender/graphic/Displayable#rectHover\r\n\t         * @type {string}\r\n\t         */\r\n\t        rectHover: false,\r\n\r\n\t        /**\r\n\t         * Render the element progressively when the value >= 0,\r\n\t         * usefull for large data.\r\n\t         * @type {number}\r\n\t         */\r\n\t        progressive: -1,\r\n\r\n\t        beforeBrush: function (ctx) {},\r\n\r\n\t        afterBrush: function (ctx) {},\r\n\r\n\t        /**\r\n\t         * 图形绘制方法\r\n\t         * @param {Canvas2DRenderingContext} ctx\r\n\t         */\r\n\t        // Interface\r\n\t        brush: function (ctx, prevEl) {},\r\n\r\n\t        /**\r\n\t         * 获取最小包围盒\r\n\t         * @return {module:zrender/core/BoundingRect}\r\n\t         */\r\n\t        // Interface\r\n\t        getBoundingRect: function () {},\r\n\r\n\t        /**\r\n\t         * 判断坐标 x, y 是否在图形上\r\n\t         * If displayable element contain coord x, y\r\n\t         * @param  {number} x\r\n\t         * @param  {number} y\r\n\t         * @return {boolean}\r\n\t         */\r\n\t        contain: function (x, y) {\r\n\t            return this.rectContain(x, y);\r\n\t        },\r\n\r\n\t        /**\r\n\t         * @param  {Function} cb\r\n\t         * @param  {}   context\r\n\t         */\r\n\t        traverse: function (cb, context) {\r\n\t            cb.call(context, this);\r\n\t        },\r\n\r\n\t        /**\r\n\t         * 判断坐标 x, y 是否在图形的包围盒上\r\n\t         * If bounding rect of element contain coord x, y\r\n\t         * @param  {number} x\r\n\t         * @param  {number} y\r\n\t         * @return {boolean}\r\n\t         */\r\n\t        rectContain: function (x, y) {\r\n\t            var coord = this.transformCoordToLocal(x, y);\r\n\t            var rect = this.getBoundingRect();\r\n\t            return rect.contain(coord[0], coord[1]);\r\n\t        },\r\n\r\n\t        /**\r\n\t         * 标记图形元素为脏，并且在下一帧重绘\r\n\t         * Mark displayable element dirty and refresh next frame\r\n\t         */\r\n\t        dirty: function () {\r\n\t            this.__dirty = true;\r\n\r\n\t            this._rect = null;\r\n\r\n\t            this.__zr && this.__zr.refresh();\r\n\t        },\r\n\r\n\t        /**\r\n\t         * 图形是否会触发事件\r\n\t         * If displayable object binded any event\r\n\t         * @return {boolean}\r\n\t         */\r\n\t        // TODO, 通过 bind 绑定的事件\r\n\t        // isSilent: function () {\r\n\t        //     return !(\r\n\t        //         this.hoverable || this.draggable\r\n\t        //         || this.onmousemove || this.onmouseover || this.onmouseout\r\n\t        //         || this.onmousedown || this.onmouseup || this.onclick\r\n\t        //         || this.ondragenter || this.ondragover || this.ondragleave\r\n\t        //         || this.ondrop\r\n\t        //     );\r\n\t        // },\r\n\t        /**\r\n\t         * Alias for animate('style')\r\n\t         * @param {boolean} loop\r\n\t         */\r\n\t        animateStyle: function (loop) {\r\n\t            return this.animate('style', loop);\r\n\t        },\r\n\r\n\t        attrKV: function (key, value) {\r\n\t            if (key !== 'style') {\r\n\t                Element.prototype.attrKV.call(this, key, value);\r\n\t            }\r\n\t            else {\r\n\t                this.style.set(value);\r\n\t            }\r\n\t        },\r\n\r\n\t        /**\r\n\t         * @param {Object|string} key\r\n\t         * @param {*} value\r\n\t         */\r\n\t        setStyle: function (key, value) {\r\n\t            this.style.set(key, value);\r\n\t            this.dirty(false);\r\n\t            return this;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Use given style object\r\n\t         * @param  {Object} obj\r\n\t         */\r\n\t        useStyle: function (obj) {\r\n\t            this.style = new Style(obj);\r\n\t            this.dirty(false);\r\n\t            return this;\r\n\t        }\r\n\t    };\r\n\r\n\t    zrUtil.inherits(Displayable, Element);\r\n\r\n\t    zrUtil.mixin(Displayable, RectText);\r\n\t    // zrUtil.mixin(Displayable, Stateful);\r\n\r\n\t    module.exports = Displayable;\r\n\r\n\r\n/***/ },\r\n/* 47 */\r\n/***/ function(module, exports) {\r\n\r\n\t/**\r\n\t * @module zrender/graphic/Style\r\n\t */\r\n\r\n\r\n\t    var STYLE_COMMON_PROPS = [\r\n\t        ['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'],\r\n\t        ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]\r\n\t    ];\r\n\r\n\t    // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\r\n\t    // var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\r\n\r\n\t    var Style = function (opts) {\r\n\t        this.extendFrom(opts);\r\n\t    };\r\n\r\n\t    function createLinearGradient(ctx, obj, rect) {\r\n\t        // var size =\r\n\t        var x = obj.x;\r\n\t        var x2 = obj.x2;\r\n\t        var y = obj.y;\r\n\t        var y2 = obj.y2;\r\n\r\n\t        if (!obj.global) {\r\n\t            x = x * rect.width + rect.x;\r\n\t            x2 = x2 * rect.width + rect.x;\r\n\t            y = y * rect.height + rect.y;\r\n\t            y2 = y2 * rect.height + rect.y;\r\n\t        }\r\n\r\n\t        var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\r\n\r\n\t        return canvasGradient;\r\n\t    }\r\n\r\n\t    function createRadialGradient(ctx, obj, rect) {\r\n\t        var width = rect.width;\r\n\t        var height = rect.height;\r\n\t        var min = Math.min(width, height);\r\n\r\n\t        var x = obj.x;\r\n\t        var y = obj.y;\r\n\t        var r = obj.r;\r\n\t        if (!obj.global) {\r\n\t            x = x * width + rect.x;\r\n\t            y = y * height + rect.y;\r\n\t            r = r * min;\r\n\t        }\r\n\r\n\t        var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\r\n\r\n\t        return canvasGradient;\r\n\t    }\r\n\r\n\r\n\t    Style.prototype = {\r\n\r\n\t        constructor: Style,\r\n\r\n\t        /**\r\n\t         * @type {string}\r\n\t         */\r\n\t        fill: '#000000',\r\n\r\n\t        /**\r\n\t         * @type {string}\r\n\t         */\r\n\t        stroke: null,\r\n\r\n\t        /**\r\n\t         * @type {number}\r\n\t         */\r\n\t        opacity: 1,\r\n\r\n\t        /**\r\n\t         * @type {Array.<number>}\r\n\t         */\r\n\t        lineDash: null,\r\n\r\n\t        /**\r\n\t         * @type {number}\r\n\t         */\r\n\t        lineDashOffset: 0,\r\n\r\n\t        /**\r\n\t         * @type {number}\r\n\t         */\r\n\t        shadowBlur: 0,\r\n\r\n\t        /**\r\n\t         * @type {number}\r\n\t         */\r\n\t        shadowOffsetX: 0,\r\n\r\n\t        /**\r\n\t         * @type {number}\r\n\t         */\r\n\t        shadowOffsetY: 0,\r\n\r\n\t        /**\r\n\t         * @type {number}\r\n\t         */\r\n\t        lineWidth: 1,\r\n\r\n\t        /**\r\n\t         * If stroke ignore scale\r\n\t         * @type {Boolean}\r\n\t         */\r\n\t        strokeNoScale: false,\r\n\r\n\t        // Bounding rect text configuration\r\n\t        // Not affected by element transform\r\n\t        /**\r\n\t         * @type {string}\r\n\t         */\r\n\t        text: null,\r\n\r\n\t        /**\r\n\t         * @type {string}\r\n\t         */\r\n\t        textFill: '#000',\r\n\r\n\t        /**\r\n\t         * @type {string}\r\n\t         */\r\n\t        textStroke: null,\r\n\r\n\t        /**\r\n\t         * 'inside', 'left', 'right', 'top', 'bottom'\r\n\t         * [x, y]\r\n\t         * @type {string|Array.<number>}\r\n\t         * @default 'inside'\r\n\t         */\r\n\t        textPosition: 'inside',\r\n\r\n\t        /**\r\n\t         * @type {string}\r\n\t         */\r\n\t        textBaseline: null,\r\n\r\n\t        /**\r\n\t         * @type {string}\r\n\t         */\r\n\t        textAlign: null,\r\n\r\n\t        /**\r\n\t         * @type {string}\r\n\t         */\r\n\t        textVerticalAlign: null,\r\n\r\n\t        /**\r\n\t         * @type {number}\r\n\t         */\r\n\t        textDistance: 5,\r\n\r\n\t        /**\r\n\t         * @type {number}\r\n\t         */\r\n\t        textShadowBlur: 0,\r\n\r\n\t        /**\r\n\t         * @type {number}\r\n\t         */\r\n\t        textShadowOffsetX: 0,\r\n\r\n\t        /**\r\n\t         * @type {number}\r\n\t         */\r\n\t        textShadowOffsetY: 0,\r\n\r\n\t        /**\r\n\t         * @type {string}\r\n\t         * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\r\n\t         */\r\n\t        blend: null,\r\n\r\n\t        /**\r\n\t         * @param {CanvasRenderingContext2D} ctx\r\n\t         */\r\n\t        bind: function (ctx, el, prevEl) {\r\n\t            var style = this;\r\n\t            var prevStyle = prevEl && prevEl.style;\r\n\t            var firstDraw = !prevStyle;\r\n\r\n\t            for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\r\n\t                var prop = STYLE_COMMON_PROPS[i];\r\n\t                var styleName = prop[0];\r\n\r\n\t                if (firstDraw || style[styleName] !== prevStyle[styleName]) {\r\n\t                    // FIXME Invalid property value will cause style leak from previous element.\r\n\t                    ctx[styleName] = style[styleName] || prop[1];\r\n\t                }\r\n\t            }\r\n\r\n\t            if ((firstDraw || style.fill !== prevStyle.fill)) {\r\n\t                ctx.fillStyle = style.fill;\r\n\t            }\r\n\t            if ((firstDraw || style.stroke !== prevStyle.stroke)) {\r\n\t                ctx.strokeStyle = style.stroke;\r\n\t            }\r\n\t            if ((firstDraw || style.opacity !== prevStyle.opacity)) {\r\n\t                ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\r\n\t            }\r\n\r\n\t            if ((firstDraw || style.blend !== prevStyle.blend)) {\r\n\t                ctx.globalCompositeOperation = style.blend || 'source-over';\r\n\t            }\r\n\t            if (this.hasStroke()) {\r\n\t                var lineWidth = style.lineWidth;\r\n\t                ctx.lineWidth = lineWidth / (\r\n\t                    (this.strokeNoScale && el && el.getLineScale) ? el.getLineScale() : 1\r\n\t                );\r\n\t            }\r\n\t        },\r\n\r\n\t        hasFill: function () {\r\n\t            var fill = this.fill;\r\n\t            return fill != null && fill !== 'none';\r\n\t        },\r\n\r\n\t        hasStroke: function () {\r\n\t            var stroke = this.stroke;\r\n\t            return stroke != null && stroke !== 'none' && this.lineWidth > 0;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Extend from other style\r\n\t         * @param {zrender/graphic/Style} otherStyle\r\n\t         * @param {boolean} overwrite\r\n\t         */\r\n\t        extendFrom: function (otherStyle, overwrite) {\r\n\t            if (otherStyle) {\r\n\t                var target = this;\r\n\t                for (var name in otherStyle) {\r\n\t                    if (otherStyle.hasOwnProperty(name)\r\n\t                        && (overwrite || ! target.hasOwnProperty(name))\r\n\t                    ) {\r\n\t                        target[name] = otherStyle[name];\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Batch setting style with a given object\r\n\t         * @param {Object|string} obj\r\n\t         * @param {*} [obj]\r\n\t         */\r\n\t        set: function (obj, value) {\r\n\t            if (typeof obj === 'string') {\r\n\t                this[obj] = value;\r\n\t            }\r\n\t            else {\r\n\t                this.extendFrom(obj, true);\r\n\t            }\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Clone\r\n\t         * @return {zrender/graphic/Style} [description]\r\n\t         */\r\n\t        clone: function () {\r\n\t            var newStyle = new this.constructor();\r\n\t            newStyle.extendFrom(this, true);\r\n\t            return newStyle;\r\n\t        },\r\n\r\n\t        getGradient: function (ctx, obj, rect) {\r\n\t            var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\r\n\t            var canvasGradient = method(ctx, obj, rect);\r\n\t            var colorStops = obj.colorStops;\r\n\t            for (var i = 0; i < colorStops.length; i++) {\r\n\t                canvasGradient.addColorStop(\r\n\t                    colorStops[i].offset, colorStops[i].color\r\n\t                );\r\n\t            }\r\n\t            return canvasGradient;\r\n\t        }\r\n\t    };\r\n\r\n\t    var styleProto = Style.prototype;\r\n\t    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\r\n\t        var prop = STYLE_COMMON_PROPS[i];\r\n\t        if (!(prop[0] in styleProto)) {\r\n\t            styleProto[prop[0]] = prop[1];\r\n\t        }\r\n\t    }\r\n\r\n\t    // Provide for others\r\n\t    Style.getGradient = styleProto.getGradient;\r\n\r\n\t    module.exports = Style;\r\n\r\n\r\n/***/ },\r\n/* 48 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t/**\r\n\t * Mixin for drawing text in a element bounding rect\r\n\t * @module zrender/mixin/RectText\r\n\t */\r\n\r\n\r\n\r\n\t    var textContain = __webpack_require__(8);\r\n\t    var BoundingRect = __webpack_require__(9);\r\n\r\n\t    var tmpRect = new BoundingRect();\r\n\r\n\t    var RectText = function () {};\r\n\r\n\t    function parsePercent(value, maxValue) {\r\n\t        if (typeof value === 'string') {\r\n\t            if (value.lastIndexOf('%') >= 0) {\r\n\t                return parseFloat(value) / 100 * maxValue;\r\n\t            }\r\n\t            return parseFloat(value);\r\n\t        }\r\n\t        return value;\r\n\t    }\r\n\r\n\t    function setTransform(ctx, m) {\r\n\t        ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\r\n\t    }\r\n\r\n\t    RectText.prototype = {\r\n\r\n\t        constructor: RectText,\r\n\r\n\t        /**\r\n\t         * Draw text in a rect with specified position.\r\n\t         * @param  {CanvasRenderingContext} ctx\r\n\t         * @param  {Object} rect Displayable rect\r\n\t         * @return {Object} textRect Alternative precalculated text bounding rect\r\n\t         */\r\n\t        drawRectText: function (ctx, rect, textRect) {\r\n\t            var style = this.style;\r\n\t            var text = style.text;\r\n\t            // Convert to string\r\n\t            text != null && (text += '');\r\n\t            if (!text) {\r\n\t                return;\r\n\t            }\r\n\r\n\t            // FIXME\r\n\t            ctx.save();\r\n\r\n\t            var x;\r\n\t            var y;\r\n\t            var textPosition = style.textPosition;\r\n\t            var distance = style.textDistance;\r\n\t            var align = style.textAlign;\r\n\t            var font = style.textFont || style.font;\r\n\t            var baseline = style.textBaseline;\r\n\t            var verticalAlign = style.textVerticalAlign;\r\n\r\n\t            textRect = textRect || textContain.getBoundingRect(text, font, align, baseline);\r\n\r\n\t            // Transform rect to view space\r\n\t            var transform = this.transform;\r\n\t            if (transform) {\r\n\t                tmpRect.copy(rect);\r\n\t                tmpRect.applyTransform(transform);\r\n\t                rect = tmpRect;\r\n\t            }\r\n\r\n\t            // Text position represented by coord\r\n\t            if (textPosition instanceof Array) {\r\n\t                // Percent\r\n\t                x = rect.x + parsePercent(textPosition[0], rect.width);\r\n\t                y = rect.y + parsePercent(textPosition[1], rect.height);\r\n\t                align = align || 'left';\r\n\t                baseline = baseline || 'top';\r\n\r\n\t                if (verticalAlign) {\r\n\t                    switch (verticalAlign) {\r\n\t                        case 'middle':\r\n\t                            y -= textRect.height / 2 - textRect.lineHeight / 2;\r\n\t                            break;\r\n\t                        case 'bottom':\r\n\t                            y -= textRect.height - textRect.lineHeight / 2;\r\n\t                            break;\r\n\t                        default:\r\n\t                            y += textRect.lineHeight / 2;\r\n\t                    }\r\n\t                    // Force bseline to be middle\r\n\t                    baseline = 'middle';\r\n\t                }\r\n\t            }\r\n\t            else {\r\n\t                var res = textContain.adjustTextPositionOnRect(\r\n\t                    textPosition, rect, textRect, distance\r\n\t                );\r\n\t                x = res.x;\r\n\t                y = res.y;\r\n\t                // Default align and baseline when has textPosition\r\n\t                align = align || res.textAlign;\r\n\t                baseline = baseline || res.textBaseline;\r\n\t            }\r\n\r\n\t            // Use canvas default left textAlign. Giving invalid value will cause state not change\r\n\t            ctx.textAlign = align || 'left';\r\n\t            // Use canvas default alphabetic baseline\r\n\t            ctx.textBaseline = baseline || 'alphabetic';\r\n\r\n\t            var textFill = style.textFill;\r\n\t            var textStroke = style.textStroke;\r\n\t            textFill && (ctx.fillStyle = textFill);\r\n\t            textStroke && (ctx.strokeStyle = textStroke);\r\n\t            ctx.font = font;\r\n\r\n\t            // Text shadow\r\n\t            // Always set shadowBlur and shadowOffset to avoid leak from displayable\r\n\t            ctx.shadowBlur = style.textShadowBlur;\r\n\t            ctx.shadowColor = style.textShadowColor || 'transparent';\r\n\t            ctx.shadowOffsetX = style.textShadowOffsetX;\r\n\t            ctx.shadowOffsetY = style.textShadowOffsetY;\r\n\r\n\t            var textLines = text.split('\\n');\r\n\t            for (var i = 0; i < textLines.length; i++) {\r\n\t                textFill && ctx.fillText(textLines[i], x, y);\r\n\t                textStroke && ctx.strokeText(textLines[i], x, y);\r\n\t                y += textRect.lineHeight;\r\n\t            }\r\n\r\n\t            ctx.restore();\r\n\t        }\r\n\t    };\r\n\r\n\t    module.exports = RectText;\r\n\r\n\r\n/***/ },\r\n/* 49 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t'use strict';\r\n\t/**\r\n\t * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\r\n\t * 可以用于 isInsidePath 判断以及获取boundingRect\r\n\t *\r\n\t * @module zrender/core/PathProxy\r\n\t * @author Yi Shen (http://www.github.com/pissang)\r\n\t */\r\n\r\n\t // TODO getTotalLength, getPointAtLength\r\n\r\n\r\n\t    var curve = __webpack_require__(50);\r\n\t    var vec2 = __webpack_require__(10);\r\n\t    var bbox = __webpack_require__(51);\r\n\t    var BoundingRect = __webpack_require__(9);\r\n\t    var dpr = __webpack_require__(41).devicePixelRatio;\r\n\r\n\t    var CMD = {\r\n\t        M: 1,\r\n\t        L: 2,\r\n\t        C: 3,\r\n\t        Q: 4,\r\n\t        A: 5,\r\n\t        Z: 6,\r\n\t        // Rect\r\n\t        R: 7\r\n\t    };\r\n\r\n\t    var min = [];\r\n\t    var max = [];\r\n\t    var min2 = [];\r\n\t    var max2 = [];\r\n\t    var mathMin = Math.min;\r\n\t    var mathMax = Math.max;\r\n\t    var mathCos = Math.cos;\r\n\t    var mathSin = Math.sin;\r\n\t    var mathSqrt = Math.sqrt;\r\n\t    var mathAbs = Math.abs;\r\n\r\n\t    var hasTypedArray = typeof Float32Array != 'undefined';\r\n\r\n\t    /**\r\n\t     * @alias module:zrender/core/PathProxy\r\n\t     * @constructor\r\n\t     */\r\n\t    var PathProxy = function () {\r\n\r\n\t        /**\r\n\t         * Path data. Stored as flat array\r\n\t         * @type {Array.<Object>}\r\n\t         */\r\n\t        this.data = [];\r\n\r\n\t        this._len = 0;\r\n\r\n\t        this._ctx = null;\r\n\r\n\t        this._xi = 0;\r\n\t        this._yi = 0;\r\n\r\n\t        this._x0 = 0;\r\n\t        this._y0 = 0;\r\n\r\n\t        // Unit x, Unit y. Provide for avoiding drawing that too short line segment\r\n\t        this._ux = 0;\r\n\t        this._uy = 0;\r\n\t    };\r\n\r\n\t    /**\r\n\t     * 快速计算Path包围盒（并不是最小包围盒）\r\n\t     * @return {Object}\r\n\t     */\r\n\t    PathProxy.prototype = {\r\n\r\n\t        constructor: PathProxy,\r\n\r\n\t        _lineDash: null,\r\n\r\n\t        _dashOffset: 0,\r\n\r\n\t        _dashIdx: 0,\r\n\r\n\t        _dashSum: 0,\r\n\r\n\t        /**\r\n\t         * @readOnly\r\n\t         */\r\n\t        setScale: function (sx, sy) {\r\n\t            this._ux = mathAbs(1 / dpr / sx) || 0;\r\n\t            this._uy = mathAbs(1 / dpr / sy) || 0;\r\n\t        },\r\n\r\n\t        getContext: function () {\r\n\t            return this._ctx;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * @param  {CanvasRenderingContext2D} ctx\r\n\t         * @return {module:zrender/core/PathProxy}\r\n\t         */\r\n\t        beginPath: function (ctx) {\r\n\t            this._ctx = ctx;\r\n\r\n\t            ctx && ctx.beginPath();\r\n\r\n\t            // Reset\r\n\t            this._len = 0;\r\n\r\n\t            if (this._lineDash) {\r\n\t                this._lineDash = null;\r\n\r\n\t                this._dashOffset = 0;\r\n\t            }\r\n\r\n\t            return this;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * @param  {number} x\r\n\t         * @param  {number} y\r\n\t         * @return {module:zrender/core/PathProxy}\r\n\t         */\r\n\t        moveTo: function (x, y) {\r\n\t            this.addData(CMD.M, x, y);\r\n\t            this._ctx && this._ctx.moveTo(x, y);\r\n\r\n\t            // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\r\n\t            // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\r\n\t            // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\r\n\t            // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\r\n\t            this._x0 = x;\r\n\t            this._y0 = y;\r\n\r\n\t            this._xi = x;\r\n\t            this._yi = y;\r\n\r\n\t            return this;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * @param  {number} x\r\n\t         * @param  {number} y\r\n\t         * @return {module:zrender/core/PathProxy}\r\n\t         */\r\n\t        lineTo: function (x, y) {\r\n\t            var exceedUnit = mathAbs(x - this._xi) > this._ux\r\n\t                || mathAbs(y - this._yi) > this._uy\r\n\t                // Force draw the first segment\r\n\t                || this._len < 5;\r\n\r\n\t            this.addData(CMD.L, x, y);\r\n\r\n\t            if (this._ctx && exceedUnit) {\r\n\t                this._needsDash() ? this._dashedLineTo(x, y)\r\n\t                    : this._ctx.lineTo(x, y);\r\n\t            }\r\n\t            if (exceedUnit) {\r\n\t                this._xi = x;\r\n\t                this._yi = y;\r\n\t            }\r\n\r\n\t            return this;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * @param  {number} x1\r\n\t         * @param  {number} y1\r\n\t         * @param  {number} x2\r\n\t         * @param  {number} y2\r\n\t         * @param  {number} x3\r\n\t         * @param  {number} y3\r\n\t         * @return {module:zrender/core/PathProxy}\r\n\t         */\r\n\t        bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\r\n\t            this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\r\n\t            if (this._ctx) {\r\n\t                this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3)\r\n\t                    : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\r\n\t            }\r\n\t            this._xi = x3;\r\n\t            this._yi = y3;\r\n\t            return this;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * @param  {number} x1\r\n\t         * @param  {number} y1\r\n\t         * @param  {number} x2\r\n\t         * @param  {number} y2\r\n\t         * @return {module:zrender/core/PathProxy}\r\n\t         */\r\n\t        quadraticCurveTo: function (x1, y1, x2, y2) {\r\n\t            this.addData(CMD.Q, x1, y1, x2, y2);\r\n\t            if (this._ctx) {\r\n\t                this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2)\r\n\t                    : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\r\n\t            }\r\n\t            this._xi = x2;\r\n\t            this._yi = y2;\r\n\t            return this;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * @param  {number} cx\r\n\t         * @param  {number} cy\r\n\t         * @param  {number} r\r\n\t         * @param  {number} startAngle\r\n\t         * @param  {number} endAngle\r\n\t         * @param  {boolean} anticlockwise\r\n\t         * @return {module:zrender/core/PathProxy}\r\n\t         */\r\n\t        arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\r\n\t            this.addData(\r\n\t                CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1\r\n\t            );\r\n\t            this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\r\n\r\n\t            this._xi = mathCos(endAngle) * r + cx;\r\n\t            this._xi = mathSin(endAngle) * r + cx;\r\n\t            return this;\r\n\t        },\r\n\r\n\t        // TODO\r\n\t        arcTo: function (x1, y1, x2, y2, radius) {\r\n\t            if (this._ctx) {\r\n\t                this._ctx.arcTo(x1, y1, x2, y2, radius);\r\n\t            }\r\n\t            return this;\r\n\t        },\r\n\r\n\t        // TODO\r\n\t        rect: function (x, y, w, h) {\r\n\t            this._ctx && this._ctx.rect(x, y, w, h);\r\n\t            this.addData(CMD.R, x, y, w, h);\r\n\t            return this;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * @return {module:zrender/core/PathProxy}\r\n\t         */\r\n\t        closePath: function () {\r\n\t            this.addData(CMD.Z);\r\n\r\n\t            var ctx = this._ctx;\r\n\t            var x0 = this._x0;\r\n\t            var y0 = this._y0;\r\n\t            if (ctx) {\r\n\t                this._needsDash() && this._dashedLineTo(x0, y0);\r\n\t                ctx.closePath();\r\n\t            }\r\n\r\n\t            this._xi = x0;\r\n\t            this._yi = y0;\r\n\t            return this;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\r\n\t         * stroke 同样\r\n\t         * @param {CanvasRenderingContext2D} ctx\r\n\t         * @return {module:zrender/core/PathProxy}\r\n\t         */\r\n\t        fill: function (ctx) {\r\n\t            ctx && ctx.fill();\r\n\t            this.toStatic();\r\n\t        },\r\n\r\n\t        /**\r\n\t         * @param {CanvasRenderingContext2D} ctx\r\n\t         * @return {module:zrender/core/PathProxy}\r\n\t         */\r\n\t        stroke: function (ctx) {\r\n\t            ctx && ctx.stroke();\r\n\t            this.toStatic();\r\n\t        },\r\n\r\n\t        /**\r\n\t         * 必须在其它绘制命令前调用\r\n\t         * Must be invoked before all other path drawing methods\r\n\t         * @return {module:zrender/core/PathProxy}\r\n\t         */\r\n\t        setLineDash: function (lineDash) {\r\n\t            if (lineDash instanceof Array) {\r\n\t                this._lineDash = lineDash;\r\n\r\n\t                this._dashIdx = 0;\r\n\r\n\t                var lineDashSum = 0;\r\n\t                for (var i = 0; i < lineDash.length; i++) {\r\n\t                    lineDashSum += lineDash[i];\r\n\t                }\r\n\t                this._dashSum = lineDashSum;\r\n\t            }\r\n\t            return this;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * 必须在其它绘制命令前调用\r\n\t         * Must be invoked before all other path drawing methods\r\n\t         * @return {module:zrender/core/PathProxy}\r\n\t         */\r\n\t        setLineDashOffset: function (offset) {\r\n\t            this._dashOffset = offset;\r\n\t            return this;\r\n\t        },\r\n\r\n\t        /**\r\n\t         *\r\n\t         * @return {boolean}\r\n\t         */\r\n\t        len: function () {\r\n\t            return this._len;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * 直接设置 Path 数据\r\n\t         */\r\n\t        setData: function (data) {\r\n\r\n\t            var len = data.length;\r\n\r\n\t            if (! (this.data && this.data.length == len) && hasTypedArray) {\r\n\t                this.data = new Float32Array(len);\r\n\t            }\r\n\r\n\t            for (var i = 0; i < len; i++) {\r\n\t                this.data[i] = data[i];\r\n\t            }\r\n\r\n\t            this._len = len;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * 添加子路径\r\n\t         * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\r\n\t         */\r\n\t        appendPath: function (path) {\r\n\t            if (!(path instanceof Array)) {\r\n\t                path = [path];\r\n\t            }\r\n\t            var len = path.length;\r\n\t            var appendSize = 0;\r\n\t            var offset = this._len;\r\n\t            for (var i = 0; i < len; i++) {\r\n\t                appendSize += path[i].len();\r\n\t            }\r\n\t            if (hasTypedArray && (this.data instanceof Float32Array)) {\r\n\t                this.data = new Float32Array(offset + appendSize);\r\n\t            }\r\n\t            for (var i = 0; i < len; i++) {\r\n\t                var appendPathData = path[i].data;\r\n\t                for (var k = 0; k < appendPathData.length; k++) {\r\n\t                    this.data[offset++] = appendPathData[k];\r\n\t                }\r\n\t            }\r\n\t            this._len = offset;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * 填充 Path 数据。\r\n\t         * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\r\n\t         */\r\n\t        addData: function (cmd) {\r\n\t            var data = this.data;\r\n\t            if (this._len + arguments.length > data.length) {\r\n\t                // 因为之前的数组已经转换成静态的 Float32Array\r\n\t                // 所以不够用时需要扩展一个新的动态数组\r\n\t                this._expandData();\r\n\t                data = this.data;\r\n\t            }\r\n\t            for (var i = 0; i < arguments.length; i++) {\r\n\t                data[this._len++] = arguments[i];\r\n\t            }\r\n\r\n\t            this._prevCmd = cmd;\r\n\t        },\r\n\r\n\t        _expandData: function () {\r\n\t            // Only if data is Float32Array\r\n\t            if (!(this.data instanceof Array)) {\r\n\t                var newData = [];\r\n\t                for (var i = 0; i < this._len; i++) {\r\n\t                    newData[i] = this.data[i];\r\n\t                }\r\n\t                this.data = newData;\r\n\t            }\r\n\t        },\r\n\r\n\t        /**\r\n\t         * If needs js implemented dashed line\r\n\t         * @return {boolean}\r\n\t         * @private\r\n\t         */\r\n\t        _needsDash: function () {\r\n\t            return this._lineDash;\r\n\t        },\r\n\r\n\t        _dashedLineTo: function (x1, y1) {\r\n\t            var dashSum = this._dashSum;\r\n\t            var offset = this._dashOffset;\r\n\t            var lineDash = this._lineDash;\r\n\t            var ctx = this._ctx;\r\n\r\n\t            var x0 = this._xi;\r\n\t            var y0 = this._yi;\r\n\t            var dx = x1 - x0;\r\n\t            var dy = y1 - y0;\r\n\t            var dist = mathSqrt(dx * dx + dy * dy);\r\n\t            var x = x0;\r\n\t            var y = y0;\r\n\t            var dash;\r\n\t            var nDash = lineDash.length;\r\n\t            var idx;\r\n\t            dx /= dist;\r\n\t            dy /= dist;\r\n\r\n\t            if (offset < 0) {\r\n\t                // Convert to positive offset\r\n\t                offset = dashSum + offset;\r\n\t            }\r\n\t            offset %= dashSum;\r\n\t            x -= offset * dx;\r\n\t            y -= offset * dy;\r\n\r\n\t            while ((dx > 0 && x <= x1) || (dx < 0 && x >= x1)\r\n\t            || (dx == 0 && ((dy > 0 && y <= y1) || (dy < 0 && y >= y1)))) {\r\n\t                idx = this._dashIdx;\r\n\t                dash = lineDash[idx];\r\n\t                x += dx * dash;\r\n\t                y += dy * dash;\r\n\t                this._dashIdx = (idx + 1) % nDash;\r\n\t                // Skip positive offset\r\n\t                if ((dx > 0 && x < x0) || (dx < 0 && x > x0) || (dy > 0 && y < y0) || (dy < 0 && y > y0)) {\r\n\t                    continue;\r\n\t                }\r\n\t                ctx[idx % 2 ? 'moveTo' : 'lineTo'](\r\n\t                    dx >= 0 ? mathMin(x, x1) : mathMax(x, x1),\r\n\t                    dy >= 0 ? mathMin(y, y1) : mathMax(y, y1)\r\n\t                );\r\n\t            }\r\n\t            // Offset for next lineTo\r\n\t            dx = x - x1;\r\n\t            dy = y - y1;\r\n\t            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\r\n\t        },\r\n\r\n\t        // Not accurate dashed line to\r\n\t        _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\r\n\t            var dashSum = this._dashSum;\r\n\t            var offset = this._dashOffset;\r\n\t            var lineDash = this._lineDash;\r\n\t            var ctx = this._ctx;\r\n\r\n\t            var x0 = this._xi;\r\n\t            var y0 = this._yi;\r\n\t            var t;\r\n\t            var dx;\r\n\t            var dy;\r\n\t            var cubicAt = curve.cubicAt;\r\n\t            var bezierLen = 0;\r\n\t            var idx = this._dashIdx;\r\n\t            var nDash = lineDash.length;\r\n\r\n\t            var x;\r\n\t            var y;\r\n\r\n\t            var tmpLen = 0;\r\n\r\n\t            if (offset < 0) {\r\n\t                // Convert to positive offset\r\n\t                offset = dashSum + offset;\r\n\t            }\r\n\t            offset %= dashSum;\r\n\t            // Bezier approx length\r\n\t            for (t = 0; t < 1; t += 0.1) {\r\n\t                dx = cubicAt(x0, x1, x2, x3, t + 0.1)\r\n\t                    - cubicAt(x0, x1, x2, x3, t);\r\n\t                dy = cubicAt(y0, y1, y2, y3, t + 0.1)\r\n\t                    - cubicAt(y0, y1, y2, y3, t);\r\n\t                bezierLen += mathSqrt(dx * dx + dy * dy);\r\n\t            }\r\n\r\n\t            // Find idx after add offset\r\n\t            for (; idx < nDash; idx++) {\r\n\t                tmpLen += lineDash[idx];\r\n\t                if (tmpLen > offset) {\r\n\t                    break;\r\n\t                }\r\n\t            }\r\n\t            t = (tmpLen - offset) / bezierLen;\r\n\r\n\t            while (t <= 1) {\r\n\r\n\t                x = cubicAt(x0, x1, x2, x3, t);\r\n\t                y = cubicAt(y0, y1, y2, y3, t);\r\n\r\n\t                // Use line to approximate dashed bezier\r\n\t                // Bad result if dash is long\r\n\t                idx % 2 ? ctx.moveTo(x, y)\r\n\t                    : ctx.lineTo(x, y);\r\n\r\n\t                t += lineDash[idx] / bezierLen;\r\n\r\n\t                idx = (idx + 1) % nDash;\r\n\t            }\r\n\r\n\t            // Finish the last segment and calculate the new offset\r\n\t            (idx % 2 !== 0) && ctx.lineTo(x3, y3);\r\n\t            dx = x3 - x;\r\n\t            dy = y3 - y;\r\n\t            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\r\n\t        },\r\n\r\n\t        _dashedQuadraticTo: function (x1, y1, x2, y2) {\r\n\t            // Convert quadratic to cubic using degree elevation\r\n\t            var x3 = x2;\r\n\t            var y3 = y2;\r\n\t            x2 = (x2 + 2 * x1) / 3;\r\n\t            y2 = (y2 + 2 * y1) / 3;\r\n\t            x1 = (this._xi + 2 * x1) / 3;\r\n\t            y1 = (this._yi + 2 * y1) / 3;\r\n\r\n\t            this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\r\n\t        },\r\n\r\n\t        /**\r\n\t         * 转成静态的 Float32Array 减少堆内存占用\r\n\t         * Convert dynamic array to static Float32Array\r\n\t         */\r\n\t        toStatic: function () {\r\n\t            var data = this.data;\r\n\t            if (data instanceof Array) {\r\n\t                data.length = this._len;\r\n\t                if (hasTypedArray) {\r\n\t                    this.data = new Float32Array(data);\r\n\t                }\r\n\t            }\r\n\t        },\r\n\r\n\t        /**\r\n\t         * @return {module:zrender/core/BoundingRect}\r\n\t         */\r\n\t        getBoundingRect: function () {\r\n\t            min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\r\n\t            max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\r\n\r\n\t            var data = this.data;\r\n\t            var xi = 0;\r\n\t            var yi = 0;\r\n\t            var x0 = 0;\r\n\t            var y0 = 0;\r\n\r\n\t            for (var i = 0; i < data.length;) {\r\n\t                var cmd = data[i++];\r\n\r\n\t                if (i == 1) {\r\n\t                    // 如果第一个命令是 L, C, Q\r\n\t                    // 则 previous point 同绘制命令的第一个 point\r\n\t                    //\r\n\t                    // 第一个命令为 Arc 的情况下会在后面特殊处理\r\n\t                    xi = data[i];\r\n\t                    yi = data[i + 1];\r\n\r\n\t                    x0 = xi;\r\n\t                    y0 = yi;\r\n\t                }\r\n\r\n\t                switch (cmd) {\r\n\t                    case CMD.M:\r\n\t                        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\r\n\t                        // 在 closePath 的时候使用\r\n\t                        x0 = data[i++];\r\n\t                        y0 = data[i++];\r\n\t                        xi = x0;\r\n\t                        yi = y0;\r\n\t                        min2[0] = x0;\r\n\t                        min2[1] = y0;\r\n\t                        max2[0] = x0;\r\n\t                        max2[1] = y0;\r\n\t                        break;\r\n\t                    case CMD.L:\r\n\t                        bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\r\n\t                        xi = data[i++];\r\n\t                        yi = data[i++];\r\n\t                        break;\r\n\t                    case CMD.C:\r\n\t                        bbox.fromCubic(\r\n\t                            xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\r\n\t                            min2, max2\r\n\t                        );\r\n\t                        xi = data[i++];\r\n\t                        yi = data[i++];\r\n\t                        break;\r\n\t                    case CMD.Q:\r\n\t                        bbox.fromQuadratic(\r\n\t                            xi, yi, data[i++], data[i++], data[i], data[i + 1],\r\n\t                            min2, max2\r\n\t                        );\r\n\t                        xi = data[i++];\r\n\t                        yi = data[i++];\r\n\t                        break;\r\n\t                    case CMD.A:\r\n\t                        // TODO Arc 判断的开销比较大\r\n\t                        var cx = data[i++];\r\n\t                        var cy = data[i++];\r\n\t                        var rx = data[i++];\r\n\t                        var ry = data[i++];\r\n\t                        var startAngle = data[i++];\r\n\t                        var endAngle = data[i++] + startAngle;\r\n\t                        // TODO Arc 旋转\r\n\t                        var psi = data[i++];\r\n\t                        var anticlockwise = 1 - data[i++];\r\n\r\n\t                        if (i == 1) {\r\n\t                            // 直接使用 arc 命令\r\n\t                            // 第一个命令起点还未定义\r\n\t                            x0 = mathCos(startAngle) * rx + cx;\r\n\t                            y0 = mathSin(startAngle) * ry + cy;\r\n\t                        }\r\n\r\n\t                        bbox.fromArc(\r\n\t                            cx, cy, rx, ry, startAngle, endAngle,\r\n\t                            anticlockwise, min2, max2\r\n\t                        );\r\n\r\n\t                        xi = mathCos(endAngle) * rx + cx;\r\n\t                        yi = mathSin(endAngle) * ry + cy;\r\n\t                        break;\r\n\t                    case CMD.R:\r\n\t                        x0 = xi = data[i++];\r\n\t                        y0 = yi = data[i++];\r\n\t                        var width = data[i++];\r\n\t                        var height = data[i++];\r\n\t                        // Use fromLine\r\n\t                        bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\r\n\t                        break;\r\n\t                    case CMD.Z:\r\n\t                        xi = x0;\r\n\t                        yi = y0;\r\n\t                        break;\r\n\t                }\r\n\r\n\t                // Union\r\n\t                vec2.min(min, min, min2);\r\n\t                vec2.max(max, max, max2);\r\n\t            }\r\n\r\n\t            // No data\r\n\t            if (i === 0) {\r\n\t                min[0] = min[1] = max[0] = max[1] = 0;\r\n\t            }\r\n\r\n\t            return new BoundingRect(\r\n\t                min[0], min[1], max[0] - min[0], max[1] - min[1]\r\n\t            );\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Rebuild path from current data\r\n\t         * Rebuild path will not consider javascript implemented line dash.\r\n\t         * @param {CanvasRenderingContext} ctx\r\n\t         */\r\n\t        rebuildPath: function (ctx) {\r\n\t            var d = this.data;\r\n\t            var x0, y0;\r\n\t            var xi, yi;\r\n\t            var x, y;\r\n\t            var ux = this._ux;\r\n\t            var uy = this._uy;\r\n\t            var len = this._len;\r\n\t            for (var i = 0; i < len;) {\r\n\t                var cmd = d[i++];\r\n\r\n\t                if (i == 1) {\r\n\t                    // 如果第一个命令是 L, C, Q\r\n\t                    // 则 previous point 同绘制命令的第一个 point\r\n\t                    //\r\n\t                    // 第一个命令为 Arc 的情况下会在后面特殊处理\r\n\t                    xi = d[i];\r\n\t                    yi = d[i + 1];\r\n\r\n\t                    x0 = xi;\r\n\t                    y0 = yi;\r\n\t                }\r\n\t                switch (cmd) {\r\n\t                    case CMD.M:\r\n\t                        x0 = xi = d[i++];\r\n\t                        y0 = yi = d[i++];\r\n\t                        ctx.moveTo(xi, yi);\r\n\t                        break;\r\n\t                    case CMD.L:\r\n\t                        x = d[i++];\r\n\t                        y = d[i++];\r\n\t                        // Not draw too small seg between\r\n\t                        if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\r\n\t                            ctx.lineTo(x, y);\r\n\t                            xi = x;\r\n\t                            yi = y;\r\n\t                        }\r\n\t                        break;\r\n\t                    case CMD.C:\r\n\t                        ctx.bezierCurveTo(\r\n\t                            d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]\r\n\t                        );\r\n\t                        xi = d[i - 2];\r\n\t                        yi = d[i - 1];\r\n\t                        break;\r\n\t                    case CMD.Q:\r\n\t                        ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\r\n\t                        xi = d[i - 2];\r\n\t                        yi = d[i - 1];\r\n\t                        break;\r\n\t                    case CMD.A:\r\n\t                        var cx = d[i++];\r\n\t                        var cy = d[i++];\r\n\t                        var rx = d[i++];\r\n\t                        var ry = d[i++];\r\n\t                        var theta = d[i++];\r\n\t                        var dTheta = d[i++];\r\n\t                        var psi = d[i++];\r\n\t                        var fs = d[i++];\r\n\t                        var r = (rx > ry) ? rx : ry;\r\n\t                        var scaleX = (rx > ry) ? 1 : rx / ry;\r\n\t                        var scaleY = (rx > ry) ? ry / rx : 1;\r\n\t                        var isEllipse = Math.abs(rx - ry) > 1e-3;\r\n\t                        var endAngle = theta + dTheta;\r\n\t                        if (isEllipse) {\r\n\t                            ctx.translate(cx, cy);\r\n\t                            ctx.rotate(psi);\r\n\t                            ctx.scale(scaleX, scaleY);\r\n\t                            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\r\n\t                            ctx.scale(1 / scaleX, 1 / scaleY);\r\n\t                            ctx.rotate(-psi);\r\n\t                            ctx.translate(-cx, -cy);\r\n\t                        }\r\n\t                        else {\r\n\t                            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\r\n\t                        }\r\n\r\n\t                        if (i == 1) {\r\n\t                            // 直接使用 arc 命令\r\n\t                            // 第一个命令起点还未定义\r\n\t                            x0 = mathCos(theta) * rx + cx;\r\n\t                            y0 = mathSin(theta) * ry + cy;\r\n\t                        }\r\n\t                        xi = mathCos(endAngle) * rx + cx;\r\n\t                        yi = mathSin(endAngle) * ry + cy;\r\n\t                        break;\r\n\t                    case CMD.R:\r\n\t                        x0 = xi = d[i];\r\n\t                        y0 = yi = d[i + 1];\r\n\t                        ctx.rect(d[i++], d[i++], d[i++], d[i++]);\r\n\t                        break;\r\n\t                    case CMD.Z:\r\n\t                        ctx.closePath();\r\n\t                        xi = x0;\r\n\t                        yi = y0;\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t    };\r\n\r\n\t    PathProxy.CMD = CMD;\r\n\r\n\t    module.exports = PathProxy;\r\n\r\n\r\n/***/ },\r\n/* 50 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t'use strict';\r\n\t/**\r\n\t * 曲线辅助模块\r\n\t * @module zrender/core/curve\r\n\t * @author pissang(https://www.github.com/pissang)\r\n\t */\r\n\r\n\r\n\t    var vec2 = __webpack_require__(10);\r\n\t    var v2Create = vec2.create;\r\n\t    var v2DistSquare = vec2.distSquare;\r\n\t    var mathPow = Math.pow;\r\n\t    var mathSqrt = Math.sqrt;\r\n\r\n\t    var EPSILON = 1e-8;\r\n\t    var EPSILON_NUMERIC = 1e-4;\r\n\r\n\t    var THREE_SQRT = mathSqrt(3);\r\n\t    var ONE_THIRD = 1 / 3;\r\n\r\n\t    // 临时变量\r\n\t    var _v0 = v2Create();\r\n\t    var _v1 = v2Create();\r\n\t    var _v2 = v2Create();\r\n\t    // var _v3 = vec2.create();\r\n\r\n\t    function isAroundZero(val) {\r\n\t        return val > -EPSILON && val < EPSILON;\r\n\t    }\r\n\t    function isNotAroundZero(val) {\r\n\t        return val > EPSILON || val < -EPSILON;\r\n\t    }\r\n\t    /**\r\n\t     * 计算三次贝塞尔值\r\n\t     * @memberOf module:zrender/core/curve\r\n\t     * @param  {number} p0\r\n\t     * @param  {number} p1\r\n\t     * @param  {number} p2\r\n\t     * @param  {number} p3\r\n\t     * @param  {number} t\r\n\t     * @return {number}\r\n\t     */\r\n\t    function cubicAt(p0, p1, p2, p3, t) {\r\n\t        var onet = 1 - t;\r\n\t        return onet * onet * (onet * p0 + 3 * t * p1)\r\n\t             + t * t * (t * p3 + 3 * onet * p2);\r\n\t    }\r\n\r\n\t    /**\r\n\t     * 计算三次贝塞尔导数值\r\n\t     * @memberOf module:zrender/core/curve\r\n\t     * @param  {number} p0\r\n\t     * @param  {number} p1\r\n\t     * @param  {number} p2\r\n\t     * @param  {number} p3\r\n\t     * @param  {number} t\r\n\t     * @return {number}\r\n\t     */\r\n\t    function cubicDerivativeAt(p0, p1, p2, p3, t) {\r\n\t        var onet = 1 - t;\r\n\t        return 3 * (\r\n\t            ((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet\r\n\t            + (p3 - p2) * t * t\r\n\t        );\r\n\t    }\r\n\r\n\t    /**\r\n\t     * 计算三次贝塞尔方程根，使用盛金公式\r\n\t     * @memberOf module:zrender/core/curve\r\n\t     * @param  {number} p0\r\n\t     * @param  {number} p1\r\n\t     * @param  {number} p2\r\n\t     * @param  {number} p3\r\n\t     * @param  {number} val\r\n\t     * @param  {Array.<number>} roots\r\n\t     * @return {number} 有效根数目\r\n\t     */\r\n\t    function cubicRootAt(p0, p1, p2, p3, val, roots) {\r\n\t        // Evaluate roots of cubic functions\r\n\t        var a = p3 + 3 * (p1 - p2) - p0;\r\n\t        var b = 3 * (p2 - p1 * 2 + p0);\r\n\t        var c = 3 * (p1  - p0);\r\n\t        var d = p0 - val;\r\n\r\n\t        var A = b * b - 3 * a * c;\r\n\t        var B = b * c - 9 * a * d;\r\n\t        var C = c * c - 3 * b * d;\r\n\r\n\t        var n = 0;\r\n\r\n\t        if (isAroundZero(A) && isAroundZero(B)) {\r\n\t            if (isAroundZero(b)) {\r\n\t                roots[0] = 0;\r\n\t            }\r\n\t            else {\r\n\t                var t1 = -c / b;  //t1, t2, t3, b is not zero\r\n\t                if (t1 >= 0 && t1 <= 1) {\r\n\t                    roots[n++] = t1;\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        else {\r\n\t            var disc = B * B - 4 * A * C;\r\n\r\n\t            if (isAroundZero(disc)) {\r\n\t                var K = B / A;\r\n\t                var t1 = -b / a + K;  // t1, a is not zero\r\n\t                var t2 = -K / 2;  // t2, t3\r\n\t                if (t1 >= 0 && t1 <= 1) {\r\n\t                    roots[n++] = t1;\r\n\t                }\r\n\t                if (t2 >= 0 && t2 <= 1) {\r\n\t                    roots[n++] = t2;\r\n\t                }\r\n\t            }\r\n\t            else if (disc > 0) {\r\n\t                var discSqrt = mathSqrt(disc);\r\n\t                var Y1 = A * b + 1.5 * a * (-B + discSqrt);\r\n\t                var Y2 = A * b + 1.5 * a * (-B - discSqrt);\r\n\t                if (Y1 < 0) {\r\n\t                    Y1 = -mathPow(-Y1, ONE_THIRD);\r\n\t                }\r\n\t                else {\r\n\t                    Y1 = mathPow(Y1, ONE_THIRD);\r\n\t                }\r\n\t                if (Y2 < 0) {\r\n\t                    Y2 = -mathPow(-Y2, ONE_THIRD);\r\n\t                }\r\n\t                else {\r\n\t                    Y2 = mathPow(Y2, ONE_THIRD);\r\n\t                }\r\n\t                var t1 = (-b - (Y1 + Y2)) / (3 * a);\r\n\t                if (t1 >= 0 && t1 <= 1) {\r\n\t                    roots[n++] = t1;\r\n\t                }\r\n\t            }\r\n\t            else {\r\n\t                var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\r\n\t                var theta = Math.acos(T) / 3;\r\n\t                var ASqrt = mathSqrt(A);\r\n\t                var tmp = Math.cos(theta);\r\n\r\n\t                var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\r\n\t                var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\r\n\t                var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\r\n\t                if (t1 >= 0 && t1 <= 1) {\r\n\t                    roots[n++] = t1;\r\n\t                }\r\n\t                if (t2 >= 0 && t2 <= 1) {\r\n\t                    roots[n++] = t2;\r\n\t                }\r\n\t                if (t3 >= 0 && t3 <= 1) {\r\n\t                    roots[n++] = t3;\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        return n;\r\n\t    }\r\n\r\n\t    /**\r\n\t     * 计算三次贝塞尔方程极限值的位置\r\n\t     * @memberOf module:zrender/core/curve\r\n\t     * @param  {number} p0\r\n\t     * @param  {number} p1\r\n\t     * @param  {number} p2\r\n\t     * @param  {number} p3\r\n\t     * @param  {Array.<number>} extrema\r\n\t     * @return {number} 有效数目\r\n\t     */\r\n\t    function cubicExtrema(p0, p1, p2, p3, extrema) {\r\n\t        var b = 6 * p2 - 12 * p1 + 6 * p0;\r\n\t        var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\r\n\t        var c = 3 * p1 - 3 * p0;\r\n\r\n\t        var n = 0;\r\n\t        if (isAroundZero(a)) {\r\n\t            if (isNotAroundZero(b)) {\r\n\t                var t1 = -c / b;\r\n\t                if (t1 >= 0 && t1 <=1) {\r\n\t                    extrema[n++] = t1;\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        else {\r\n\t            var disc = b * b - 4 * a * c;\r\n\t            if (isAroundZero(disc)) {\r\n\t                extrema[0] = -b / (2 * a);\r\n\t            }\r\n\t            else if (disc > 0) {\r\n\t                var discSqrt = mathSqrt(disc);\r\n\t                var t1 = (-b + discSqrt) / (2 * a);\r\n\t                var t2 = (-b - discSqrt) / (2 * a);\r\n\t                if (t1 >= 0 && t1 <= 1) {\r\n\t                    extrema[n++] = t1;\r\n\t                }\r\n\t                if (t2 >= 0 && t2 <= 1) {\r\n\t                    extrema[n++] = t2;\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        return n;\r\n\t    }\r\n\r\n\t    /**\r\n\t     * 细分三次贝塞尔曲线\r\n\t     * @memberOf module:zrender/core/curve\r\n\t     * @param  {number} p0\r\n\t     * @param  {number} p1\r\n\t     * @param  {number} p2\r\n\t     * @param  {number} p3\r\n\t     * @param  {number} t\r\n\t     * @param  {Array.<number>} out\r\n\t     */\r\n\t    function cubicSubdivide(p0, p1, p2, p3, t, out) {\r\n\t        var p01 = (p1 - p0) * t + p0;\r\n\t        var p12 = (p2 - p1) * t + p1;\r\n\t        var p23 = (p3 - p2) * t + p2;\r\n\r\n\t        var p012 = (p12 - p01) * t + p01;\r\n\t        var p123 = (p23 - p12) * t + p12;\r\n\r\n\t        var p0123 = (p123 - p012) * t + p012;\r\n\t        // Seg0\r\n\t        out[0] = p0;\r\n\t        out[1] = p01;\r\n\t        out[2] = p012;\r\n\t        out[3] = p0123;\r\n\t        // Seg1\r\n\t        out[4] = p0123;\r\n\t        out[5] = p123;\r\n\t        out[6] = p23;\r\n\t        out[7] = p3;\r\n\t    }\r\n\r\n\t    /**\r\n\t     * 投射点到三次贝塞尔曲线上，返回投射距离。\r\n\t     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\r\n\t     * @param {number} x0\r\n\t     * @param {number} y0\r\n\t     * @param {number} x1\r\n\t     * @param {number} y1\r\n\t     * @param {number} x2\r\n\t     * @param {number} y2\r\n\t     * @param {number} x3\r\n\t     * @param {number} y3\r\n\t     * @param {number} x\r\n\t     * @param {number} y\r\n\t     * @param {Array.<number>} [out] 投射点\r\n\t     * @return {number}\r\n\t     */\r\n\t    function cubicProjectPoint(\r\n\t        x0, y0, x1, y1, x2, y2, x3, y3,\r\n\t        x, y, out\r\n\t    ) {\r\n\t        // http://pomax.github.io/bezierinfo/#projections\r\n\t        var t;\r\n\t        var interval = 0.005;\r\n\t        var d = Infinity;\r\n\t        var prev;\r\n\t        var next;\r\n\t        var d1;\r\n\t        var d2;\r\n\r\n\t        _v0[0] = x;\r\n\t        _v0[1] = y;\r\n\r\n\t        // 先粗略估计一下可能的最小距离的 t 值\r\n\t        // PENDING\r\n\t        for (var _t = 0; _t < 1; _t += 0.05) {\r\n\t            _v1[0] = cubicAt(x0, x1, x2, x3, _t);\r\n\t            _v1[1] = cubicAt(y0, y1, y2, y3, _t);\r\n\t            d1 = v2DistSquare(_v0, _v1);\r\n\t            if (d1 < d) {\r\n\t                t = _t;\r\n\t                d = d1;\r\n\t            }\r\n\t        }\r\n\t        d = Infinity;\r\n\r\n\t        // At most 32 iteration\r\n\t        for (var i = 0; i < 32; i++) {\r\n\t            if (interval < EPSILON_NUMERIC) {\r\n\t                break;\r\n\t            }\r\n\t            prev = t - interval;\r\n\t            next = t + interval;\r\n\t            // t - interval\r\n\t            _v1[0] = cubicAt(x0, x1, x2, x3, prev);\r\n\t            _v1[1] = cubicAt(y0, y1, y2, y3, prev);\r\n\r\n\t            d1 = v2DistSquare(_v1, _v0);\r\n\r\n\t            if (prev >= 0 && d1 < d) {\r\n\t                t = prev;\r\n\t                d = d1;\r\n\t            }\r\n\t            else {\r\n\t                // t + interval\r\n\t                _v2[0] = cubicAt(x0, x1, x2, x3, next);\r\n\t                _v2[1] = cubicAt(y0, y1, y2, y3, next);\r\n\t                d2 = v2DistSquare(_v2, _v0);\r\n\r\n\t                if (next <= 1 && d2 < d) {\r\n\t                    t = next;\r\n\t                    d = d2;\r\n\t                }\r\n\t                else {\r\n\t                    interval *= 0.5;\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        // t\r\n\t        if (out) {\r\n\t            out[0] = cubicAt(x0, x1, x2, x3, t);\r\n\t            out[1] = cubicAt(y0, y1, y2, y3, t);\r\n\t        }\r\n\t        // console.log(interval, i);\r\n\t        return mathSqrt(d);\r\n\t    }\r\n\r\n\t    /**\r\n\t     * 计算二次方贝塞尔值\r\n\t     * @param  {number} p0\r\n\t     * @param  {number} p1\r\n\t     * @param  {number} p2\r\n\t     * @param  {number} t\r\n\t     * @return {number}\r\n\t     */\r\n\t    function quadraticAt(p0, p1, p2, t) {\r\n\t        var onet = 1 - t;\r\n\t        return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\r\n\t    }\r\n\r\n\t    /**\r\n\t     * 计算二次方贝塞尔导数值\r\n\t     * @param  {number} p0\r\n\t     * @param  {number} p1\r\n\t     * @param  {number} p2\r\n\t     * @param  {number} t\r\n\t     * @return {number}\r\n\t     */\r\n\t    function quadraticDerivativeAt(p0, p1, p2, t) {\r\n\t        return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\r\n\t    }\r\n\r\n\t    /**\r\n\t     * 计算二次方贝塞尔方程根\r\n\t     * @param  {number} p0\r\n\t     * @param  {number} p1\r\n\t     * @param  {number} p2\r\n\t     * @param  {number} t\r\n\t     * @param  {Array.<number>} roots\r\n\t     * @return {number} 有效根数目\r\n\t     */\r\n\t    function quadraticRootAt(p0, p1, p2, val, roots) {\r\n\t        var a = p0 - 2 * p1 + p2;\r\n\t        var b = 2 * (p1 - p0);\r\n\t        var c = p0 - val;\r\n\r\n\t        var n = 0;\r\n\t        if (isAroundZero(a)) {\r\n\t            if (isNotAroundZero(b)) {\r\n\t                var t1 = -c / b;\r\n\t                if (t1 >= 0 && t1 <= 1) {\r\n\t                    roots[n++] = t1;\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        else {\r\n\t            var disc = b * b - 4 * a * c;\r\n\t            if (isAroundZero(disc)) {\r\n\t                var t1 = -b / (2 * a);\r\n\t                if (t1 >= 0 && t1 <= 1) {\r\n\t                    roots[n++] = t1;\r\n\t                }\r\n\t            }\r\n\t            else if (disc > 0) {\r\n\t                var discSqrt = mathSqrt(disc);\r\n\t                var t1 = (-b + discSqrt) / (2 * a);\r\n\t                var t2 = (-b - discSqrt) / (2 * a);\r\n\t                if (t1 >= 0 && t1 <= 1) {\r\n\t                    roots[n++] = t1;\r\n\t                }\r\n\t                if (t2 >= 0 && t2 <= 1) {\r\n\t                    roots[n++] = t2;\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        return n;\r\n\t    }\r\n\r\n\t    /**\r\n\t     * 计算二次贝塞尔方程极限值\r\n\t     * @memberOf module:zrender/core/curve\r\n\t     * @param  {number} p0\r\n\t     * @param  {number} p1\r\n\t     * @param  {number} p2\r\n\t     * @return {number}\r\n\t     */\r\n\t    function quadraticExtremum(p0, p1, p2) {\r\n\t        var divider = p0 + p2 - 2 * p1;\r\n\t        if (divider === 0) {\r\n\t            // p1 is center of p0 and p2\r\n\t            return 0.5;\r\n\t        }\r\n\t        else {\r\n\t            return (p0 - p1) / divider;\r\n\t        }\r\n\t    }\r\n\r\n\t    /**\r\n\t     * 细分二次贝塞尔曲线\r\n\t     * @memberOf module:zrender/core/curve\r\n\t     * @param  {number} p0\r\n\t     * @param  {number} p1\r\n\t     * @param  {number} p2\r\n\t     * @param  {number} t\r\n\t     * @param  {Array.<number>} out\r\n\t     */\r\n\t    function quadraticSubdivide(p0, p1, p2, t, out) {\r\n\t        var p01 = (p1 - p0) * t + p0;\r\n\t        var p12 = (p2 - p1) * t + p1;\r\n\t        var p012 = (p12 - p01) * t + p01;\r\n\r\n\t        // Seg0\r\n\t        out[0] = p0;\r\n\t        out[1] = p01;\r\n\t        out[2] = p012;\r\n\r\n\t        // Seg1\r\n\t        out[3] = p012;\r\n\t        out[4] = p12;\r\n\t        out[5] = p2;\r\n\t    }\r\n\r\n\t    /**\r\n\t     * 投射点到二次贝塞尔曲线上，返回投射距离。\r\n\t     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\r\n\t     * @param {number} x0\r\n\t     * @param {number} y0\r\n\t     * @param {number} x1\r\n\t     * @param {number} y1\r\n\t     * @param {number} x2\r\n\t     * @param {number} y2\r\n\t     * @param {number} x\r\n\t     * @param {number} y\r\n\t     * @param {Array.<number>} out 投射点\r\n\t     * @return {number}\r\n\t     */\r\n\t    function quadraticProjectPoint(\r\n\t        x0, y0, x1, y1, x2, y2,\r\n\t        x, y, out\r\n\t    ) {\r\n\t        // http://pomax.github.io/bezierinfo/#projections\r\n\t        var t;\r\n\t        var interval = 0.005;\r\n\t        var d = Infinity;\r\n\r\n\t        _v0[0] = x;\r\n\t        _v0[1] = y;\r\n\r\n\t        // 先粗略估计一下可能的最小距离的 t 值\r\n\t        // PENDING\r\n\t        for (var _t = 0; _t < 1; _t += 0.05) {\r\n\t            _v1[0] = quadraticAt(x0, x1, x2, _t);\r\n\t            _v1[1] = quadraticAt(y0, y1, y2, _t);\r\n\t            var d1 = v2DistSquare(_v0, _v1);\r\n\t            if (d1 < d) {\r\n\t                t = _t;\r\n\t                d = d1;\r\n\t            }\r\n\t        }\r\n\t        d = Infinity;\r\n\r\n\t        // At most 32 iteration\r\n\t        for (var i = 0; i < 32; i++) {\r\n\t            if (interval < EPSILON_NUMERIC) {\r\n\t                break;\r\n\t            }\r\n\t            var prev = t - interval;\r\n\t            var next = t + interval;\r\n\t            // t - interval\r\n\t            _v1[0] = quadraticAt(x0, x1, x2, prev);\r\n\t            _v1[1] = quadraticAt(y0, y1, y2, prev);\r\n\r\n\t            var d1 = v2DistSquare(_v1, _v0);\r\n\r\n\t            if (prev >= 0 && d1 < d) {\r\n\t                t = prev;\r\n\t                d = d1;\r\n\t            }\r\n\t            else {\r\n\t                // t + interval\r\n\t                _v2[0] = quadraticAt(x0, x1, x2, next);\r\n\t                _v2[1] = quadraticAt(y0, y1, y2, next);\r\n\t                var d2 = v2DistSquare(_v2, _v0);\r\n\t                if (next <= 1 && d2 < d) {\r\n\t                    t = next;\r\n\t                    d = d2;\r\n\t                }\r\n\t                else {\r\n\t                    interval *= 0.5;\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        // t\r\n\t        if (out) {\r\n\t            out[0] = quadraticAt(x0, x1, x2, t);\r\n\t            out[1] = quadraticAt(y0, y1, y2, t);\r\n\t        }\r\n\t        // console.log(interval, i);\r\n\t        return mathSqrt(d);\r\n\t    }\r\n\r\n\t    module.exports = {\r\n\r\n\t        cubicAt: cubicAt,\r\n\r\n\t        cubicDerivativeAt: cubicDerivativeAt,\r\n\r\n\t        cubicRootAt: cubicRootAt,\r\n\r\n\t        cubicExtrema: cubicExtrema,\r\n\r\n\t        cubicSubdivide: cubicSubdivide,\r\n\r\n\t        cubicProjectPoint: cubicProjectPoint,\r\n\r\n\t        quadraticAt: quadraticAt,\r\n\r\n\t        quadraticDerivativeAt: quadraticDerivativeAt,\r\n\r\n\t        quadraticRootAt: quadraticRootAt,\r\n\r\n\t        quadraticExtremum: quadraticExtremum,\r\n\r\n\t        quadraticSubdivide: quadraticSubdivide,\r\n\r\n\t        quadraticProjectPoint: quadraticProjectPoint\r\n\t    };\r\n\r\n\r\n/***/ },\r\n/* 51 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t/**\r\n\t * @author Yi Shen(https://github.com/pissang)\r\n\t */\r\n\r\n\r\n\t    var vec2 = __webpack_require__(10);\r\n\t    var curve = __webpack_require__(50);\r\n\r\n\t    var bbox = {};\r\n\t    var mathMin = Math.min;\r\n\t    var mathMax = Math.max;\r\n\t    var mathSin = Math.sin;\r\n\t    var mathCos = Math.cos;\r\n\r\n\t    var start = vec2.create();\r\n\t    var end = vec2.create();\r\n\t    var extremity = vec2.create();\r\n\r\n\t    var PI2 = Math.PI * 2;\r\n\t    /**\r\n\t     * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\r\n\t     * @module zrender/core/bbox\r\n\t     * @param {Array<Object>} points 顶点数组\r\n\t     * @param {number} min\r\n\t     * @param {number} max\r\n\t     */\r\n\t    bbox.fromPoints = function(points, min, max) {\r\n\t        if (points.length === 0) {\r\n\t            return;\r\n\t        }\r\n\t        var p = points[0];\r\n\t        var left = p[0];\r\n\t        var right = p[0];\r\n\t        var top = p[1];\r\n\t        var bottom = p[1];\r\n\t        var i;\r\n\r\n\t        for (i = 1; i < points.length; i++) {\r\n\t            p = points[i];\r\n\t            left = mathMin(left, p[0]);\r\n\t            right = mathMax(right, p[0]);\r\n\t            top = mathMin(top, p[1]);\r\n\t            bottom = mathMax(bottom, p[1]);\r\n\t        }\r\n\r\n\t        min[0] = left;\r\n\t        min[1] = top;\r\n\t        max[0] = right;\r\n\t        max[1] = bottom;\r\n\t    };\r\n\r\n\t    /**\r\n\t     * @memberOf module:zrender/core/bbox\r\n\t     * @param {number} x0\r\n\t     * @param {number} y0\r\n\t     * @param {number} x1\r\n\t     * @param {number} y1\r\n\t     * @param {Array.<number>} min\r\n\t     * @param {Array.<number>} max\r\n\t     */\r\n\t    bbox.fromLine = function (x0, y0, x1, y1, min, max) {\r\n\t        min[0] = mathMin(x0, x1);\r\n\t        min[1] = mathMin(y0, y1);\r\n\t        max[0] = mathMax(x0, x1);\r\n\t        max[1] = mathMax(y0, y1);\r\n\t    };\r\n\r\n\t    var xDim = [];\r\n\t    var yDim = [];\r\n\t    /**\r\n\t     * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\r\n\t     * @memberOf module:zrender/core/bbox\r\n\t     * @param {number} x0\r\n\t     * @param {number} y0\r\n\t     * @param {number} x1\r\n\t     * @param {number} y1\r\n\t     * @param {number} x2\r\n\t     * @param {number} y2\r\n\t     * @param {number} x3\r\n\t     * @param {number} y3\r\n\t     * @param {Array.<number>} min\r\n\t     * @param {Array.<number>} max\r\n\t     */\r\n\t    bbox.fromCubic = function(\r\n\t        x0, y0, x1, y1, x2, y2, x3, y3, min, max\r\n\t    ) {\r\n\t        var cubicExtrema = curve.cubicExtrema;\r\n\t        var cubicAt = curve.cubicAt;\r\n\t        var i;\r\n\t        var n = cubicExtrema(x0, x1, x2, x3, xDim);\r\n\t        min[0] = Infinity;\r\n\t        min[1] = Infinity;\r\n\t        max[0] = -Infinity;\r\n\t        max[1] = -Infinity;\r\n\r\n\t        for (i = 0; i < n; i++) {\r\n\t            var x = cubicAt(x0, x1, x2, x3, xDim[i]);\r\n\t            min[0] = mathMin(x, min[0]);\r\n\t            max[0] = mathMax(x, max[0]);\r\n\t        }\r\n\t        n = cubicExtrema(y0, y1, y2, y3, yDim);\r\n\t        for (i = 0; i < n; i++) {\r\n\t            var y = cubicAt(y0, y1, y2, y3, yDim[i]);\r\n\t            min[1] = mathMin(y, min[1]);\r\n\t            max[1] = mathMax(y, max[1]);\r\n\t        }\r\n\r\n\t        min[0] = mathMin(x0, min[0]);\r\n\t        max[0] = mathMax(x0, max[0]);\r\n\t        min[0] = mathMin(x3, min[0]);\r\n\t        max[0] = mathMax(x3, max[0]);\r\n\r\n\t        min[1] = mathMin(y0, min[1]);\r\n\t        max[1] = mathMax(y0, max[1]);\r\n\t        min[1] = mathMin(y3, min[1]);\r\n\t        max[1] = mathMax(y3, max[1]);\r\n\t    };\r\n\r\n\t    /**\r\n\t     * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\r\n\t     * @memberOf module:zrender/core/bbox\r\n\t     * @param {number} x0\r\n\t     * @param {number} y0\r\n\t     * @param {number} x1\r\n\t     * @param {number} y1\r\n\t     * @param {number} x2\r\n\t     * @param {number} y2\r\n\t     * @param {Array.<number>} min\r\n\t     * @param {Array.<number>} max\r\n\t     */\r\n\t    bbox.fromQuadratic = function(x0, y0, x1, y1, x2, y2, min, max) {\r\n\t        var quadraticExtremum = curve.quadraticExtremum;\r\n\t        var quadraticAt = curve.quadraticAt;\r\n\t        // Find extremities, where derivative in x dim or y dim is zero\r\n\t        var tx =\r\n\t            mathMax(\r\n\t                mathMin(quadraticExtremum(x0, x1, x2), 1), 0\r\n\t            );\r\n\t        var ty =\r\n\t            mathMax(\r\n\t                mathMin(quadraticExtremum(y0, y1, y2), 1), 0\r\n\t            );\r\n\r\n\t        var x = quadraticAt(x0, x1, x2, tx);\r\n\t        var y = quadraticAt(y0, y1, y2, ty);\r\n\r\n\t        min[0] = mathMin(x0, x2, x);\r\n\t        min[1] = mathMin(y0, y2, y);\r\n\t        max[0] = mathMax(x0, x2, x);\r\n\t        max[1] = mathMax(y0, y2, y);\r\n\t    };\r\n\r\n\t    /**\r\n\t     * 从圆弧中计算出最小包围盒，写入`min`和`max`中\r\n\t     * @method\r\n\t     * @memberOf module:zrender/core/bbox\r\n\t     * @param {number} x\r\n\t     * @param {number} y\r\n\t     * @param {number} rx\r\n\t     * @param {number} ry\r\n\t     * @param {number} startAngle\r\n\t     * @param {number} endAngle\r\n\t     * @param {number} anticlockwise\r\n\t     * @param {Array.<number>} min\r\n\t     * @param {Array.<number>} max\r\n\t     */\r\n\t    bbox.fromArc = function (\r\n\t        x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max\r\n\t    ) {\r\n\t        var vec2Min = vec2.min;\r\n\t        var vec2Max = vec2.max;\r\n\r\n\t        var diff = Math.abs(startAngle - endAngle);\r\n\r\n\r\n\t        if (diff % PI2 < 1e-4 && diff > 1e-4) {\r\n\t            // Is a circle\r\n\t            min[0] = x - rx;\r\n\t            min[1] = y - ry;\r\n\t            max[0] = x + rx;\r\n\t            max[1] = y + ry;\r\n\t            return;\r\n\t        }\r\n\r\n\t        start[0] = mathCos(startAngle) * rx + x;\r\n\t        start[1] = mathSin(startAngle) * ry + y;\r\n\r\n\t        end[0] = mathCos(endAngle) * rx + x;\r\n\t        end[1] = mathSin(endAngle) * ry + y;\r\n\r\n\t        vec2Min(min, start, end);\r\n\t        vec2Max(max, start, end);\r\n\r\n\t        // Thresh to [0, Math.PI * 2]\r\n\t        startAngle = startAngle % (PI2);\r\n\t        if (startAngle < 0) {\r\n\t            startAngle = startAngle + PI2;\r\n\t        }\r\n\t        endAngle = endAngle % (PI2);\r\n\t        if (endAngle < 0) {\r\n\t            endAngle = endAngle + PI2;\r\n\t        }\r\n\r\n\t        if (startAngle > endAngle && !anticlockwise) {\r\n\t            endAngle += PI2;\r\n\t        }\r\n\t        else if (startAngle < endAngle && anticlockwise) {\r\n\t            startAngle += PI2;\r\n\t        }\r\n\t        if (anticlockwise) {\r\n\t            var tmp = endAngle;\r\n\t            endAngle = startAngle;\r\n\t            startAngle = tmp;\r\n\t        }\r\n\r\n\t        // var number = 0;\r\n\t        // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\r\n\t        for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\r\n\t            if (angle > startAngle) {\r\n\t                extremity[0] = mathCos(angle) * rx + x;\r\n\t                extremity[1] = mathSin(angle) * ry + y;\r\n\r\n\t                vec2Min(min, extremity, min);\r\n\t                vec2Max(max, extremity, max);\r\n\t            }\r\n\t        }\r\n\t    };\r\n\r\n\t    module.exports = bbox;\r\n\r\n\r\n\r\n/***/ },\r\n/* 52 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t'use strict';\r\n\r\n\r\n\t    var CMD = __webpack_require__(49).CMD;\r\n\t    var line = __webpack_require__(53);\r\n\t    var cubic = __webpack_require__(54);\r\n\t    var quadratic = __webpack_require__(55);\r\n\t    var arc = __webpack_require__(56);\r\n\t    var normalizeRadian = __webpack_require__(57).normalizeRadian;\r\n\t    var curve = __webpack_require__(50);\r\n\r\n\t    var windingLine = __webpack_require__(58);\r\n\r\n\t    var containStroke = line.containStroke;\r\n\r\n\t    var PI2 = Math.PI * 2;\r\n\r\n\t    var EPSILON = 1e-4;\r\n\r\n\t    function isAroundEqual(a, b) {\r\n\t        return Math.abs(a - b) < EPSILON;\r\n\t    }\r\n\r\n\t    // 临时数组\r\n\t    var roots = [-1, -1, -1];\r\n\t    var extrema = [-1, -1];\r\n\r\n\t    function swapExtrema() {\r\n\t        var tmp = extrema[0];\r\n\t        extrema[0] = extrema[1];\r\n\t        extrema[1] = tmp;\r\n\t    }\r\n\r\n\t    function windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\r\n\t        // Quick reject\r\n\t        if (\r\n\t            (y > y0 && y > y1 && y > y2 && y > y3)\r\n\t            || (y < y0 && y < y1 && y < y2 && y < y3)\r\n\t        ) {\r\n\t            return 0;\r\n\t        }\r\n\t        var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\r\n\t        if (nRoots === 0) {\r\n\t            return 0;\r\n\t        }\r\n\t        else {\r\n\t            var w = 0;\r\n\t            var nExtrema = -1;\r\n\t            var y0_, y1_;\r\n\t            for (var i = 0; i < nRoots; i++) {\r\n\t                var t = roots[i];\r\n\r\n\t                // Avoid winding error when intersection point is the connect point of two line of polygon\r\n\t                var unit = (t === 0 || t === 1) ? 0.5 : 1;\r\n\r\n\t                var x_ = curve.cubicAt(x0, x1, x2, x3, t);\r\n\t                if (x_ < x) { // Quick reject\r\n\t                    continue;\r\n\t                }\r\n\t                if (nExtrema < 0) {\r\n\t                    nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\r\n\t                    if (extrema[1] < extrema[0] && nExtrema > 1) {\r\n\t                        swapExtrema();\r\n\t                    }\r\n\t                    y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\r\n\t                    if (nExtrema > 1) {\r\n\t                        y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\r\n\t                    }\r\n\t                }\r\n\t                if (nExtrema == 2) {\r\n\t                    // 分成三段单调函数\r\n\t                    if (t < extrema[0]) {\r\n\t                        w += y0_ < y0 ? unit : -unit;\r\n\t                    }\r\n\t                    else if (t < extrema[1]) {\r\n\t                        w += y1_ < y0_ ? unit : -unit;\r\n\t                    }\r\n\t                    else {\r\n\t                        w += y3 < y1_ ? unit : -unit;\r\n\t                    }\r\n\t                }\r\n\t                else {\r\n\t                    // 分成两段单调函数\r\n\t                    if (t < extrema[0]) {\r\n\t                        w += y0_ < y0 ? unit : -unit;\r\n\t                    }\r\n\t                    else {\r\n\t                        w += y3 < y0_ ? unit : -unit;\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t            return w;\r\n\t        }\r\n\t    }\r\n\r\n\t    function windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\r\n\t        // Quick reject\r\n\t        if (\r\n\t            (y > y0 && y > y1 && y > y2)\r\n\t            || (y < y0 && y < y1 && y < y2)\r\n\t        ) {\r\n\t            return 0;\r\n\t        }\r\n\t        var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\r\n\t        if (nRoots === 0) {\r\n\t            return 0;\r\n\t        }\r\n\t        else {\r\n\t            var t = curve.quadraticExtremum(y0, y1, y2);\r\n\t            if (t >= 0 && t <= 1) {\r\n\t                var w = 0;\r\n\t                var y_ = curve.quadraticAt(y0, y1, y2, t);\r\n\t                for (var i = 0; i < nRoots; i++) {\r\n\t                    // Remove one endpoint.\r\n\t                    var unit = (roots[i] === 0 || roots[i] === 1) ? 0.5 : 1;\r\n\r\n\t                    var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\r\n\t                    if (x_ < x) {   // Quick reject\r\n\t                        continue;\r\n\t                    }\r\n\t                    if (roots[i] < t) {\r\n\t                        w += y_ < y0 ? unit : -unit;\r\n\t                    }\r\n\t                    else {\r\n\t                        w += y2 < y_ ? unit : -unit;\r\n\t                    }\r\n\t                }\r\n\t                return w;\r\n\t            }\r\n\t            else {\r\n\t                // Remove one endpoint.\r\n\t                var unit = (roots[0] === 0 || roots[0] === 1) ? 0.5 : 1;\r\n\r\n\t                var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\r\n\t                if (x_ < x) {   // Quick reject\r\n\t                    return 0;\r\n\t                }\r\n\t                return y2 < y0 ? unit : -unit;\r\n\t            }\r\n\t        }\r\n\t    }\r\n\r\n\t    // TODO\r\n\t    // Arc 旋转\r\n\t    function windingArc(\r\n\t        cx, cy, r, startAngle, endAngle, anticlockwise, x, y\r\n\t    ) {\r\n\t        y -= cy;\r\n\t        if (y > r || y < -r) {\r\n\t            return 0;\r\n\t        }\r\n\t        var tmp = Math.sqrt(r * r - y * y);\r\n\t        roots[0] = -tmp;\r\n\t        roots[1] = tmp;\r\n\r\n\t        var diff = Math.abs(startAngle - endAngle);\r\n\t        if (diff < 1e-4) {\r\n\t            return 0;\r\n\t        }\r\n\t        if (diff % PI2 < 1e-4) {\r\n\t            // Is a circle\r\n\t            startAngle = 0;\r\n\t            endAngle = PI2;\r\n\t            var dir = anticlockwise ? 1 : -1;\r\n\t            if (x >= roots[0] + cx && x <= roots[1] + cx) {\r\n\t                return dir;\r\n\t            } else {\r\n\t                return 0;\r\n\t            }\r\n\t        }\r\n\r\n\t        if (anticlockwise) {\r\n\t            var tmp = startAngle;\r\n\t            startAngle = normalizeRadian(endAngle);\r\n\t            endAngle = normalizeRadian(tmp);\r\n\t        }\r\n\t        else {\r\n\t            startAngle = normalizeRadian(startAngle);\r\n\t            endAngle = normalizeRadian(endAngle);\r\n\t        }\r\n\t        if (startAngle > endAngle) {\r\n\t            endAngle += PI2;\r\n\t        }\r\n\r\n\t        var w = 0;\r\n\t        for (var i = 0; i < 2; i++) {\r\n\t            var x_ = roots[i];\r\n\t            if (x_ + cx > x) {\r\n\t                var angle = Math.atan2(y, x_);\r\n\t                var dir = anticlockwise ? 1 : -1;\r\n\t                if (angle < 0) {\r\n\t                    angle = PI2 + angle;\r\n\t                }\r\n\t                if (\r\n\t                    (angle >= startAngle && angle <= endAngle)\r\n\t                    || (angle + PI2 >= startAngle && angle + PI2 <= endAngle)\r\n\t                ) {\r\n\t                    if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\r\n\t                        dir = -dir;\r\n\t                    }\r\n\t                    w += dir;\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        return w;\r\n\t    }\r\n\r\n\t    function containPath(data, lineWidth, isStroke, x, y) {\r\n\t        var w = 0;\r\n\t        var xi = 0;\r\n\t        var yi = 0;\r\n\t        var x0 = 0;\r\n\t        var y0 = 0;\r\n\r\n\t        for (var i = 0; i < data.length;) {\r\n\t            var cmd = data[i++];\r\n\t            // Begin a new subpath\r\n\t            if (cmd === CMD.M && i > 1) {\r\n\t                // Close previous subpath\r\n\t                if (!isStroke) {\r\n\t                    w += windingLine(xi, yi, x0, y0, x, y);\r\n\t                }\r\n\t                // 如果被任何一个 subpath 包含\r\n\t                // if (w !== 0) {\r\n\t                //     return true;\r\n\t                // }\r\n\t            }\r\n\r\n\t            if (i == 1) {\r\n\t                // 如果第一个命令是 L, C, Q\r\n\t                // 则 previous point 同绘制命令的第一个 point\r\n\t                //\r\n\t                // 第一个命令为 Arc 的情况下会在后面特殊处理\r\n\t                xi = data[i];\r\n\t                yi = data[i + 1];\r\n\r\n\t                x0 = xi;\r\n\t                y0 = yi;\r\n\t            }\r\n\r\n\t            switch (cmd) {\r\n\t                case CMD.M:\r\n\t                    // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\r\n\t                    // 在 closePath 的时候使用\r\n\t                    x0 = data[i++];\r\n\t                    y0 = data[i++];\r\n\t                    xi = x0;\r\n\t                    yi = y0;\r\n\t                    break;\r\n\t                case CMD.L:\r\n\t                    if (isStroke) {\r\n\t                        if (containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\r\n\t                            return true;\r\n\t                        }\r\n\t                    }\r\n\t                    else {\r\n\t                        // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\r\n\t                        w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\r\n\t                    }\r\n\t                    xi = data[i++];\r\n\t                    yi = data[i++];\r\n\t                    break;\r\n\t                case CMD.C:\r\n\t                    if (isStroke) {\r\n\t                        if (cubic.containStroke(xi, yi,\r\n\t                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\r\n\t                            lineWidth, x, y\r\n\t                        )) {\r\n\t                            return true;\r\n\t                        }\r\n\t                    }\r\n\t                    else {\r\n\t                        w += windingCubic(\r\n\t                            xi, yi,\r\n\t                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\r\n\t                            x, y\r\n\t                        ) || 0;\r\n\t                    }\r\n\t                    xi = data[i++];\r\n\t                    yi = data[i++];\r\n\t                    break;\r\n\t                case CMD.Q:\r\n\t                    if (isStroke) {\r\n\t                        if (quadratic.containStroke(xi, yi,\r\n\t                            data[i++], data[i++], data[i], data[i + 1],\r\n\t                            lineWidth, x, y\r\n\t                        )) {\r\n\t                            return true;\r\n\t                        }\r\n\t                    }\r\n\t                    else {\r\n\t                        w += windingQuadratic(\r\n\t                            xi, yi,\r\n\t                            data[i++], data[i++], data[i], data[i + 1],\r\n\t                            x, y\r\n\t                        ) || 0;\r\n\t                    }\r\n\t                    xi = data[i++];\r\n\t                    yi = data[i++];\r\n\t                    break;\r\n\t                case CMD.A:\r\n\t                    // TODO Arc 判断的开销比较大\r\n\t                    var cx = data[i++];\r\n\t                    var cy = data[i++];\r\n\t                    var rx = data[i++];\r\n\t                    var ry = data[i++];\r\n\t                    var theta = data[i++];\r\n\t                    var dTheta = data[i++];\r\n\t                    // TODO Arc 旋转\r\n\t                    var psi = data[i++];\r\n\t                    var anticlockwise = 1 - data[i++];\r\n\t                    var x1 = Math.cos(theta) * rx + cx;\r\n\t                    var y1 = Math.sin(theta) * ry + cy;\r\n\t                    // 不是直接使用 arc 命令\r\n\t                    if (i > 1) {\r\n\t                        w += windingLine(xi, yi, x1, y1, x, y);\r\n\t                    }\r\n\t                    else {\r\n\t                        // 第一个命令起点还未定义\r\n\t                        x0 = x1;\r\n\t                        y0 = y1;\r\n\t                    }\r\n\t                    // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\r\n\t                    var _x = (x - cx) * ry / rx + cx;\r\n\t                    if (isStroke) {\r\n\t                        if (arc.containStroke(\r\n\t                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\r\n\t                            lineWidth, _x, y\r\n\t                        )) {\r\n\t                            return true;\r\n\t                        }\r\n\t                    }\r\n\t                    else {\r\n\t                        w += windingArc(\r\n\t                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\r\n\t                            _x, y\r\n\t                        );\r\n\t                    }\r\n\t                    xi = Math.cos(theta + dTheta) * rx + cx;\r\n\t                    yi = Math.sin(theta + dTheta) * ry + cy;\r\n\t                    break;\r\n\t                case CMD.R:\r\n\t                    x0 = xi = data[i++];\r\n\t                    y0 = yi = data[i++];\r\n\t                    var width = data[i++];\r\n\t                    var height = data[i++];\r\n\t                    var x1 = x0 + width;\r\n\t                    var y1 = y0 + height;\r\n\t                    if (isStroke) {\r\n\t                        if (containStroke(x0, y0, x1, y0, lineWidth, x, y)\r\n\t                          || containStroke(x1, y0, x1, y1, lineWidth, x, y)\r\n\t                          || containStroke(x1, y1, x0, y1, lineWidth, x, y)\r\n\t                          || containStroke(x0, y1, x0, y0, lineWidth, x, y)\r\n\t                        ) {\r\n\t                            return true;\r\n\t                        }\r\n\t                    }\r\n\t                    else {\r\n\t                        // FIXME Clockwise ?\r\n\t                        w += windingLine(x1, y0, x1, y1, x, y);\r\n\t                        w += windingLine(x0, y1, x0, y0, x, y);\r\n\t                    }\r\n\t                    break;\r\n\t                case CMD.Z:\r\n\t                    if (isStroke) {\r\n\t                        if (containStroke(\r\n\t                            xi, yi, x0, y0, lineWidth, x, y\r\n\t                        )) {\r\n\t                            return true;\r\n\t                        }\r\n\t                    }\r\n\t                    else {\r\n\t                        // Close a subpath\r\n\t                        w += windingLine(xi, yi, x0, y0, x, y);\r\n\t                        // 如果被任何一个 subpath 包含\r\n\t                        // FIXME subpaths may overlap\r\n\t                        // if (w !== 0) {\r\n\t                        //     return true;\r\n\t                        // }\r\n\t                    }\r\n\t                    xi = x0;\r\n\t                    yi = y0;\r\n\t                    break;\r\n\t            }\r\n\t        }\r\n\t        if (!isStroke && !isAroundEqual(yi, y0)) {\r\n\t            w += windingLine(xi, yi, x0, y0, x, y) || 0;\r\n\t        }\r\n\t        return w !== 0;\r\n\t    }\r\n\r\n\t    module.exports = {\r\n\t        contain: function (pathData, x, y) {\r\n\t            return containPath(pathData, 0, false, x, y);\r\n\t        },\r\n\r\n\t        containStroke: function (pathData, lineWidth, x, y) {\r\n\t            return containPath(pathData, lineWidth, true, x, y);\r\n\t        }\r\n\t    };\r\n\r\n\r\n/***/ },\r\n/* 53 */\r\n/***/ function(module, exports) {\r\n\r\n\t\r\n\t    module.exports = {\r\n\t        /**\r\n\t         * 线段包含判断\r\n\t         * @param  {number}  x0\r\n\t         * @param  {number}  y0\r\n\t         * @param  {number}  x1\r\n\t         * @param  {number}  y1\r\n\t         * @param  {number}  lineWidth\r\n\t         * @param  {number}  x\r\n\t         * @param  {number}  y\r\n\t         * @return {boolean}\r\n\t         */\r\n\t        containStroke: function (x0, y0, x1, y1, lineWidth, x, y) {\r\n\t            if (lineWidth === 0) {\r\n\t                return false;\r\n\t            }\r\n\t            var _l = lineWidth;\r\n\t            var _a = 0;\r\n\t            var _b = x0;\r\n\t            // Quick reject\r\n\t            if (\r\n\t                (y > y0 + _l && y > y1 + _l)\r\n\t                || (y < y0 - _l && y < y1 - _l)\r\n\t                || (x > x0 + _l && x > x1 + _l)\r\n\t                || (x < x0 - _l && x < x1 - _l)\r\n\t            ) {\r\n\t                return false;\r\n\t            }\r\n\r\n\t            if (x0 !== x1) {\r\n\t                _a = (y0 - y1) / (x0 - x1);\r\n\t                _b = (x0 * y1 - x1 * y0) / (x0 - x1) ;\r\n\t            }\r\n\t            else {\r\n\t                return Math.abs(x - x0) <= _l / 2;\r\n\t            }\r\n\t            var tmp = _a * x - y + _b;\r\n\t            var _s = tmp * tmp / (_a * _a + 1);\r\n\t            return _s <= _l / 2 * _l / 2;\r\n\t        }\r\n\t    };\r\n\r\n\r\n/***/ },\r\n/* 54 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t\r\n\r\n\t    var curve = __webpack_require__(50);\r\n\r\n\t    module.exports = {\r\n\t        /**\r\n\t         * 三次贝塞尔曲线描边包含判断\r\n\t         * @param  {number}  x0\r\n\t         * @param  {number}  y0\r\n\t         * @param  {number}  x1\r\n\t         * @param  {number}  y1\r\n\t         * @param  {number}  x2\r\n\t         * @param  {number}  y2\r\n\t         * @param  {number}  x3\r\n\t         * @param  {number}  y3\r\n\t         * @param  {number}  lineWidth\r\n\t         * @param  {number}  x\r\n\t         * @param  {number}  y\r\n\t         * @return {boolean}\r\n\t         */\r\n\t        containStroke: function(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\r\n\t            if (lineWidth === 0) {\r\n\t                return false;\r\n\t            }\r\n\t            var _l = lineWidth;\r\n\t            // Quick reject\r\n\t            if (\r\n\t                (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l)\r\n\t                || (y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l)\r\n\t                || (x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l)\r\n\t                || (x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l)\r\n\t            ) {\r\n\t                return false;\r\n\t            }\r\n\t            var d = curve.cubicProjectPoint(\r\n\t                x0, y0, x1, y1, x2, y2, x3, y3,\r\n\t                x, y, null\r\n\t            );\r\n\t            return d <= _l / 2;\r\n\t        }\r\n\t    };\r\n\r\n\r\n/***/ },\r\n/* 55 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t\r\n\r\n\t    var curve = __webpack_require__(50);\r\n\r\n\t    module.exports = {\r\n\t        /**\r\n\t         * 二次贝塞尔曲线描边包含判断\r\n\t         * @param  {number}  x0\r\n\t         * @param  {number}  y0\r\n\t         * @param  {number}  x1\r\n\t         * @param  {number}  y1\r\n\t         * @param  {number}  x2\r\n\t         * @param  {number}  y2\r\n\t         * @param  {number}  lineWidth\r\n\t         * @param  {number}  x\r\n\t         * @param  {number}  y\r\n\t         * @return {boolean}\r\n\t         */\r\n\t        containStroke: function (x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\r\n\t            if (lineWidth === 0) {\r\n\t                return false;\r\n\t            }\r\n\t            var _l = lineWidth;\r\n\t            // Quick reject\r\n\t            if (\r\n\t                (y > y0 + _l && y > y1 + _l && y > y2 + _l)\r\n\t                || (y < y0 - _l && y < y1 - _l && y < y2 - _l)\r\n\t                || (x > x0 + _l && x > x1 + _l && x > x2 + _l)\r\n\t                || (x < x0 - _l && x < x1 - _l && x < x2 - _l)\r\n\t            ) {\r\n\t                return false;\r\n\t            }\r\n\t            var d = curve.quadraticProjectPoint(\r\n\t                x0, y0, x1, y1, x2, y2,\r\n\t                x, y, null\r\n\t            );\r\n\t            return d <= _l / 2;\r\n\t        }\r\n\t    };\r\n\r\n\r\n/***/ },\r\n/* 56 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t\r\n\r\n\t    var normalizeRadian = __webpack_require__(57).normalizeRadian;\r\n\t    var PI2 = Math.PI * 2;\r\n\r\n\t    module.exports = {\r\n\t        /**\r\n\t         * 圆弧描边包含判断\r\n\t         * @param  {number}  cx\r\n\t         * @param  {number}  cy\r\n\t         * @param  {number}  r\r\n\t         * @param  {number}  startAngle\r\n\t         * @param  {number}  endAngle\r\n\t         * @param  {boolean}  anticlockwise\r\n\t         * @param  {number} lineWidth\r\n\t         * @param  {number}  x\r\n\t         * @param  {number}  y\r\n\t         * @return {Boolean}\r\n\t         */\r\n\t        containStroke: function (\r\n\t            cx, cy, r, startAngle, endAngle, anticlockwise,\r\n\t            lineWidth, x, y\r\n\t        ) {\r\n\r\n\t            if (lineWidth === 0) {\r\n\t                return false;\r\n\t            }\r\n\t            var _l = lineWidth;\r\n\r\n\t            x -= cx;\r\n\t            y -= cy;\r\n\t            var d = Math.sqrt(x * x + y * y);\r\n\r\n\t            if ((d - _l > r) || (d + _l < r)) {\r\n\t                return false;\r\n\t            }\r\n\t            if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\r\n\t                // Is a circle\r\n\t                return true;\r\n\t            }\r\n\t            if (anticlockwise) {\r\n\t                var tmp = startAngle;\r\n\t                startAngle = normalizeRadian(endAngle);\r\n\t                endAngle = normalizeRadian(tmp);\r\n\t            } else {\r\n\t                startAngle = normalizeRadian(startAngle);\r\n\t                endAngle = normalizeRadian(endAngle);\r\n\t            }\r\n\t            if (startAngle > endAngle) {\r\n\t                endAngle += PI2;\r\n\t            }\r\n\r\n\t            var angle = Math.atan2(y, x);\r\n\t            if (angle < 0) {\r\n\t                angle += PI2;\r\n\t            }\r\n\t            return (angle >= startAngle && angle <= endAngle)\r\n\t                || (angle + PI2 >= startAngle && angle + PI2 <= endAngle);\r\n\t        }\r\n\t    };\r\n\r\n\r\n/***/ },\r\n/* 57 */\r\n/***/ function(module, exports) {\r\n\r\n\t\r\n\r\n\t    var PI2 = Math.PI * 2;\r\n\t    module.exports = {\r\n\t        normalizeRadian: function(angle) {\r\n\t            angle %= PI2;\r\n\t            if (angle < 0) {\r\n\t                angle += PI2;\r\n\t            }\r\n\t            return angle;\r\n\t        }\r\n\t    };\r\n\r\n\r\n/***/ },\r\n/* 58 */\r\n/***/ function(module, exports) {\r\n\r\n\t\r\n\t    module.exports = function windingLine(x0, y0, x1, y1, x, y) {\r\n\t        if ((y > y0 && y > y1) || (y < y0 && y < y1)) {\r\n\t            return 0;\r\n\t        }\r\n\t        // Ignore horizontal line\r\n\t        if (y1 === y0) {\r\n\t            return 0;\r\n\t        }\r\n\t        var dir = y1 < y0 ? 1 : -1;\r\n\t        var t = (y - y0) / (y1 - y0);\r\n\r\n\t        // Avoid winding error when intersection point is the connect point of two line of polygon\r\n\t        if (t === 1 || t === 0) {\r\n\t            dir = y1 < y0 ? 0.5 : -0.5;\r\n\t        }\r\n\r\n\t        var x_ = t * (x1 - x0) + x0;\r\n\r\n\t        return x_ > x ? dir : 0;\r\n\t    };\r\n\r\n\r\n/***/ },\r\n/* 59 */\r\n/***/ function(module, exports) {\r\n\r\n\t\r\n\r\n\t    var Pattern = function (image, repeat) {\r\n\t        this.image = image;\r\n\t        this.repeat = repeat;\r\n\r\n\t        // Can be cloned\r\n\t        this.type = 'pattern';\r\n\t    };\r\n\r\n\t    Pattern.prototype.getCanvasPattern = function (ctx) {\r\n\r\n\t        return this._canvasPattern\r\n\t            || (this._canvasPattern = ctx.createPattern(this.image, this.repeat));\r\n\t    };\r\n\r\n\t    module.exports = Pattern;\r\n\r\n\r\n/***/ },\r\n/* 60 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t\r\n\r\n\t    var CMD = __webpack_require__(49).CMD;\r\n\t    var vec2 = __webpack_require__(10);\r\n\t    var v2ApplyTransform = vec2.applyTransform;\r\n\r\n\t    var points = [[], [], []];\r\n\t    var mathSqrt = Math.sqrt;\r\n\t    var mathAtan2 = Math.atan2;\r\n\t    function transformPath(path, m) {\r\n\t        var data = path.data;\r\n\t        var cmd;\r\n\t        var nPoint;\r\n\t        var i;\r\n\t        var j;\r\n\t        var k;\r\n\t        var p;\r\n\r\n\t        var M = CMD.M;\r\n\t        var C = CMD.C;\r\n\t        var L = CMD.L;\r\n\t        var R = CMD.R;\r\n\t        var A = CMD.A;\r\n\t        var Q = CMD.Q;\r\n\r\n\t        for (i = 0, j = 0; i < data.length;) {\r\n\t            cmd = data[i++];\r\n\t            j = i;\r\n\t            nPoint = 0;\r\n\r\n\t            switch (cmd) {\r\n\t                case M:\r\n\t                    nPoint = 1;\r\n\t                    break;\r\n\t                case L:\r\n\t                    nPoint = 1;\r\n\t                    break;\r\n\t                case C:\r\n\t                    nPoint = 3;\r\n\t                    break;\r\n\t                case Q:\r\n\t                    nPoint = 2;\r\n\t                    break;\r\n\t                case A:\r\n\t                    var x = m[4];\r\n\t                    var y = m[5];\r\n\t                    var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\r\n\t                    var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\r\n\t                    var angle = mathAtan2(-m[1] / sy, m[0] / sx);\r\n\t                    // cx\r\n\t                    data[i++] += x;\r\n\t                    // cy\r\n\t                    data[i++] += y;\r\n\t                    // Scale rx and ry\r\n\t                    // FIXME Assume psi is 0 here\r\n\t                    data[i++] *= sx;\r\n\t                    data[i++] *= sy;\r\n\r\n\t                    // Start angle\r\n\t                    data[i++] += angle;\r\n\t                    // end angle\r\n\t                    data[i++] += angle;\r\n\t                    // FIXME psi\r\n\t                    i += 2;\r\n\t                    j = i;\r\n\t                    break;\r\n\t                case R:\r\n\t                    // x0, y0\r\n\t                    p[0] = data[i++];\r\n\t                    p[1] = data[i++];\r\n\t                    v2ApplyTransform(p, p, m);\r\n\t                    data[j++] = p[0];\r\n\t                    data[j++] = p[1];\r\n\t                    // x1, y1\r\n\t                    p[0] += data[i++];\r\n\t                    p[1] += data[i++];\r\n\t                    v2ApplyTransform(p, p, m);\r\n\t                    data[j++] = p[0];\r\n\t                    data[j++] = p[1];\r\n\t            }\r\n\r\n\t            for (k = 0; k < nPoint; k++) {\r\n\t                var p = points[k];\r\n\t                p[0] = data[i++];\r\n\t                p[1] = data[i++];\r\n\r\n\t                v2ApplyTransform(p, p, m);\r\n\t                // Write back\r\n\t                data[j++] = p[0];\r\n\t                data[j++] = p[1];\r\n\t            }\r\n\t        }\r\n\t    }\r\n\r\n\t    module.exports = transformPath;\r\n\r\n\r\n/***/ },\r\n/* 61 */\r\n/***/ function(module, exports) {\r\n\r\n\t\r\n\r\n\t    /**\r\n\t     * @param {Array.<Object>} colorStops\r\n\t     */\r\n\t    var Gradient = function (colorStops) {\r\n\r\n\t        this.colorStops = colorStops || [];\r\n\t    };\r\n\r\n\t    Gradient.prototype = {\r\n\r\n\t        constructor: Gradient,\r\n\r\n\t        addColorStop: function (offset, color) {\r\n\t            this.colorStops.push({\r\n\r\n\t                offset: offset,\r\n\r\n\t                color: color\r\n\t            });\r\n\t        }\r\n\t    };\r\n\r\n\t    module.exports = Gradient;\r\n\r\n\r\n/***/ },\r\n/* 62 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t/**\r\n\t * Image element\r\n\t * @module zrender/graphic/Image\r\n\t */\r\n\r\n\r\n\r\n\t    var Displayable = __webpack_require__(46);\r\n\t    var BoundingRect = __webpack_require__(9);\r\n\t    var zrUtil = __webpack_require__(4);\r\n\r\n\t    var LRU = __webpack_require__(63);\r\n\t    var globalImageCache = new LRU(50);\r\n\t    /**\r\n\t     * @alias zrender/graphic/Image\r\n\t     * @extends module:zrender/graphic/Displayable\r\n\t     * @constructor\r\n\t     * @param {Object} opts\r\n\t     */\r\n\t    function ZImage(opts) {\r\n\t        Displayable.call(this, opts);\r\n\t    }\r\n\r\n\t    ZImage.prototype = {\r\n\r\n\t        constructor: ZImage,\r\n\r\n\t        type: 'image',\r\n\r\n\t        brush: function (ctx, prevEl) {\r\n\t            var style = this.style;\r\n\t            var src = style.image;\r\n\t            var image;\r\n\r\n\t            // Must bind each time\r\n\t            style.bind(ctx, this, prevEl);\r\n\r\n\t            // style.image is a url string\r\n\t            if (typeof src === 'string') {\r\n\t                image = this._image;\r\n\t            }\r\n\t            // style.image is an HTMLImageElement or HTMLCanvasElement or Canvas\r\n\t            else {\r\n\t                image = src;\r\n\t            }\r\n\t            // FIXME Case create many images with src\r\n\t            if (!image && src) {\r\n\t                // Try get from global image cache\r\n\t                var cachedImgObj = globalImageCache.get(src);\r\n\t                if (!cachedImgObj) {\r\n\t                    // Create a new image\r\n\t                    image = new Image();\r\n\t                    image.onload = function () {\r\n\t                        image.onload = null;\r\n\t                        for (var i = 0; i < cachedImgObj.pending.length; i++) {\r\n\t                            cachedImgObj.pending[i].dirty();\r\n\t                        }\r\n\t                    };\r\n\t                    cachedImgObj = {\r\n\t                        image: image,\r\n\t                        pending: [this]\r\n\t                    };\r\n\t                    image.src = src;\r\n\t                    globalImageCache.put(src, cachedImgObj);\r\n\t                    this._image = image;\r\n\t                    return;\r\n\t                }\r\n\t                else {\r\n\t                    image = cachedImgObj.image;\r\n\t                    this._image = image;\r\n\t                    // Image is not complete finish, add to pending list\r\n\t                    if (!image.width || !image.height) {\r\n\t                        cachedImgObj.pending.push(this);\r\n\t                        return;\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\r\n\t            if (image) {\r\n\t                // 图片已经加载完成\r\n\t                // if (image.nodeName.toUpperCase() == 'IMG') {\r\n\t                //     if (!image.complete) {\r\n\t                //         return;\r\n\t                //     }\r\n\t                // }\r\n\t                // Else is canvas\r\n\r\n\t                var width = style.width || image.width;\r\n\t                var height = style.height || image.height;\r\n\t                var x = style.x || 0;\r\n\t                var y = style.y || 0;\r\n\t                // 图片加载失败\r\n\t                if (!image.width || !image.height) {\r\n\t                    return;\r\n\t                }\r\n\r\n\t                // 设置transform\r\n\t                this.setTransform(ctx);\r\n\r\n\r\n\t                if (style.sWidth && style.sHeight) {\r\n\t                    var sx = style.sx || 0;\r\n\t                    var sy = style.sy || 0;\r\n\t                    ctx.drawImage(\r\n\t                        image,\r\n\t                        sx, sy, style.sWidth, style.sHeight,\r\n\t                        x, y, width, height\r\n\t                    );\r\n\t                }\r\n\t                else if (style.sx && style.sy) {\r\n\t                    var sx = style.sx;\r\n\t                    var sy = style.sy;\r\n\t                    var sWidth = width - sx;\r\n\t                    var sHeight = height - sy;\r\n\t                    ctx.drawImage(\r\n\t                        image,\r\n\t                        sx, sy, sWidth, sHeight,\r\n\t                        x, y, width, height\r\n\t                    );\r\n\t                }\r\n\t                else {\r\n\t                    ctx.drawImage(image, x, y, width, height);\r\n\t                }\r\n\r\n\t                // 如果没设置宽和高的话自动根据图片宽高设置\r\n\t                if (style.width == null) {\r\n\t                    style.width = width;\r\n\t                }\r\n\t                if (style.height == null) {\r\n\t                    style.height = height;\r\n\t                }\r\n\r\n\t                this.restoreTransform(ctx);\r\n\r\n\t                // Draw rect text\r\n\t                if (style.text != null) {\r\n\t                    this.drawRectText(ctx, this.getBoundingRect());\r\n\t                }\r\n\r\n\t            }\r\n\t        },\r\n\r\n\t        getBoundingRect: function () {\r\n\t            var style = this.style;\r\n\t            if (! this._rect) {\r\n\t                this._rect = new BoundingRect(\r\n\t                    style.x || 0, style.y || 0, style.width || 0, style.height || 0\r\n\t                );\r\n\t            }\r\n\t            return this._rect;\r\n\t        }\r\n\t    };\r\n\r\n\t    zrUtil.inherits(ZImage, Displayable);\r\n\r\n\t    module.exports = ZImage;\r\n\r\n\r\n/***/ },\r\n/* 63 */\r\n/***/ function(module, exports) {\r\n\r\n\t// Simple LRU cache use doubly linked list\r\n\t// @module zrender/core/LRU\r\n\r\n\r\n\t    /**\r\n\t     * Simple double linked list. Compared with array, it has O(1) remove operation.\r\n\t     * @constructor\r\n\t     */\r\n\t    var LinkedList = function() {\r\n\r\n\t        /**\r\n\t         * @type {module:zrender/core/LRU~Entry}\r\n\t         */\r\n\t        this.head = null;\r\n\r\n\t        /**\r\n\t         * @type {module:zrender/core/LRU~Entry}\r\n\t         */\r\n\t        this.tail = null;\r\n\r\n\t        this._len = 0;\r\n\t    };\r\n\r\n\t    var linkedListProto = LinkedList.prototype;\r\n\t    /**\r\n\t     * Insert a new value at the tail\r\n\t     * @param  {} val\r\n\t     * @return {module:zrender/core/LRU~Entry}\r\n\t     */\r\n\t    linkedListProto.insert = function(val) {\r\n\t        var entry = new Entry(val);\r\n\t        this.insertEntry(entry);\r\n\t        return entry;\r\n\t    };\r\n\r\n\t    /**\r\n\t     * Insert an entry at the tail\r\n\t     * @param  {module:zrender/core/LRU~Entry} entry\r\n\t     */\r\n\t    linkedListProto.insertEntry = function(entry) {\r\n\t        if (!this.head) {\r\n\t            this.head = this.tail = entry;\r\n\t        }\r\n\t        else {\r\n\t            this.tail.next = entry;\r\n\t            entry.prev = this.tail;\r\n\t            this.tail = entry;\r\n\t        }\r\n\t        this._len++;\r\n\t    };\r\n\r\n\t    /**\r\n\t     * Remove entry.\r\n\t     * @param  {module:zrender/core/LRU~Entry} entry\r\n\t     */\r\n\t    linkedListProto.remove = function(entry) {\r\n\t        var prev = entry.prev;\r\n\t        var next = entry.next;\r\n\t        if (prev) {\r\n\t            prev.next = next;\r\n\t        }\r\n\t        else {\r\n\t            // Is head\r\n\t            this.head = next;\r\n\t        }\r\n\t        if (next) {\r\n\t            next.prev = prev;\r\n\t        }\r\n\t        else {\r\n\t            // Is tail\r\n\t            this.tail = prev;\r\n\t        }\r\n\t        entry.next = entry.prev = null;\r\n\t        this._len--;\r\n\t    };\r\n\r\n\t    /**\r\n\t     * @return {number}\r\n\t     */\r\n\t    linkedListProto.len = function() {\r\n\t        return this._len;\r\n\t    };\r\n\r\n\t    /**\r\n\t     * @constructor\r\n\t     * @param {} val\r\n\t     */\r\n\t    var Entry = function(val) {\r\n\t        /**\r\n\t         * @type {}\r\n\t         */\r\n\t        this.value = val;\r\n\r\n\t        /**\r\n\t         * @type {module:zrender/core/LRU~Entry}\r\n\t         */\r\n\t        this.next;\r\n\r\n\t        /**\r\n\t         * @type {module:zrender/core/LRU~Entry}\r\n\t         */\r\n\t        this.prev;\r\n\t    };\r\n\r\n\t    /**\r\n\t     * LRU Cache\r\n\t     * @constructor\r\n\t     * @alias module:zrender/core/LRU\r\n\t     */\r\n\t    var LRU = function(maxSize) {\r\n\r\n\t        this._list = new LinkedList();\r\n\r\n\t        this._map = {};\r\n\r\n\t        this._maxSize = maxSize || 10;\r\n\t    };\r\n\r\n\t    var LRUProto = LRU.prototype;\r\n\r\n\t    /**\r\n\t     * @param  {string} key\r\n\t     * @param  {} value\r\n\t     */\r\n\t    LRUProto.put = function(key, value) {\r\n\t        var list = this._list;\r\n\t        var map = this._map;\r\n\t        if (map[key] == null) {\r\n\t            var len = list.len();\r\n\t            if (len >= this._maxSize && len > 0) {\r\n\t                // Remove the least recently used\r\n\t                var leastUsedEntry = list.head;\r\n\t                list.remove(leastUsedEntry);\r\n\t                delete map[leastUsedEntry.key];\r\n\t            }\r\n\r\n\t            var entry = list.insert(value);\r\n\t            entry.key = key;\r\n\t            map[key] = entry;\r\n\t        }\r\n\t    };\r\n\r\n\t    /**\r\n\t     * @param  {string} key\r\n\t     * @return {}\r\n\t     */\r\n\t    LRUProto.get = function(key) {\r\n\t        var entry = this._map[key];\r\n\t        var list = this._list;\r\n\t        if (entry != null) {\r\n\t            // Put the latest used entry in the tail\r\n\t            if (entry !== list.tail) {\r\n\t                list.remove(entry);\r\n\t                list.insertEntry(entry);\r\n\t            }\r\n\r\n\t            return entry.value;\r\n\t        }\r\n\t    };\r\n\r\n\t    /**\r\n\t     * Clear the cache\r\n\t     */\r\n\t    LRUProto.clear = function() {\r\n\t        this._list.clear();\r\n\t        this._map = {};\r\n\t    };\r\n\r\n\t    module.exports = LRU;\r\n\r\n\r\n/***/ },\r\n/* 64 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t/**\r\n\t * Text element\r\n\t * @module zrender/graphic/Text\r\n\t *\r\n\t * TODO Wrapping\r\n\t *\r\n\t * Text not support gradient\r\n\t */\r\n\r\n\r\n\r\n\t    var Displayable = __webpack_require__(46);\r\n\t    var zrUtil = __webpack_require__(4);\r\n\t    var textContain = __webpack_require__(8);\r\n\r\n\t    /**\r\n\t     * @alias zrender/graphic/Text\r\n\t     * @extends module:zrender/graphic/Displayable\r\n\t     * @constructor\r\n\t     * @param {Object} opts\r\n\t     */\r\n\t    var Text = function (opts) {\r\n\t        Displayable.call(this, opts);\r\n\t    };\r\n\r\n\t    Text.prototype = {\r\n\r\n\t        constructor: Text,\r\n\r\n\t        type: 'text',\r\n\r\n\t        brush: function (ctx, prevEl) {\r\n\t            var style = this.style;\r\n\t            var x = style.x || 0;\r\n\t            var y = style.y || 0;\r\n\t            // Convert to string\r\n\t            var text = style.text;\r\n\r\n\t            // Convert to string\r\n\t            text != null && (text += '');\r\n\r\n\t            // Always bind style\r\n\t            style.bind(ctx, this, prevEl);\r\n\r\n\t            if (text) {\r\n\r\n\t                this.setTransform(ctx);\r\n\r\n\t                var textBaseline;\r\n\t                var textAlign = style.textAlign;\r\n\t                var font = style.textFont || style.font;\r\n\t                if (style.textVerticalAlign) {\r\n\t                    var rect = textContain.getBoundingRect(\r\n\t                        text, font, style.textAlign, 'top'\r\n\t                    );\r\n\t                    // Ignore textBaseline\r\n\t                    textBaseline = 'middle';\r\n\t                    switch (style.textVerticalAlign) {\r\n\t                        case 'middle':\r\n\t                            y -= rect.height / 2 - rect.lineHeight / 2;\r\n\t                            break;\r\n\t                        case 'bottom':\r\n\t                            y -= rect.height - rect.lineHeight / 2;\r\n\t                            break;\r\n\t                        default:\r\n\t                            y += rect.lineHeight / 2;\r\n\t                    }\r\n\t                }\r\n\t                else {\r\n\t                    textBaseline = style.textBaseline;\r\n\t                }\r\n\r\n\t                ctx.font = font;\r\n\t                ctx.textAlign = textAlign || 'left';\r\n\t                // Use canvas default left textAlign. Giving invalid value will cause state not change\r\n\t                if (ctx.textAlign !== textAlign) {\r\n\t                    ctx.textAlign = 'left';\r\n\t                }\r\n\t                ctx.textBaseline = textBaseline || 'alphabetic';\r\n\t                // Use canvas default alphabetic baseline\r\n\t                if (ctx.textBaseline !== textBaseline) {\r\n\t                    ctx.textBaseline = 'alphabetic';\r\n\t                }\r\n\r\n\t                var lineHeight = textContain.measureText('国', ctx.font).width;\r\n\r\n\t                var textLines = text.split('\\n');\r\n\t                for (var i = 0; i < textLines.length; i++) {\r\n\t                    style.hasFill() && ctx.fillText(textLines[i], x, y);\r\n\t                    style.hasStroke() && ctx.strokeText(textLines[i], x, y);\r\n\t                    y += lineHeight;\r\n\t                }\r\n\r\n\t                this.restoreTransform(ctx);\r\n\t            }\r\n\t        },\r\n\r\n\t        getBoundingRect: function () {\r\n\t            if (!this._rect) {\r\n\t                var style = this.style;\r\n\t                var textVerticalAlign = style.textVerticalAlign;\r\n\t                var rect = textContain.getBoundingRect(\r\n\t                    style.text + '', style.textFont || style.font, style.textAlign,\r\n\t                    textVerticalAlign ? 'top' : style.textBaseline\r\n\t                );\r\n\t                switch (textVerticalAlign) {\r\n\t                    case 'middle':\r\n\t                        rect.y -= rect.height / 2;\r\n\t                        break;\r\n\t                    case 'bottom':\r\n\t                        rect.y -= rect.height;\r\n\t                        break;\r\n\t                }\r\n\t                rect.x += style.x || 0;\r\n\t                rect.y += style.y || 0;\r\n\t                this._rect = rect;\r\n\t            }\r\n\t            return this._rect;\r\n\t        }\r\n\t    };\r\n\r\n\t    zrUtil.inherits(Text, Displayable);\r\n\r\n\t    module.exports = Text;\r\n\r\n\r\n/***/ },\r\n/* 65 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t'use strict';\r\n\t/**\r\n\t * 圆形\r\n\t * @module zrender/shape/Circle\r\n\t */\r\n\r\n\r\n\r\n\t    module.exports = __webpack_require__(45).extend({\r\n\r\n\t        type: 'circle',\r\n\r\n\t        shape: {\r\n\t            cx: 0,\r\n\t            cy: 0,\r\n\t            r: 0\r\n\t        },\r\n\r\n\r\n\t        buildPath : function (ctx, shape, inBundle) {\r\n\t            // Better stroking in ShapeBundle\r\n\t            // Always do it may have performence issue ( fill may be 2x more cost)\r\n\t            if (inBundle) {\r\n\t                ctx.moveTo(shape.cx + shape.r, shape.cy);\r\n\t            }\r\n\t            // Better stroking in ShapeBundle\r\n\t            // ctx.moveTo(shape.cx + shape.r, shape.cy);\r\n\t            ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\r\n\t        }\r\n\t    });\r\n\r\n\r\n\r\n/***/ },\r\n/* 66 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t/**\r\n\t * 扇形\r\n\t * @module zrender/graphic/shape/Sector\r\n\t */\r\n\r\n\t// FIXME clockwise seems wrong\r\n\r\n\r\n\t    module.exports = __webpack_require__(45).extend({\r\n\r\n\t        type: 'sector',\r\n\r\n\t        shape: {\r\n\r\n\t            cx: 0,\r\n\r\n\t            cy: 0,\r\n\r\n\t            r0: 0,\r\n\r\n\t            r: 0,\r\n\r\n\t            startAngle: 0,\r\n\r\n\t            endAngle: Math.PI * 2,\r\n\r\n\t            clockwise: true\r\n\t        },\r\n\r\n\t        buildPath: function (ctx, shape) {\r\n\r\n\t            var x = shape.cx;\r\n\t            var y = shape.cy;\r\n\t            var r0 = Math.max(shape.r0 || 0, 0);\r\n\t            var r = Math.max(shape.r, 0);\r\n\t            var startAngle = shape.startAngle;\r\n\t            var endAngle = shape.endAngle;\r\n\t            var clockwise = shape.clockwise;\r\n\r\n\t            var unitX = Math.cos(startAngle);\r\n\t            var unitY = Math.sin(startAngle);\r\n\r\n\t            ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\r\n\r\n\t            ctx.lineTo(unitX * r + x, unitY * r + y);\r\n\r\n\t            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\r\n\r\n\t            ctx.lineTo(\r\n\t                Math.cos(endAngle) * r0 + x,\r\n\t                Math.sin(endAngle) * r0 + y\r\n\t            );\r\n\r\n\t            if (r0 !== 0) {\r\n\t                ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\r\n\t            }\r\n\r\n\t            ctx.closePath();\r\n\t        }\r\n\t    });\r\n\r\n\r\n\r\n/***/ },\r\n/* 67 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t/**\r\n\t * 圆环\r\n\t * @module zrender/graphic/shape/Ring\r\n\t */\r\n\r\n\r\n\t    module.exports = __webpack_require__(45).extend({\r\n\r\n\t        type: 'ring',\r\n\r\n\t        shape: {\r\n\t            cx: 0,\r\n\t            cy: 0,\r\n\t            r: 0,\r\n\t            r0: 0\r\n\t        },\r\n\r\n\t        buildPath: function (ctx, shape) {\r\n\t            var x = shape.cx;\r\n\t            var y = shape.cy;\r\n\t            var PI2 = Math.PI * 2;\r\n\t            ctx.moveTo(x + shape.r, y);\r\n\t            ctx.arc(x, y, shape.r, 0, PI2, false);\r\n\t            ctx.moveTo(x + shape.r0, y);\r\n\t            ctx.arc(x, y, shape.r0, 0, PI2, true);\r\n\t        }\r\n\t    });\r\n\r\n\r\n\r\n/***/ },\r\n/* 68 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t/**\r\n\t * 多边形\r\n\t * @module zrender/shape/Polygon\r\n\t */\r\n\r\n\r\n\t    var polyHelper = __webpack_require__(69);\r\n\r\n\t    module.exports = __webpack_require__(45).extend({\r\n\t        \r\n\t        type: 'polygon',\r\n\r\n\t        shape: {\r\n\t            points: null,\r\n\r\n\t            smooth: false,\r\n\r\n\t            smoothConstraint: null\r\n\t        },\r\n\r\n\t        buildPath: function (ctx, shape) {\r\n\t            polyHelper.buildPath(ctx, shape, true);\r\n\t        }\r\n\t    });\r\n\r\n\r\n/***/ },\r\n/* 69 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t\r\n\r\n\t    var smoothSpline = __webpack_require__(70);\r\n\t    var smoothBezier = __webpack_require__(71);\r\n\r\n\t    module.exports = {\r\n\t        buildPath: function (ctx, shape, closePath) {\r\n\t            var points = shape.points;\r\n\t            var smooth = shape.smooth;\r\n\t            if (points && points.length >= 2) {\r\n\t                if (smooth && smooth !== 'spline') {\r\n\t                    var controlPoints = smoothBezier(\r\n\t                        points, smooth, closePath, shape.smoothConstraint\r\n\t                    );\r\n\r\n\t                    ctx.moveTo(points[0][0], points[0][1]);\r\n\t                    var len = points.length;\r\n\t                    for (var i = 0; i < (closePath ? len : len - 1); i++) {\r\n\t                        var cp1 = controlPoints[i * 2];\r\n\t                        var cp2 = controlPoints[i * 2 + 1];\r\n\t                        var p = points[(i + 1) % len];\r\n\t                        ctx.bezierCurveTo(\r\n\t                            cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]\r\n\t                        );\r\n\t                    }\r\n\t                }\r\n\t                else {\r\n\t                    if (smooth === 'spline') {\r\n\t                        points = smoothSpline(points, closePath);\r\n\t                    }\r\n\r\n\t                    ctx.moveTo(points[0][0], points[0][1]);\r\n\t                    for (var i = 1, l = points.length; i < l; i++) {\r\n\t                        ctx.lineTo(points[i][0], points[i][1]);\r\n\t                    }\r\n\t                }\r\n\r\n\t                closePath && ctx.closePath();\r\n\t            }\r\n\t        }\r\n\t    };\r\n\r\n\r\n/***/ },\r\n/* 70 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t/**\r\n\t * Catmull-Rom spline 插值折线\r\n\t * @module zrender/shape/util/smoothSpline\r\n\t * @author pissang (https://www.github.com/pissang)\r\n\t *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n\t *         errorrik (errorrik@gmail.com)\r\n\t */\r\n\r\n\t    var vec2 = __webpack_require__(10);\r\n\r\n\t    /**\r\n\t     * @inner\r\n\t     */\r\n\t    function interpolate(p0, p1, p2, p3, t, t2, t3) {\r\n\t        var v0 = (p2 - p0) * 0.5;\r\n\t        var v1 = (p3 - p1) * 0.5;\r\n\t        return (2 * (p1 - p2) + v0 + v1) * t3\r\n\t                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\r\n\t                + v0 * t + p1;\r\n\t    }\r\n\r\n\t    /**\r\n\t     * @alias module:zrender/shape/util/smoothSpline\r\n\t     * @param {Array} points 线段顶点数组\r\n\t     * @param {boolean} isLoop\r\n\t     * @return {Array}\r\n\t     */\r\n\t    module.exports = function (points, isLoop) {\r\n\t        var len = points.length;\r\n\t        var ret = [];\r\n\r\n\t        var distance = 0;\r\n\t        for (var i = 1; i < len; i++) {\r\n\t            distance += vec2.distance(points[i - 1], points[i]);\r\n\t        }\r\n\r\n\t        var segs = distance / 2;\r\n\t        segs = segs < len ? len : segs;\r\n\t        for (var i = 0; i < segs; i++) {\r\n\t            var pos = i / (segs - 1) * (isLoop ? len : len - 1);\r\n\t            var idx = Math.floor(pos);\r\n\r\n\t            var w = pos - idx;\r\n\r\n\t            var p0;\r\n\t            var p1 = points[idx % len];\r\n\t            var p2;\r\n\t            var p3;\r\n\t            if (!isLoop) {\r\n\t                p0 = points[idx === 0 ? idx : idx - 1];\r\n\t                p2 = points[idx > len - 2 ? len - 1 : idx + 1];\r\n\t                p3 = points[idx > len - 3 ? len - 1 : idx + 2];\r\n\t            }\r\n\t            else {\r\n\t                p0 = points[(idx - 1 + len) % len];\r\n\t                p2 = points[(idx + 1) % len];\r\n\t                p3 = points[(idx + 2) % len];\r\n\t            }\r\n\r\n\t            var w2 = w * w;\r\n\t            var w3 = w * w2;\r\n\r\n\t            ret.push([\r\n\t                interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3),\r\n\t                interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)\r\n\t            ]);\r\n\t        }\r\n\t        return ret;\r\n\t    };\r\n\r\n\r\n\r\n/***/ },\r\n/* 71 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t/**\r\n\t * 贝塞尔平滑曲线\r\n\t * @module zrender/shape/util/smoothBezier\r\n\t * @author pissang (https://www.github.com/pissang)\r\n\t *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n\t *         errorrik (errorrik@gmail.com)\r\n\t */\r\n\r\n\r\n\t    var vec2 = __webpack_require__(10);\r\n\t    var v2Min = vec2.min;\r\n\t    var v2Max = vec2.max;\r\n\t    var v2Scale = vec2.scale;\r\n\t    var v2Distance = vec2.distance;\r\n\t    var v2Add = vec2.add;\r\n\r\n\t    /**\r\n\t     * 贝塞尔平滑曲线\r\n\t     * @alias module:zrender/shape/util/smoothBezier\r\n\t     * @param {Array} points 线段顶点数组\r\n\t     * @param {number} smooth 平滑等级, 0-1\r\n\t     * @param {boolean} isLoop\r\n\t     * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\r\n\t     *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\r\n\t     *                           整个折线的包围盒做一个并集用来约束控制点。\r\n\t     * @param {Array} 计算出来的控制点数组\r\n\t     */\r\n\t    module.exports = function (points, smooth, isLoop, constraint) {\r\n\t        var cps = [];\r\n\r\n\t        var v = [];\r\n\t        var v1 = [];\r\n\t        var v2 = [];\r\n\t        var prevPoint;\r\n\t        var nextPoint;\r\n\r\n\t        var min, max;\r\n\t        if (constraint) {\r\n\t            min = [Infinity, Infinity];\r\n\t            max = [-Infinity, -Infinity];\r\n\t            for (var i = 0, len = points.length; i < len; i++) {\r\n\t                v2Min(min, min, points[i]);\r\n\t                v2Max(max, max, points[i]);\r\n\t            }\r\n\t            // 与指定的包围盒做并集\r\n\t            v2Min(min, min, constraint[0]);\r\n\t            v2Max(max, max, constraint[1]);\r\n\t        }\r\n\r\n\t        for (var i = 0, len = points.length; i < len; i++) {\r\n\t            var point = points[i];\r\n\r\n\t            if (isLoop) {\r\n\t                prevPoint = points[i ? i - 1 : len - 1];\r\n\t                nextPoint = points[(i + 1) % len];\r\n\t            }\r\n\t            else {\r\n\t                if (i === 0 || i === len - 1) {\r\n\t                    cps.push(vec2.clone(points[i]));\r\n\t                    continue;\r\n\t                }\r\n\t                else {\r\n\t                    prevPoint = points[i - 1];\r\n\t                    nextPoint = points[i + 1];\r\n\t                }\r\n\t            }\r\n\r\n\t            vec2.sub(v, nextPoint, prevPoint);\r\n\r\n\t            // use degree to scale the handle length\r\n\t            v2Scale(v, v, smooth);\r\n\r\n\t            var d0 = v2Distance(point, prevPoint);\r\n\t            var d1 = v2Distance(point, nextPoint);\r\n\t            var sum = d0 + d1;\r\n\t            if (sum !== 0) {\r\n\t                d0 /= sum;\r\n\t                d1 /= sum;\r\n\t            }\r\n\r\n\t            v2Scale(v1, v, -d0);\r\n\t            v2Scale(v2, v, d1);\r\n\t            var cp0 = v2Add([], point, v1);\r\n\t            var cp1 = v2Add([], point, v2);\r\n\t            if (constraint) {\r\n\t                v2Max(cp0, cp0, min);\r\n\t                v2Min(cp0, cp0, max);\r\n\t                v2Max(cp1, cp1, min);\r\n\t                v2Min(cp1, cp1, max);\r\n\t            }\r\n\t            cps.push(cp0);\r\n\t            cps.push(cp1);\r\n\t        }\r\n\r\n\t        if (isLoop) {\r\n\t            cps.push(cps.shift());\r\n\t        }\r\n\r\n\t        return cps;\r\n\t    };\r\n\r\n\r\n\r\n/***/ },\r\n/* 72 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t/**\r\n\t * @module zrender/graphic/shape/Polyline\r\n\t */\r\n\r\n\r\n\t    var polyHelper = __webpack_require__(69);\r\n\r\n\t    module.exports = __webpack_require__(45).extend({\r\n\t        \r\n\t        type: 'polyline',\r\n\r\n\t        shape: {\r\n\t            points: null,\r\n\r\n\t            smooth: false,\r\n\r\n\t            smoothConstraint: null\r\n\t        },\r\n\r\n\t        style: {\r\n\t            stroke: '#000',\r\n\r\n\t            fill: null\r\n\t        },\r\n\r\n\t        buildPath: function (ctx, shape) {\r\n\t            polyHelper.buildPath(ctx, shape, false);\r\n\t        }\r\n\t    });\r\n\r\n\r\n/***/ },\r\n/* 73 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t/**\r\n\t * 矩形\r\n\t * @module zrender/graphic/shape/Rect\r\n\t */\r\n\r\n\r\n\t    var roundRectHelper = __webpack_require__(74);\r\n\r\n\t    module.exports = __webpack_require__(45).extend({\r\n\r\n\t        type: 'rect',\r\n\r\n\t        shape: {\r\n\t            // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\r\n\t            // r缩写为1         相当于 [1, 1, 1, 1]\r\n\t            // r缩写为[1]       相当于 [1, 1, 1, 1]\r\n\t            // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\r\n\t            // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\r\n\t            r: 0,\r\n\r\n\t            x: 0,\r\n\t            y: 0,\r\n\t            width: 0,\r\n\t            height: 0\r\n\t        },\r\n\r\n\t        buildPath: function (ctx, shape) {\r\n\t            var x = shape.x;\r\n\t            var y = shape.y;\r\n\t            var width = shape.width;\r\n\t            var height = shape.height;\r\n\t            if (!shape.r) {\r\n\t                ctx.rect(x, y, width, height);\r\n\t            }\r\n\t            else {\r\n\t                roundRectHelper.buildPath(ctx, shape);\r\n\t            }\r\n\t            ctx.closePath();\r\n\t            return;\r\n\t        }\r\n\t    });\r\n\r\n\r\n\r\n/***/ },\r\n/* 74 */\r\n/***/ function(module, exports) {\r\n\r\n\t\r\n\r\n\t    module.exports = {\r\n\t        buildPath: function (ctx, shape) {\r\n\t            var x = shape.x;\r\n\t            var y = shape.y;\r\n\t            var width = shape.width;\r\n\t            var height = shape.height;\r\n\t            var r = shape.r;\r\n\t            var r1;\r\n\t            var r2;\r\n\t            var r3;\r\n\t            var r4;\r\n\r\n\t            // Convert width and height to positive for better borderRadius\r\n\t            if (width < 0) {\r\n\t                x = x + width;\r\n\t                width = -width;\r\n\t            }\r\n\t            if (height < 0) {\r\n\t                y = y + height;\r\n\t                height = -height;\r\n\t            }\r\n\r\n\t            if (typeof r === 'number') {\r\n\t                r1 = r2 = r3 = r4 = r;\r\n\t            }\r\n\t            else if (r instanceof Array) {\r\n\t                if (r.length === 1) {\r\n\t                    r1 = r2 = r3 = r4 = r[0];\r\n\t                }\r\n\t                else if (r.length === 2) {\r\n\t                    r1 = r3 = r[0];\r\n\t                    r2 = r4 = r[1];\r\n\t                }\r\n\t                else if (r.length === 3) {\r\n\t                    r1 = r[0];\r\n\t                    r2 = r4 = r[1];\r\n\t                    r3 = r[2];\r\n\t                }\r\n\t                else {\r\n\t                    r1 = r[0];\r\n\t                    r2 = r[1];\r\n\t                    r3 = r[2];\r\n\t                    r4 = r[3];\r\n\t                }\r\n\t            }\r\n\t            else {\r\n\t                r1 = r2 = r3 = r4 = 0;\r\n\t            }\r\n\r\n\t            var total;\r\n\t            if (r1 + r2 > width) {\r\n\t                total = r1 + r2;\r\n\t                r1 *= width / total;\r\n\t                r2 *= width / total;\r\n\t            }\r\n\t            if (r3 + r4 > width) {\r\n\t                total = r3 + r4;\r\n\t                r3 *= width / total;\r\n\t                r4 *= width / total;\r\n\t            }\r\n\t            if (r2 + r3 > height) {\r\n\t                total = r2 + r3;\r\n\t                r2 *= height / total;\r\n\t                r3 *= height / total;\r\n\t            }\r\n\t            if (r1 + r4 > height) {\r\n\t                total = r1 + r4;\r\n\t                r1 *= height / total;\r\n\t                r4 *= height / total;\r\n\t            }\r\n\t            ctx.moveTo(x + r1, y);\r\n\t            ctx.lineTo(x + width - r2, y);\r\n\t            r2 !== 0 && ctx.quadraticCurveTo(\r\n\t                x + width, y, x + width, y + r2\r\n\t            );\r\n\t            ctx.lineTo(x + width, y + height - r3);\r\n\t            r3 !== 0 && ctx.quadraticCurveTo(\r\n\t                x + width, y + height, x + width - r3, y + height\r\n\t            );\r\n\t            ctx.lineTo(x + r4, y + height);\r\n\t            r4 !== 0 && ctx.quadraticCurveTo(\r\n\t                x, y + height, x, y + height - r4\r\n\t            );\r\n\t            ctx.lineTo(x, y + r1);\r\n\t            r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\r\n\t        }\r\n\t    };\r\n\r\n\r\n/***/ },\r\n/* 75 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t/**\r\n\t * 直线\r\n\t * @module zrender/graphic/shape/Line\r\n\t */\r\n\r\n\t    module.exports = __webpack_require__(45).extend({\r\n\r\n\t        type: 'line',\r\n\r\n\t        shape: {\r\n\t            // Start point\r\n\t            x1: 0,\r\n\t            y1: 0,\r\n\t            // End point\r\n\t            x2: 0,\r\n\t            y2: 0,\r\n\r\n\t            percent: 1\r\n\t        },\r\n\r\n\t        style: {\r\n\t            stroke: '#000',\r\n\t            fill: null\r\n\t        },\r\n\r\n\t        buildPath: function (ctx, shape) {\r\n\t            var x1 = shape.x1;\r\n\t            var y1 = shape.y1;\r\n\t            var x2 = shape.x2;\r\n\t            var y2 = shape.y2;\r\n\t            var percent = shape.percent;\r\n\r\n\t            if (percent === 0) {\r\n\t                return;\r\n\t            }\r\n\r\n\t            ctx.moveTo(x1, y1);\r\n\r\n\t            if (percent < 1) {\r\n\t                x2 = x1 * (1 - percent) + x2 * percent;\r\n\t                y2 = y1 * (1 - percent) + y2 * percent;\r\n\t            }\r\n\t            ctx.lineTo(x2, y2);\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Get point at percent\r\n\t         * @param  {number} percent\r\n\t         * @return {Array.<number>}\r\n\t         */\r\n\t        pointAt: function (p) {\r\n\t            var shape = this.shape;\r\n\t            return [\r\n\t                shape.x1 * (1 - p) + shape.x2 * p,\r\n\t                shape.y1 * (1 - p) + shape.y2 * p\r\n\t            ];\r\n\t        }\r\n\t    });\r\n\r\n\r\n\r\n/***/ },\r\n/* 76 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t'use strict';\r\n\t/**\r\n\t * 贝塞尔曲线\r\n\t * @module zrender/shape/BezierCurve\r\n\t */\r\n\r\n\r\n\t    var curveTool = __webpack_require__(50);\r\n\t    var vec2 = __webpack_require__(10);\r\n\t    var quadraticSubdivide = curveTool.quadraticSubdivide;\r\n\t    var cubicSubdivide = curveTool.cubicSubdivide;\r\n\t    var quadraticAt = curveTool.quadraticAt;\r\n\t    var cubicAt = curveTool.cubicAt;\r\n\t    var quadraticDerivativeAt = curveTool.quadraticDerivativeAt;\r\n\t    var cubicDerivativeAt = curveTool.cubicDerivativeAt;\r\n\r\n\t    var out = [];\r\n\r\n\t    function someVectorAt(shape, t, isTangent) {\r\n\t        var cpx2 = shape.cpx2;\r\n\t        var cpy2 = shape.cpy2;\r\n\t        if (cpx2 === null || cpy2 === null) {\r\n\t            return [\r\n\t                (isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t),\r\n\t                (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)\r\n\t            ];\r\n\t        }\r\n\t        else {\r\n\t            return [\r\n\t                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t),\r\n\t                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)\r\n\t            ];\r\n\t        }\r\n\t    }\r\n\t    module.exports = __webpack_require__(45).extend({\r\n\r\n\t        type: 'bezier-curve',\r\n\r\n\t        shape: {\r\n\t            x1: 0,\r\n\t            y1: 0,\r\n\t            x2: 0,\r\n\t            y2: 0,\r\n\t            cpx1: 0,\r\n\t            cpy1: 0,\r\n\t            // cpx2: 0,\r\n\t            // cpy2: 0\r\n\r\n\t            // Curve show percent, for animating\r\n\t            percent: 1\r\n\t        },\r\n\r\n\t        style: {\r\n\t            stroke: '#000',\r\n\t            fill: null\r\n\t        },\r\n\r\n\t        buildPath: function (ctx, shape) {\r\n\t            var x1 = shape.x1;\r\n\t            var y1 = shape.y1;\r\n\t            var x2 = shape.x2;\r\n\t            var y2 = shape.y2;\r\n\t            var cpx1 = shape.cpx1;\r\n\t            var cpy1 = shape.cpy1;\r\n\t            var cpx2 = shape.cpx2;\r\n\t            var cpy2 = shape.cpy2;\r\n\t            var percent = shape.percent;\r\n\t            if (percent === 0) {\r\n\t                return;\r\n\t            }\r\n\r\n\t            ctx.moveTo(x1, y1);\r\n\r\n\t            if (cpx2 == null || cpy2 == null) {\r\n\t                if (percent < 1) {\r\n\t                    quadraticSubdivide(\r\n\t                        x1, cpx1, x2, percent, out\r\n\t                    );\r\n\t                    cpx1 = out[1];\r\n\t                    x2 = out[2];\r\n\t                    quadraticSubdivide(\r\n\t                        y1, cpy1, y2, percent, out\r\n\t                    );\r\n\t                    cpy1 = out[1];\r\n\t                    y2 = out[2];\r\n\t                }\r\n\r\n\t                ctx.quadraticCurveTo(\r\n\t                    cpx1, cpy1,\r\n\t                    x2, y2\r\n\t                );\r\n\t            }\r\n\t            else {\r\n\t                if (percent < 1) {\r\n\t                    cubicSubdivide(\r\n\t                        x1, cpx1, cpx2, x2, percent, out\r\n\t                    );\r\n\t                    cpx1 = out[1];\r\n\t                    cpx2 = out[2];\r\n\t                    x2 = out[3];\r\n\t                    cubicSubdivide(\r\n\t                        y1, cpy1, cpy2, y2, percent, out\r\n\t                    );\r\n\t                    cpy1 = out[1];\r\n\t                    cpy2 = out[2];\r\n\t                    y2 = out[3];\r\n\t                }\r\n\t                ctx.bezierCurveTo(\r\n\t                    cpx1, cpy1,\r\n\t                    cpx2, cpy2,\r\n\t                    x2, y2\r\n\t                );\r\n\t            }\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Get point at percent\r\n\t         * @param  {number} t\r\n\t         * @return {Array.<number>}\r\n\t         */\r\n\t        pointAt: function (t) {\r\n\t            return someVectorAt(this.shape, t, false);\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Get tangent at percent\r\n\t         * @param  {number} t\r\n\t         * @return {Array.<number>}\r\n\t         */\r\n\t        tangentAt: function (t) {\r\n\t            var p = someVectorAt(this.shape, t, true);\r\n\t            return vec2.normalize(p, p);\r\n\t        }\r\n\t    });\r\n\r\n\r\n\r\n/***/ },\r\n/* 77 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t/**\r\n\t * 圆弧\r\n\t * @module zrender/graphic/shape/Arc\r\n\t */\r\n\t \r\n\r\n\t    module.exports = __webpack_require__(45).extend({\r\n\r\n\t        type: 'arc',\r\n\r\n\t        shape: {\r\n\r\n\t            cx: 0,\r\n\r\n\t            cy: 0,\r\n\r\n\t            r: 0,\r\n\r\n\t            startAngle: 0,\r\n\r\n\t            endAngle: Math.PI * 2,\r\n\r\n\t            clockwise: true\r\n\t        },\r\n\r\n\t        style: {\r\n\r\n\t            stroke: '#000',\r\n\r\n\t            fill: null\r\n\t        },\r\n\r\n\t        buildPath: function (ctx, shape) {\r\n\r\n\t            var x = shape.cx;\r\n\t            var y = shape.cy;\r\n\t            var r = Math.max(shape.r, 0);\r\n\t            var startAngle = shape.startAngle;\r\n\t            var endAngle = shape.endAngle;\r\n\t            var clockwise = shape.clockwise;\r\n\r\n\t            var unitX = Math.cos(startAngle);\r\n\t            var unitY = Math.sin(startAngle);\r\n\r\n\t            ctx.moveTo(unitX * r + x, unitY * r + y);\r\n\t            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\r\n\t        }\r\n\t    });\r\n\r\n\r\n/***/ },\r\n/* 78 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t// CompoundPath to improve performance\r\n\r\n\r\n\t    var Path = __webpack_require__(45);\r\n\t    module.exports = Path.extend({\r\n\r\n\t        type: 'compound',\r\n\r\n\t        shape: {\r\n\r\n\t            paths: null\r\n\t        },\r\n\r\n\t        _updatePathDirty: function () {\r\n\t            var dirtyPath = this.__dirtyPath;\r\n\t            var paths = this.shape.paths;\r\n\t            for (var i = 0; i < paths.length; i++) {\r\n\t                // Mark as dirty if any subpath is dirty\r\n\t                dirtyPath = dirtyPath || paths[i].__dirtyPath;\r\n\t            }\r\n\t            this.__dirtyPath = dirtyPath;\r\n\t            this.__dirty = this.__dirty || dirtyPath;\r\n\t        },\r\n\r\n\t        beforeBrush: function () {\r\n\t            this._updatePathDirty();\r\n\t            var paths = this.shape.paths || [];\r\n\t            var scale = this.getGlobalScale();\r\n\t            // Update path scale\r\n\t            for (var i = 0; i < paths.length; i++) {\r\n\t                paths[i].path.setScale(scale[0], scale[1]);\r\n\t            }\r\n\t        },\r\n\r\n\t        buildPath: function (ctx, shape) {\r\n\t            var paths = shape.paths || [];\r\n\t            for (var i = 0; i < paths.length; i++) {\r\n\t                paths[i].buildPath(ctx, paths[i].shape, true);\r\n\t            }\r\n\t        },\r\n\r\n\t        afterBrush: function () {\r\n\t            var paths = this.shape.paths;\r\n\t            for (var i = 0; i < paths.length; i++) {\r\n\t                paths[i].__dirtyPath = false;\r\n\t            }\r\n\t        },\r\n\r\n\t        getBoundingRect: function () {\r\n\t            this._updatePathDirty();\r\n\t            return Path.prototype.getBoundingRect.call(this);\r\n\t        }\r\n\t    });\r\n\r\n\r\n/***/ },\r\n/* 79 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t'use strict';\r\n\r\n\r\n\t    var zrUtil = __webpack_require__(4);\r\n\r\n\t    var Gradient = __webpack_require__(61);\r\n\r\n\t    /**\r\n\t     * x, y, x2, y2 are all percent from 0 to 1\r\n\t     * @param {number} [x=0]\r\n\t     * @param {number} [y=0]\r\n\t     * @param {number} [x2=1]\r\n\t     * @param {number} [y2=0]\r\n\t     * @param {Array.<Object>} colorStops\r\n\t     * @param {boolean} [globalCoord=false]\r\n\t     */\r\n\t    var LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\r\n\t        this.x = x == null ? 0 : x;\r\n\r\n\t        this.y = y == null ? 0 : y;\r\n\r\n\t        this.x2 = x2 == null ? 1 : x2;\r\n\r\n\t        this.y2 = y2 == null ? 0 : y2;\r\n\r\n\t        // Can be cloned\r\n\t        this.type = 'linear';\r\n\r\n\t        // If use global coord\r\n\t        this.global = globalCoord || false;\r\n\r\n\t        Gradient.call(this, colorStops);\r\n\t    };\r\n\r\n\t    LinearGradient.prototype = {\r\n\r\n\t        constructor: LinearGradient\r\n\t    };\r\n\r\n\t    zrUtil.inherits(LinearGradient, Gradient);\r\n\r\n\t    module.exports = LinearGradient;\r\n\r\n\r\n/***/ },\r\n/* 80 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t'use strict';\r\n\r\n\r\n\t    var zrUtil = __webpack_require__(4);\r\n\r\n\t    var Gradient = __webpack_require__(61);\r\n\r\n\t    /**\r\n\t     * x, y, r are all percent from 0 to 1\r\n\t     * @param {number} [x=0.5]\r\n\t     * @param {number} [y=0.5]\r\n\t     * @param {number} [r=0.5]\r\n\t     * @param {Array.<Object>} [colorStops]\r\n\t     * @param {boolean} [globalCoord=false]\r\n\t     */\r\n\t    var RadialGradient = function (x, y, r, colorStops, globalCoord) {\r\n\t        this.x = x == null ? 0.5 : x;\r\n\r\n\t        this.y = y == null ? 0.5 : y;\r\n\r\n\t        this.r = r == null ? 0.5 : r;\r\n\r\n\t        // Can be cloned\r\n\t        this.type = 'radial';\r\n\r\n\t        // If use global coord\r\n\t        this.global = globalCoord || false;\r\n\r\n\t        Gradient.call(this, colorStops);\r\n\t    };\r\n\r\n\t    RadialGradient.prototype = {\r\n\r\n\t        constructor: RadialGradient\r\n\t    };\r\n\r\n\t    zrUtil.inherits(RadialGradient, Gradient);\r\n\r\n\t    module.exports = RadialGradient;\r\n\r\n\r\n/***/ },\r\n/* 81 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t/*!\r\n\t * ZRender, a high performance 2d drawing library.\r\n\t *\r\n\t * Copyright (c) 2013, Baidu Inc.\r\n\t * All rights reserved.\r\n\t *\r\n\t * LICENSE\r\n\t * https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\r\n\t */\r\n\t// Global defines\r\n\r\n\t    var guid = __webpack_require__(32);\r\n\t    var env = __webpack_require__(2);\r\n\r\n\t    var Handler = __webpack_require__(82);\r\n\t    var Storage = __webpack_require__(84);\r\n\t    var Animation = __webpack_require__(86);\r\n\t    var HandlerProxy = __webpack_require__(89);\r\n\r\n\t    var useVML = !env.canvasSupported;\r\n\r\n\t    var painterCtors = {\r\n\t        canvas: __webpack_require__(91)\r\n\t    };\r\n\r\n\t    var instances = {};    // ZRender实例map索引\r\n\r\n\t    var zrender = {};\r\n\t    /**\r\n\t     * @type {string}\r\n\t     */\r\n\t    zrender.version = '3.1.2';\r\n\r\n\t    /**\r\n\t     * Initializing a zrender instance\r\n\t     * @param {HTMLElement} dom\r\n\t     * @param {Object} opts\r\n\t     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\r\n\t     * @param {number} [opts.devicePixelRatio]\r\n\t     * @return {module:zrender/ZRender}\r\n\t     */\r\n\t    zrender.init = function(dom, opts) {\r\n\t        var zr = new ZRender(guid(), dom, opts);\r\n\t        instances[zr.id] = zr;\r\n\t        return zr;\r\n\t    };\r\n\r\n\t    /**\r\n\t     * Dispose zrender instance\r\n\t     * @param {module:zrender/ZRender} zr\r\n\t     */\r\n\t    zrender.dispose = function (zr) {\r\n\t        if (zr) {\r\n\t            zr.dispose();\r\n\t        }\r\n\t        else {\r\n\t            for (var key in instances) {\r\n\t                instances[key].dispose();\r\n\t            }\r\n\t            instances = {};\r\n\t        }\r\n\r\n\t        return zrender;\r\n\t    };\r\n\r\n\t    /**\r\n\t     * Get zrender instance by id\r\n\t     * @param {string} id zrender instance id\r\n\t     * @return {module:zrender/ZRender}\r\n\t     */\r\n\t    zrender.getInstance = function (id) {\r\n\t        return instances[id];\r\n\t    };\r\n\r\n\t    zrender.registerPainter = function (name, Ctor) {\r\n\t        painterCtors[name] = Ctor;\r\n\t    };\r\n\r\n\t    function delInstance(id) {\r\n\t        delete instances[id];\r\n\t    }\r\n\r\n\t    /**\r\n\t     * @module zrender/ZRender\r\n\t     */\r\n\t    /**\r\n\t     * @constructor\r\n\t     * @alias module:zrender/ZRender\r\n\t     * @param {string} id\r\n\t     * @param {HTMLDomElement} dom\r\n\t     * @param {Object} opts\r\n\t     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\r\n\t     * @param {number} [opts.devicePixelRatio]\r\n\t     */\r\n\t    var ZRender = function(id, dom, opts) {\r\n\r\n\t        opts = opts || {};\r\n\r\n\t        /**\r\n\t         * @type {HTMLDomElement}\r\n\t         */\r\n\t        this.dom = dom;\r\n\r\n\t        /**\r\n\t         * @type {string}\r\n\t         */\r\n\t        this.id = id;\r\n\r\n\t        var self = this;\r\n\t        var storage = new Storage();\r\n\r\n\t        var rendererType = opts.renderer;\r\n\t        if (useVML) {\r\n\t            if (!painterCtors.vml) {\r\n\t                throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\r\n\t            }\r\n\t            rendererType = 'vml';\r\n\t        }\r\n\t        else if (!rendererType || !painterCtors[rendererType]) {\r\n\t            rendererType = 'canvas';\r\n\t        }\r\n\t        var painter = new painterCtors[rendererType](dom, storage, opts);\r\n\r\n\t        this.storage = storage;\r\n\t        this.painter = painter;\r\n\r\n\t        var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;\r\n\t        this.handler = new Handler(storage, painter, handerProxy);\r\n\r\n\t        /**\r\n\t         * @type {module:zrender/animation/Animation}\r\n\t         */\r\n\t        this.animation = new Animation({\r\n\t            stage: {\r\n\t                update: function () {\r\n\t                    if (self._needsRefresh) {\r\n\t                        self.refreshImmediately();\r\n\t                    }\r\n\t                    if (self._needsRefreshHover) {\r\n\t                        self.refreshHoverImmediately();\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t        });\r\n\t        this.animation.start();\r\n\r\n\t        /**\r\n\t         * @type {boolean}\r\n\t         * @private\r\n\t         */\r\n\t        this._needsRefresh;\r\n\r\n\t        // 修改 storage.delFromMap, 每次删除元素之前删除动画\r\n\t        // FIXME 有点ugly\r\n\t        var oldDelFromMap = storage.delFromMap;\r\n\t        var oldAddToMap = storage.addToMap;\r\n\r\n\t        storage.delFromMap = function (elId) {\r\n\t            var el = storage.get(elId);\r\n\r\n\t            oldDelFromMap.call(storage, elId);\r\n\r\n\t            el && el.removeSelfFromZr(self);\r\n\t        };\r\n\r\n\t        storage.addToMap = function (el) {\r\n\t            oldAddToMap.call(storage, el);\r\n\r\n\t            el.addSelfToZr(self);\r\n\t        };\r\n\t    };\r\n\r\n\t    ZRender.prototype = {\r\n\r\n\t        constructor: ZRender,\r\n\t        /**\r\n\t         * 获取实例唯一标识\r\n\t         * @return {string}\r\n\t         */\r\n\t        getId: function () {\r\n\t            return this.id;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * 添加元素\r\n\t         * @param  {module:zrender/Element} el\r\n\t         */\r\n\t        add: function (el) {\r\n\t            this.storage.addRoot(el);\r\n\t            this._needsRefresh = true;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * 删除元素\r\n\t         * @param  {module:zrender/Element} el\r\n\t         */\r\n\t        remove: function (el) {\r\n\t            this.storage.delRoot(el);\r\n\t            this._needsRefresh = true;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Change configuration of layer\r\n\t         * @param {string} zLevel\r\n\t         * @param {Object} config\r\n\t         * @param {string} [config.clearColor=0] Clear color\r\n\t         * @param {string} [config.motionBlur=false] If enable motion blur\r\n\t         * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\r\n\t        */\r\n\t        configLayer: function (zLevel, config) {\r\n\t            this.painter.configLayer(zLevel, config);\r\n\t            this._needsRefresh = true;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Repaint the canvas immediately\r\n\t         */\r\n\t        refreshImmediately: function () {\r\n\t            // Clear needsRefresh ahead to avoid something wrong happens in refresh\r\n\t            // Or it will cause zrender refreshes again and again.\r\n\t            this._needsRefresh = false;\r\n\t            this.painter.refresh();\r\n\t            /**\r\n\t             * Avoid trigger zr.refresh in Element#beforeUpdate hook\r\n\t             */\r\n\t            this._needsRefresh = false;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Mark and repaint the canvas in the next frame of browser\r\n\t         */\r\n\t        refresh: function() {\r\n\t            this._needsRefresh = true;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Add element to hover layer\r\n\t         * @param  {module:zrender/Element} el\r\n\t         * @param {Object} style\r\n\t         */\r\n\t        addHover: function (el, style) {\r\n\t            if (this.painter.addHover) {\r\n\t                this.painter.addHover(el, style);\r\n\t                this.refreshHover();\r\n\t            }\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Add element from hover layer\r\n\t         * @param  {module:zrender/Element} el\r\n\t         */\r\n\t        removeHover: function (el) {\r\n\t            if (this.painter.removeHover) {\r\n\t                this.painter.removeHover(el);\r\n\t                this.refreshHover();\r\n\t            }\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Clear all hover elements in hover layer\r\n\t         * @param  {module:zrender/Element} el\r\n\t         */\r\n\t        clearHover: function () {\r\n\t            if (this.painter.clearHover) {\r\n\t                this.painter.clearHover();\r\n\t                this.refreshHover();\r\n\t            }\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Refresh hover in next frame\r\n\t         */\r\n\t        refreshHover: function () {\r\n\t            this._needsRefreshHover = true;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Refresh hover immediately\r\n\t         */\r\n\t        refreshHoverImmediately: function () {\r\n\t            this._needsRefreshHover = false;\r\n\t            this.painter.refreshHover && this.painter.refreshHover();\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Resize the canvas.\r\n\t         * Should be invoked when container size is changed\r\n\t         */\r\n\t        resize: function() {\r\n\t            this.painter.resize();\r\n\t            this.handler.resize();\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Stop and clear all animation immediately\r\n\t         */\r\n\t        clearAnimation: function () {\r\n\t            this.animation.clear();\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Get container width\r\n\t         */\r\n\t        getWidth: function() {\r\n\t            return this.painter.getWidth();\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Get container height\r\n\t         */\r\n\t        getHeight: function() {\r\n\t            return this.painter.getHeight();\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Export the canvas as Base64 URL\r\n\t         * @param {string} type\r\n\t         * @param {string} [backgroundColor='#fff']\r\n\t         * @return {string} Base64 URL\r\n\t         */\r\n\t        // toDataURL: function(type, backgroundColor) {\r\n\t        //     return this.painter.getRenderedCanvas({\r\n\t        //         backgroundColor: backgroundColor\r\n\t        //     }).toDataURL(type);\r\n\t        // },\r\n\r\n\t        /**\r\n\t         * Converting a path to image.\r\n\t         * It has much better performance of drawing image rather than drawing a vector path.\r\n\t         * @param {module:zrender/graphic/Path} e\r\n\t         * @param {number} width\r\n\t         * @param {number} height\r\n\t         */\r\n\t        pathToImage: function(e, width, height) {\r\n\t            var id = guid();\r\n\t            return this.painter.pathToImage(id, e, width, height);\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Set default cursor\r\n\t         * @param {string} [cursorStyle='default'] 例如 crosshair\r\n\t         */\r\n\t        setCursorStyle: function (cursorStyle) {\r\n\t            this.handler.setCursorStyle(cursorStyle);\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Bind event\r\n\t         *\r\n\t         * @param {string} eventName Event name\r\n\t         * @param {Function} eventHandler Handler function\r\n\t         * @param {Object} [context] Context object\r\n\t         */\r\n\t        on: function(eventName, eventHandler, context) {\r\n\t            this.handler.on(eventName, eventHandler, context);\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Unbind event\r\n\t         * @param {string} eventName Event name\r\n\t         * @param {Function} [eventHandler] Handler function\r\n\t         */\r\n\t        off: function(eventName, eventHandler) {\r\n\t            this.handler.off(eventName, eventHandler);\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Trigger event manually\r\n\t         *\r\n\t         * @param {string} eventName Event name\r\n\t         * @param {event=} event Event object\r\n\t         */\r\n\t        trigger: function (eventName, event) {\r\n\t            this.handler.trigger(eventName, event);\r\n\t        },\r\n\r\n\r\n\t        /**\r\n\t         * Clear all objects and the canvas.\r\n\t         */\r\n\t        clear: function () {\r\n\t            this.storage.delRoot();\r\n\t            this.painter.clear();\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Dispose self.\r\n\t         */\r\n\t        dispose: function () {\r\n\t            this.animation.stop();\r\n\r\n\t            this.clear();\r\n\t            this.storage.dispose();\r\n\t            this.painter.dispose();\r\n\t            this.handler.dispose();\r\n\r\n\t            this.animation =\r\n\t            this.storage =\r\n\t            this.painter =\r\n\t            this.handler = null;\r\n\r\n\t            delInstance(this.id);\r\n\t        }\r\n\t    };\r\n\r\n\t    module.exports = zrender;\r\n\r\n\r\n\r\n/***/ },\r\n/* 82 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t'use strict';\r\n\t/**\r\n\t * Handler\r\n\t * @module zrender/Handler\r\n\t * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n\t *         errorrik (errorrik@gmail.com)\r\n\t *         pissang (shenyi.914@gmail.com)\r\n\t */\r\n\r\n\r\n\t    var util = __webpack_require__(4);\r\n\t    var Draggable = __webpack_require__(83);\r\n\r\n\t    var Eventful = __webpack_require__(33);\r\n\r\n\t    function makeEventPacket(eveType, target, event) {\r\n\t        return {\r\n\t            type: eveType,\r\n\t            event: event,\r\n\t            target: target,\r\n\t            cancelBubble: false,\r\n\t            offsetX: event.zrX,\r\n\t            offsetY: event.zrY,\r\n\t            gestureEvent: event.gestureEvent,\r\n\t            pinchX: event.pinchX,\r\n\t            pinchY: event.pinchY,\r\n\t            pinchScale: event.pinchScale,\r\n\t            wheelDelta: event.zrDelta\r\n\t        };\r\n\t    }\r\n\r\n\t    function EmptyProxy () {}\r\n\t    EmptyProxy.prototype.dispose = function () {};\r\n\r\n\t    var handlerNames = [\r\n\t        'click', 'dblclick', 'mousewheel', 'mouseout',\r\n\t        'mouseup', 'mousedown', 'mousemove'\r\n\t    ];\r\n\t    /**\r\n\t     * @alias module:zrender/Handler\r\n\t     * @constructor\r\n\t     * @extends module:zrender/mixin/Eventful\r\n\t     * @param {HTMLElement} root Main HTML element for painting.\r\n\t     * @param {module:zrender/Storage} storage Storage instance.\r\n\t     * @param {module:zrender/Painter} painter Painter instance.\r\n\t     */\r\n\t    var Handler = function(storage, painter, proxy) {\r\n\t        Eventful.call(this);\r\n\r\n\t        this.storage = storage;\r\n\r\n\t        this.painter = painter;\r\n\r\n\t        proxy = proxy || new EmptyProxy();\r\n\t        /**\r\n\t         * Proxy of event. can be Dom, WebGLSurface, etc.\r\n\t         */\r\n\t        this.proxy = proxy;\r\n\r\n\t        // Attach handler\r\n\t        proxy.handler = this;\r\n\r\n\t        /**\r\n\t         * @private\r\n\t         * @type {boolean}\r\n\t         */\r\n\t        this._hovered;\r\n\r\n\t        /**\r\n\t         * @private\r\n\t         * @type {Date}\r\n\t         */\r\n\t        this._lastTouchMoment;\r\n\r\n\t        /**\r\n\t         * @private\r\n\t         * @type {number}\r\n\t         */\r\n\t        this._lastX;\r\n\r\n\t        /**\r\n\t         * @private\r\n\t         * @type {number}\r\n\t         */\r\n\t        this._lastY;\r\n\r\n\r\n\t        Draggable.call(this);\r\n\r\n\t        util.each(handlerNames, function (name) {\r\n\t            proxy.on && proxy.on(name, this[name], this);\r\n\t        }, this);\r\n\t    };\r\n\r\n\t    Handler.prototype = {\r\n\r\n\t        constructor: Handler,\r\n\r\n\t        mousemove: function (event) {\r\n\t            var x = event.zrX;\r\n\t            var y = event.zrY;\r\n\r\n\t            var hovered = this.findHover(x, y, null);\r\n\t            var lastHovered = this._hovered;\r\n\t            var proxy = this.proxy;\r\n\r\n\t            this._hovered = hovered;\r\n\r\n\t            proxy.setCursor && proxy.setCursor(hovered ? hovered.cursor : 'default');\r\n\r\n\t            // Mouse out on previous hovered element\r\n\t            if (lastHovered && hovered !== lastHovered && lastHovered.__zr) {\r\n\t                this.dispatchToElement(lastHovered, 'mouseout', event);\r\n\t            }\r\n\r\n\t            // Mouse moving on one element\r\n\t            this.dispatchToElement(hovered, 'mousemove', event);\r\n\r\n\t            // Mouse over on a new element\r\n\t            if (hovered && hovered !== lastHovered) {\r\n\t                this.dispatchToElement(hovered, 'mouseover', event);\r\n\t            }\r\n\t        },\r\n\r\n\t        mouseout: function (event) {\r\n\t            this.dispatchToElement(this._hovered, 'mouseout', event);\r\n\r\n\t            this.trigger('globalout', {\r\n\t                event: event\r\n\t            });\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Resize\r\n\t         */\r\n\t        resize: function (event) {\r\n\t            this._hovered = null;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Dispatch event\r\n\t         * @param {string} eventName\r\n\t         * @param {event=} eventArgs\r\n\t         */\r\n\t        dispatch: function (eventName, eventArgs) {\r\n\t            var handler = this[eventName];\r\n\t            handler && handler.call(this, eventArgs);\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Dispose\r\n\t         */\r\n\t        dispose: function () {\r\n\r\n\t            this.proxy.dispose();\r\n\r\n\t            this.storage =\r\n\t            this.proxy =\r\n\t            this.painter = null;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * 设置默认的cursor style\r\n\t         * @param {string} [cursorStyle='default'] 例如 crosshair\r\n\t         */\r\n\t        setCursorStyle: function (cursorStyle) {\r\n\t            var proxy = this.proxy;\r\n\t            proxy.setCursor && proxy.setCursor(cursorStyle);\r\n\t        },\r\n\r\n\t        /**\r\n\t         * 事件分发代理\r\n\t         *\r\n\t         * @private\r\n\t         * @param {Object} targetEl 目标图形元素\r\n\t         * @param {string} eventName 事件名称\r\n\t         * @param {Object} event 事件对象\r\n\t         */\r\n\t        dispatchToElement: function (targetEl, eventName, event) {\r\n\t            var eventHandler = 'on' + eventName;\r\n\t            var eventPacket = makeEventPacket(eventName, targetEl, event);\r\n\r\n\t            var el = targetEl;\r\n\r\n\t            while (el) {\r\n\t                el[eventHandler]\r\n\t                    && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\r\n\r\n\t                el.trigger(eventName, eventPacket);\r\n\r\n\t                el = el.parent;\r\n\r\n\t                if (eventPacket.cancelBubble) {\r\n\t                    break;\r\n\t                }\r\n\t            }\r\n\r\n\t            if (!eventPacket.cancelBubble) {\r\n\t                // 冒泡到顶级 zrender 对象\r\n\t                this.trigger(eventName, eventPacket);\r\n\t                // 分发事件到用户自定义层\r\n\t                // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\r\n\t                this.painter && this.painter.eachOtherLayer(function (layer) {\r\n\t                    if (typeof(layer[eventHandler]) == 'function') {\r\n\t                        layer[eventHandler].call(layer, eventPacket);\r\n\t                    }\r\n\t                    if (layer.trigger) {\r\n\t                        layer.trigger(eventName, eventPacket);\r\n\t                    }\r\n\t                });\r\n\t            }\r\n\t        },\r\n\r\n\t        /**\r\n\t         * @private\r\n\t         * @param {number} x\r\n\t         * @param {number} y\r\n\t         * @param {module:zrender/graphic/Displayable} exclude\r\n\t         * @method\r\n\t         */\r\n\t        findHover: function(x, y, exclude) {\r\n\t            var list = this.storage.getDisplayList();\r\n\t            for (var i = list.length - 1; i >= 0 ; i--) {\r\n\t                if (!list[i].silent\r\n\t                 && list[i] !== exclude\r\n\t                 // getDisplayList may include ignored item in VML mode\r\n\t                 && !list[i].ignore\r\n\t                 && isHover(list[i], x, y)) {\r\n\t                    return list[i];\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t    };\r\n\r\n\t    // Common handlers\r\n\t    util.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick'], function (name) {\r\n\t        Handler.prototype[name] = function (event) {\r\n\t            // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\r\n\t            var hovered = this.findHover(event.zrX, event.zrY, null);\r\n\r\n\t            if (name === 'mousedown') {\r\n\t                this._downel = hovered;\r\n\t                // In case click triggered before mouseup\r\n\t                this._upel = hovered;\r\n\t            }\r\n\t            else if (name === 'mosueup') {\r\n\t                this._upel = hovered;\r\n\t            }\r\n\t            else if (name === 'click') {\r\n\t                if (this._downel !== this._upel) {\r\n\t                    return;\r\n\t                }\r\n\t            }\r\n\r\n\t            this.dispatchToElement(hovered, name, event);\r\n\t        };\r\n\t    });\r\n\r\n\t    function isHover(displayable, x, y) {\r\n\t        if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\r\n\t            var el = displayable;\r\n\t            while (el) {\r\n\t                // If ancestor is silent or clipped by ancestor\r\n\t                if (el.silent || (el.clipPath && !el.clipPath.contain(x, y)))  {\r\n\t                    return false;\r\n\t                }\r\n\t                el = el.parent;\r\n\t            }\r\n\t            return true;\r\n\t        }\r\n\r\n\t        return false;\r\n\t    }\r\n\r\n\t    util.mixin(Handler, Eventful);\r\n\t    util.mixin(Handler, Draggable);\r\n\r\n\t    module.exports = Handler;\r\n\r\n\r\n/***/ },\r\n/* 83 */\r\n/***/ function(module, exports) {\r\n\r\n\t// TODO Draggable for group\r\n\t// FIXME Draggable on element which has parent rotation or scale\r\n\r\n\t    function Draggable() {\r\n\r\n\t        this.on('mousedown', this._dragStart, this);\r\n\t        this.on('mousemove', this._drag, this);\r\n\t        this.on('mouseup', this._dragEnd, this);\r\n\t        this.on('globalout', this._dragEnd, this);\r\n\t        // this._dropTarget = null;\r\n\t        // this._draggingTarget = null;\r\n\r\n\t        // this._x = 0;\r\n\t        // this._y = 0;\r\n\t    }\r\n\r\n\t    Draggable.prototype = {\r\n\r\n\t        constructor: Draggable,\r\n\r\n\t        _dragStart: function (e) {\r\n\t            var draggingTarget = e.target;\r\n\t            if (draggingTarget && draggingTarget.draggable) {\r\n\t                this._draggingTarget = draggingTarget;\r\n\t                draggingTarget.dragging = true;\r\n\t                this._x = e.offsetX;\r\n\t                this._y = e.offsetY;\r\n\r\n\t                this.dispatchToElement(draggingTarget, 'dragstart', e.event);\r\n\t            }\r\n\t        },\r\n\r\n\t        _drag: function (e) {\r\n\t            var draggingTarget = this._draggingTarget;\r\n\t            if (draggingTarget) {\r\n\r\n\t                var x = e.offsetX;\r\n\t                var y = e.offsetY;\r\n\r\n\t                var dx = x - this._x;\r\n\t                var dy = y - this._y;\r\n\t                this._x = x;\r\n\t                this._y = y;\r\n\r\n\t                draggingTarget.drift(dx, dy, e);\r\n\t                this.dispatchToElement(draggingTarget, 'drag', e.event);\r\n\r\n\t                var dropTarget = this.findHover(x, y, draggingTarget);\r\n\t                var lastDropTarget = this._dropTarget;\r\n\t                this._dropTarget = dropTarget;\r\n\r\n\t                if (draggingTarget !== dropTarget) {\r\n\t                    if (lastDropTarget && dropTarget !== lastDropTarget) {\r\n\t                        this.dispatchToElement(lastDropTarget, 'dragleave', e.event);\r\n\t                    }\r\n\t                    if (dropTarget && dropTarget !== lastDropTarget) {\r\n\t                        this.dispatchToElement(dropTarget, 'dragenter', e.event);\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t        },\r\n\r\n\t        _dragEnd: function (e) {\r\n\t            var draggingTarget = this._draggingTarget;\r\n\r\n\t            if (draggingTarget) {\r\n\t                draggingTarget.dragging = false;\r\n\t            }\r\n\r\n\t            this.dispatchToElement(draggingTarget, 'dragend', e.event);\r\n\r\n\t            if (this._dropTarget) {\r\n\t                this.dispatchToElement(this._dropTarget, 'drop', e.event);\r\n\t            }\r\n\r\n\t            this._draggingTarget = null;\r\n\t            this._dropTarget = null;\r\n\t        }\r\n\r\n\t    };\r\n\r\n\t    module.exports = Draggable;\r\n\r\n\r\n/***/ },\r\n/* 84 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t'use strict';\r\n\t/**\r\n\t * Storage内容仓库模块\r\n\t * @module zrender/Storage\r\n\t * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n\t * @author errorrik (errorrik@gmail.com)\r\n\t * @author pissang (https://github.com/pissang/)\r\n\t */\r\n\r\n\r\n\t    var util = __webpack_require__(4);\r\n\t    var env = __webpack_require__(2);\r\n\r\n\t    var Group = __webpack_require__(30);\r\n\r\n\t    // Use timsort because in most case elements are partially sorted\r\n\t    // https://jsfiddle.net/pissang/jr4x7mdm/8/\r\n\t    var timsort = __webpack_require__(85);\r\n\r\n\t    function shapeCompareFunc(a, b) {\r\n\t        if (a.zlevel === b.zlevel) {\r\n\t            if (a.z === b.z) {\r\n\t                // if (a.z2 === b.z2) {\r\n\t                //     // FIXME Slow has renderidx compare\r\n\t                //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\r\n\t                //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\r\n\t                //     return a.__renderidx - b.__renderidx;\r\n\t                // }\r\n\t                return a.z2 - b.z2;\r\n\t            }\r\n\t            return a.z - b.z;\r\n\t        }\r\n\t        return a.zlevel - b.zlevel;\r\n\t    }\r\n\t    /**\r\n\t     * 内容仓库 (M)\r\n\t     * @alias module:zrender/Storage\r\n\t     * @constructor\r\n\t     */\r\n\t    var Storage = function () {\r\n\t        // 所有常规形状，id索引的map\r\n\t        this._elements = {};\r\n\r\n\t        this._roots = [];\r\n\r\n\t        this._displayList = [];\r\n\r\n\t        this._displayListLen = 0;\r\n\t    };\r\n\r\n\t    Storage.prototype = {\r\n\r\n\t        constructor: Storage,\r\n\r\n\t        /**\r\n\t         * @param  {Function} cb\r\n\t         *\r\n\t         */\r\n\t        traverse: function (cb, context) {\r\n\t            for (var i = 0; i < this._roots.length; i++) {\r\n\t                this._roots[i].traverse(cb, context);\r\n\t            }\r\n\t        },\r\n\r\n\t        /**\r\n\t         * 返回所有图形的绘制队列\r\n\t         * @param {boolean} [update=false] 是否在返回前更新该数组\r\n\t         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\r\n\t         *\r\n\t         * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\r\n\t         * @return {Array.<module:zrender/graphic/Displayable>}\r\n\t         */\r\n\t        getDisplayList: function (update, includeIgnore) {\r\n\t            includeIgnore = includeIgnore || false;\r\n\t            if (update) {\r\n\t                this.updateDisplayList(includeIgnore);\r\n\t            }\r\n\t            return this._displayList;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * 更新图形的绘制队列。\r\n\t         * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\r\n\t         * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\r\n\t         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\r\n\t         */\r\n\t        updateDisplayList: function (includeIgnore) {\r\n\t            this._displayListLen = 0;\r\n\t            var roots = this._roots;\r\n\t            var displayList = this._displayList;\r\n\t            for (var i = 0, len = roots.length; i < len; i++) {\r\n\t                this._updateAndAddDisplayable(roots[i], null, includeIgnore);\r\n\t            }\r\n\t            displayList.length = this._displayListLen;\r\n\r\n\t            // for (var i = 0, len = displayList.length; i < len; i++) {\r\n\t            //     displayList[i].__renderidx = i;\r\n\t            // }\r\n\r\n\t            // displayList.sort(shapeCompareFunc);\r\n\t            env.canvasSupported && timsort(displayList, shapeCompareFunc);\r\n\t        },\r\n\r\n\t        _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\r\n\r\n\t            if (el.ignore && !includeIgnore) {\r\n\t                return;\r\n\t            }\r\n\r\n\t            el.beforeUpdate();\r\n\r\n\t            if (el.__dirty) {\r\n\r\n\t                el.update();\r\n\r\n\t            }\r\n\r\n\t            el.afterUpdate();\r\n\r\n\t            var clipPath = el.clipPath;\r\n\t            if (clipPath) {\r\n\t                // clipPath 的变换是基于 group 的变换\r\n\t                clipPath.parent = el;\r\n\t                clipPath.updateTransform();\r\n\r\n\t                // FIXME 效率影响\r\n\t                if (clipPaths) {\r\n\t                    clipPaths = clipPaths.slice();\r\n\t                    clipPaths.push(clipPath);\r\n\t                }\r\n\t                else {\r\n\t                    clipPaths = [clipPath];\r\n\t                }\r\n\t            }\r\n\r\n\t            if (el.isGroup) {\r\n\t                var children = el._children;\r\n\r\n\t                for (var i = 0; i < children.length; i++) {\r\n\t                    var child = children[i];\r\n\r\n\t                    // Force to mark as dirty if group is dirty\r\n\t                    // FIXME __dirtyPath ?\r\n\t                    if (el.__dirty) {\r\n\t                        child.__dirty = true;\r\n\t                    }\r\n\r\n\t                    this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\r\n\t                }\r\n\r\n\t                // Mark group clean here\r\n\t                el.__dirty = false;\r\n\r\n\t            }\r\n\t            else {\r\n\t                el.__clipPaths = clipPaths;\r\n\r\n\t                this._displayList[this._displayListLen++] = el;\r\n\t            }\r\n\t        },\r\n\r\n\t        /**\r\n\t         * 添加图形(Shape)或者组(Group)到根节点\r\n\t         * @param {module:zrender/Element} el\r\n\t         */\r\n\t        addRoot: function (el) {\r\n\t            // Element has been added\r\n\t            if (this._elements[el.id]) {\r\n\t                return;\r\n\t            }\r\n\r\n\t            if (el instanceof Group) {\r\n\t                el.addChildrenToStorage(this);\r\n\t            }\r\n\r\n\t            this.addToMap(el);\r\n\t            this._roots.push(el);\r\n\t        },\r\n\r\n\t        /**\r\n\t         * 删除指定的图形(Shape)或者组(Group)\r\n\t         * @param {string|Array.<string>} [elId] 如果为空清空整个Storage\r\n\t         */\r\n\t        delRoot: function (elId) {\r\n\t            if (elId == null) {\r\n\t                // 不指定elId清空\r\n\t                for (var i = 0; i < this._roots.length; i++) {\r\n\t                    var root = this._roots[i];\r\n\t                    if (root instanceof Group) {\r\n\t                        root.delChildrenFromStorage(this);\r\n\t                    }\r\n\t                }\r\n\r\n\t                this._elements = {};\r\n\t                this._roots = [];\r\n\t                this._displayList = [];\r\n\t                this._displayListLen = 0;\r\n\r\n\t                return;\r\n\t            }\r\n\r\n\t            if (elId instanceof Array) {\r\n\t                for (var i = 0, l = elId.length; i < l; i++) {\r\n\t                    this.delRoot(elId[i]);\r\n\t                }\r\n\t                return;\r\n\t            }\r\n\r\n\t            var el;\r\n\t            if (typeof(elId) == 'string') {\r\n\t                el = this._elements[elId];\r\n\t            }\r\n\t            else {\r\n\t                el = elId;\r\n\t            }\r\n\r\n\t            var idx = util.indexOf(this._roots, el);\r\n\t            if (idx >= 0) {\r\n\t                this.delFromMap(el.id);\r\n\t                this._roots.splice(idx, 1);\r\n\t                if (el instanceof Group) {\r\n\t                    el.delChildrenFromStorage(this);\r\n\t                }\r\n\t            }\r\n\t        },\r\n\r\n\t        addToMap: function (el) {\r\n\t            if (el instanceof Group) {\r\n\t                el.__storage = this;\r\n\t            }\r\n\t            el.dirty();\r\n\r\n\t            this._elements[el.id] = el;\r\n\r\n\t            return this;\r\n\t        },\r\n\r\n\t        get: function (elId) {\r\n\t            return this._elements[elId];\r\n\t        },\r\n\r\n\t        delFromMap: function (elId) {\r\n\t            var elements = this._elements;\r\n\t            var el = elements[elId];\r\n\t            if (el) {\r\n\t                delete elements[elId];\r\n\t                if (el instanceof Group) {\r\n\t                    el.__storage = null;\r\n\t                }\r\n\t            }\r\n\r\n\t            return this;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * 清空并且释放Storage\r\n\t         */\r\n\t        dispose: function () {\r\n\t            this._elements =\r\n\t            this._renderList =\r\n\t            this._roots = null;\r\n\t        },\r\n\r\n\t        displayableSortFunc: shapeCompareFunc\r\n\t    };\r\n\r\n\t    module.exports = Storage;\r\n\r\n\r\n\r\n/***/ },\r\n/* 85 */\r\n/***/ function(module, exports) {\r\n\r\n\t// https://github.com/mziccard/node-timsort\r\n\r\n\t    var DEFAULT_MIN_MERGE = 32;\r\n\r\n\t    var DEFAULT_MIN_GALLOPING = 7;\r\n\r\n\t    var DEFAULT_TMP_STORAGE_LENGTH = 256;\r\n\r\n\t    function minRunLength(n) {\r\n\t        var r = 0;\r\n\r\n\t        while (n >= DEFAULT_MIN_MERGE) {\r\n\t            r |= n & 1;\r\n\t            n >>= 1;\r\n\t        }\r\n\r\n\t        return n + r;\r\n\t    }\r\n\r\n\t    function makeAscendingRun(array, lo, hi, compare) {\r\n\t        var runHi = lo + 1;\r\n\r\n\t        if (runHi === hi) {\r\n\t            return 1;\r\n\t        }\r\n\r\n\t        if (compare(array[runHi++], array[lo]) < 0) {\r\n\t            while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\r\n\t                runHi++;\r\n\t            }\r\n\r\n\t            reverseRun(array, lo, runHi);\r\n\t        }\r\n\t        else {\r\n\t            while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\r\n\t                runHi++;\r\n\t            }\r\n\t        }\r\n\r\n\t        return runHi - lo;\r\n\t    }\r\n\r\n\t    function reverseRun(array, lo, hi) {\r\n\t        hi--;\r\n\r\n\t        while (lo < hi) {\r\n\t            var t = array[lo];\r\n\t            array[lo++] = array[hi];\r\n\t            array[hi--] = t;\r\n\t        }\r\n\t    }\r\n\r\n\t    function binaryInsertionSort(array, lo, hi, start, compare) {\r\n\t        if (start === lo) {\r\n\t            start++;\r\n\t        }\r\n\r\n\t        for (; start < hi; start++) {\r\n\t            var pivot = array[start];\r\n\r\n\t            var left = lo;\r\n\t            var right = start;\r\n\t            var mid;\r\n\r\n\t            while (left < right) {\r\n\t                mid = left + right >>> 1;\r\n\r\n\t                if (compare(pivot, array[mid]) < 0) {\r\n\t                    right = mid;\r\n\t                }\r\n\t                else {\r\n\t                    left = mid + 1;\r\n\t                }\r\n\t            }\r\n\r\n\t            var n = start - left;\r\n\r\n\t            switch (n) {\r\n\t                case 3:\r\n\t                    array[left + 3] = array[left + 2];\r\n\r\n\t                case 2:\r\n\t                    array[left + 2] = array[left + 1];\r\n\r\n\t                case 1:\r\n\t                    array[left + 1] = array[left];\r\n\t                    break;\r\n\t                default:\r\n\t                    while (n > 0) {\r\n\t                        array[left + n] = array[left + n - 1];\r\n\t                        n--;\r\n\t                    }\r\n\t            }\r\n\r\n\t            array[left] = pivot;\r\n\t        }\r\n\t    }\r\n\r\n\t    function gallopLeft(value, array, start, length, hint, compare) {\r\n\t        var lastOffset = 0;\r\n\t        var maxOffset = 0;\r\n\t        var offset = 1;\r\n\r\n\t        if (compare(value, array[start + hint]) > 0) {\r\n\t            maxOffset = length - hint;\r\n\r\n\t            while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\r\n\t                lastOffset = offset;\r\n\t                offset = (offset << 1) + 1;\r\n\r\n\t                if (offset <= 0) {\r\n\t                    offset = maxOffset;\r\n\t                }\r\n\t            }\r\n\r\n\t            if (offset > maxOffset) {\r\n\t                offset = maxOffset;\r\n\t            }\r\n\r\n\t            lastOffset += hint;\r\n\t            offset += hint;\r\n\t        }\r\n\t        else {\r\n\t            maxOffset = hint + 1;\r\n\t            while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\r\n\t                lastOffset = offset;\r\n\t                offset = (offset << 1) + 1;\r\n\r\n\t                if (offset <= 0) {\r\n\t                    offset = maxOffset;\r\n\t                }\r\n\t            }\r\n\t            if (offset > maxOffset) {\r\n\t                offset = maxOffset;\r\n\t            }\r\n\r\n\t            var tmp = lastOffset;\r\n\t            lastOffset = hint - offset;\r\n\t            offset = hint - tmp;\r\n\t        }\r\n\r\n\t        lastOffset++;\r\n\t        while (lastOffset < offset) {\r\n\t            var m = lastOffset + (offset - lastOffset >>> 1);\r\n\r\n\t            if (compare(value, array[start + m]) > 0) {\r\n\t                lastOffset = m + 1;\r\n\t            }\r\n\t            else {\r\n\t                offset = m;\r\n\t            }\r\n\t        }\r\n\t        return offset;\r\n\t    }\r\n\r\n\t    function gallopRight(value, array, start, length, hint, compare) {\r\n\t        var lastOffset = 0;\r\n\t        var maxOffset = 0;\r\n\t        var offset = 1;\r\n\r\n\t        if (compare(value, array[start + hint]) < 0) {\r\n\t            maxOffset = hint + 1;\r\n\r\n\t            while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\r\n\t                lastOffset = offset;\r\n\t                offset = (offset << 1) + 1;\r\n\r\n\t                if (offset <= 0) {\r\n\t                    offset = maxOffset;\r\n\t                }\r\n\t            }\r\n\r\n\t            if (offset > maxOffset) {\r\n\t                offset = maxOffset;\r\n\t            }\r\n\r\n\t            var tmp = lastOffset;\r\n\t            lastOffset = hint - offset;\r\n\t            offset = hint - tmp;\r\n\t        }\r\n\t        else {\r\n\t            maxOffset = length - hint;\r\n\r\n\t            while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\r\n\t                lastOffset = offset;\r\n\t                offset = (offset << 1) + 1;\r\n\r\n\t                if (offset <= 0) {\r\n\t                    offset = maxOffset;\r\n\t                }\r\n\t            }\r\n\r\n\t            if (offset > maxOffset) {\r\n\t                offset = maxOffset;\r\n\t            }\r\n\r\n\t            lastOffset += hint;\r\n\t            offset += hint;\r\n\t        }\r\n\r\n\t        lastOffset++;\r\n\r\n\t        while (lastOffset < offset) {\r\n\t            var m = lastOffset + (offset - lastOffset >>> 1);\r\n\r\n\t            if (compare(value, array[start + m]) < 0) {\r\n\t                offset = m;\r\n\t            }\r\n\t            else {\r\n\t                lastOffset = m + 1;\r\n\t            }\r\n\t        }\r\n\r\n\t        return offset;\r\n\t    }\r\n\r\n\t    function TimSort(array, compare) {\r\n\t        var minGallop = DEFAULT_MIN_GALLOPING;\r\n\t        var length = 0;\r\n\t        var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\r\n\t        var stackLength = 0;\r\n\t        var runStart;\r\n\t        var runLength;\r\n\t        var stackSize = 0;\r\n\r\n\t        length = array.length;\r\n\r\n\t        if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\r\n\t            tmpStorageLength = length >>> 1;\r\n\t        }\r\n\r\n\t        var tmp = [];\r\n\r\n\t        stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\r\n\r\n\t        runStart = [];\r\n\t        runLength = [];\r\n\r\n\t        function pushRun(_runStart, _runLength) {\r\n\t            runStart[stackSize] = _runStart;\r\n\t            runLength[stackSize] = _runLength;\r\n\t            stackSize += 1;\r\n\t        }\r\n\r\n\t        function mergeRuns() {\r\n\t            while (stackSize > 1) {\r\n\t                var n = stackSize - 2;\r\n\r\n\t                if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\r\n\t                    if (runLength[n - 1] < runLength[n + 1]) {\r\n\t                        n--;\r\n\t                    }\r\n\t                }\r\n\t                else if (runLength[n] > runLength[n + 1]) {\r\n\t                    break;\r\n\t                }\r\n\t                mergeAt(n);\r\n\t            }\r\n\t        }\r\n\r\n\t        function forceMergeRuns() {\r\n\t            while (stackSize > 1) {\r\n\t                var n = stackSize - 2;\r\n\r\n\t                if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\r\n\t                    n--;\r\n\t                }\r\n\r\n\t                mergeAt(n);\r\n\t            }\r\n\t        }\r\n\r\n\t        function mergeAt(i) {\r\n\t            var start1 = runStart[i];\r\n\t            var length1 = runLength[i];\r\n\t            var start2 = runStart[i + 1];\r\n\t            var length2 = runLength[i + 1];\r\n\r\n\t            runLength[i] = length1 + length2;\r\n\r\n\t            if (i === stackSize - 3) {\r\n\t                runStart[i + 1] = runStart[i + 2];\r\n\t                runLength[i + 1] = runLength[i + 2];\r\n\t            }\r\n\r\n\t            stackSize--;\r\n\r\n\t            var k = gallopRight(array[start2], array, start1, length1, 0, compare);\r\n\t            start1 += k;\r\n\t            length1 -= k;\r\n\r\n\t            if (length1 === 0) {\r\n\t                return;\r\n\t            }\r\n\r\n\t            length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\r\n\r\n\t            if (length2 === 0) {\r\n\t                return;\r\n\t            }\r\n\r\n\t            if (length1 <= length2) {\r\n\t                mergeLow(start1, length1, start2, length2);\r\n\t            }\r\n\t            else {\r\n\t                mergeHigh(start1, length1, start2, length2);\r\n\t            }\r\n\t        }\r\n\r\n\t        function mergeLow(start1, length1, start2, length2) {\r\n\t            var i = 0;\r\n\r\n\t            for (i = 0; i < length1; i++) {\r\n\t                tmp[i] = array[start1 + i];\r\n\t            }\r\n\r\n\t            var cursor1 = 0;\r\n\t            var cursor2 = start2;\r\n\t            var dest = start1;\r\n\r\n\t            array[dest++] = array[cursor2++];\r\n\r\n\t            if (--length2 === 0) {\r\n\t                for (i = 0; i < length1; i++) {\r\n\t                    array[dest + i] = tmp[cursor1 + i];\r\n\t                }\r\n\t                return;\r\n\t            }\r\n\r\n\t            if (length1 === 1) {\r\n\t                for (i = 0; i < length2; i++) {\r\n\t                    array[dest + i] = array[cursor2 + i];\r\n\t                }\r\n\t                array[dest + length2] = tmp[cursor1];\r\n\t                return;\r\n\t            }\r\n\r\n\t            var _minGallop = minGallop;\r\n\t            var count1, count2, exit;\r\n\r\n\t            while (1) {\r\n\t                count1 = 0;\r\n\t                count2 = 0;\r\n\t                exit = false;\r\n\r\n\t                do {\r\n\t                    if (compare(array[cursor2], tmp[cursor1]) < 0) {\r\n\t                        array[dest++] = array[cursor2++];\r\n\t                        count2++;\r\n\t                        count1 = 0;\r\n\r\n\t                        if (--length2 === 0) {\r\n\t                            exit = true;\r\n\t                            break;\r\n\t                        }\r\n\t                    }\r\n\t                    else {\r\n\t                        array[dest++] = tmp[cursor1++];\r\n\t                        count1++;\r\n\t                        count2 = 0;\r\n\t                        if (--length1 === 1) {\r\n\t                            exit = true;\r\n\t                            break;\r\n\t                        }\r\n\t                    }\r\n\t                } while ((count1 | count2) < _minGallop);\r\n\r\n\t                if (exit) {\r\n\t                    break;\r\n\t                }\r\n\r\n\t                do {\r\n\t                    count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\r\n\r\n\t                    if (count1 !== 0) {\r\n\t                        for (i = 0; i < count1; i++) {\r\n\t                            array[dest + i] = tmp[cursor1 + i];\r\n\t                        }\r\n\r\n\t                        dest += count1;\r\n\t                        cursor1 += count1;\r\n\t                        length1 -= count1;\r\n\t                        if (length1 <= 1) {\r\n\t                            exit = true;\r\n\t                            break;\r\n\t                        }\r\n\t                    }\r\n\r\n\t                    array[dest++] = array[cursor2++];\r\n\r\n\t                    if (--length2 === 0) {\r\n\t                        exit = true;\r\n\t                        break;\r\n\t                    }\r\n\r\n\t                    count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\r\n\r\n\t                    if (count2 !== 0) {\r\n\t                        for (i = 0; i < count2; i++) {\r\n\t                            array[dest + i] = array[cursor2 + i];\r\n\t                        }\r\n\r\n\t                        dest += count2;\r\n\t                        cursor2 += count2;\r\n\t                        length2 -= count2;\r\n\r\n\t                        if (length2 === 0) {\r\n\t                            exit = true;\r\n\t                            break;\r\n\t                        }\r\n\t                    }\r\n\t                    array[dest++] = tmp[cursor1++];\r\n\r\n\t                    if (--length1 === 1) {\r\n\t                        exit = true;\r\n\t                        break;\r\n\t                    }\r\n\r\n\t                    _minGallop--;\r\n\t                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\r\n\r\n\t                if (exit) {\r\n\t                    break;\r\n\t                }\r\n\r\n\t                if (_minGallop < 0) {\r\n\t                    _minGallop = 0;\r\n\t                }\r\n\r\n\t                _minGallop += 2;\r\n\t            }\r\n\r\n\t            minGallop = _minGallop;\r\n\r\n\t            minGallop < 1 && (minGallop = 1);\r\n\r\n\t            if (length1 === 1) {\r\n\t                for (i = 0; i < length2; i++) {\r\n\t                    array[dest + i] = array[cursor2 + i];\r\n\t                }\r\n\t                array[dest + length2] = tmp[cursor1];\r\n\t            }\r\n\t            else if (length1 === 0) {\r\n\t                throw new Error();\r\n\t                // throw new Error('mergeLow preconditions were not respected');\r\n\t            }\r\n\t            else {\r\n\t                for (i = 0; i < length1; i++) {\r\n\t                    array[dest + i] = tmp[cursor1 + i];\r\n\t                }\r\n\t            }\r\n\t        }\r\n\r\n\t        function mergeHigh (start1, length1, start2, length2) {\r\n\t            var i = 0;\r\n\r\n\t            for (i = 0; i < length2; i++) {\r\n\t                tmp[i] = array[start2 + i];\r\n\t            }\r\n\r\n\t            var cursor1 = start1 + length1 - 1;\r\n\t            var cursor2 = length2 - 1;\r\n\t            var dest = start2 + length2 - 1;\r\n\t            var customCursor = 0;\r\n\t            var customDest = 0;\r\n\r\n\t            array[dest--] = array[cursor1--];\r\n\r\n\t            if (--length1 === 0) {\r\n\t                customCursor = dest - (length2 - 1);\r\n\r\n\t                for (i = 0; i < length2; i++) {\r\n\t                    array[customCursor + i] = tmp[i];\r\n\t                }\r\n\r\n\t                return;\r\n\t            }\r\n\r\n\t            if (length2 === 1) {\r\n\t                dest -= length1;\r\n\t                cursor1 -= length1;\r\n\t                customDest = dest + 1;\r\n\t                customCursor = cursor1 + 1;\r\n\r\n\t                for (i = length1 - 1; i >= 0; i--) {\r\n\t                    array[customDest + i] = array[customCursor + i];\r\n\t                }\r\n\r\n\t                array[dest] = tmp[cursor2];\r\n\t                return;\r\n\t            }\r\n\r\n\t            var _minGallop = minGallop;\r\n\r\n\t            while (true) {\r\n\t                var count1 = 0;\r\n\t                var count2 = 0;\r\n\t                var exit = false;\r\n\r\n\t                do {\r\n\t                    if (compare(tmp[cursor2], array[cursor1]) < 0) {\r\n\t                        array[dest--] = array[cursor1--];\r\n\t                        count1++;\r\n\t                        count2 = 0;\r\n\t                        if (--length1 === 0) {\r\n\t                            exit = true;\r\n\t                            break;\r\n\t                        }\r\n\t                    }\r\n\t                    else {\r\n\t                        array[dest--] = tmp[cursor2--];\r\n\t                        count2++;\r\n\t                        count1 = 0;\r\n\t                        if (--length2 === 1) {\r\n\t                            exit = true;\r\n\t                            break;\r\n\t                        }\r\n\t                    }\r\n\t                } while ((count1 | count2) < _minGallop);\r\n\r\n\t                if (exit) {\r\n\t                    break;\r\n\t                }\r\n\r\n\t                do {\r\n\t                    count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\r\n\r\n\t                    if (count1 !== 0) {\r\n\t                        dest -= count1;\r\n\t                        cursor1 -= count1;\r\n\t                        length1 -= count1;\r\n\t                        customDest = dest + 1;\r\n\t                        customCursor = cursor1 + 1;\r\n\r\n\t                        for (i = count1 - 1; i >= 0; i--) {\r\n\t                            array[customDest + i] = array[customCursor + i];\r\n\t                        }\r\n\r\n\t                        if (length1 === 0) {\r\n\t                            exit = true;\r\n\t                            break;\r\n\t                        }\r\n\t                    }\r\n\r\n\t                    array[dest--] = tmp[cursor2--];\r\n\r\n\t                    if (--length2 === 1) {\r\n\t                        exit = true;\r\n\t                        break;\r\n\t                    }\r\n\r\n\t                    count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\r\n\r\n\t                    if (count2 !== 0) {\r\n\t                        dest -= count2;\r\n\t                        cursor2 -= count2;\r\n\t                        length2 -= count2;\r\n\t                        customDest = dest + 1;\r\n\t                        customCursor = cursor2 + 1;\r\n\r\n\t                        for (i = 0; i < count2; i++) {\r\n\t                            array[customDest + i] = tmp[customCursor + i];\r\n\t                        }\r\n\r\n\t                        if (length2 <= 1) {\r\n\t                            exit = true;\r\n\t                            break;\r\n\t                        }\r\n\t                    }\r\n\r\n\t                    array[dest--] = array[cursor1--];\r\n\r\n\t                    if (--length1 === 0) {\r\n\t                        exit = true;\r\n\t                        break;\r\n\t                    }\r\n\r\n\t                    _minGallop--;\r\n\t                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\r\n\r\n\t                if (exit) {\r\n\t                    break;\r\n\t                }\r\n\r\n\t                if (_minGallop < 0) {\r\n\t                    _minGallop = 0;\r\n\t                }\r\n\r\n\t                _minGallop += 2;\r\n\t            }\r\n\r\n\t            minGallop = _minGallop;\r\n\r\n\t            if (minGallop < 1) {\r\n\t                minGallop = 1;\r\n\t            }\r\n\r\n\t            if (length2 === 1) {\r\n\t                dest -= length1;\r\n\t                cursor1 -= length1;\r\n\t                customDest = dest + 1;\r\n\t                customCursor = cursor1 + 1;\r\n\r\n\t                for (i = length1 - 1; i >= 0; i--) {\r\n\t                    array[customDest + i] = array[customCursor + i];\r\n\t                }\r\n\r\n\t                array[dest] = tmp[cursor2];\r\n\t            }\r\n\t            else if (length2 === 0) {\r\n\t                throw new Error();\r\n\t                // throw new Error('mergeHigh preconditions were not respected');\r\n\t            }\r\n\t            else {\r\n\t                customCursor = dest - (length2 - 1);\r\n\t                for (i = 0; i < length2; i++) {\r\n\t                    array[customCursor + i] = tmp[i];\r\n\t                }\r\n\t            }\r\n\t        }\r\n\r\n\t        this.mergeRuns = mergeRuns;\r\n\t        this.forceMergeRuns = forceMergeRuns;\r\n\t        this.pushRun = pushRun;\r\n\t    }\r\n\r\n\t    function sort(array, compare, lo, hi) {\r\n\t        if (!lo) {\r\n\t            lo = 0;\r\n\t        }\r\n\t        if (!hi) {\r\n\t            hi = array.length;\r\n\t        }\r\n\r\n\t        var remaining = hi - lo;\r\n\r\n\t        if (remaining < 2) {\r\n\t            return;\r\n\t        }\r\n\r\n\t        var runLength = 0;\r\n\r\n\t        if (remaining < DEFAULT_MIN_MERGE) {\r\n\t            runLength = makeAscendingRun(array, lo, hi, compare);\r\n\t            binaryInsertionSort(array, lo, hi, lo + runLength, compare);\r\n\t            return;\r\n\t        }\r\n\r\n\t        var ts = new TimSort(array, compare);\r\n\r\n\t        var minRun = minRunLength(remaining);\r\n\r\n\t        do {\r\n\t            runLength = makeAscendingRun(array, lo, hi, compare);\r\n\t            if (runLength < minRun) {\r\n\t                var force = remaining;\r\n\t                if (force > minRun) {\r\n\t                    force = minRun;\r\n\t                }\r\n\r\n\t                binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\r\n\t                runLength = force;\r\n\t            }\r\n\r\n\t            ts.pushRun(lo, runLength);\r\n\t            ts.mergeRuns();\r\n\r\n\t            remaining -= runLength;\r\n\t            lo += runLength;\r\n\t        } while (remaining !== 0);\r\n\r\n\t        ts.forceMergeRuns();\r\n\t    }\r\n\r\n\t    module.exports = sort;\r\n\r\n\r\n/***/ },\r\n/* 86 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t'use strict';\r\n\t/**\r\n\t * 动画主类, 调度和管理所有动画控制器\r\n\t *\r\n\t * @module zrender/animation/Animation\r\n\t * @author pissang(https://github.com/pissang)\r\n\t */\r\n\t// TODO Additive animation\r\n\t// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\r\n\t// https://developer.apple.com/videos/wwdc2014/#236\r\n\r\n\r\n\t    var util = __webpack_require__(4);\r\n\t    var Dispatcher = __webpack_require__(87).Dispatcher;\r\n\r\n\t    var requestAnimationFrame = __webpack_require__(88);\r\n\r\n\t    var Animator = __webpack_require__(36);\r\n\t    /**\r\n\t     * @typedef {Object} IZRenderStage\r\n\t     * @property {Function} update\r\n\t     */\r\n\r\n\t    /**\r\n\t     * @alias module:zrender/animation/Animation\r\n\t     * @constructor\r\n\t     * @param {Object} [options]\r\n\t     * @param {Function} [options.onframe]\r\n\t     * @param {IZRenderStage} [options.stage]\r\n\t     * @example\r\n\t     *     var animation = new Animation();\r\n\t     *     var obj = {\r\n\t     *         x: 100,\r\n\t     *         y: 100\r\n\t     *     };\r\n\t     *     animation.animate(node.position)\r\n\t     *         .when(1000, {\r\n\t     *             x: 500,\r\n\t     *             y: 500\r\n\t     *         })\r\n\t     *         .when(2000, {\r\n\t     *             x: 100,\r\n\t     *             y: 100\r\n\t     *         })\r\n\t     *         .start('spline');\r\n\t     */\r\n\t    var Animation = function (options) {\r\n\r\n\t        options = options || {};\r\n\r\n\t        this.stage = options.stage || {};\r\n\r\n\t        this.onframe = options.onframe || function() {};\r\n\r\n\t        // private properties\r\n\t        this._clips = [];\r\n\r\n\t        this._running = false;\r\n\r\n\t        this._time = 0;\r\n\r\n\t        Dispatcher.call(this);\r\n\t    };\r\n\r\n\t    Animation.prototype = {\r\n\r\n\t        constructor: Animation,\r\n\t        /**\r\n\t         * 添加 clip\r\n\t         * @param {module:zrender/animation/Clip} clip\r\n\t         */\r\n\t        addClip: function (clip) {\r\n\t            this._clips.push(clip);\r\n\t        },\r\n\t        /**\r\n\t         * 添加 animator\r\n\t         * @param {module:zrender/animation/Animator} animator\r\n\t         */\r\n\t        addAnimator: function (animator) {\r\n\t            animator.animation = this;\r\n\t            var clips = animator.getClips();\r\n\t            for (var i = 0; i < clips.length; i++) {\r\n\t                this.addClip(clips[i]);\r\n\t            }\r\n\t        },\r\n\t        /**\r\n\t         * 删除动画片段\r\n\t         * @param {module:zrender/animation/Clip} clip\r\n\t         */\r\n\t        removeClip: function(clip) {\r\n\t            var idx = util.indexOf(this._clips, clip);\r\n\t            if (idx >= 0) {\r\n\t                this._clips.splice(idx, 1);\r\n\t            }\r\n\t        },\r\n\r\n\t        /**\r\n\t         * 删除动画片段\r\n\t         * @param {module:zrender/animation/Animator} animator\r\n\t         */\r\n\t        removeAnimator: function (animator) {\r\n\t            var clips = animator.getClips();\r\n\t            for (var i = 0; i < clips.length; i++) {\r\n\t                this.removeClip(clips[i]);\r\n\t            }\r\n\t            animator.animation = null;\r\n\t        },\r\n\r\n\t        _update: function() {\r\n\r\n\t            var time = new Date().getTime();\r\n\t            var delta = time - this._time;\r\n\t            var clips = this._clips;\r\n\t            var len = clips.length;\r\n\r\n\t            var deferredEvents = [];\r\n\t            var deferredClips = [];\r\n\t            for (var i = 0; i < len; i++) {\r\n\t                var clip = clips[i];\r\n\t                var e = clip.step(time);\r\n\t                // Throw out the events need to be called after\r\n\t                // stage.update, like destroy\r\n\t                if (e) {\r\n\t                    deferredEvents.push(e);\r\n\t                    deferredClips.push(clip);\r\n\t                }\r\n\t            }\r\n\r\n\t            // Remove the finished clip\r\n\t            for (var i = 0; i < len;) {\r\n\t                if (clips[i]._needsRemove) {\r\n\t                    clips[i] = clips[len - 1];\r\n\t                    clips.pop();\r\n\t                    len--;\r\n\t                }\r\n\t                else {\r\n\t                    i++;\r\n\t                }\r\n\t            }\r\n\r\n\t            len = deferredEvents.length;\r\n\t            for (var i = 0; i < len; i++) {\r\n\t                deferredClips[i].fire(deferredEvents[i]);\r\n\t            }\r\n\r\n\t            this._time = time;\r\n\r\n\t            this.onframe(delta);\r\n\r\n\t            this.trigger('frame', delta);\r\n\r\n\t            if (this.stage.update) {\r\n\t                this.stage.update();\r\n\t            }\r\n\t        },\r\n\t        /**\r\n\t         * 开始运行动画\r\n\t         */\r\n\t        start: function () {\r\n\t            var self = this;\r\n\r\n\t            this._running = true;\r\n\r\n\t            function step() {\r\n\t                if (self._running) {\r\n\r\n\t                    requestAnimationFrame(step);\r\n\r\n\t                    self._update();\r\n\t                }\r\n\t            }\r\n\r\n\t            this._time = new Date().getTime();\r\n\t            requestAnimationFrame(step);\r\n\t        },\r\n\t        /**\r\n\t         * 停止运行动画\r\n\t         */\r\n\t        stop: function () {\r\n\t            this._running = false;\r\n\t        },\r\n\t        /**\r\n\t         * 清除所有动画片段\r\n\t         */\r\n\t        clear: function () {\r\n\t            this._clips = [];\r\n\t        },\r\n\t        /**\r\n\t         * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\r\n\t         * @param  {Object} target\r\n\t         * @param  {Object} options\r\n\t         * @param  {boolean} [options.loop=false] 是否循环播放动画\r\n\t         * @param  {Function} [options.getter=null]\r\n\t         *         如果指定getter函数，会通过getter函数取属性值\r\n\t         * @param  {Function} [options.setter=null]\r\n\t         *         如果指定setter函数，会通过setter函数设置属性值\r\n\t         * @return {module:zrender/animation/Animation~Animator}\r\n\t         */\r\n\t        animate: function (target, options) {\r\n\t            options = options || {};\r\n\t            var animator = new Animator(\r\n\t                target,\r\n\t                options.loop,\r\n\t                options.getter,\r\n\t                options.setter\r\n\t            );\r\n\r\n\t            return animator;\r\n\t        }\r\n\t    };\r\n\r\n\t    util.mixin(Animation, Dispatcher);\r\n\r\n\t    module.exports = Animation;\r\n\r\n\r\n\r\n/***/ },\r\n/* 87 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t'use strict';\r\n\t/**\r\n\t * 事件辅助类\r\n\t * @module zrender/core/event\r\n\t * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n\t */\r\n\r\n\r\n\t    var Eventful = __webpack_require__(33);\r\n\r\n\t    var isDomLevel2 = (typeof window !== 'undefined') && !!window.addEventListener;\r\n\r\n\t    function getBoundingClientRect(el) {\r\n\t        // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\r\n\t        return el.getBoundingClientRect ? el.getBoundingClientRect() : {left: 0, top: 0};\r\n\t    }\r\n\r\n\t    function clientToLocal(el, e, out) {\r\n\t        // clientX/clientY is according to view port.\r\n\t        var box = getBoundingClientRect(el);\r\n\t        out = out || {};\r\n\t        out.zrX = e.clientX - box.left;\r\n\t        out.zrY = e.clientY - box.top;\r\n\t        return out;\r\n\t    }\r\n\r\n\t    /**\r\n\t     * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标\r\n\t     */\r\n\t    function normalizeEvent(el, e) {\r\n\r\n\t        e = e || window.event;\r\n\r\n\t        if (e.zrX != null) {\r\n\t            return e;\r\n\t        }\r\n\r\n\t        var eventType = e.type;\r\n\t        var isTouch = eventType && eventType.indexOf('touch') >= 0;\r\n\r\n\t        if (!isTouch) {\r\n\t            clientToLocal(el, e, e);\r\n\t            e.zrDelta = (e.wheelDelta) ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\r\n\t        }\r\n\t        else {\r\n\t            var touch = eventType != 'touchend'\r\n\t                ? e.targetTouches[0]\r\n\t                : e.changedTouches[0];\r\n\t            touch && clientToLocal(el, touch, e);\r\n\t        }\r\n\r\n\t        return e;\r\n\t    }\r\n\r\n\t    function addEventListener(el, name, handler) {\r\n\t        if (isDomLevel2) {\r\n\t            el.addEventListener(name, handler);\r\n\t        }\r\n\t        else {\r\n\t            el.attachEvent('on' + name, handler);\r\n\t        }\r\n\t    }\r\n\r\n\t    function removeEventListener(el, name, handler) {\r\n\t        if (isDomLevel2) {\r\n\t            el.removeEventListener(name, handler);\r\n\t        }\r\n\t        else {\r\n\t            el.detachEvent('on' + name, handler);\r\n\t        }\r\n\t    }\r\n\r\n\t    /**\r\n\t     * 停止冒泡和阻止默认行为\r\n\t     * @memberOf module:zrender/core/event\r\n\t     * @method\r\n\t     * @param {Event} e : event对象\r\n\t     */\r\n\t    var stop = isDomLevel2\r\n\t        ? function (e) {\r\n\t            e.preventDefault();\r\n\t            e.stopPropagation();\r\n\t            e.cancelBubble = true;\r\n\t        }\r\n\t        : function (e) {\r\n\t            e.returnValue = false;\r\n\t            e.cancelBubble = true;\r\n\t        };\r\n\r\n\t    module.exports = {\r\n\t        clientToLocal: clientToLocal,\r\n\t        normalizeEvent: normalizeEvent,\r\n\t        addEventListener: addEventListener,\r\n\t        removeEventListener: removeEventListener,\r\n\r\n\t        stop: stop,\r\n\t        // 做向上兼容\r\n\t        Dispatcher: Eventful\r\n\t    };\r\n\r\n\r\n\r\n/***/ },\r\n/* 88 */\r\n/***/ function(module, exports) {\r\n\r\n\t\r\n\r\n\t    module.exports = (typeof window !== 'undefined' &&\r\n\t                                    (window.requestAnimationFrame\r\n\t                                    || window.msRequestAnimationFrame\r\n\t                                    || window.mozRequestAnimationFrame\r\n\t                                    || window.webkitRequestAnimationFrame))\r\n\t                                || function (func) {\r\n\t                                    setTimeout(func, 16);\r\n\t                                };\r\n\r\n\r\n\r\n/***/ },\r\n/* 89 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t\r\n\r\n\t    var eventTool = __webpack_require__(87);\r\n\t    var zrUtil = __webpack_require__(4);\r\n\t    var Eventful = __webpack_require__(33);\r\n\t    var env = __webpack_require__(2);\r\n\t    var GestureMgr = __webpack_require__(90);\r\n\r\n\t    var addEventListener = eventTool.addEventListener;\r\n\t    var removeEventListener = eventTool.removeEventListener;\r\n\t    var normalizeEvent = eventTool.normalizeEvent;\r\n\r\n\t    var TOUCH_CLICK_DELAY = 300;\r\n\r\n\t    var mouseHandlerNames = [\r\n\t        'click', 'dblclick', 'mousewheel', 'mouseout',\r\n\t        'mouseup', 'mousedown', 'mousemove'\r\n\t    ];\r\n\r\n\t    var touchHandlerNames = [\r\n\t        'touchstart', 'touchend', 'touchmove'\r\n\t    ];\r\n\r\n\t    function eventNameFix(name) {\r\n\t        return (name === 'mousewheel' && env.browser.firefox) ? 'DOMMouseScroll' : name;\r\n\t    }\r\n\r\n\t    function processGesture(proxy, event, stage) {\r\n\t        var gestureMgr = proxy._gestureMgr;\r\n\r\n\t        stage === 'start' && gestureMgr.clear();\r\n\r\n\t        var gestureInfo = gestureMgr.recognize(\r\n\t            event,\r\n\t            proxy.handler.findHover(event.zrX, event.zrY, null),\r\n\t            proxy.dom\r\n\t        );\r\n\r\n\t        stage === 'end' && gestureMgr.clear();\r\n\r\n\t        if (gestureInfo) {\r\n\t            // eventTool.stop(event);\r\n\t            var type = gestureInfo.type;\r\n\t            event.gestureEvent = type;\r\n\r\n\t            proxy.handler.dispatchToElement(gestureInfo.target, type, gestureInfo.event);\r\n\t        }\r\n\t    }\r\n\r\n\t    /**\r\n\t     * Prevent mouse event from being dispatched after Touch Events action\r\n\t     * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\r\n\t     * 1. Mobile browsers dispatch mouse events 300ms after touchend.\r\n\t     * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\r\n\t     * Result: Blocking Mouse Events for 700ms.\r\n\t     */\r\n\t    function setTouchTimer(instance) {\r\n\t        instance._touching = true;\r\n\t        clearTimeout(instance._touchTimer);\r\n\t        instance._touchTimer = setTimeout(function () {\r\n\t            instance._touching = false;\r\n\t        }, 700);\r\n\t    }\r\n\r\n\t    function useTouchEvent() {\r\n\t        return env.touchEventsSupported;\r\n\t    }\r\n\r\n\t    var domHandlers = {\r\n\t        /**\r\n\t         * Mouse move handler\r\n\t         * @inner\r\n\t         * @param {Event} event\r\n\t         */\r\n\t        mousemove: function (event) {\r\n\t            event = normalizeEvent(this.dom, event);\r\n\r\n\t            this.trigger('mousemove', event);\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Mouse out handler\r\n\t         * @inner\r\n\t         * @param {Event} event\r\n\t         */\r\n\t        mouseout: function (event) {\r\n\t            event = normalizeEvent(this.dom, event);\r\n\r\n\t            var element = event.toElement || event.relatedTarget;\r\n\t            if (element != this.dom) {\r\n\t                while (element && element.nodeType != 9) {\r\n\t                    // 忽略包含在root中的dom引起的mouseOut\r\n\t                    if (element === this.dom) {\r\n\t                        return;\r\n\t                    }\r\n\r\n\t                    element = element.parentNode;\r\n\t                }\r\n\t            }\r\n\r\n\t            this.trigger('mouseout', event);\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Touch开始响应函数\r\n\t         * @inner\r\n\t         * @param {Event} event\r\n\t         */\r\n\t        touchstart: function (event) {\r\n\t            // Default mouse behaviour should not be disabled here.\r\n\t            // For example, page may needs to be slided.\r\n\r\n\t            event = normalizeEvent(this.dom, event);\r\n\r\n\t            this._lastTouchMoment = new Date();\r\n\r\n\t            processGesture(this, event, 'start');\r\n\r\n\t            // 平板补充一次findHover\r\n\t            // this._mobileFindFixed(event);\r\n\t            // Trigger mousemove and mousedown\r\n\t            domHandlers.mousemove.call(this, event);\r\n\r\n\t            domHandlers.mousedown.call(this, event);\r\n\r\n\t            setTouchTimer(this);\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Touch移动响应函数\r\n\t         * @inner\r\n\t         * @param {Event} event\r\n\t         */\r\n\t        touchmove: function (event) {\r\n\r\n\t            event = normalizeEvent(this.dom, event);\r\n\r\n\t            processGesture(this, event, 'change');\r\n\r\n\t            // Mouse move should always be triggered no matter whether\r\n\t            // there is gestrue event, because mouse move and pinch may\r\n\t            // be used at the same time.\r\n\t            domHandlers.mousemove.call(this, event);\r\n\r\n\t            setTouchTimer(this);\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Touch结束响应函数\r\n\t         * @inner\r\n\t         * @param {Event} event\r\n\t         */\r\n\t        touchend: function (event) {\r\n\r\n\t            event = normalizeEvent(this.dom, event);\r\n\r\n\t            processGesture(this, event, 'end');\r\n\r\n\t            domHandlers.mouseup.call(this, event);\r\n\r\n\t            // click event should always be triggered no matter whether\r\n\t            // there is gestrue event. System click can not be prevented.\r\n\t            if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\r\n\t                domHandlers.click.call(this, event);\r\n\t            }\r\n\r\n\t            setTouchTimer(this);\r\n\t        }\r\n\t    };\r\n\r\n\t    // Common handlers\r\n\t    zrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick'], function (name) {\r\n\t        domHandlers[name] = function (event) {\r\n\t            event = normalizeEvent(this.dom, event);\r\n\t            this.trigger(name, event);\r\n\t        };\r\n\t    });\r\n\r\n\t    /**\r\n\t     * 为控制类实例初始化dom 事件处理函数\r\n\t     *\r\n\t     * @inner\r\n\t     * @param {module:zrender/Handler} instance 控制类实例\r\n\t     */\r\n\t    function initDomHandler(instance) {\r\n\t        for (var i = 0; i < touchHandlerNames.length; i++) {\r\n\t            var name = touchHandlerNames[i];\r\n\t            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\r\n\t        }\r\n\r\n\t        for (var i = 0; i < mouseHandlerNames.length; i++) {\r\n\t            var name = mouseHandlerNames[i];\r\n\t            instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\r\n\t        }\r\n\r\n\t        function makeMouseHandler(fn, instance) {\r\n\t            return function () {\r\n\t                if (instance._touching) {\r\n\t                    return;\r\n\t                }\r\n\t                return fn.apply(instance, arguments);\r\n\t            };\r\n\t        }\r\n\t    }\r\n\r\n\r\n\t    function HandlerDomProxy(dom) {\r\n\t        Eventful.call(this);\r\n\r\n\t        this.dom = dom;\r\n\r\n\t        /**\r\n\t         * @private\r\n\t         * @type {boolean}\r\n\t         */\r\n\t        this._touching = false;\r\n\r\n\t        /**\r\n\t         * @private\r\n\t         * @type {number}\r\n\t         */\r\n\t        this._touchTimer;\r\n\r\n\t        /**\r\n\t         * @private\r\n\t         * @type {module:zrender/core/GestureMgr}\r\n\t         */\r\n\t        this._gestureMgr = new GestureMgr();\r\n\r\n\t        this._handlers = {};\r\n\r\n\t        initDomHandler(this);\r\n\r\n\t        if (useTouchEvent()) {\r\n\t            mountHandlers(touchHandlerNames, this);\r\n\r\n\t            // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\r\n\t            // addEventListener(root, 'mouseout', this._mouseoutHandler);\r\n\t        }\r\n\r\n\t        // Considering some devices that both enable touch and mouse event (like MS Surface\r\n\t        // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\r\n\t        // mouse event can not be handle in those devices.\r\n\t        mountHandlers(mouseHandlerNames, this);\r\n\r\n\t        function mountHandlers(handlerNames, instance) {\r\n\t            zrUtil.each(handlerNames, function (name) {\r\n\t                addEventListener(dom, eventNameFix(name), instance._handlers[name]);\r\n\t            }, instance);\r\n\t        }\r\n\t    }\r\n\r\n\t    var handlerDomProxyProto = HandlerDomProxy.prototype;\r\n\t    handlerDomProxyProto.dispose = function () {\r\n\t        var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\r\n\r\n\t        for (var i = 0; i < handlerNames.length; i++) {\r\n\t            var name = handlerNames[i];\r\n\t            removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\r\n\t        }\r\n\t    };\r\n\r\n\t    handlerDomProxyProto.setCursor = function (cursorStyle) {\r\n\t        this.dom.style.cursor = cursorStyle || 'default';\r\n\t    };\r\n\r\n\t    zrUtil.mixin(HandlerDomProxy, Eventful);\r\n\r\n\t    module.exports = HandlerDomProxy;\r\n\r\n\r\n/***/ },\r\n/* 90 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t'use strict';\r\n\t/**\r\n\t * Only implements needed gestures for mobile.\r\n\t */\r\n\r\n\r\n\t    var eventUtil = __webpack_require__(87);\r\n\r\n\t    var GestureMgr = function () {\r\n\r\n\t        /**\r\n\t         * @private\r\n\t         * @type {Array.<Object>}\r\n\t         */\r\n\t        this._track = [];\r\n\t    };\r\n\r\n\t    GestureMgr.prototype = {\r\n\r\n\t        constructor: GestureMgr,\r\n\r\n\t        recognize: function (event, target, root) {\r\n\t            this._doTrack(event, target, root);\r\n\t            return this._recognize(event);\r\n\t        },\r\n\r\n\t        clear: function () {\r\n\t            this._track.length = 0;\r\n\t            return this;\r\n\t        },\r\n\r\n\t        _doTrack: function (event, target, root) {\r\n\t            var touches = event.touches;\r\n\r\n\t            if (!touches) {\r\n\t                return;\r\n\t            }\r\n\r\n\t            var trackItem = {\r\n\t                points: [],\r\n\t                touches: [],\r\n\t                target: target,\r\n\t                event: event\r\n\t            };\r\n\r\n\t            for (var i = 0, len = touches.length; i < len; i++) {\r\n\t                var touch = touches[i];\r\n\t                var pos = eventUtil.clientToLocal(root, touch);\r\n\t                trackItem.points.push([pos.zrX, pos.zrY]);\r\n\t                trackItem.touches.push(touch);\r\n\t            }\r\n\r\n\t            this._track.push(trackItem);\r\n\t        },\r\n\r\n\t        _recognize: function (event) {\r\n\t            for (var eventName in recognizers) {\r\n\t                if (recognizers.hasOwnProperty(eventName)) {\r\n\t                    var gestureInfo = recognizers[eventName](this._track, event);\r\n\t                    if (gestureInfo) {\r\n\t                        return gestureInfo;\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t    };\r\n\r\n\t    function dist(pointPair) {\r\n\t        var dx = pointPair[1][0] - pointPair[0][0];\r\n\t        var dy = pointPair[1][1] - pointPair[0][1];\r\n\r\n\t        return Math.sqrt(dx * dx + dy * dy);\r\n\t    }\r\n\r\n\t    function center(pointPair) {\r\n\t        return [\r\n\t            (pointPair[0][0] + pointPair[1][0]) / 2,\r\n\t            (pointPair[0][1] + pointPair[1][1]) / 2\r\n\t        ];\r\n\t    }\r\n\r\n\t    var recognizers = {\r\n\r\n\t        pinch: function (track, event) {\r\n\t            var trackLen = track.length;\r\n\r\n\t            if (!trackLen) {\r\n\t                return;\r\n\t            }\r\n\r\n\t            var pinchEnd = (track[trackLen - 1] || {}).points;\r\n\t            var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\r\n\r\n\t            if (pinchPre\r\n\t                && pinchPre.length > 1\r\n\t                && pinchEnd\r\n\t                && pinchEnd.length > 1\r\n\t            ) {\r\n\t                var pinchScale = dist(pinchEnd) / dist(pinchPre);\r\n\t                !isFinite(pinchScale) && (pinchScale = 1);\r\n\r\n\t                event.pinchScale = pinchScale;\r\n\r\n\t                var pinchCenter = center(pinchEnd);\r\n\t                event.pinchX = pinchCenter[0];\r\n\t                event.pinchY = pinchCenter[1];\r\n\r\n\t                return {\r\n\t                    type: 'pinch',\r\n\t                    target: track[0].target,\r\n\t                    event: event\r\n\t                };\r\n\t            }\r\n\t        }\r\n\r\n\t        // Only pinch currently.\r\n\t    };\r\n\r\n\t    module.exports = GestureMgr;\r\n\r\n\r\n\r\n/***/ },\r\n/* 91 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t'use strict';\r\n\t/**\r\n\t * Default canvas painter\r\n\t * @module zrender/Painter\r\n\t * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n\t *         errorrik (errorrik@gmail.com)\r\n\t *         pissang (https://www.github.com/pissang)\r\n\t */\r\n\t \r\n\r\n\t    var config = __webpack_require__(41);\r\n\t    var util = __webpack_require__(4);\r\n\t    var log = __webpack_require__(40);\r\n\t    var BoundingRect = __webpack_require__(9);\r\n\t    var timsort = __webpack_require__(85);\r\n\r\n\t    var Layer = __webpack_require__(92);\r\n\r\n\t    var requestAnimationFrame = __webpack_require__(88);\r\n\r\n\t    // PENDIGN\r\n\t    // Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.\r\n\t    //\r\n\t    // Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.\r\n\t    var MAX_PROGRESSIVE_LAYER_NUMBER = 5;\r\n\r\n\t    function parseInt10(val) {\r\n\t        return parseInt(val, 10);\r\n\t    }\r\n\r\n\t    function isLayerValid(layer) {\r\n\t        if (!layer) {\r\n\t            return false;\r\n\t        }\r\n\r\n\t        if (layer.isBuildin) {\r\n\t            return true;\r\n\t        }\r\n\r\n\t        if (typeof(layer.resize) !== 'function'\r\n\t            || typeof(layer.refresh) !== 'function'\r\n\t        ) {\r\n\t            return false;\r\n\t        }\r\n\r\n\t        return true;\r\n\t    }\r\n\r\n\t    function preProcessLayer(layer) {\r\n\t        layer.__unusedCount++;\r\n\t    }\r\n\r\n\t    function postProcessLayer(layer) {\r\n\t        if (layer.__unusedCount == 1) {\r\n\t            layer.clear();\r\n\t        }\r\n\t    }\r\n\r\n\t    var tmpRect = new BoundingRect(0, 0, 0, 0);\r\n\t    var viewRect = new BoundingRect(0, 0, 0, 0);\r\n\t    function isDisplayableCulled(el, width, height) {\r\n\t        tmpRect.copy(el.getBoundingRect());\r\n\t        if (el.transform) {\r\n\t            tmpRect.applyTransform(el.transform);\r\n\t        }\r\n\t        viewRect.width = width;\r\n\t        viewRect.height = height;\r\n\t        return !tmpRect.intersect(viewRect);\r\n\t    }\r\n\r\n\t    function isClipPathChanged(clipPaths, prevClipPaths) {\r\n\t        if (clipPaths == prevClipPaths) { // Can both be null or undefined\r\n\t            return false;\r\n\t        }\r\n\r\n\t        if (!clipPaths || !prevClipPaths || (clipPaths.length !== prevClipPaths.length)) {\r\n\t            return true;\r\n\t        }\r\n\t        for (var i = 0; i < clipPaths.length; i++) {\r\n\t            if (clipPaths[i] !== prevClipPaths[i]) {\r\n\t                return true;\r\n\t            }\r\n\t        }\r\n\t    }\r\n\r\n\t    function doClip(clipPaths, ctx) {\r\n\t        for (var i = 0; i < clipPaths.length; i++) {\r\n\t            var clipPath = clipPaths[i];\r\n\t            var m;\r\n\t            if (clipPath.transform) {\r\n\t                m = clipPath.transform;\r\n\t                ctx.transform(\r\n\t                    m[0], m[1],\r\n\t                    m[2], m[3],\r\n\t                    m[4], m[5]\r\n\t                );\r\n\t            }\r\n\t            var path = clipPath.path;\r\n\t            path.beginPath(ctx);\r\n\t            clipPath.buildPath(path, clipPath.shape);\r\n\t            ctx.clip();\r\n\t            // Transform back\r\n\t            if (clipPath.transform) {\r\n\t                m = clipPath.invTransform;\r\n\t                ctx.transform(\r\n\t                    m[0], m[1],\r\n\t                    m[2], m[3],\r\n\t                    m[4], m[5]\r\n\t                );\r\n\t            }\r\n\t        }\r\n\t    }\r\n\r\n\t    function createRoot(width, height) {\r\n\t        var domRoot = document.createElement('div');\r\n\t        var domRootStyle = domRoot.style;\r\n\r\n\t        // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\r\n\t        domRootStyle.position = 'relative';\r\n\t        domRootStyle.overflow = 'hidden';\r\n\t        domRootStyle.width = width + 'px';\r\n\t        domRootStyle.height = height + 'px';\r\n\t        return domRoot;\r\n\t    }\r\n\r\n\t    /**\r\n\t     * @alias module:zrender/Painter\r\n\t     * @constructor\r\n\t     * @param {HTMLElement} root 绘图容器\r\n\t     * @param {module:zrender/Storage} storage\r\n\t     * @param {Ojbect} opts\r\n\t     */\r\n\t    var Painter = function (root, storage, opts) {\r\n\t        // In node environment using node-canvas\r\n\t        var singleCanvas = !root.nodeName // In node ?\r\n\t            || root.nodeName.toUpperCase() === 'CANVAS';\r\n\r\n\t        opts = opts || {};\r\n\r\n\t        /**\r\n\t         * @type {number}\r\n\t         */\r\n\t        this.dpr = opts.devicePixelRatio || config.devicePixelRatio;\r\n\t        /**\r\n\t         * @type {boolean}\r\n\t         * @private\r\n\t         */\r\n\t        this._singleCanvas = singleCanvas;\r\n\t        /**\r\n\t         * 绘图容器\r\n\t         * @type {HTMLElement}\r\n\t         */\r\n\t        this.root = root;\r\n\r\n\t        var rootStyle = root.style;\r\n\r\n\t        if (rootStyle) {\r\n\t            rootStyle['-webkit-tap-highlight-color'] = 'transparent';\r\n\t            rootStyle['-webkit-user-select'] =\r\n\t            rootStyle['user-select'] =\r\n\t            rootStyle['-webkit-touch-callout'] = 'none';\r\n\r\n\t            root.innerHTML = '';\r\n\t        }\r\n\r\n\t        /**\r\n\t         * @type {module:zrender/Storage}\r\n\t         */\r\n\t        this.storage = storage;\r\n\r\n\t        /**\r\n\t         * @type {Array.<number>}\r\n\t         * @private\r\n\t         */\r\n\t        var zlevelList = this._zlevelList = [];\r\n\r\n\t        /**\r\n\t         * @type {Object.<string, module:zrender/Layer>}\r\n\t         * @private\r\n\t         */\r\n\t        var layers = this._layers = {};\r\n\r\n\t        /**\r\n\t         * @type {Object.<string, Object>}\r\n\t         * @type {private}\r\n\t         */\r\n\t        this._layerConfig = {};\r\n\r\n\t        if (!singleCanvas) {\r\n\t            this._width = this._getWidth();\r\n\t            this._height = this._getHeight();\r\n\r\n\t            var domRoot = this._domRoot = createRoot(\r\n\t                this._width, this._height\r\n\t            );\r\n\t            root.appendChild(domRoot);\r\n\t        }\r\n\t        else {\r\n\t            // Use canvas width and height directly\r\n\t            var width = root.width;\r\n\t            var height = root.height;\r\n\t            this._width = width;\r\n\t            this._height = height;\r\n\r\n\t            // Create layer if only one given canvas\r\n\t            // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\r\n\t            var mainLayer = new Layer(root, this, 1);\r\n\t            mainLayer.initContext();\r\n\t            // FIXME Use canvas width and height\r\n\t            // mainLayer.resize(width, height);\r\n\t            layers[0] = mainLayer;\r\n\t            zlevelList.push(0);\r\n\t        }\r\n\r\n\t        this.pathToImage = this._createPathToImage();\r\n\r\n\t        // Layers for progressive rendering\r\n\t        this._progressiveLayers = [];\r\n\r\n\t        /**\r\n\t         * @type {module:zrender/Layer}\r\n\t         * @private\r\n\t         */\r\n\t        this._hoverlayer;\r\n\r\n\t        this._hoverElements = [];\r\n\t    };\r\n\r\n\t    Painter.prototype = {\r\n\r\n\t        constructor: Painter,\r\n\r\n\t        /**\r\n\t         * If painter use a single canvas\r\n\t         * @return {boolean}\r\n\t         */\r\n\t        isSingleCanvas: function () {\r\n\t            return this._singleCanvas;\r\n\t        },\r\n\t        /**\r\n\t         * @return {HTMLDivElement}\r\n\t         */\r\n\t        getViewportRoot: function () {\r\n\t            return this._singleCanvas ? this._layers[0].dom : this._domRoot;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * 刷新\r\n\t         * @param {boolean} [paintAll=false] 强制绘制所有displayable\r\n\t         */\r\n\t        refresh: function (paintAll) {\r\n\r\n\t            var list = this.storage.getDisplayList(true);\r\n\r\n\t            var zlevelList = this._zlevelList;\r\n\r\n\t            this._paintList(list, paintAll);\r\n\r\n\t            // Paint custum layers\r\n\t            for (var i = 0; i < zlevelList.length; i++) {\r\n\t                var z = zlevelList[i];\r\n\t                var layer = this._layers[z];\r\n\t                if (!layer.isBuildin && layer.refresh) {\r\n\t                    layer.refresh();\r\n\t                }\r\n\t            }\r\n\r\n\t            this.refreshHover();\r\n\r\n\t            if (this._progressiveLayers.length) {\r\n\t                this._startProgessive();\r\n\t            }\r\n\r\n\t            return this;\r\n\t        },\r\n\r\n\t        addHover: function (el, hoverStyle) {\r\n\t            if (el.__hoverMir) {\r\n\t                return;\r\n\t            }\r\n\t            var elMirror = new el.constructor({\r\n\t                style: el.style,\r\n\t                shape: el.shape\r\n\t            });\r\n\t            elMirror.__from = el;\r\n\t            el.__hoverMir = elMirror;\r\n\t            elMirror.setStyle(hoverStyle);\r\n\t            this._hoverElements.push(elMirror);\r\n\t        },\r\n\r\n\t        removeHover: function (el) {\r\n\t            var elMirror = el.__hoverMir;\r\n\t            var hoverElements = this._hoverElements;\r\n\t            var idx = util.indexOf(hoverElements, elMirror);\r\n\t            if (idx >= 0) {\r\n\t                hoverElements.splice(idx, 1);\r\n\t            }\r\n\t            el.__hoverMir = null;\r\n\t        },\r\n\r\n\t        clearHover: function (el) {\r\n\t            var hoverElements = this._hoverElements;\r\n\t            for (var i = 0; i < hoverElements.length; i++) {\r\n\t                var from = hoverElements[i].__from;\r\n\t                if (from) {\r\n\t                    from.__hoverMir = null;\r\n\t                }\r\n\t            }\r\n\t            hoverElements.length = 0;\r\n\t        },\r\n\r\n\t        refreshHover: function () {\r\n\t            var hoverElements = this._hoverElements;\r\n\t            var len = hoverElements.length;\r\n\t            var hoverLayer = this._hoverlayer;\r\n\t            hoverLayer && hoverLayer.clear();\r\n\r\n\t            if (!len) {\r\n\t                return;\r\n\t            }\r\n\t            timsort(hoverElements, this.storage.displayableSortFunc);\r\n\r\n\t            // Use a extream large zlevel\r\n\t            // FIXME?\r\n\t            if (!hoverLayer) {\r\n\t                hoverLayer = this._hoverlayer = this.getLayer(1e5);\r\n\t            }\r\n\r\n\t            var scope = {};\r\n\t            hoverLayer.ctx.save();\r\n\t            for (var i = 0; i < len;) {\r\n\t                var el = hoverElements[i];\r\n\t                var originalEl = el.__from;\r\n\t                // Original el is removed\r\n\t                // PENDING\r\n\t                if (!(originalEl && originalEl.__zr)) {\r\n\t                    hoverElements.splice(i, 1);\r\n\t                    originalEl.__hoverMir = null;\r\n\t                    len--;\r\n\t                    continue;\r\n\t                }\r\n\t                i++;\r\n\r\n\t                // Use transform\r\n\t                // FIXME style and shape ?\r\n\t                if (!originalEl.invisible) {\r\n\t                    el.transform = originalEl.transform;\r\n\t                    el.invTransform = originalEl.invTransform;\r\n\t                    el.__clipPaths = originalEl.__clipPaths;\r\n\t                    // el.\r\n\t                    this._doPaintEl(el, hoverLayer, true, scope);\r\n\t                }\r\n\t            }\r\n\t            hoverLayer.ctx.restore();\r\n\t        },\r\n\r\n\t        _startProgessive: function () {\r\n\t            var self = this;\r\n\r\n\t            if (!self._furtherProgressive) {\r\n\t                return;\r\n\t            }\r\n\r\n\t            // Use a token to stop progress steps triggered by\r\n\t            // previous zr.refresh calling.\r\n\t            var token = self._progressiveToken = +new Date();\r\n\r\n\t            self._progress++;\r\n\t            requestAnimationFrame(step);\r\n\r\n\t            function step() {\r\n\t                // In case refreshed or disposed\r\n\t                if (token === self._progressiveToken && self.storage) {\r\n\r\n\t                    self._doPaintList(self.storage.getDisplayList());\r\n\r\n\t                    if (self._furtherProgressive) {\r\n\t                        self._progress++;\r\n\t                        requestAnimationFrame(step);\r\n\t                    }\r\n\t                    else {\r\n\t                        self._progressiveToken = -1;\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t        },\r\n\r\n\t        _clearProgressive: function () {\r\n\t            this._progressiveToken = -1;\r\n\t            this._progress = 0;\r\n\t            util.each(this._progressiveLayers, function (layer) {\r\n\t                layer.__dirty && layer.clear();\r\n\t            });\r\n\t        },\r\n\r\n\t        _paintList: function (list, paintAll) {\r\n\r\n\t            if (paintAll == null) {\r\n\t                paintAll = false;\r\n\t            }\r\n\r\n\t            this._updateLayerStatus(list);\r\n\r\n\t            this._clearProgressive();\r\n\r\n\t            this.eachBuildinLayer(preProcessLayer);\r\n\r\n\t            this._doPaintList(list, paintAll);\r\n\r\n\t            this.eachBuildinLayer(postProcessLayer);\r\n\t        },\r\n\r\n\t        _doPaintList: function (list, paintAll) {\r\n\t            var currentLayer;\r\n\t            var currentZLevel;\r\n\t            var ctx;\r\n\r\n\t            // var invTransform = [];\r\n\t            var scope;\r\n\r\n\t            var progressiveLayerIdx = 0;\r\n\t            var currentProgressiveLayer;\r\n\r\n\t            var width = this._width;\r\n\t            var height = this._height;\r\n\t            var layerProgress;\r\n\t            var frame = this._progress;\r\n\t            function flushProgressiveLayer(layer) {\r\n\t                ctx.save();\r\n\t                ctx.globalAlpha = 1;\r\n\t                ctx.shadowBlur = 0;\r\n\t                // Avoid layer don't clear in next progressive frame\r\n\t                currentLayer.__dirty = true;\r\n\t                ctx.drawImage(layer.dom, 0, 0, width, height);\r\n\t                ctx.restore();\r\n\r\n\t                currentLayer.ctx.restore();\r\n\t            }\r\n\r\n\t            for (var i = 0, l = list.length; i < l; i++) {\r\n\t                var el = list[i];\r\n\t                var elZLevel = this._singleCanvas ? 0 : el.zlevel;\r\n\r\n\t                var elFrame = el.__frame;\r\n\r\n\t                // Flush at current context\r\n\t                // PENDING\r\n\t                if (elFrame < 0 && currentProgressiveLayer) {\r\n\t                    flushProgressiveLayer(currentProgressiveLayer);\r\n\t                    currentProgressiveLayer = null;\r\n\t                }\r\n\r\n\t                // Change draw layer\r\n\t                if (currentZLevel !== elZLevel) {\r\n\t                    if (ctx) {\r\n\t                        ctx.restore();\r\n\t                    }\r\n\r\n\t                    // Reset scope\r\n\t                    scope = {};\r\n\r\n\t                    // Only 0 zlevel if only has one canvas\r\n\t                    currentZLevel = elZLevel;\r\n\t                    currentLayer = this.getLayer(currentZLevel);\r\n\r\n\t                    if (!currentLayer.isBuildin) {\r\n\t                        log(\r\n\t                            'ZLevel ' + currentZLevel\r\n\t                            + ' has been used by unkown layer ' + currentLayer.id\r\n\t                        );\r\n\t                    }\r\n\r\n\t                    ctx = currentLayer.ctx;\r\n\t                    ctx.save();\r\n\r\n\t                    // Reset the count\r\n\t                    currentLayer.__unusedCount = 0;\r\n\r\n\t                    if (currentLayer.__dirty || paintAll) {\r\n\t                        currentLayer.clear();\r\n\t                    }\r\n\t                }\r\n\r\n\t                if (!(currentLayer.__dirty || paintAll)) {\r\n\t                    continue;\r\n\t                }\r\n\t                if (elFrame >= 0) {\r\n\t                    // Progressive layer changed\r\n\t                    if (!currentProgressiveLayer) {\r\n\t                        currentProgressiveLayer = this._progressiveLayers[\r\n\t                            Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)\r\n\t                        ];\r\n\r\n\t                        currentProgressiveLayer.ctx.save();\r\n\t                        currentProgressiveLayer.renderScope = {};\r\n\r\n\t                        if (currentProgressiveLayer\r\n\t                            && (currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress)\r\n\t                        ) {\r\n\t                            // flushProgressiveLayer(currentProgressiveLayer);\r\n\t                            // Quick jump all progressive elements\r\n\t                            // All progressive element are not dirty, jump over and flush directly\r\n\t                            i = currentProgressiveLayer.__nextIdxNotProg - 1;\r\n\t                            // currentProgressiveLayer = null;\r\n\t                            continue;\r\n\t                        }\r\n\r\n\t                        layerProgress = currentProgressiveLayer.__progress;\r\n\r\n\t                        if (!currentProgressiveLayer.__dirty) {\r\n\t                            // Keep rendering\r\n\t                            frame = layerProgress;\r\n\t                        }\r\n\r\n\t                        currentProgressiveLayer.__progress = frame + 1;\r\n\t                    }\r\n\r\n\t                    if (elFrame === frame) {\r\n\t                        this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);\r\n\t                    }\r\n\t                }\r\n\t                else {\r\n\t                    this._doPaintEl(el, currentLayer, paintAll, scope);\r\n\t                }\r\n\r\n\t                el.__dirty = false;\r\n\t            }\r\n\r\n\t            if (currentProgressiveLayer) {\r\n\t                flushProgressiveLayer(currentProgressiveLayer);\r\n\t            }\r\n\r\n\t            // Restore the lastLayer ctx\r\n\t            ctx && ctx.restore();\r\n\t            // If still has clipping state\r\n\t            // if (scope.prevElClipPaths) {\r\n\t            //     ctx.restore();\r\n\t            // }\r\n\r\n\t            this._furtherProgressive = false;\r\n\t            util.each(this._progressiveLayers, function (layer) {\r\n\t                if (layer.__maxProgress >= layer.__progress) {\r\n\t                    this._furtherProgressive = true;\r\n\t                }\r\n\t            }, this);\r\n\t        },\r\n\r\n\t        _doPaintEl: function (el, currentLayer, forcePaint, scope) {\r\n\t            var ctx = currentLayer.ctx;\r\n\r\n\t            if (\r\n\t                (currentLayer.__dirty || forcePaint)\r\n\t                // Ignore invisible element\r\n\t                && !el.invisible\r\n\t                // Ignore transparent element\r\n\t                && el.style.opacity !== 0\r\n\t                // Ignore scale 0 element, in some environment like node-canvas\r\n\t                // Draw a scale 0 element can cause all following draw wrong\r\n\t                && el.scale[0] && el.scale[1]\r\n\t                // Ignore culled element\r\n\t                && !(el.culling && isDisplayableCulled(el, this._width, this._height))\r\n\t            ) {\r\n\r\n\t                var clipPaths = el.__clipPaths;\r\n\r\n\t                // Optimize when clipping on group with several elements\r\n\t                if (scope.prevClipLayer !== currentLayer\r\n\t                    || isClipPathChanged(clipPaths, scope.prevElClipPaths)\r\n\t                ) {\r\n\t                    // If has previous clipping state, restore from it\r\n\t                    if (scope.prevElClipPaths) {\r\n\t                        scope.prevClipLayer.ctx.restore();\r\n\t                        scope.prevClipLayer = scope.prevElClipPaths = null;\r\n\r\n\t                        // Reset prevEl since context has been restored\r\n\t                        scope.prevEl = null;\r\n\t                    }\r\n\t                    // New clipping state\r\n\t                    if (clipPaths) {\r\n\t                        ctx.save();\r\n\t                        doClip(clipPaths, ctx);\r\n\t                        scope.prevClipLayer = currentLayer;\r\n\t                        scope.prevElClipPaths = clipPaths;\r\n\t                    }\r\n\t                }\r\n\t                el.beforeBrush && el.beforeBrush(ctx);\r\n\r\n\t                el.brush(ctx, scope.prevEl || null);\r\n\t                scope.prevEl = el;\r\n\r\n\t                el.afterBrush && el.afterBrush(ctx);\r\n\t            }\r\n\t        },\r\n\r\n\t        /**\r\n\t         * 获取 zlevel 所在层，如果不存在则会创建一个新的层\r\n\t         * @param {number} zlevel\r\n\t         * @return {module:zrender/Layer}\r\n\t         */\r\n\t        getLayer: function (zlevel) {\r\n\t            if (this._singleCanvas) {\r\n\t                return this._layers[0];\r\n\t            }\r\n\r\n\t            var layer = this._layers[zlevel];\r\n\t            if (!layer) {\r\n\t                // Create a new layer\r\n\t                layer = new Layer('zr_' + zlevel, this, this.dpr);\r\n\t                layer.isBuildin = true;\r\n\r\n\t                if (this._layerConfig[zlevel]) {\r\n\t                    util.merge(layer, this._layerConfig[zlevel], true);\r\n\t                }\r\n\r\n\t                this.insertLayer(zlevel, layer);\r\n\r\n\t                // Context is created after dom inserted to document\r\n\t                // Or excanvas will get 0px clientWidth and clientHeight\r\n\t                layer.initContext();\r\n\t            }\r\n\r\n\t            return layer;\r\n\t        },\r\n\r\n\t        insertLayer: function (zlevel, layer) {\r\n\r\n\t            var layersMap = this._layers;\r\n\t            var zlevelList = this._zlevelList;\r\n\t            var len = zlevelList.length;\r\n\t            var prevLayer = null;\r\n\t            var i = -1;\r\n\t            var domRoot = this._domRoot;\r\n\r\n\t            if (layersMap[zlevel]) {\r\n\t                log('ZLevel ' + zlevel + ' has been used already');\r\n\t                return;\r\n\t            }\r\n\t            // Check if is a valid layer\r\n\t            if (!isLayerValid(layer)) {\r\n\t                log('Layer of zlevel ' + zlevel + ' is not valid');\r\n\t                return;\r\n\t            }\r\n\r\n\t            if (len > 0 && zlevel > zlevelList[0]) {\r\n\t                for (i = 0; i < len - 1; i++) {\r\n\t                    if (\r\n\t                        zlevelList[i] < zlevel\r\n\t                        && zlevelList[i + 1] > zlevel\r\n\t                    ) {\r\n\t                        break;\r\n\t                    }\r\n\t                }\r\n\t                prevLayer = layersMap[zlevelList[i]];\r\n\t            }\r\n\t            zlevelList.splice(i + 1, 0, zlevel);\r\n\r\n\t            if (prevLayer) {\r\n\t                var prevDom = prevLayer.dom;\r\n\t                if (prevDom.nextSibling) {\r\n\t                    domRoot.insertBefore(\r\n\t                        layer.dom,\r\n\t                        prevDom.nextSibling\r\n\t                    );\r\n\t                }\r\n\t                else {\r\n\t                    domRoot.appendChild(layer.dom);\r\n\t                }\r\n\t            }\r\n\t            else {\r\n\t                if (domRoot.firstChild) {\r\n\t                    domRoot.insertBefore(layer.dom, domRoot.firstChild);\r\n\t                }\r\n\t                else {\r\n\t                    domRoot.appendChild(layer.dom);\r\n\t                }\r\n\t            }\r\n\r\n\t            layersMap[zlevel] = layer;\r\n\t        },\r\n\r\n\t        // Iterate each layer\r\n\t        eachLayer: function (cb, context) {\r\n\t            var zlevelList = this._zlevelList;\r\n\t            var z;\r\n\t            var i;\r\n\t            for (i = 0; i < zlevelList.length; i++) {\r\n\t                z = zlevelList[i];\r\n\t                cb.call(context, this._layers[z], z);\r\n\t            }\r\n\t        },\r\n\r\n\t        // Iterate each buildin layer\r\n\t        eachBuildinLayer: function (cb, context) {\r\n\t            var zlevelList = this._zlevelList;\r\n\t            var layer;\r\n\t            var z;\r\n\t            var i;\r\n\t            for (i = 0; i < zlevelList.length; i++) {\r\n\t                z = zlevelList[i];\r\n\t                layer = this._layers[z];\r\n\t                if (layer.isBuildin) {\r\n\t                    cb.call(context, layer, z);\r\n\t                }\r\n\t            }\r\n\t        },\r\n\r\n\t        // Iterate each other layer except buildin layer\r\n\t        eachOtherLayer: function (cb, context) {\r\n\t            var zlevelList = this._zlevelList;\r\n\t            var layer;\r\n\t            var z;\r\n\t            var i;\r\n\t            for (i = 0; i < zlevelList.length; i++) {\r\n\t                z = zlevelList[i];\r\n\t                layer = this._layers[z];\r\n\t                if (! layer.isBuildin) {\r\n\t                    cb.call(context, layer, z);\r\n\t                }\r\n\t            }\r\n\t        },\r\n\r\n\t        /**\r\n\t         * 获取所有已创建的层\r\n\t         * @param {Array.<module:zrender/Layer>} [prevLayer]\r\n\t         */\r\n\t        getLayers: function () {\r\n\t            return this._layers;\r\n\t        },\r\n\r\n\t        _updateLayerStatus: function (list) {\r\n\r\n\t            var layers = this._layers;\r\n\t            var progressiveLayers = this._progressiveLayers;\r\n\r\n\t            var elCountsLastFrame = {};\r\n\t            var progressiveElCountsLastFrame = {};\r\n\r\n\t            this.eachBuildinLayer(function (layer, z) {\r\n\t                elCountsLastFrame[z] = layer.elCount;\r\n\t                layer.elCount = 0;\r\n\t                layer.__dirty = false;\r\n\t            });\r\n\r\n\t            util.each(progressiveLayers, function (layer, idx) {\r\n\t                progressiveElCountsLastFrame[idx] = layer.elCount;\r\n\t                layer.elCount = 0;\r\n\t                layer.__dirty = false;\r\n\t            });\r\n\r\n\t            var progressiveLayerCount = 0;\r\n\t            var currentProgressiveLayer;\r\n\t            var lastProgressiveKey;\r\n\t            var frameCount = 0;\r\n\t            for (var i = 0, l = list.length; i < l; i++) {\r\n\t                var el = list[i];\r\n\t                var zlevel = this._singleCanvas ? 0 : el.zlevel;\r\n\t                var layer = layers[zlevel];\r\n\t                var elProgress = el.progressive;\r\n\t                if (layer) {\r\n\t                    layer.elCount++;\r\n\t                    layer.__dirty = layer.__dirty || el.__dirty;\r\n\t                }\r\n\r\n\t                /////// Update progressive\r\n\t                if (elProgress >= 0) {\r\n\t                    // Fix wrong progressive sequence problem.\r\n\t                    if (lastProgressiveKey !== elProgress) {\r\n\t                        lastProgressiveKey = elProgress;\r\n\t                        frameCount++;\r\n\t                    }\r\n\t                    var elFrame = el.__frame = frameCount - 1;\r\n\t                    if (!currentProgressiveLayer) {\r\n\t                        var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);\r\n\t                        currentProgressiveLayer = progressiveLayers[idx];\r\n\t                        if (!currentProgressiveLayer) {\r\n\t                            currentProgressiveLayer = progressiveLayers[idx] = new Layer(\r\n\t                                'progressive', this, this.dpr\r\n\t                            );\r\n\t                            currentProgressiveLayer.initContext();\r\n\t                        }\r\n\t                        currentProgressiveLayer.__maxProgress = 0;\r\n\t                    }\r\n\t                    currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;\r\n\t                    currentProgressiveLayer.elCount++;\r\n\r\n\t                    currentProgressiveLayer.__maxProgress = Math.max(\r\n\t                        currentProgressiveLayer.__maxProgress, elFrame\r\n\t                    );\r\n\r\n\t                    if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {\r\n\t                        // Should keep rendering this  layer because progressive rendering is not finished yet\r\n\t                        layer.__dirty = true;\r\n\t                    }\r\n\t                }\r\n\t                else {\r\n\t                    el.__frame = -1;\r\n\r\n\t                    if (currentProgressiveLayer) {\r\n\t                        currentProgressiveLayer.__nextIdxNotProg = i;\r\n\t                        progressiveLayerCount++;\r\n\t                        currentProgressiveLayer = null;\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\r\n\t            if (currentProgressiveLayer) {\r\n\t                progressiveLayerCount++;\r\n\t                currentProgressiveLayer.__nextIdxNotProg = i;\r\n\t            }\r\n\r\n\t            // 层中的元素数量有发生变化\r\n\t            this.eachBuildinLayer(function (layer, z) {\r\n\t                if (elCountsLastFrame[z] !== layer.elCount) {\r\n\t                    layer.__dirty = true;\r\n\t                }\r\n\t            });\r\n\r\n\t            progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);\r\n\t            util.each(progressiveLayers, function (layer, idx) {\r\n\t                if (progressiveElCountsLastFrame[idx] !== layer.elCount) {\r\n\t                    el.__dirty = true;\r\n\t                }\r\n\t                if (layer.__dirty) {\r\n\t                    layer.__progress = 0;\r\n\t                }\r\n\t            });\r\n\t        },\r\n\r\n\t        /**\r\n\t         * 清除hover层外所有内容\r\n\t         */\r\n\t        clear: function () {\r\n\t            this.eachBuildinLayer(this._clearLayer);\r\n\t            return this;\r\n\t        },\r\n\r\n\t        _clearLayer: function (layer) {\r\n\t            layer.clear();\r\n\t        },\r\n\r\n\t        /**\r\n\t         * 修改指定zlevel的绘制参数\r\n\t         *\r\n\t         * @param {string} zlevel\r\n\t         * @param {Object} config 配置对象\r\n\t         * @param {string} [config.clearColor=0] 每次清空画布的颜色\r\n\t         * @param {string} [config.motionBlur=false] 是否开启动态模糊\r\n\t         * @param {number} [config.lastFrameAlpha=0.7]\r\n\t         *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\r\n\t         */\r\n\t        configLayer: function (zlevel, config) {\r\n\t            if (config) {\r\n\t                var layerConfig = this._layerConfig;\r\n\t                if (!layerConfig[zlevel]) {\r\n\t                    layerConfig[zlevel] = config;\r\n\t                }\r\n\t                else {\r\n\t                    util.merge(layerConfig[zlevel], config, true);\r\n\t                }\r\n\r\n\t                var layer = this._layers[zlevel];\r\n\r\n\t                if (layer) {\r\n\t                    util.merge(layer, layerConfig[zlevel], true);\r\n\t                }\r\n\t            }\r\n\t        },\r\n\r\n\t        /**\r\n\t         * 删除指定层\r\n\t         * @param {number} zlevel 层所在的zlevel\r\n\t         */\r\n\t        delLayer: function (zlevel) {\r\n\t            var layers = this._layers;\r\n\t            var zlevelList = this._zlevelList;\r\n\t            var layer = layers[zlevel];\r\n\t            if (!layer) {\r\n\t                return;\r\n\t            }\r\n\t            layer.dom.parentNode.removeChild(layer.dom);\r\n\t            delete layers[zlevel];\r\n\r\n\t            zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\r\n\t        },\r\n\r\n\t        /**\r\n\t         * 区域大小变化后重绘\r\n\t         */\r\n\t        resize: function (width, height) {\r\n\t            var domRoot = this._domRoot;\r\n\t            // FIXME Why ?\r\n\t            domRoot.style.display = 'none';\r\n\r\n\t            width = width || this._getWidth();\r\n\t            height = height || this._getHeight();\r\n\r\n\t            domRoot.style.display = '';\r\n\r\n\t            // 优化没有实际改变的resize\r\n\t            if (this._width != width || height != this._height) {\r\n\t                domRoot.style.width = width + 'px';\r\n\t                domRoot.style.height = height + 'px';\r\n\r\n\t                for (var id in this._layers) {\r\n\t                    this._layers[id].resize(width, height);\r\n\t                }\r\n\r\n\t                this.refresh(true);\r\n\t            }\r\n\r\n\t            this._width = width;\r\n\t            this._height = height;\r\n\r\n\t            return this;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * 清除单独的一个层\r\n\t         * @param {number} zlevel\r\n\t         */\r\n\t        clearLayer: function (zlevel) {\r\n\t            var layer = this._layers[zlevel];\r\n\t            if (layer) {\r\n\t                layer.clear();\r\n\t            }\r\n\t        },\r\n\r\n\t        /**\r\n\t         * 释放\r\n\t         */\r\n\t        dispose: function () {\r\n\t            this.root.innerHTML = '';\r\n\r\n\t            this.root =\r\n\t            this.storage =\r\n\r\n\t            this._domRoot =\r\n\t            this._layers = null;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Get canvas which has all thing rendered\r\n\t         * @param {Object} opts\r\n\t         * @param {string} [opts.backgroundColor]\r\n\t         */\r\n\t        getRenderedCanvas: function (opts) {\r\n\t            opts = opts || {};\r\n\t            if (this._singleCanvas) {\r\n\t                return this._layers[0].dom;\r\n\t            }\r\n\r\n\t            var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\r\n\t            imageLayer.initContext();\r\n\r\n\t            imageLayer.clearColor = opts.backgroundColor;\r\n\t            imageLayer.clear();\r\n\r\n\t            var displayList = this.storage.getDisplayList(true);\r\n\r\n\t            var scope = {};\r\n\t            for (var i = 0; i < displayList.length; i++) {\r\n\t                var el = displayList[i];\r\n\t                this._doPaintEl(el, imageLayer, true, scope);\r\n\t            }\r\n\r\n\t            return imageLayer.dom;\r\n\t        },\r\n\t        /**\r\n\t         * 获取绘图区域宽度\r\n\t         */\r\n\t        getWidth: function () {\r\n\t            return this._width;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * 获取绘图区域高度\r\n\t         */\r\n\t        getHeight: function () {\r\n\t            return this._height;\r\n\t        },\r\n\r\n\t        _getWidth: function () {\r\n\t            var root = this.root;\r\n\t            var stl = document.defaultView.getComputedStyle(root);\r\n\r\n\t            // FIXME Better way to get the width and height when element has not been append to the document\r\n\t            return ((root.clientWidth || parseInt10(stl.width) || parseInt10(root.style.width))\r\n\t                    - (parseInt10(stl.paddingLeft) || 0)\r\n\t                    - (parseInt10(stl.paddingRight) || 0)) | 0;\r\n\t        },\r\n\r\n\t        _getHeight: function () {\r\n\t            var root = this.root;\r\n\t            var stl = document.defaultView.getComputedStyle(root);\r\n\r\n\t            return ((root.clientHeight || parseInt10(stl.height) || parseInt10(root.style.height))\r\n\t                    - (parseInt10(stl.paddingTop) || 0)\r\n\t                    - (parseInt10(stl.paddingBottom) || 0)) | 0;\r\n\t        },\r\n\r\n\t        _pathToImage: function (id, path, width, height, dpr) {\r\n\t            var canvas = document.createElement('canvas');\r\n\t            var ctx = canvas.getContext('2d');\r\n\r\n\t            canvas.width = width * dpr;\r\n\t            canvas.height = height * dpr;\r\n\r\n\t            ctx.clearRect(0, 0, width * dpr, height * dpr);\r\n\r\n\t            var pathTransform = {\r\n\t                position: path.position,\r\n\t                rotation: path.rotation,\r\n\t                scale: path.scale\r\n\t            };\r\n\t            path.position = [0, 0, 0];\r\n\t            path.rotation = 0;\r\n\t            path.scale = [1, 1];\r\n\t            if (path) {\r\n\t                path.brush(ctx);\r\n\t            }\r\n\r\n\t            var ImageShape = __webpack_require__(62);\r\n\t            var imgShape = new ImageShape({\r\n\t                id: id,\r\n\t                style: {\r\n\t                    x: 0,\r\n\t                    y: 0,\r\n\t                    image: canvas\r\n\t                }\r\n\t            });\r\n\r\n\t            if (pathTransform.position != null) {\r\n\t                imgShape.position = path.position = pathTransform.position;\r\n\t            }\r\n\r\n\t            if (pathTransform.rotation != null) {\r\n\t                imgShape.rotation = path.rotation = pathTransform.rotation;\r\n\t            }\r\n\r\n\t            if (pathTransform.scale != null) {\r\n\t                imgShape.scale = path.scale = pathTransform.scale;\r\n\t            }\r\n\r\n\t            return imgShape;\r\n\t        },\r\n\r\n\t        _createPathToImage: function () {\r\n\t            var me = this;\r\n\r\n\t            return function (id, e, width, height) {\r\n\t                return me._pathToImage(\r\n\t                    id, e, width, height, me.dpr\r\n\t                );\r\n\t            };\r\n\t        }\r\n\t    };\r\n\r\n\t    module.exports = Painter;\r\n\r\n\r\n\r\n/***/ },\r\n/* 92 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t/**\r\n\t * @module zrender/Layer\r\n\t * @author pissang(https://www.github.com/pissang)\r\n\t */\r\n\r\n\r\n\t    var util = __webpack_require__(4);\r\n\t    var config = __webpack_require__(41);\r\n\t    var Style = __webpack_require__(47);\r\n\t    var Pattern = __webpack_require__(59);\r\n\r\n\t    function returnFalse() {\r\n\t        return false;\r\n\t    }\r\n\r\n\t    /**\r\n\t     * 创建dom\r\n\t     *\r\n\t     * @inner\r\n\t     * @param {string} id dom id 待用\r\n\t     * @param {string} type dom type，such as canvas, div etc.\r\n\t     * @param {Painter} painter painter instance\r\n\t     * @param {number} number\r\n\t     */\r\n\t    function createDom(id, type, painter, dpr) {\r\n\t        var newDom = document.createElement(type);\r\n\t        var width = painter.getWidth();\r\n\t        var height = painter.getHeight();\r\n\r\n\t        var newDomStyle = newDom.style;\r\n\t        // 没append呢，请原谅我这样写，清晰~\r\n\t        newDomStyle.position = 'absolute';\r\n\t        newDomStyle.left = 0;\r\n\t        newDomStyle.top = 0;\r\n\t        newDomStyle.width = width + 'px';\r\n\t        newDomStyle.height = height + 'px';\r\n\t        newDom.width = width * dpr;\r\n\t        newDom.height = height * dpr;\r\n\r\n\t        // id不作为索引用，避免可能造成的重名，定义为私有属性\r\n\t        newDom.setAttribute('data-zr-dom-id', id);\r\n\t        return newDom;\r\n\t    }\r\n\r\n\t    /**\r\n\t     * @alias module:zrender/Layer\r\n\t     * @constructor\r\n\t     * @extends module:zrender/mixin/Transformable\r\n\t     * @param {string} id\r\n\t     * @param {module:zrender/Painter} painter\r\n\t     * @param {number} [dpr]\r\n\t     */\r\n\t    var Layer = function(id, painter, dpr) {\r\n\t        var dom;\r\n\t        dpr = dpr || config.devicePixelRatio;\r\n\t        if (typeof id === 'string') {\r\n\t            dom = createDom(id, 'canvas', painter, dpr);\r\n\t        }\r\n\t        // Not using isDom because in node it will return false\r\n\t        else if (util.isObject(id)) {\r\n\t            dom = id;\r\n\t            id = dom.id;\r\n\t        }\r\n\t        this.id = id;\r\n\t        this.dom = dom;\r\n\r\n\t        var domStyle = dom.style;\r\n\t        if (domStyle) { // Not in node\r\n\t            dom.onselectstart = returnFalse; // 避免页面选中的尴尬\r\n\t            domStyle['-webkit-user-select'] = 'none';\r\n\t            domStyle['user-select'] = 'none';\r\n\t            domStyle['-webkit-touch-callout'] = 'none';\r\n\t            domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\r\n\t        }\r\n\r\n\t        this.domBack = null;\r\n\t        this.ctxBack = null;\r\n\r\n\t        this.painter = painter;\r\n\r\n\t        this.config = null;\r\n\r\n\t        // Configs\r\n\t        /**\r\n\t         * 每次清空画布的颜色\r\n\t         * @type {string}\r\n\t         * @default 0\r\n\t         */\r\n\t        this.clearColor = 0;\r\n\t        /**\r\n\t         * 是否开启动态模糊\r\n\t         * @type {boolean}\r\n\t         * @default false\r\n\t         */\r\n\t        this.motionBlur = false;\r\n\t        /**\r\n\t         * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\r\n\t         * @type {number}\r\n\t         * @default 0.7\r\n\t         */\r\n\t        this.lastFrameAlpha = 0.7;\r\n\r\n\t        /**\r\n\t         * Layer dpr\r\n\t         * @type {number}\r\n\t         */\r\n\t        this.dpr = dpr;\r\n\t    };\r\n\r\n\t    Layer.prototype = {\r\n\r\n\t        constructor: Layer,\r\n\r\n\t        elCount: 0,\r\n\r\n\t        __dirty: true,\r\n\r\n\t        initContext: function () {\r\n\t            this.ctx = this.dom.getContext('2d');\r\n\r\n\t            var dpr = this.dpr;\r\n\t            if (dpr != 1) {\r\n\t                this.ctx.scale(dpr, dpr);\r\n\t            }\r\n\t        },\r\n\r\n\t        createBackBuffer: function () {\r\n\t            var dpr = this.dpr;\r\n\r\n\t            this.domBack = createDom('back-' + this.id, 'canvas', this.painter, dpr);\r\n\t            this.ctxBack = this.domBack.getContext('2d');\r\n\r\n\t            if (dpr != 1) {\r\n\t                this.ctxBack.scale(dpr, dpr);\r\n\t            }\r\n\t        },\r\n\r\n\t        /**\r\n\t         * @param  {number} width\r\n\t         * @param  {number} height\r\n\t         */\r\n\t        resize: function (width, height) {\r\n\t            var dpr = this.dpr;\r\n\r\n\t            var dom = this.dom;\r\n\t            var domStyle = dom.style;\r\n\t            var domBack = this.domBack;\r\n\r\n\t            domStyle.width = width + 'px';\r\n\t            domStyle.height = height + 'px';\r\n\r\n\t            dom.width = width * dpr;\r\n\t            dom.height = height * dpr;\r\n\r\n\t            if (dpr != 1) {\r\n\t                this.ctx.scale(dpr, dpr);\r\n\t            }\r\n\r\n\t            if (domBack) {\r\n\t                domBack.width = width * dpr;\r\n\t                domBack.height = height * dpr;\r\n\r\n\t                if (dpr != 1) {\r\n\t                    this.ctxBack.scale(dpr, dpr);\r\n\t                }\r\n\t            }\r\n\t        },\r\n\r\n\t        /**\r\n\t         * 清空该层画布\r\n\t         * @param {boolean} clearAll Clear all with out motion blur\r\n\t         */\r\n\t        clear: function (clearAll) {\r\n\t            var dom = this.dom;\r\n\t            var ctx = this.ctx;\r\n\t            var width = dom.width;\r\n\t            var height = dom.height;\r\n\r\n\t            var clearColor = this.clearColor;\r\n\t            var haveMotionBLur = this.motionBlur && !clearAll;\r\n\t            var lastFrameAlpha = this.lastFrameAlpha;\r\n\r\n\t            var dpr = this.dpr;\r\n\r\n\t            if (haveMotionBLur) {\r\n\t                if (!this.domBack) {\r\n\t                    this.createBackBuffer();\r\n\t                }\r\n\r\n\t                this.ctxBack.globalCompositeOperation = 'copy';\r\n\t                this.ctxBack.drawImage(\r\n\t                    dom, 0, 0,\r\n\t                    width / dpr,\r\n\t                    height / dpr\r\n\t                );\r\n\t            }\r\n\r\n\t            ctx.clearRect(0, 0, width / dpr, height / dpr);\r\n\t            if (clearColor) {\r\n\t                var clearColorGradientOrPattern;\r\n\t                // Gradient\r\n\t                if (clearColor.colorStops) {\r\n\t                    // Cache canvas gradient\r\n\t                    clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\r\n\t                        x: 0,\r\n\t                        y: 0,\r\n\t                        width: width / dpr,\r\n\t                        height: height / dpr\r\n\t                    });\r\n\r\n\t                    clearColor.__canvasGradient = clearColorGradientOrPattern;\r\n\t                }\r\n\t                // Pattern\r\n\t                else if (clearColor.image) {\r\n\t                    clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\r\n\t                }\r\n\t                ctx.save();\r\n\t                ctx.fillStyle = clearColorGradientOrPattern || clearColor;\r\n\t                ctx.fillRect(0, 0, width / dpr, height / dpr);\r\n\t                ctx.restore();\r\n\t            }\r\n\r\n\t            if (haveMotionBLur) {\r\n\t                var domBack = this.domBack;\r\n\t                ctx.save();\r\n\t                ctx.globalAlpha = lastFrameAlpha;\r\n\t                ctx.drawImage(domBack, 0, 0, width / dpr, height / dpr);\r\n\t                ctx.restore();\r\n\t            }\r\n\t        }\r\n\t    };\r\n\r\n\t    module.exports = Layer;\r\n\r\n\r\n/***/ },\r\n/* 93 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t\r\n\r\n\t    var graphic = __webpack_require__(43);\r\n\t    var zrUtil = __webpack_require__(4);\r\n\t    var PI = Math.PI;\r\n\t    /**\r\n\t     * @param {module:echarts/ExtensionAPI} api\r\n\t     * @param {Object} [opts]\r\n\t     * @param {string} [opts.text]\r\n\t     * @param {string} [opts.color]\r\n\t     * @param {string} [opts.textColor]\r\n\t     * @return {module:zrender/Element}\r\n\t     */\r\n\t    module.exports = function (api, opts) {\r\n\t        opts = opts || {};\r\n\t        zrUtil.defaults(opts, {\r\n\t            text: 'loading',\r\n\t            color: '#c23531',\r\n\t            textColor: '#000',\r\n\t            maskColor: 'rgba(255, 255, 255, 0.8)',\r\n\t            zlevel: 0\r\n\t        });\r\n\t        var mask = new graphic.Rect({\r\n\t            style: {\r\n\t                fill: opts.maskColor\r\n\t            },\r\n\t            zlevel: opts.zlevel,\r\n\t            z: 10000\r\n\t        });\r\n\t        var arc = new graphic.Arc({\r\n\t            shape: {\r\n\t                startAngle: -PI / 2,\r\n\t                endAngle: -PI / 2 + 0.1,\r\n\t                r: 10\r\n\t            },\r\n\t            style: {\r\n\t                stroke: opts.color,\r\n\t                lineCap: 'round',\r\n\t                lineWidth: 5\r\n\t            },\r\n\t            zlevel: opts.zlevel,\r\n\t            z: 10001\r\n\t        });\r\n\t        var labelRect = new graphic.Rect({\r\n\t            style: {\r\n\t                fill: 'none',\r\n\t                text: opts.text,\r\n\t                textPosition: 'right',\r\n\t                textDistance: 10,\r\n\t                textFill: opts.textColor\r\n\t            },\r\n\t            zlevel: opts.zlevel,\r\n\t            z: 10001\r\n\t        });\r\n\r\n\t        arc.animateShape(true)\r\n\t            .when(1000, {\r\n\t                endAngle: PI * 3 / 2\r\n\t            })\r\n\t            .start('circularInOut');\r\n\t        arc.animateShape(true)\r\n\t            .when(1000, {\r\n\t                startAngle: PI * 3 / 2\r\n\t            })\r\n\t            .delay(300)\r\n\t            .start('circularInOut');\r\n\r\n\t        var group = new graphic.Group();\r\n\t        group.add(arc);\r\n\t        group.add(labelRect);\r\n\t        group.add(mask);\r\n\t        // Inject resize\r\n\t        group.resize = function () {\r\n\t            var cx = api.getWidth() / 2;\r\n\t            var cy = api.getHeight() / 2;\r\n\t            arc.setShape({\r\n\t                cx: cx,\r\n\t                cy: cy\r\n\t            });\r\n\t            var r = arc.shape.r;\r\n\t            labelRect.setShape({\r\n\t                x: cx - r,\r\n\t                y: cy - r,\r\n\t                width: r * 2,\r\n\t                height: r * 2\r\n\t            });\r\n\r\n\t            mask.setShape({\r\n\t                x: 0,\r\n\t                y: 0,\r\n\t                width: api.getWidth(),\r\n\t                height: api.getHeight()\r\n\t            });\r\n\t        };\r\n\t        group.resize();\r\n\t        return group;\r\n\t    };\r\n\r\n\r\n/***/ },\r\n/* 94 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t\r\n\t    var Gradient = __webpack_require__(61);\r\n\t    module.exports = function (ecModel) {\r\n\t        function encodeColor(seriesModel) {\r\n\t            var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\r\n\t            var data = seriesModel.getData();\r\n\t            var color = seriesModel.get(colorAccessPath) // Set in itemStyle\r\n\t                || seriesModel.getColorFromPalette(seriesModel.get('name'));  // Default color\r\n\r\n\t            // FIXME Set color function or use the platte color\r\n\t            data.setVisual('color', color);\r\n\r\n\t            // Only visible series has each data be visual encoded\r\n\t            if (!ecModel.isSeriesFiltered(seriesModel)) {\r\n\t                if (typeof color === 'function' && !(color instanceof Gradient)) {\r\n\t                    data.each(function (idx) {\r\n\t                        data.setItemVisual(\r\n\t                            idx, 'color', color(seriesModel.getDataParams(idx))\r\n\t                        );\r\n\t                    });\r\n\t                }\r\n\r\n\t                // itemStyle in each data item\r\n\t                data.each(function (idx) {\r\n\t                    var itemModel = data.getItemModel(idx);\r\n\t                    var color = itemModel.get(colorAccessPath, true);\r\n\t                    if (color != null) {\r\n\t                        data.setItemVisual(idx, 'color', color);\r\n\t                    }\r\n\t                });\r\n\t            }\r\n\t        }\r\n\t        ecModel.eachRawSeries(encodeColor);\r\n\t    };\r\n\r\n\r\n/***/ },\r\n/* 95 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t// Compatitable with 2.0\r\n\r\n\r\n\t    var zrUtil = __webpack_require__(4);\r\n\t    var compatStyle = __webpack_require__(96);\r\n\r\n\t    function get(opt, path) {\r\n\t        path = path.split(',');\r\n\t        var obj = opt;\r\n\t        for (var i = 0; i < path.length; i++) {\r\n\t            obj = obj && obj[path[i]];\r\n\t            if (obj == null) {\r\n\t                break;\r\n\t            }\r\n\t        }\r\n\t        return obj;\r\n\t    }\r\n\r\n\t    function set(opt, path, val, overwrite) {\r\n\t        path = path.split(',');\r\n\t        var obj = opt;\r\n\t        var key;\r\n\t        for (var i = 0; i < path.length - 1; i++) {\r\n\t            key = path[i];\r\n\t            if (obj[key] == null) {\r\n\t                obj[key] = {};\r\n\t            }\r\n\t            obj = obj[key];\r\n\t        }\r\n\t        if (overwrite || obj[path[i]] == null) {\r\n\t            obj[path[i]] = val;\r\n\t        }\r\n\t    }\r\n\r\n\t    function compatLayoutProperties(option) {\r\n\t        each(LAYOUT_PROPERTIES, function (prop) {\r\n\t            if (prop[0] in option && !(prop[1] in option)) {\r\n\t                option[prop[1]] = option[prop[0]];\r\n\t            }\r\n\t        });\r\n\t    }\r\n\r\n\t    var LAYOUT_PROPERTIES = [\r\n\t        ['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']\r\n\t    ];\r\n\r\n\t    var COMPATITABLE_COMPONENTS = [\r\n\t        'grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'\r\n\t    ];\r\n\r\n\t    var COMPATITABLE_SERIES = [\r\n\t        'bar', 'boxplot', 'candlestick', 'chord', 'effectScatter',\r\n\t        'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel',\r\n\t        'pie', 'radar', 'sankey', 'scatter', 'treemap'\r\n\t    ];\r\n\r\n\t    var each = zrUtil.each;\r\n\r\n\t    module.exports = function (option) {\r\n\t        each(option.series, function (seriesOpt) {\r\n\t            if (!zrUtil.isObject(seriesOpt)) {\r\n\t                return;\r\n\t            }\r\n\r\n\t            var seriesType = seriesOpt.type;\r\n\r\n\t            compatStyle(seriesOpt);\r\n\r\n\t            if (seriesType === 'pie' || seriesType === 'gauge') {\r\n\t                if (seriesOpt.clockWise != null) {\r\n\t                    seriesOpt.clockwise = seriesOpt.clockWise;\r\n\t                }\r\n\t            }\r\n\t            if (seriesType === 'gauge') {\r\n\t                var pointerColor = get(seriesOpt, 'pointer.color');\r\n\t                pointerColor != null\r\n\t                    && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\r\n\t            }\r\n\r\n\t            for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\r\n\t                if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\r\n\t                    compatLayoutProperties(seriesOpt);\r\n\t                    break;\r\n\t                }\r\n\t            }\r\n\t        });\r\n\r\n\t        // dataRange has changed to visualMap\r\n\t        if (option.dataRange) {\r\n\t            option.visualMap = option.dataRange;\r\n\t        }\r\n\r\n\t        each(COMPATITABLE_COMPONENTS, function (componentName) {\r\n\t            var options = option[componentName];\r\n\t            if (options) {\r\n\t                if (!zrUtil.isArray(options)) {\r\n\t                    options = [options];\r\n\t                }\r\n\t                each(options, function (option) {\r\n\t                    compatLayoutProperties(option);\r\n\t                });\r\n\t            }\r\n\t        });\r\n\t    };\r\n\r\n\r\n/***/ },\r\n/* 96 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t\r\n\r\n\t    var zrUtil = __webpack_require__(4);\r\n\r\n\t    var POSSIBLE_STYLES = [\r\n\t        'areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle',\r\n\t        'chordStyle', 'label', 'labelLine'\r\n\t    ];\r\n\r\n\t    function compatItemStyle(opt) {\r\n\t        var itemStyleOpt = opt && opt.itemStyle;\r\n\t        if (itemStyleOpt) {\r\n\t            zrUtil.each(POSSIBLE_STYLES, function (styleName) {\r\n\t                var normalItemStyleOpt = itemStyleOpt.normal;\r\n\t                var emphasisItemStyleOpt = itemStyleOpt.emphasis;\r\n\t                if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\r\n\t                    opt[styleName] = opt[styleName] || {};\r\n\t                    if (!opt[styleName].normal) {\r\n\t                        opt[styleName].normal = normalItemStyleOpt[styleName];\r\n\t                    }\r\n\t                    else {\r\n\t                        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\r\n\t                    }\r\n\t                    normalItemStyleOpt[styleName] = null;\r\n\t                }\r\n\t                if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\r\n\t                    opt[styleName] = opt[styleName] || {};\r\n\t                    if (!opt[styleName].emphasis) {\r\n\t                        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\r\n\t                    }\r\n\t                    else {\r\n\t                        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\r\n\t                    }\r\n\t                    emphasisItemStyleOpt[styleName] = null;\r\n\t                }\r\n\t            });\r\n\t        }\r\n\t    }\r\n\r\n\t    module.exports = function (seriesOpt) {\r\n\t        if (!seriesOpt) {\r\n\t            return;\r\n\t        }\r\n\t        compatItemStyle(seriesOpt);\r\n\t        compatItemStyle(seriesOpt.markPoint);\r\n\t        compatItemStyle(seriesOpt.markLine);\r\n\t        var data = seriesOpt.data;\r\n\t        if (data) {\r\n\t            for (var i = 0; i < data.length; i++) {\r\n\t                compatItemStyle(data[i]);\r\n\t            }\r\n\t            // mark point data\r\n\t            var markPoint = seriesOpt.markPoint;\r\n\t            if (markPoint && markPoint.data) {\r\n\t                var mpData = markPoint.data;\r\n\t                for (var i = 0; i < mpData.length; i++) {\r\n\t                    compatItemStyle(mpData[i]);\r\n\t                }\r\n\t            }\r\n\t            // mark line data\r\n\t            var markLine = seriesOpt.markLine;\r\n\t            if (markLine && markLine.data) {\r\n\t                var mlData = markLine.data;\r\n\t                for (var i = 0; i < mlData.length; i++) {\r\n\t                    if (zrUtil.isArray(mlData[i])) {\r\n\t                        compatItemStyle(mlData[i][0]);\r\n\t                        compatItemStyle(mlData[i][1]);\r\n\t                    }\r\n\t                    else {\r\n\t                        compatItemStyle(mlData[i]);\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t    };\r\n\r\n\r\n/***/ },\r\n/* 97 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t/* WEBPACK VAR INJECTION */(function(global) {/**\r\n\t * List for data storage\r\n\t * @module echarts/data/List\r\n\t */\r\n\r\n\r\n\t    var UNDEFINED = 'undefined';\r\n\t    var globalObj = typeof window === 'undefined' ? global : window;\r\n\t    var Float64Array = typeof globalObj.Float64Array === UNDEFINED\r\n\t        ? Array : globalObj.Float64Array;\r\n\t    var Int32Array = typeof globalObj.Int32Array === UNDEFINED\r\n\t        ? Array : globalObj.Int32Array;\r\n\r\n\t    var dataCtors = {\r\n\t        'float': Float64Array,\r\n\t        'int': Int32Array,\r\n\t        // Ordinal data type can be string or int\r\n\t        'ordinal': Array,\r\n\t        'number': Array,\r\n\t        'time': Array\r\n\t    };\r\n\r\n\t    var Model = __webpack_require__(12);\r\n\t    var DataDiffer = __webpack_require__(98);\r\n\r\n\t    var zrUtil = __webpack_require__(4);\r\n\t    var modelUtil = __webpack_require__(5);\r\n\t    var isObject = zrUtil.isObject;\r\n\r\n\t    var TRANSFERABLE_PROPERTIES = [\r\n\t        'stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'\r\n\t    ];\r\n\r\n\t    var transferProperties = function (a, b) {\r\n\t        zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\r\n\t            if (b.hasOwnProperty(propName)) {\r\n\t                a[propName] = b[propName];\r\n\t            }\r\n\t        });\r\n\r\n\t        a.__wrappedMethods = b.__wrappedMethods;\r\n\t    };\r\n\r\n\t    /**\r\n\t     * @constructor\r\n\t     * @alias module:echarts/data/List\r\n\t     *\r\n\t     * @param {Array.<string>} dimensions\r\n\t     *        Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\r\n\t     * @param {module:echarts/model/Model} hostModel\r\n\t     */\r\n\t    var List = function (dimensions, hostModel) {\r\n\r\n\t        dimensions = dimensions || ['x', 'y'];\r\n\r\n\t        var dimensionInfos = {};\r\n\t        var dimensionNames = [];\r\n\t        for (var i = 0; i < dimensions.length; i++) {\r\n\t            var dimensionName;\r\n\t            var dimensionInfo = {};\r\n\t            if (typeof dimensions[i] === 'string') {\r\n\t                dimensionName = dimensions[i];\r\n\t                dimensionInfo = {\r\n\t                    name: dimensionName,\r\n\t                    stackable: false,\r\n\t                    // Type can be 'float', 'int', 'number'\r\n\t                    // Default is number, Precision of float may not enough\r\n\t                    type: 'number'\r\n\t                };\r\n\t            }\r\n\t            else {\r\n\t                dimensionInfo = dimensions[i];\r\n\t                dimensionName = dimensionInfo.name;\r\n\t                dimensionInfo.type = dimensionInfo.type || 'number';\r\n\t            }\r\n\t            dimensionNames.push(dimensionName);\r\n\t            dimensionInfos[dimensionName] = dimensionInfo;\r\n\t        }\r\n\t        /**\r\n\t         * @readOnly\r\n\t         * @type {Array.<string>}\r\n\t         */\r\n\t        this.dimensions = dimensionNames;\r\n\r\n\t        /**\r\n\t         * Infomation of each data dimension, like data type.\r\n\t         * @type {Object}\r\n\t         */\r\n\t        this._dimensionInfos = dimensionInfos;\r\n\r\n\t        /**\r\n\t         * @type {module:echarts/model/Model}\r\n\t         */\r\n\t        this.hostModel = hostModel;\r\n\r\n\t        /**\r\n\t         * @type {module:echarts/model/Model}\r\n\t         */\r\n\t        this.dataType;\r\n\r\n\t        /**\r\n\t         * Indices stores the indices of data subset after filtered.\r\n\t         * This data subset will be used in chart.\r\n\t         * @type {Array.<number>}\r\n\t         * @readOnly\r\n\t         */\r\n\t        this.indices = [];\r\n\r\n\t        /**\r\n\t         * Data storage\r\n\t         * @type {Object.<key, TypedArray|Array>}\r\n\t         * @private\r\n\t         */\r\n\t        this._storage = {};\r\n\r\n\t        /**\r\n\t         * @type {Array.<string>}\r\n\t         */\r\n\t        this._nameList = [];\r\n\t        /**\r\n\t         * @type {Array.<string>}\r\n\t         */\r\n\t        this._idList = [];\r\n\t        /**\r\n\t         * Models of data option is stored sparse for optimizing memory cost\r\n\t         * @type {Array.<module:echarts/model/Model>}\r\n\t         * @private\r\n\t         */\r\n\t        this._optionModels = [];\r\n\r\n\t        /**\r\n\t         * @param {module:echarts/data/List}\r\n\t         */\r\n\t        this.stackedOn = null;\r\n\r\n\t        /**\r\n\t         * Global visual properties after visual coding\r\n\t         * @type {Object}\r\n\t         * @private\r\n\t         */\r\n\t        this._visual = {};\r\n\r\n\t        /**\r\n\t         * Globel layout properties.\r\n\t         * @type {Object}\r\n\t         * @private\r\n\t         */\r\n\t        this._layout = {};\r\n\r\n\t        /**\r\n\t         * Item visual properties after visual coding\r\n\t         * @type {Array.<Object>}\r\n\t         * @private\r\n\t         */\r\n\t        this._itemVisuals = [];\r\n\r\n\t        /**\r\n\t         * Item layout properties after layout\r\n\t         * @type {Array.<Object>}\r\n\t         * @private\r\n\t         */\r\n\t        this._itemLayouts = [];\r\n\r\n\t        /**\r\n\t         * Graphic elemnents\r\n\t         * @type {Array.<module:zrender/Element>}\r\n\t         * @private\r\n\t         */\r\n\t        this._graphicEls = [];\r\n\r\n\t        /**\r\n\t         * @type {Array.<Array|Object>}\r\n\t         * @private\r\n\t         */\r\n\t        this._rawData;\r\n\r\n\t        /**\r\n\t         * @type {Object}\r\n\t         * @private\r\n\t         */\r\n\t        this._extent;\r\n\t    };\r\n\r\n\t    var listProto = List.prototype;\r\n\r\n\t    listProto.type = 'list';\r\n\t    /**\r\n\t     * If each data item has it's own option\r\n\t     * @type {boolean}\r\n\t     */\r\n\t    listProto.hasItemOption = true;\r\n\r\n\t    /**\r\n\t     * Get dimension name\r\n\t     * @param {string|number} dim\r\n\t     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\r\n\t     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\r\n\t     * @return {string} Concrete dim name.\r\n\t     */\r\n\t    listProto.getDimension = function (dim) {\r\n\t        if (!isNaN(dim)) {\r\n\t            dim = this.dimensions[dim] || dim;\r\n\t        }\r\n\t        return dim;\r\n\t    };\r\n\t    /**\r\n\t     * Get type and stackable info of particular dimension\r\n\t     * @param {string|number} dim\r\n\t     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\r\n\t     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\r\n\t     */\r\n\t    listProto.getDimensionInfo = function (dim) {\r\n\t        return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);\r\n\t    };\r\n\r\n\t    /**\r\n\t     * Initialize from data\r\n\t     * @param {Array.<Object|number|Array>} data\r\n\t     * @param {Array.<string>} [nameList]\r\n\t     * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\r\n\t     */\r\n\t    listProto.initData = function (data, nameList, dimValueGetter) {\r\n\t        data = data || [];\r\n\r\n\t        if (true) {\r\n\t            if (!zrUtil.isArray(data)) {\r\n\t                throw new Error('Invalid data.');\r\n\t            }\r\n\t        }\r\n\r\n\t        this._rawData = data;\r\n\r\n\t        // Clear\r\n\t        var storage = this._storage = {};\r\n\t        var indices = this.indices = [];\r\n\r\n\t        var dimensions = this.dimensions;\r\n\t        var size = data.length;\r\n\t        var dimensionInfoMap = this._dimensionInfos;\r\n\r\n\t        var idList = [];\r\n\t        var nameRepeatCount = {};\r\n\r\n\t        nameList = nameList || [];\r\n\r\n\t        // Init storage\r\n\t        for (var i = 0; i < dimensions.length; i++) {\r\n\t            var dimInfo = dimensionInfoMap[dimensions[i]];\r\n\t            var DataCtor = dataCtors[dimInfo.type];\r\n\t            storage[dimensions[i]] = new DataCtor(size);\r\n\t        }\r\n\r\n\t        var self = this;\r\n\t        if (!dimValueGetter) {\r\n\t            self.hasItemOption = false;\r\n\t        }\r\n\t        // Default dim value getter\r\n\t        dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {\r\n\t            var value = modelUtil.getDataItemValue(dataItem);\r\n\t            // If any dataItem is like { value: 10 }\r\n\t            if (modelUtil.isDataItemOption(dataItem)) {\r\n\t                self.hasItemOption = true;\r\n\t            }\r\n\t            return modelUtil.converDataValue(\r\n\t                (value instanceof Array)\r\n\t                    ? value[dimIndex]\r\n\t                    // If value is a single number or something else not array.\r\n\t                    : value,\r\n\t                dimensionInfoMap[dimName]\r\n\t            );\r\n\t        };\r\n\r\n\t        for (var idx = 0; idx < data.length; idx++) {\r\n\t            var dataItem = data[idx];\r\n\t            // Each data item is value\r\n\t            // [1, 2]\r\n\t            // 2\r\n\t            // Bar chart, line chart which uses category axis\r\n\t            // only gives the 'y' value. 'x' value is the indices of cateogry\r\n\t            // Use a tempValue to normalize the value to be a (x, y) value\r\n\r\n\t            // Store the data by dimensions\r\n\t            for (var k = 0; k < dimensions.length; k++) {\r\n\t                var dim = dimensions[k];\r\n\t                var dimStorage = storage[dim];\r\n\t                // PENDING NULL is empty or zero\r\n\t                dimStorage[idx] = dimValueGetter(dataItem, dim, idx, k);\r\n\t            }\r\n\r\n\t            indices.push(idx);\r\n\t        }\r\n\r\n\t        // Use the name in option and create id\r\n\t        for (var i = 0; i < data.length; i++) {\r\n\t            if (!nameList[i]) {\r\n\t                if (data[i] && data[i].name != null) {\r\n\t                    nameList[i] = data[i].name;\r\n\t                }\r\n\t            }\r\n\t            var name = nameList[i] || '';\r\n\t            // Try using the id in option\r\n\t            var id = data[i] && data[i].id;\r\n\r\n\t            if (!id && name) {\r\n\t                // Use name as id and add counter to avoid same name\r\n\t                nameRepeatCount[name] = nameRepeatCount[name] || 0;\r\n\t                id = name;\r\n\t                if (nameRepeatCount[name] > 0) {\r\n\t                    id += '__ec__' + nameRepeatCount[name];\r\n\t                }\r\n\t                nameRepeatCount[name]++;\r\n\t            }\r\n\t            id && (idList[i] = id);\r\n\t        }\r\n\r\n\t        this._nameList = nameList;\r\n\t        this._idList = idList;\r\n\t    };\r\n\r\n\t    /**\r\n\t     * @return {number}\r\n\t     */\r\n\t    listProto.count = function () {\r\n\t        return this.indices.length;\r\n\t    };\r\n\r\n\t    /**\r\n\t     * Get value. Return NaN if idx is out of range.\r\n\t     * @param {string} dim Dim must be concrete name.\r\n\t     * @param {number} idx\r\n\t     * @param {boolean} stack\r\n\t     * @return {number}\r\n\t     */\r\n\t    listProto.get = function (dim, idx, stack) {\r\n\t        var storage = this._storage;\r\n\t        var dataIndex = this.indices[idx];\r\n\r\n\t        // If value not exists\r\n\t        if (dataIndex == null) {\r\n\t            return NaN;\r\n\t        }\r\n\r\n\t        var value = storage[dim] && storage[dim][dataIndex];\r\n\t        // FIXME ordinal data type is not stackable\r\n\t        if (stack) {\r\n\t            var dimensionInfo = this._dimensionInfos[dim];\r\n\t            if (dimensionInfo && dimensionInfo.stackable) {\r\n\t                var stackedOn = this.stackedOn;\r\n\t                while (stackedOn) {\r\n\t                    // Get no stacked data of stacked on\r\n\t                    var stackedValue = stackedOn.get(dim, idx);\r\n\t                    // Considering positive stack, negative stack and empty data\r\n\t                    if ((value >= 0 && stackedValue > 0)  // Positive stack\r\n\t                        || (value <= 0 && stackedValue < 0) // Negative stack\r\n\t                    ) {\r\n\t                        value += stackedValue;\r\n\t                    }\r\n\t                    stackedOn = stackedOn.stackedOn;\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        return value;\r\n\t    };\r\n\r\n\t    /**\r\n\t     * Get value for multi dimensions.\r\n\t     * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\r\n\t     * @param {number} idx\r\n\t     * @param {boolean} stack\r\n\t     * @return {number}\r\n\t     */\r\n\t    listProto.getValues = function (dimensions, idx, stack) {\r\n\t        var values = [];\r\n\r\n\t        if (!zrUtil.isArray(dimensions)) {\r\n\t            stack = idx;\r\n\t            idx = dimensions;\r\n\t            dimensions = this.dimensions;\r\n\t        }\r\n\r\n\t        for (var i = 0, len = dimensions.length; i < len; i++) {\r\n\t            values.push(this.get(dimensions[i], idx, stack));\r\n\t        }\r\n\r\n\t        return values;\r\n\t    };\r\n\r\n\t    /**\r\n\t     * If value is NaN. Inlcuding '-'\r\n\t     * @param {string} dim\r\n\t     * @param {number} idx\r\n\t     * @return {number}\r\n\t     */\r\n\t    listProto.hasValue = function (idx) {\r\n\t        var dimensions = this.dimensions;\r\n\t        var dimensionInfos = this._dimensionInfos;\r\n\t        for (var i = 0, len = dimensions.length; i < len; i++) {\r\n\t            if (\r\n\t                // Ordinal type can be string or number\r\n\t                dimensionInfos[dimensions[i]].type !== 'ordinal'\r\n\t                && isNaN(this.get(dimensions[i], idx))\r\n\t            ) {\r\n\t                return false;\r\n\t            }\r\n\t        }\r\n\t        return true;\r\n\t    };\r\n\r\n\t    /**\r\n\t     * Get extent of data in one dimension\r\n\t     * @param {string} dim\r\n\t     * @param {boolean} stack\r\n\t     */\r\n\t    listProto.getDataExtent = function (dim, stack) {\r\n\t        dim = this.getDimension(dim);\r\n\t        var dimData = this._storage[dim];\r\n\t        var dimInfo = this.getDimensionInfo(dim);\r\n\t        stack = (dimInfo && dimInfo.stackable) && stack;\r\n\t        var dimExtent = (this._extent || (this._extent = {}))[dim + (!!stack)];\r\n\t        var value;\r\n\t        if (dimExtent) {\r\n\t            return dimExtent;\r\n\t        }\r\n\t        // var dimInfo = this._dimensionInfos[dim];\r\n\t        if (dimData) {\r\n\t            var min = Infinity;\r\n\t            var max = -Infinity;\r\n\t            // var isOrdinal = dimInfo.type === 'ordinal';\r\n\t            for (var i = 0, len = this.count(); i < len; i++) {\r\n\t                value = this.get(dim, i, stack);\r\n\t                // FIXME\r\n\t                // if (isOrdinal && typeof value === 'string') {\r\n\t                //     value = zrUtil.indexOf(dimData, value);\r\n\t                // }\r\n\t                value < min && (min = value);\r\n\t                value > max && (max = value);\r\n\t            }\r\n\t            return (this._extent[dim + !!stack] = [min, max]);\r\n\t        }\r\n\t        else {\r\n\t            return [Infinity, -Infinity];\r\n\t        }\r\n\t    };\r\n\r\n\t    /**\r\n\t     * Get sum of data in one dimension\r\n\t     * @param {string} dim\r\n\t     * @param {boolean} stack\r\n\t     */\r\n\t    listProto.getSum = function (dim, stack) {\r\n\t        var dimData = this._storage[dim];\r\n\t        var sum = 0;\r\n\t        if (dimData) {\r\n\t            for (var i = 0, len = this.count(); i < len; i++) {\r\n\t                var value = this.get(dim, i, stack);\r\n\t                if (!isNaN(value)) {\r\n\t                    sum += value;\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        return sum;\r\n\t    };\r\n\r\n\t    /**\r\n\t     * Retreive the index with given value\r\n\t     * @param {number} idx\r\n\t     * @param {number} value\r\n\t     * @return {number}\r\n\t     */\r\n\t    // FIXME Precision of float value\r\n\t    listProto.indexOf = function (dim, value) {\r\n\t        var storage = this._storage;\r\n\t        var dimData = storage[dim];\r\n\t        var indices = this.indices;\r\n\r\n\t        if (dimData) {\r\n\t            for (var i = 0, len = indices.length; i < len; i++) {\r\n\t                var rawIndex = indices[i];\r\n\t                if (dimData[rawIndex] === value) {\r\n\t                    return i;\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        return -1;\r\n\t    };\r\n\r\n\t    /**\r\n\t     * Retreive the index with given name\r\n\t     * @param {number} idx\r\n\t     * @param {number} name\r\n\t     * @return {number}\r\n\t     */\r\n\t    listProto.indexOfName = function (name) {\r\n\t        var indices = this.indices;\r\n\t        var nameList = this._nameList;\r\n\r\n\t        for (var i = 0, len = indices.length; i < len; i++) {\r\n\t            var rawIndex = indices[i];\r\n\t            if (nameList[rawIndex] === name) {\r\n\t                return i;\r\n\t            }\r\n\t        }\r\n\r\n\t        return -1;\r\n\t    };\r\n\r\n\t    /**\r\n\t     * Retreive the index with given raw data index\r\n\t     * @param {number} idx\r\n\t     * @param {number} name\r\n\t     * @return {number}\r\n\t     */\r\n\t    listProto.indexOfRawIndex = function (rawIndex) {\r\n\t        // Indices are ascending\r\n\t        var indices = this.indices;\r\n\t        var left = 0;\r\n\t        var right = indices.length - 1;\r\n\t        while (left <= right) {\r\n\t            var mid = (left + right) / 2 | 0;\r\n\t            if (indices[mid] < rawIndex) {\r\n\t                left = mid + 1;\r\n\t            }\r\n\t            else if (indices[mid] > rawIndex) {\r\n\t                right = mid - 1;\r\n\t            }\r\n\t            else {\r\n\t                return mid;\r\n\t            }\r\n\t        }\r\n\t        return -1;\r\n\t    };\r\n\r\n\t    /**\r\n\t     * Retreive the index of nearest value\r\n\t     * @param {string} dim\r\n\t     * @param {number} value\r\n\t     * @param {boolean} stack If given value is after stacked\r\n\t     * @param {number} [maxDistance=Infinity]\r\n\t     * @return {number}\r\n\t     */\r\n\t    listProto.indexOfNearest = function (dim, value, stack, maxDistance) {\r\n\t        var storage = this._storage;\r\n\t        var dimData = storage[dim];\r\n\r\n\t        if (maxDistance == null) {\r\n\t            maxDistance = Infinity;\r\n\t        }\r\n\r\n\t        var nearestIdx = -1;\r\n\t        if (dimData) {\r\n\t            var minDist = Number.MAX_VALUE;\r\n\t            for (var i = 0, len = this.count(); i < len; i++) {\r\n\t                var diff = value - this.get(dim, i, stack);\r\n\t                var dist = Math.abs(diff);\r\n\t                if (\r\n\t                    diff <= maxDistance\r\n\t                    && (dist < minDist\r\n\t                        // For the case of two data are same on xAxis, which has sequence data.\r\n\t                        // Show the nearest index\r\n\t                        // https://github.com/ecomfe/echarts/issues/2869\r\n\t                        || (dist === minDist && diff > 0)\r\n\t                    )\r\n\t                ) {\r\n\t                    minDist = dist;\r\n\t                    nearestIdx = i;\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        return nearestIdx;\r\n\t    };\r\n\r\n\t    /**\r\n\t     * Get raw data index\r\n\t     * @param {number} idx\r\n\t     * @return {number}\r\n\t     */\r\n\t    listProto.getRawIndex = function (idx) {\r\n\t        var rawIdx = this.indices[idx];\r\n\t        return rawIdx == null ? -1 : rawIdx;\r\n\t    };\r\n\r\n\t    /**\r\n\t     * Get raw data item\r\n\t     * @param {number} idx\r\n\t     * @return {number}\r\n\t     */\r\n\t    listProto.getRawDataItem = function (idx) {\r\n\t        return this._rawData[this.getRawIndex(idx)];\r\n\t    };\r\n\r\n\t    /**\r\n\t     * @param {number} idx\r\n\t     * @param {boolean} [notDefaultIdx=false]\r\n\t     * @return {string}\r\n\t     */\r\n\t    listProto.getName = function (idx) {\r\n\t        return this._nameList[this.indices[idx]] || '';\r\n\t    };\r\n\r\n\t    /**\r\n\t     * @param {number} idx\r\n\t     * @param {boolean} [notDefaultIdx=false]\r\n\t     * @return {string}\r\n\t     */\r\n\t    listProto.getId = function (idx) {\r\n\t        return this._idList[this.indices[idx]] || (this.getRawIndex(idx) + '');\r\n\t    };\r\n\r\n\r\n\t    function normalizeDimensions(dimensions) {\r\n\t        if (!zrUtil.isArray(dimensions)) {\r\n\t            dimensions = [dimensions];\r\n\t        }\r\n\t        return dimensions;\r\n\t    }\r\n\r\n\t    /**\r\n\t     * Data iteration\r\n\t     * @param {string|Array.<string>}\r\n\t     * @param {Function} cb\r\n\t     * @param {boolean} [stack=false]\r\n\t     * @param {*} [context=this]\r\n\t     *\r\n\t     * @example\r\n\t     *  list.each('x', function (x, idx) {});\r\n\t     *  list.each(['x', 'y'], function (x, y, idx) {});\r\n\t     *  list.each(function (idx) {})\r\n\t     */\r\n\t    listProto.each = function (dims, cb, stack, context) {\r\n\t        if (typeof dims === 'function') {\r\n\t            context = stack;\r\n\t            stack = cb;\r\n\t            cb = dims;\r\n\t            dims = [];\r\n\t        }\r\n\r\n\t        dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\r\n\r\n\t        var value = [];\r\n\t        var dimSize = dims.length;\r\n\t        var indices = this.indices;\r\n\r\n\t        context = context || this;\r\n\r\n\t        for (var i = 0; i < indices.length; i++) {\r\n\t            // Simple optimization\r\n\t            switch (dimSize) {\r\n\t                case 0:\r\n\t                    cb.call(context, i);\r\n\t                    break;\r\n\t                case 1:\r\n\t                    cb.call(context, this.get(dims[0], i, stack), i);\r\n\t                    break;\r\n\t                case 2:\r\n\t                    cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\r\n\t                    break;\r\n\t                default:\r\n\t                    for (var k = 0; k < dimSize; k++) {\r\n\t                        value[k] = this.get(dims[k], i, stack);\r\n\t                    }\r\n\t                    // Index\r\n\t                    value[k] = i;\r\n\t                    cb.apply(context, value);\r\n\t            }\r\n\t        }\r\n\t    };\r\n\r\n\t    /**\r\n\t     * Data filter\r\n\t     * @param {string|Array.<string>}\r\n\t     * @param {Function} cb\r\n\t     * @param {boolean} [stack=false]\r\n\t     * @param {*} [context=this]\r\n\t     */\r\n\t    listProto.filterSelf = function (dimensions, cb, stack, context) {\r\n\t        if (typeof dimensions === 'function') {\r\n\t            context = stack;\r\n\t            stack = cb;\r\n\t            cb = dimensions;\r\n\t            dimensions = [];\r\n\t        }\r\n\r\n\t        dimensions = zrUtil.map(\r\n\t            normalizeDimensions(dimensions), this.getDimension, this\r\n\t        );\r\n\r\n\t        var newIndices = [];\r\n\t        var value = [];\r\n\t        var dimSize = dimensions.length;\r\n\t        var indices = this.indices;\r\n\r\n\t        context = context || this;\r\n\r\n\t        for (var i = 0; i < indices.length; i++) {\r\n\t            var keep;\r\n\t            // Simple optimization\r\n\t            if (dimSize === 1) {\r\n\t                keep = cb.call(\r\n\t                    context, this.get(dimensions[0], i, stack), i\r\n\t                );\r\n\t            }\r\n\t            else {\r\n\t                for (var k = 0; k < dimSize; k++) {\r\n\t                    value[k] = this.get(dimensions[k], i, stack);\r\n\t                }\r\n\t                value[k] = i;\r\n\t                keep = cb.apply(context, value);\r\n\t            }\r\n\t            if (keep) {\r\n\t                newIndices.push(indices[i]);\r\n\t            }\r\n\t        }\r\n\r\n\t        this.indices = newIndices;\r\n\r\n\t        // Reset data extent\r\n\t        this._extent = {};\r\n\r\n\t        return this;\r\n\t    };\r\n\r\n\t    /**\r\n\t     * Data mapping to a plain array\r\n\t     * @param {string|Array.<string>} [dimensions]\r\n\t     * @param {Function} cb\r\n\t     * @param {boolean} [stack=false]\r\n\t     * @param {*} [context=this]\r\n\t     * @return {Array}\r\n\t     */\r\n\t    listProto.mapArray = function (dimensions, cb, stack, context) {\r\n\t        if (typeof dimensions === 'function') {\r\n\t            context = stack;\r\n\t            stack = cb;\r\n\t            cb = dimensions;\r\n\t            dimensions = [];\r\n\t        }\r\n\r\n\t        var result = [];\r\n\t        this.each(dimensions, function () {\r\n\t            result.push(cb && cb.apply(this, arguments));\r\n\t        }, stack, context);\r\n\t        return result;\r\n\t    };\r\n\r\n\t    function cloneListForMapAndSample(original, excludeDimensions) {\r\n\t        var allDimensions = original.dimensions;\r\n\t        var list = new List(\r\n\t            zrUtil.map(allDimensions, original.getDimensionInfo, original),\r\n\t            original.hostModel\r\n\t        );\r\n\t        // FIXME If needs stackedOn, value may already been stacked\r\n\t        transferProperties(list, original);\r\n\r\n\t        var storage = list._storage = {};\r\n\t        var originalStorage = original._storage;\r\n\t        // Init storage\r\n\t        for (var i = 0; i < allDimensions.length; i++) {\r\n\t            var dim = allDimensions[i];\r\n\t            var dimStore = originalStorage[dim];\r\n\t            if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\r\n\t                storage[dim] = new dimStore.constructor(\r\n\t                    originalStorage[dim].length\r\n\t                );\r\n\t            }\r\n\t            else {\r\n\t                // Direct reference for other dimensions\r\n\t                storage[dim] = originalStorage[dim];\r\n\t            }\r\n\t        }\r\n\t        return list;\r\n\t    }\r\n\r\n\t    /**\r\n\t     * Data mapping to a new List with given dimensions\r\n\t     * @param {string|Array.<string>} dimensions\r\n\t     * @param {Function} cb\r\n\t     * @param {boolean} [stack=false]\r\n\t     * @param {*} [context=this]\r\n\t     * @return {Array}\r\n\t     */\r\n\t    listProto.map = function (dimensions, cb, stack, context) {\r\n\t        dimensions = zrUtil.map(\r\n\t            normalizeDimensions(dimensions), this.getDimension, this\r\n\t        );\r\n\r\n\t        var list = cloneListForMapAndSample(this, dimensions);\r\n\t        // Following properties are all immutable.\r\n\t        // So we can reference to the same value\r\n\t        var indices = list.indices = this.indices;\r\n\r\n\t        var storage = list._storage;\r\n\r\n\t        var tmpRetValue = [];\r\n\t        this.each(dimensions, function () {\r\n\t            var idx = arguments[arguments.length - 1];\r\n\t            var retValue = cb && cb.apply(this, arguments);\r\n\t            if (retValue != null) {\r\n\t                // a number\r\n\t                if (typeof retValue === 'number') {\r\n\t                    tmpRetValue[0] = retValue;\r\n\t                    retValue = tmpRetValue;\r\n\t                }\r\n\t                for (var i = 0; i < retValue.length; i++) {\r\n\t                    var dim = dimensions[i];\r\n\t                    var dimStore = storage[dim];\r\n\t                    var rawIdx = indices[idx];\r\n\t                    if (dimStore) {\r\n\t                        dimStore[rawIdx] = retValue[i];\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t        }, stack, context);\r\n\r\n\t        return list;\r\n\t    };\r\n\r\n\t    /**\r\n\t     * Large data down sampling on given dimension\r\n\t     * @param {string} dimension\r\n\t     * @param {number} rate\r\n\t     * @param {Function} sampleValue\r\n\t     * @param {Function} sampleIndex Sample index for name and id\r\n\t     */\r\n\t    listProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\r\n\t        var list = cloneListForMapAndSample(this, [dimension]);\r\n\t        var storage = this._storage;\r\n\t        var targetStorage = list._storage;\r\n\r\n\t        var originalIndices = this.indices;\r\n\t        var indices = list.indices = [];\r\n\r\n\t        var frameValues = [];\r\n\t        var frameIndices = [];\r\n\t        var frameSize = Math.floor(1 / rate);\r\n\r\n\t        var dimStore = targetStorage[dimension];\r\n\t        var len = this.count();\r\n\t        // Copy data from original data\r\n\t        for (var i = 0; i < storage[dimension].length; i++) {\r\n\t            targetStorage[dimension][i] = storage[dimension][i];\r\n\t        }\r\n\t        for (var i = 0; i < len; i += frameSize) {\r\n\t            // Last frame\r\n\t            if (frameSize > len - i) {\r\n\t                frameSize = len - i;\r\n\t                frameValues.length = frameSize;\r\n\t            }\r\n\t            for (var k = 0; k < frameSize; k++) {\r\n\t                var idx = originalIndices[i + k];\r\n\t                frameValues[k] = dimStore[idx];\r\n\t                frameIndices[k] = idx;\r\n\t            }\r\n\t            var value = sampleValue(frameValues);\r\n\t            var idx = frameIndices[sampleIndex(frameValues, value) || 0];\r\n\t            // Only write value on the filtered data\r\n\t            dimStore[idx] = value;\r\n\t            indices.push(idx);\r\n\t        }\r\n\r\n\t        return list;\r\n\t    };\r\n\r\n\t    /**\r\n\t     * Get model of one data item.\r\n\t     *\r\n\t     * @param {number} idx\r\n\t     */\r\n\t    // FIXME Model proxy ?\r\n\t    listProto.getItemModel = function (idx) {\r\n\t        var hostModel = this.hostModel;\r\n\t        idx = this.indices[idx];\r\n\t        return new Model(this._rawData[idx], hostModel, hostModel && hostModel.ecModel);\r\n\t    };\r\n\r\n\t    /**\r\n\t     * Create a data differ\r\n\t     * @param {module:echarts/data/List} otherList\r\n\t     * @return {module:echarts/data/DataDiffer}\r\n\t     */\r\n\t    listProto.diff = function (otherList) {\r\n\t        var idList = this._idList;\r\n\t        var otherIdList = otherList && otherList._idList;\r\n\t        return new DataDiffer(\r\n\t            otherList ? otherList.indices : [], this.indices, function (idx) {\r\n\t                return otherIdList[idx] || (idx + '');\r\n\t            }, function (idx) {\r\n\t                return idList[idx] || (idx + '');\r\n\t            }\r\n\t        );\r\n\t    };\r\n\t    /**\r\n\t     * Get visual property.\r\n\t     * @param {string} key\r\n\t     */\r\n\t    listProto.getVisual = function (key) {\r\n\t        var visual = this._visual;\r\n\t        return visual && visual[key];\r\n\t    };\r\n\r\n\t    /**\r\n\t     * Set visual property\r\n\t     * @param {string|Object} key\r\n\t     * @param {*} [value]\r\n\t     *\r\n\t     * @example\r\n\t     *  setVisual('color', color);\r\n\t     *  setVisual({\r\n\t     *      'color': color\r\n\t     *  });\r\n\t     */\r\n\t    listProto.setVisual = function (key, val) {\r\n\t        if (isObject(key)) {\r\n\t            for (var name in key) {\r\n\t                if (key.hasOwnProperty(name)) {\r\n\t                    this.setVisual(name, key[name]);\r\n\t                }\r\n\t            }\r\n\t            return;\r\n\t        }\r\n\t        this._visual = this._visual || {};\r\n\t        this._visual[key] = val;\r\n\t    };\r\n\r\n\t    /**\r\n\t     * Set layout property.\r\n\t     * @param {string} key\r\n\t     * @param {*} [val]\r\n\t     */\r\n\t    listProto.setLayout = function (key, val) {\r\n\t        if (isObject(key)) {\r\n\t            for (var name in key) {\r\n\t                if (key.hasOwnProperty(name)) {\r\n\t                    this.setLayout(name, key[name]);\r\n\t                }\r\n\t            }\r\n\t            return;\r\n\t        }\r\n\t        this._layout[key] = val;\r\n\t    };\r\n\r\n\t    /**\r\n\t     * Get layout property.\r\n\t     * @param  {string} key.\r\n\t     * @return {*}\r\n\t     */\r\n\t    listProto.getLayout = function (key) {\r\n\t        return this._layout[key];\r\n\t    };\r\n\r\n\t    /**\r\n\t     * Get layout of single data item\r\n\t     * @param {number} idx\r\n\t     */\r\n\t    listProto.getItemLayout = function (idx) {\r\n\t        return this._itemLayouts[idx];\r\n\t    };\r\n\r\n\t    /**\r\n\t     * Set layout of single data item\r\n\t     * @param {number} idx\r\n\t     * @param {Object} layout\r\n\t     * @param {boolean=} [merge=false]\r\n\t     */\r\n\t    listProto.setItemLayout = function (idx, layout, merge) {\r\n\t        this._itemLayouts[idx] = merge\r\n\t            ? zrUtil.extend(this._itemLayouts[idx] || {}, layout)\r\n\t            : layout;\r\n\t    };\r\n\r\n\t    /**\r\n\t     * Clear all layout of single data item\r\n\t     */\r\n\t    listProto.clearItemLayouts = function () {\r\n\t        this._itemLayouts.length = 0;\r\n\t    };\r\n\r\n\t    /**\r\n\t     * Get visual property of single data item\r\n\t     * @param {number} idx\r\n\t     * @param {string} key\r\n\t     * @param {boolean} ignoreParent\r\n\t     */\r\n\t    listProto.getItemVisual = function (idx, key, ignoreParent) {\r\n\t        var itemVisual = this._itemVisuals[idx];\r\n\t        var val = itemVisual && itemVisual[key];\r\n\t        if (val == null && !ignoreParent) {\r\n\t            // Use global visual property\r\n\t            return this.getVisual(key);\r\n\t        }\r\n\t        return val;\r\n\t    };\r\n\r\n\t    /**\r\n\t     * Set visual property of single data item\r\n\t     *\r\n\t     * @param {number} idx\r\n\t     * @param {string|Object} key\r\n\t     * @param {*} [value]\r\n\t     *\r\n\t     * @example\r\n\t     *  setItemVisual(0, 'color', color);\r\n\t     *  setItemVisual(0, {\r\n\t     *      'color': color\r\n\t     *  });\r\n\t     */\r\n\t    listProto.setItemVisual = function (idx, key, value) {\r\n\t        var itemVisual = this._itemVisuals[idx] || {};\r\n\t        this._itemVisuals[idx] = itemVisual;\r\n\r\n\t        if (isObject(key)) {\r\n\t            for (var name in key) {\r\n\t                if (key.hasOwnProperty(name)) {\r\n\t                    itemVisual[name] = key[name];\r\n\t                }\r\n\t            }\r\n\t            return;\r\n\t        }\r\n\t        itemVisual[key] = value;\r\n\t    };\r\n\r\n\t    /**\r\n\t     * Clear itemVisuals and list visual.\r\n\t     */\r\n\t    listProto.clearAllVisual = function () {\r\n\t        this._visual = {};\r\n\t        this._itemVisuals = [];\r\n\t    };\r\n\r\n\t    var setItemDataAndSeriesIndex = function (child) {\r\n\t        child.seriesIndex = this.seriesIndex;\r\n\t        child.dataIndex = this.dataIndex;\r\n\t        child.dataType = this.dataType;\r\n\t    };\r\n\t    /**\r\n\t     * Set graphic element relative to data. It can be set as null\r\n\t     * @param {number} idx\r\n\t     * @param {module:zrender/Element} [el]\r\n\t     */\r\n\t    listProto.setItemGraphicEl = function (idx, el) {\r\n\t        var hostModel = this.hostModel;\r\n\r\n\t        if (el) {\r\n\t            // Add data index and series index for indexing the data by element\r\n\t            // Useful in tooltip\r\n\t            el.dataIndex = idx;\r\n\t            el.dataType = this.dataType;\r\n\t            el.seriesIndex = hostModel && hostModel.seriesIndex;\r\n\t            if (el.type === 'group') {\r\n\t                el.traverse(setItemDataAndSeriesIndex, el);\r\n\t            }\r\n\t        }\r\n\r\n\t        this._graphicEls[idx] = el;\r\n\t    };\r\n\r\n\t    /**\r\n\t     * @param {number} idx\r\n\t     * @return {module:zrender/Element}\r\n\t     */\r\n\t    listProto.getItemGraphicEl = function (idx) {\r\n\t        return this._graphicEls[idx];\r\n\t    };\r\n\r\n\t    /**\r\n\t     * @param {Function} cb\r\n\t     * @param {*} context\r\n\t     */\r\n\t    listProto.eachItemGraphicEl = function (cb, context) {\r\n\t        zrUtil.each(this._graphicEls, function (el, idx) {\r\n\t            if (el) {\r\n\t                cb && cb.call(context, el, idx);\r\n\t            }\r\n\t        });\r\n\t    };\r\n\r\n\t    /**\r\n\t     * Shallow clone a new list except visual and layout properties, and graph elements.\r\n\t     * New list only change the indices.\r\n\t     */\r\n\t    listProto.cloneShallow = function () {\r\n\t        var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\r\n\t        var list = new List(dimensionInfoList, this.hostModel);\r\n\r\n\t        // FIXME\r\n\t        list._storage = this._storage;\r\n\r\n\t        transferProperties(list, this);\r\n\r\n\r\n\t        // Clone will not change the data extent and indices\r\n\t        list.indices = this.indices.slice();\r\n\r\n\t        if (this._extent) {\r\n\t            list._extent = zrUtil.extend({}, this._extent);\r\n\t        }\r\n\r\n\t        return list;\r\n\t    };\r\n\r\n\t    /**\r\n\t     * Wrap some method to add more feature\r\n\t     * @param {string} methodName\r\n\t     * @param {Function} injectFunction\r\n\t     */\r\n\t    listProto.wrapMethod = function (methodName, injectFunction) {\r\n\t        var originalMethod = this[methodName];\r\n\t        if (typeof originalMethod !== 'function') {\r\n\t            return;\r\n\t        }\r\n\t        this.__wrappedMethods = this.__wrappedMethods || [];\r\n\t        this.__wrappedMethods.push(methodName);\r\n\t        this[methodName] = function () {\r\n\t            var res = originalMethod.apply(this, arguments);\r\n\t            return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\r\n\t        };\r\n\t    };\r\n\r\n\t    // Methods that create a new list based on this list should be listed here.\r\n\t    // Notice that those method should `RETURN` the new list.\r\n\t    listProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map'];\r\n\t    // Methods that change indices of this list should be listed here.\r\n\t    listProto.CHANGABLE_METHODS = ['filterSelf'];\r\n\r\n\t    module.exports = List;\r\n\r\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\r\n\r\n/***/ },\r\n/* 98 */\r\n/***/ function(module, exports) {\r\n\r\n\t'use strict';\r\n\r\n\r\n\t    function defaultKeyGetter(item) {\r\n\t        return item;\r\n\t    }\r\n\r\n\t    function DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter) {\r\n\t        this._old = oldArr;\r\n\t        this._new = newArr;\r\n\r\n\t        this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\r\n\t        this._newKeyGetter = newKeyGetter || defaultKeyGetter;\r\n\t    }\r\n\r\n\t    DataDiffer.prototype = {\r\n\r\n\t        constructor: DataDiffer,\r\n\r\n\t        /**\r\n\t         * Callback function when add a data\r\n\t         */\r\n\t        add: function (func) {\r\n\t            this._add = func;\r\n\t            return this;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Callback function when update a data\r\n\t         */\r\n\t        update: function (func) {\r\n\t            this._update = func;\r\n\t            return this;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Callback function when remove a data\r\n\t         */\r\n\t        remove: function (func) {\r\n\t            this._remove = func;\r\n\t            return this;\r\n\t        },\r\n\r\n\t        execute: function () {\r\n\t            var oldArr = this._old;\r\n\t            var newArr = this._new;\r\n\t            var oldKeyGetter = this._oldKeyGetter;\r\n\t            var newKeyGetter = this._newKeyGetter;\r\n\r\n\t            var oldDataIndexMap = {};\r\n\t            var newDataIndexMap = {};\r\n\t            var oldDataKeyArr = [];\r\n\t            var newDataKeyArr = [];\r\n\t            var i;\r\n\r\n\t            initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, oldKeyGetter);\r\n\t            initIndexMap(newArr, newDataIndexMap, newDataKeyArr, newKeyGetter);\r\n\r\n\t            // Travel by inverted order to make sure order consistency\r\n\t            // when duplicate keys exists (consider newDataIndex.pop() below).\r\n\t            // For performance consideration, these code below do not look neat.\r\n\t            for (i = 0; i < oldArr.length; i++) {\r\n\t                var key = oldDataKeyArr[i];\r\n\t                var idx = newDataIndexMap[key];\r\n\r\n\t                // idx can never be empty array here. see 'set null' logic below.\r\n\t                if (idx != null) {\r\n\t                    // Consider there is duplicate key (for example, use dataItem.name as key).\r\n\t                    // We should make sure every item in newArr and oldArr can be visited.\r\n\t                    var len = idx.length;\r\n\t                    if (len) {\r\n\t                        len === 1 && (newDataIndexMap[key] = null);\r\n\t                        idx = idx.unshift();\r\n\t                    }\r\n\t                    else {\r\n\t                        newDataIndexMap[key] = null;\r\n\t                    }\r\n\t                    this._update && this._update(idx, i);\r\n\t                }\r\n\t                else {\r\n\t                    this._remove && this._remove(i);\r\n\t                }\r\n\t            }\r\n\r\n\t            for (var i = 0; i < newDataKeyArr.length; i++) {\r\n\t                var key = newDataKeyArr[i];\r\n\t                if (newDataIndexMap.hasOwnProperty(key)) {\r\n\t                    var idx = newDataIndexMap[key];\r\n\t                    if (idx == null) {\r\n\t                        continue;\r\n\t                    }\r\n\t                    // idx can never be empty array here. see 'set null' logic above.\r\n\t                    if (!idx.length) {\r\n\t                        this._add && this._add(idx);\r\n\t                    }\r\n\t                    else {\r\n\t                        for (var j = 0, len = idx.length; j < len; j++) {\r\n\t                            this._add && this._add(idx[j]);\r\n\t                        }\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t    };\r\n\r\n\t    function initIndexMap(arr, map, keyArr, keyGetter) {\r\n\t        for (var i = 0; i < arr.length; i++) {\r\n\t            var key = keyGetter(arr[i], i);\r\n\t            var existence = map[key];\r\n\t            if (existence == null) {\r\n\t                keyArr.push(key);\r\n\t                map[key] = i;\r\n\t            }\r\n\t            else {\r\n\t                if (!existence.length) {\r\n\t                    map[key] = existence = [existence];\r\n\t                }\r\n\t                existence.push(i);\r\n\t            }\r\n\t        }\r\n\t    }\r\n\r\n\t    module.exports = DataDiffer;\r\n\r\n\r\n/***/ },\r\n/* 99 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t\r\n\r\n\t    var zrUtil = __webpack_require__(4);\r\n\t    var echarts = __webpack_require__(1);\r\n\t    var PRIORITY = echarts.PRIORITY;\r\n\r\n\t    __webpack_require__(100);\r\n\t    __webpack_require__(103);\r\n\r\n\t    echarts.registerVisual(zrUtil.curry(\r\n\t        __webpack_require__(109), 'line', 'circle', 'line'\r\n\t    ));\r\n\t    echarts.registerLayout(zrUtil.curry(\r\n\t        __webpack_require__(110), 'line'\r\n\t    ));\r\n\r\n\t    // Down sample after filter\r\n\t    echarts.registerProcessor(PRIORITY.PROCESSOR.STATISTIC, zrUtil.curry(\r\n\t        __webpack_require__(111), 'line'\r\n\t    ));\r\n\r\n\t    // In case developer forget to include grid component\r\n\t    __webpack_require__(112);\r\n\r\n\r\n/***/ },\r\n/* 100 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t'use strict';\r\n\r\n\r\n\t    var createListFromArray = __webpack_require__(101);\r\n\t    var SeriesModel = __webpack_require__(28);\r\n\r\n\t    module.exports = SeriesModel.extend({\r\n\r\n\t        type: 'series.line',\r\n\r\n\t        dependencies: ['grid', 'polar'],\r\n\r\n\t        getInitialData: function (option, ecModel) {\r\n\t            if (true) {\r\n\t                var coordSys = option.coordinateSystem;\r\n\t                if (coordSys !== 'polar' && coordSys !== 'cartesian2d') {\r\n\t                    throw new Error('Line not support coordinateSystem besides cartesian and polar');\r\n\t                }\r\n\t            }\r\n\t            return createListFromArray(option.data, this, ecModel);\r\n\t        },\r\n\r\n\t        defaultOption: {\r\n\t            zlevel: 0,                  // 一级层叠\r\n\t            z: 2,                       // 二级层叠\r\n\t            coordinateSystem: 'cartesian2d',\r\n\t            legendHoverLink: true,\r\n\r\n\t            hoverAnimation: true,\r\n\t            // stack: null\r\n\t            xAxisIndex: 0,\r\n\t            yAxisIndex: 0,\r\n\r\n\t            polarIndex: 0,\r\n\r\n\t            // If clip the overflow value\r\n\t            clipOverflow: true,\r\n\r\n\t            label: {\r\n\t                normal: {\r\n\t                    position: 'top'\r\n\t                }\r\n\t            },\r\n\t            // itemStyle: {\r\n\t            //     normal: {},\r\n\t            //     emphasis: {}\r\n\t            // },\r\n\t            lineStyle: {\r\n\t                normal: {\r\n\t                    width: 2,\r\n\t                    type: 'solid'\r\n\t                }\r\n\t            },\r\n\t            // areaStyle: {},\r\n\t            // false, 'start', 'end', 'middle'\r\n\t            step: false,\r\n\r\n\t            // Disabled if step is true\r\n\t            smooth: false,\r\n\t            smoothMonotone: null,\r\n\t            // 拐点图形类型\r\n\t            symbol: 'emptyCircle',\r\n\t            // 拐点图形大小\r\n\t            symbolSize: 4,\r\n\t            // 拐点图形旋转控制\r\n\t            symbolRotate: null,\r\n\r\n\t            // 是否显示 symbol, 只有在 tooltip hover 的时候显示\r\n\t            showSymbol: true,\r\n\t            // 标志图形默认只有主轴显示（随主轴标签间隔隐藏策略）\r\n\t            showAllSymbol: false,\r\n\r\n\t            // 是否连接断点\r\n\t            connectNulls: false,\r\n\r\n\t            // 数据过滤，'average', 'max', 'min', 'sum'\r\n\t            sampling: 'none',\r\n\r\n\t            animationEasing: 'linear',\r\n\r\n\t            // Disable progressive\r\n\t            progressive: 0,\r\n\t            hoverLayerThreshold: Infinity\r\n\t        }\r\n\t    });\r\n\r\n\r\n/***/ },\r\n/* 101 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t'use strict';\r\n\r\n\r\n\t    var List = __webpack_require__(97);\r\n\t    var completeDimensions = __webpack_require__(102);\r\n\t    var zrUtil = __webpack_require__(4);\r\n\t    var modelUtil = __webpack_require__(5);\r\n\t    var CoordinateSystem = __webpack_require__(26);\r\n\t    var getDataItemValue = modelUtil.getDataItemValue;\r\n\t    var converDataValue = modelUtil.converDataValue;\r\n\r\n\t    function firstDataNotNull(data) {\r\n\t        var i = 0;\r\n\t        while (i < data.length && data[i] == null) {\r\n\t            i++;\r\n\t        }\r\n\t        return data[i];\r\n\t    }\r\n\t    function ifNeedCompleteOrdinalData(data) {\r\n\t        var sampleItem = firstDataNotNull(data);\r\n\t        return sampleItem != null\r\n\t            && !zrUtil.isArray(getDataItemValue(sampleItem));\r\n\t    }\r\n\r\n\t    /**\r\n\t     * Helper function to create a list from option data\r\n\t     */\r\n\t    function createListFromArray(data, seriesModel, ecModel) {\r\n\t        // If data is undefined\r\n\t        data = data || [];\r\n\r\n\t        if (true) {\r\n\t            if (!zrUtil.isArray(data)) {\r\n\t                throw new Error('Invalid data.');\r\n\t            }\r\n\t        }\r\n\r\n\t        var coordSysName = seriesModel.get('coordinateSystem');\r\n\t        var creator = creators[coordSysName];\r\n\t        var registeredCoordSys = CoordinateSystem.get(coordSysName);\r\n\t        // FIXME\r\n\t        var axesInfo = creator && creator(data, seriesModel, ecModel);\r\n\t        var dimensions = axesInfo && axesInfo.dimensions;\r\n\t        if (!dimensions) {\r\n\t            // Get dimensions from registered coordinate system\r\n\t            dimensions = (registeredCoordSys && registeredCoordSys.dimensions) || ['x', 'y'];\r\n\t            dimensions = completeDimensions(dimensions, data, dimensions.concat(['value']));\r\n\t        }\r\n\t        var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;\r\n\r\n\t        var list = new List(dimensions, seriesModel);\r\n\r\n\t        var nameList = createNameList(axesInfo, data);\r\n\r\n\t        var categories = {};\r\n\t        var dimValueGetter = (categoryIndex >= 0 && ifNeedCompleteOrdinalData(data))\r\n\t            ? function (itemOpt, dimName, dataIndex, dimIndex) {\r\n\t                // If any dataItem is like { value: 10 }\r\n\t                if (modelUtil.isDataItemOption(itemOpt)) {\r\n\t                    list.hasItemOption = true;\r\n\t                }\r\n\r\n\t                // Use dataIndex as ordinal value in categoryAxis\r\n\t                return dimIndex === categoryIndex\r\n\t                    ? dataIndex\r\n\t                    : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);\r\n\t            }\r\n\t            : function (itemOpt, dimName, dataIndex, dimIndex) {\r\n\t                var value = getDataItemValue(itemOpt);\r\n\t                var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]);\r\n\t                // If any dataItem is like { value: 10 }\r\n\t                if (modelUtil.isDataItemOption(itemOpt)) {\r\n\t                    list.hasItemOption = true;\r\n\t                }\r\n\r\n\t                var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;\r\n\t                if (categoryAxesModels && categoryAxesModels[dimName]) {\r\n\t                    // If given value is a category string\r\n\t                    if (typeof val === 'string') {\r\n\t                        // Lazy get categories\r\n\t                        categories[dimName] = categories[dimName]\r\n\t                            || categoryAxesModels[dimName].getCategories();\r\n\t                        val = zrUtil.indexOf(categories[dimName], val);\r\n\t                        if (val < 0 && !isNaN(val)) {\r\n\t                            // In case some one write '1', '2' istead of 1, 2\r\n\t                            val = +val;\r\n\t                        }\r\n\t                    }\r\n\t                }\r\n\t                return val;\r\n\t            };\r\n\r\n\t        list.hasItemOption = false;\r\n\t        list.initData(data, nameList, dimValueGetter);\r\n\r\n\t        return list;\r\n\t    }\r\n\r\n\t    function isStackable(axisType) {\r\n\t        return axisType !== 'category' && axisType !== 'time';\r\n\t    }\r\n\r\n\t    function getDimTypeByAxis(axisType) {\r\n\t        return axisType === 'category'\r\n\t            ? 'ordinal'\r\n\t            : axisType === 'time'\r\n\t            ? 'time'\r\n\t            : 'float';\r\n\t    }\r\n\r\n\t    /**\r\n\t     * Creaters for each coord system.\r\n\t     */\r\n\t    var creators = {\r\n\r\n\t        cartesian2d: function (data, seriesModel, ecModel) {\r\n\t            var xAxisModel = ecModel.getComponent('xAxis', seriesModel.get('xAxisIndex'));\r\n\t            var yAxisModel = ecModel.getComponent('yAxis', seriesModel.get('yAxisIndex'));\r\n\r\n\t            if (true) {\r\n\t                if (!xAxisModel) {\r\n\t                    throw new Error('xAxis \"' + seriesModel.get('xAxisIndex') + '\" not found');\r\n\t                }\r\n\t                if (!yAxisModel) {\r\n\t                    throw new Error('yAxis \"' + seriesModel.get('yAxisIndex') + '\" not found');\r\n\t                }\r\n\t            }\r\n\r\n\t            var xAxisType = xAxisModel.get('type');\r\n\t            var yAxisType = yAxisModel.get('type');\r\n\r\n\t            var dimensions = [\r\n\t                {\r\n\t                    name: 'x',\r\n\t                    type: getDimTypeByAxis(xAxisType),\r\n\t                    stackable: isStackable(xAxisType)\r\n\t                },\r\n\t                {\r\n\t                    name: 'y',\r\n\t                    // If two category axes\r\n\t                    type: getDimTypeByAxis(yAxisType),\r\n\t                    stackable: isStackable(yAxisType)\r\n\t                }\r\n\t            ];\r\n\r\n\t            var isXAxisCateogry = xAxisType === 'category';\r\n\t            var isYAxisCategory = yAxisType === 'category';\r\n\r\n\t            completeDimensions(dimensions, data, ['x', 'y', 'z']);\r\n\r\n\t            var categoryAxesModels = {};\r\n\t            if (isXAxisCateogry) {\r\n\t                categoryAxesModels.x = xAxisModel;\r\n\t            }\r\n\t            if (isYAxisCategory) {\r\n\t                categoryAxesModels.y = yAxisModel;\r\n\t            }\r\n\t            return {\r\n\t                dimensions: dimensions,\r\n\t                categoryIndex: isXAxisCateogry ? 0 : (isYAxisCategory ? 1 : -1),\r\n\t                categoryAxesModels: categoryAxesModels\r\n\t            };\r\n\t        },\r\n\r\n\t        polar: function (data, seriesModel, ecModel) {\r\n\t            var polarIndex = seriesModel.get('polarIndex') || 0;\r\n\r\n\t            var axisFinder = function (axisModel) {\r\n\t                return axisModel.get('polarIndex') === polarIndex;\r\n\t            };\r\n\r\n\t            var angleAxisModel = ecModel.findComponents({\r\n\t                mainType: 'angleAxis', filter: axisFinder\r\n\t            })[0];\r\n\t            var radiusAxisModel = ecModel.findComponents({\r\n\t                mainType: 'radiusAxis', filter: axisFinder\r\n\t            })[0];\r\n\r\n\t            if (true) {\r\n\t                if (!angleAxisModel) {\r\n\t                    throw new Error('angleAxis option not found');\r\n\t                }\r\n\t                if (!radiusAxisModel) {\r\n\t                    throw new Error('radiusAxis option not found');\r\n\t                }\r\n\t            }\r\n\r\n\t            var radiusAxisType = radiusAxisModel.get('type');\r\n\t            var angleAxisType = angleAxisModel.get('type');\r\n\r\n\t            var dimensions = [\r\n\t                {\r\n\t                    name: 'radius',\r\n\t                    type: getDimTypeByAxis(radiusAxisType),\r\n\t                    stackable: isStackable(radiusAxisType)\r\n\t                },\r\n\t                {\r\n\t                    name: 'angle',\r\n\t                    type: getDimTypeByAxis(angleAxisType),\r\n\t                    stackable: isStackable(angleAxisType)\r\n\t                }\r\n\t            ];\r\n\t            var isAngleAxisCateogry = angleAxisType === 'category';\r\n\t            var isRadiusAxisCateogry = radiusAxisType === 'category';\r\n\r\n\t            completeDimensions(dimensions, data, ['radius', 'angle', 'value']);\r\n\r\n\t            var categoryAxesModels = {};\r\n\t            if (isRadiusAxisCateogry) {\r\n\t                categoryAxesModels.radius = radiusAxisModel;\r\n\t            }\r\n\t            if (isAngleAxisCateogry) {\r\n\t                categoryAxesModels.angle = angleAxisModel;\r\n\t            }\r\n\t            return {\r\n\t                dimensions: dimensions,\r\n\t                categoryIndex: isAngleAxisCateogry ? 1 : (isRadiusAxisCateogry ? 0 : -1),\r\n\t                categoryAxesModels: categoryAxesModels\r\n\t            };\r\n\t        },\r\n\r\n\t        geo: function (data, seriesModel, ecModel) {\r\n\t            // TODO Region\r\n\t            // 多个散点图系列在同一个地区的时候\r\n\t            return {\r\n\t                dimensions: completeDimensions([\r\n\t                    {name: 'lng'},\r\n\t                    {name: 'lat'}\r\n\t                ], data, ['lng', 'lat', 'value'])\r\n\t            };\r\n\t        }\r\n\t    };\r\n\r\n\t    function createNameList(result, data) {\r\n\t        var nameList = [];\r\n\r\n\t        var categoryDim = result && result.dimensions[result.categoryIndex];\r\n\t        var categoryAxisModel;\r\n\t        if (categoryDim) {\r\n\t            categoryAxisModel = result.categoryAxesModels[categoryDim.name];\r\n\t        }\r\n\r\n\t        if (categoryAxisModel) {\r\n\t            // FIXME Two category axis\r\n\t            var categories = categoryAxisModel.getCategories();\r\n\t            if (categories) {\r\n\t                var dataLen = data.length;\r\n\t                // Ordered data is given explicitly like\r\n\t                // [[3, 0.2], [1, 0.3], [2, 0.15]]\r\n\t                // or given scatter data,\r\n\t                // pick the category\r\n\t                if (zrUtil.isArray(data[0]) && data[0].length > 1) {\r\n\t                    nameList = [];\r\n\t                    for (var i = 0; i < dataLen; i++) {\r\n\t                        nameList[i] = categories[data[i][result.categoryIndex || 0]];\r\n\t                    }\r\n\t                }\r\n\t                else {\r\n\t                    nameList = categories.slice(0);\r\n\t                }\r\n\t            }\r\n\t        }\r\n\r\n\t        return nameList;\r\n\t    }\r\n\r\n\t    module.exports = createListFromArray;\r\n\r\n\r\n\r\n/***/ },\r\n/* 102 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t/**\r\n\t * Complete dimensions by data (guess dimension).\r\n\t */\r\n\r\n\r\n\t    var zrUtil = __webpack_require__(4);\r\n\r\n\t    /**\r\n\t     * Complete the dimensions array guessed from the data structure.\r\n\t     * @param  {Array.<string>} dimensions      Necessary dimensions, like ['x', 'y']\r\n\t     * @param  {Array} data                     Data list. [[1, 2, 3], [2, 3, 4]]\r\n\t     * @param  {Array.<string>} defaultNames    Default names to fill not necessary dimensions, like ['value']\r\n\t     * @param  {string} extraPrefix             Prefix of name when filling the left dimensions.\r\n\t     * @return {Array.<string>}\r\n\t     */\r\n\t    function completeDimensions(dimensions, data, defaultNames, extraPrefix) {\r\n\t        if (!data) {\r\n\t            return dimensions;\r\n\t        }\r\n\r\n\t        var value0 = retrieveValue(data[0]);\r\n\t        var dimSize = zrUtil.isArray(value0) && value0.length || 1;\r\n\r\n\t        defaultNames = defaultNames || [];\r\n\t        extraPrefix = extraPrefix || 'extra';\r\n\t        for (var i = 0; i < dimSize; i++) {\r\n\t            if (!dimensions[i]) {\r\n\t                var name = defaultNames[i] || (extraPrefix + (i - defaultNames.length));\r\n\t                dimensions[i] = guessOrdinal(data, i)\r\n\t                    ? {type: 'ordinal', name: name}\r\n\t                    : name;\r\n\t            }\r\n\t        }\r\n\r\n\t        return dimensions;\r\n\t    }\r\n\r\n\t    // The rule should not be complex, otherwise user might not\r\n\t    // be able to known where the data is wrong.\r\n\t    var guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {\r\n\t        for (var i = 0, len = data.length; i < len; i++) {\r\n\t            var value = retrieveValue(data[i]);\r\n\r\n\t            if (!zrUtil.isArray(value)) {\r\n\t                return false;\r\n\t            }\r\n\r\n\t            var value = value[dimIndex];\r\n\t            if (value != null && isFinite(value)) {\r\n\t                return false;\r\n\t            }\r\n\t            else if (zrUtil.isString(value) && value !== '-') {\r\n\t                return true;\r\n\t            }\r\n\t        }\r\n\t        return false;\r\n\t    };\r\n\r\n\t    function retrieveValue(o) {\r\n\t        return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value: o;\r\n\t    }\r\n\r\n\t    module.exports = completeDimensions;\r\n\r\n\r\n\r\n/***/ },\r\n/* 103 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t'use strict';\r\n\t// FIXME step not support polar\r\n\r\n\r\n\t    var zrUtil = __webpack_require__(4);\r\n\t    var SymbolDraw = __webpack_require__(104);\r\n\t    var Symbol = __webpack_require__(105);\r\n\t    var lineAnimationDiff = __webpack_require__(107);\r\n\t    var graphic = __webpack_require__(43);\r\n\r\n\t    var polyHelper = __webpack_require__(108);\r\n\r\n\t    var ChartView = __webpack_require__(42);\r\n\r\n\t    function isPointsSame(points1, points2) {\r\n\t        if (points1.length !== points2.length) {\r\n\t            return;\r\n\t        }\r\n\t        for (var i = 0; i < points1.length; i++) {\r\n\t            var p1 = points1[i];\r\n\t            var p2 = points2[i];\r\n\t            if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\r\n\t                return;\r\n\t            }\r\n\t        }\r\n\t        return true;\r\n\t    }\r\n\r\n\t    function getSmooth(smooth) {\r\n\t        return typeof (smooth) === 'number' ? smooth : (smooth ? 0.3 : 0);\r\n\t    }\r\n\r\n\t    function getAxisExtentWithGap(axis) {\r\n\t        var extent = axis.getGlobalExtent();\r\n\t        if (axis.onBand) {\r\n\t            // Remove extra 1px to avoid line miter in clipped edge\r\n\t            var halfBandWidth = axis.getBandWidth() / 2 - 1;\r\n\t            var dir = extent[1] > extent[0] ? 1 : -1;\r\n\t            extent[0] += dir * halfBandWidth;\r\n\t            extent[1] -= dir * halfBandWidth;\r\n\t        }\r\n\t        return extent;\r\n\t    }\r\n\r\n\t    function sign(val) {\r\n\t        return val >= 0 ? 1 : -1;\r\n\t    }\r\n\t    /**\r\n\t     * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\r\n\t     * @param {module:echarts/data/List} data\r\n\t     * @param {Array.<Array.<number>>} points\r\n\t     * @private\r\n\t     */\r\n\t    function getStackedOnPoints(coordSys, data) {\r\n\t        var baseAxis = coordSys.getBaseAxis();\r\n\t        var valueAxis = coordSys.getOtherAxis(baseAxis);\r\n\t        var valueStart = baseAxis.onZero\r\n\t            ? 0 : valueAxis.scale.getExtent()[0];\r\n\r\n\t        var valueDim = valueAxis.dim;\r\n\r\n\t        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\r\n\r\n\t        return data.mapArray([valueDim], function (val, idx) {\r\n\t            var stackedOnSameSign;\r\n\t            var stackedOn = data.stackedOn;\r\n\t            // Find first stacked value with same sign\r\n\t            while (stackedOn &&\r\n\t                sign(stackedOn.get(valueDim, idx)) === sign(val)\r\n\t            ) {\r\n\t                stackedOnSameSign = stackedOn;\r\n\t                break;\r\n\t            }\r\n\t            var stackedData = [];\r\n\t            stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\r\n\t            stackedData[1 - baseDataOffset] = stackedOnSameSign\r\n\t                ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\r\n\r\n\t            return coordSys.dataToPoint(stackedData);\r\n\t        }, true);\r\n\t    }\r\n\r\n\t    function queryDataIndex(data, payload) {\r\n\t        if (payload.dataIndex != null) {\r\n\t            return payload.dataIndex;\r\n\t        }\r\n\t        else if (payload.name != null) {\r\n\t            return data.indexOfName(payload.name);\r\n\t        }\r\n\t    }\r\n\r\n\t    function createGridClipShape(cartesian, hasAnimation, seriesModel) {\r\n\t        var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\r\n\t        var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\r\n\t        var isHorizontal = cartesian.getBaseAxis().isHorizontal();\r\n\r\n\t        var x = Math.min(xExtent[0], xExtent[1]);\r\n\t        var y = Math.min(yExtent[0], yExtent[1]);\r\n\t        var width = Math.max(xExtent[0], xExtent[1]) - x;\r\n\t        var height = Math.max(yExtent[0], yExtent[1]) - y;\r\n\t        var lineWidth = seriesModel.get('lineStyle.normal.width') || 2;\r\n\t        // Expand clip shape to avoid clipping when line value exceeds axis\r\n\t        var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\r\n\t        if (isHorizontal) {\r\n\t            y -= expandSize;\r\n\t            height += expandSize * 2;\r\n\t        }\r\n\t        else {\r\n\t            x -= expandSize;\r\n\t            width += expandSize * 2;\r\n\t        }\r\n\r\n\t        var clipPath = new graphic.Rect({\r\n\t            shape: {\r\n\t                x: x,\r\n\t                y: y,\r\n\t                width: width,\r\n\t                height: height\r\n\t            }\r\n\t        });\r\n\r\n\t        if (hasAnimation) {\r\n\t            clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\r\n\t            graphic.initProps(clipPath, {\r\n\t                shape: {\r\n\t                    width: width,\r\n\t                    height: height\r\n\t                }\r\n\t            }, seriesModel);\r\n\t        }\r\n\r\n\t        return clipPath;\r\n\t    }\r\n\r\n\t    function createPolarClipShape(polar, hasAnimation, seriesModel) {\r\n\t        var angleAxis = polar.getAngleAxis();\r\n\t        var radiusAxis = polar.getRadiusAxis();\r\n\r\n\t        var radiusExtent = radiusAxis.getExtent();\r\n\t        var angleExtent = angleAxis.getExtent();\r\n\r\n\t        var RADIAN = Math.PI / 180;\r\n\r\n\t        var clipPath = new graphic.Sector({\r\n\t            shape: {\r\n\t                cx: polar.cx,\r\n\t                cy: polar.cy,\r\n\t                r0: radiusExtent[0],\r\n\t                r: radiusExtent[1],\r\n\t                startAngle: -angleExtent[0] * RADIAN,\r\n\t                endAngle: -angleExtent[1] * RADIAN,\r\n\t                clockwise: angleAxis.inverse\r\n\t            }\r\n\t        });\r\n\r\n\t        if (hasAnimation) {\r\n\t            clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\r\n\t            graphic.initProps(clipPath, {\r\n\t                shape: {\r\n\t                    endAngle: -angleExtent[1] * RADIAN\r\n\t                }\r\n\t            }, seriesModel);\r\n\t        }\r\n\r\n\t        return clipPath;\r\n\t    }\r\n\r\n\t    function createClipShape(coordSys, hasAnimation, seriesModel) {\r\n\t        return coordSys.type === 'polar'\r\n\t            ? createPolarClipShape(coordSys, hasAnimation, seriesModel)\r\n\t            : createGridClipShape(coordSys, hasAnimation, seriesModel);\r\n\t    }\r\n\r\n\t    function turnPointsIntoStep(points, coordSys, stepTurnAt) {\r\n\t        var baseAxis = coordSys.getBaseAxis();\r\n\t        var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\r\n\r\n\t        var stepPoints = [];\r\n\t        for (var i = 0; i < points.length - 1; i++) {\r\n\t            var nextPt = points[i + 1];\r\n\t            var pt = points[i];\r\n\t            stepPoints.push(pt);\r\n\r\n\t            var stepPt = [];\r\n\t            switch (stepTurnAt) {\r\n\t                case 'end':\r\n\t                    stepPt[baseIndex] = nextPt[baseIndex];\r\n\t                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\r\n\t                    // default is start\r\n\t                    stepPoints.push(stepPt);\r\n\t                    break;\r\n\t                case 'middle':\r\n\t                    // default is start\r\n\t                    var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\r\n\t                    var stepPt2 = [];\r\n\t                    stepPt[baseIndex] = stepPt2[baseIndex] = middle;\r\n\t                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\r\n\t                    stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\r\n\t                    stepPoints.push(stepPt);\r\n\t                    stepPoints.push(stepPt2);\r\n\t                    break;\r\n\t                default:\r\n\t                    stepPt[baseIndex] = pt[baseIndex];\r\n\t                    stepPt[1 - baseIndex] = nextPt[1 - baseIndex];\r\n\t                    // default is start\r\n\t                    stepPoints.push(stepPt);\r\n\t            }\r\n\t        }\r\n\t        // Last points\r\n\t        points[i] && stepPoints.push(points[i]);\r\n\t        return stepPoints;\r\n\t    }\r\n\r\n\t    function clamp(number, extent) {\r\n\t        return Math.max(Math.min(number, extent[1]), extent[0]);\r\n\t    }\r\n\r\n\t    function getVisualGradient(data, coordSys) {\r\n\t        var visualMetaList = data.getVisual('visualMeta');\r\n\t        if (!visualMetaList || !visualMetaList.length) {\r\n\t            return;\r\n\t        }\r\n\r\n\t        var visualMeta;\r\n\t        for (var i = visualMetaList.length - 1; i >= 0; i--) {\r\n\t            // Can only be x or y\r\n\t            if (visualMetaList[i].dimension < 2) {\r\n\t                visualMeta = visualMetaList[i];\r\n\t                break;\r\n\t            }\r\n\t        }\r\n\t        if (!visualMeta || coordSys.type !== 'cartesian2d') {\r\n\t            if (true) {\r\n\t                console.warn('Visual map on line style only support x or y dimension.');\r\n\t            }\r\n\t            return;\r\n\t        }\r\n\t        var dimension = visualMeta.dimension;\r\n\t        var dimName = data.dimensions[dimension];\r\n\t        var dataExtent = data.getDataExtent(dimName);\r\n\r\n\t        var stops = visualMeta.stops;\r\n\r\n\t        var colorStops = [];\r\n\t        if (stops[0].interval) {\r\n\t            stops.sort(function (a, b) {\r\n\t                return a.interval[0] - b.interval[0];\r\n\t            });\r\n\t        }\r\n\r\n\t        var firstStop = stops[0];\r\n\t        var lastStop = stops[stops.length - 1];\r\n\t        // Interval can be infinity in piecewise case\r\n\t        var min = firstStop.interval ? clamp(firstStop.interval[0], dataExtent) : firstStop.value;\r\n\t        var max = lastStop.interval ? clamp(lastStop.interval[1], dataExtent) : lastStop.value;\r\n\t        var stopsSpan = max - min;\r\n\r\n\t        // In the piecewise case data out of visual range\r\n\t        // ----dataMin----dataMax-----visualMin----visualMax\r\n\t        if (stopsSpan === 0) {\r\n\t            return data.getItemVisual(0, 'color');\r\n\t        }\r\n\t        for (var i = 0; i < stops.length; i++) {\r\n\t            // Piecewise\r\n\t            if (stops[i].interval) {\r\n\t                if (stops[i].interval[1] === stops[i].interval[0]) {\r\n\t                    continue;\r\n\t                }\r\n\t                colorStops.push({\r\n\t                    // Make sure offset is between 0 and 1\r\n\t                    offset: (clamp(stops[i].interval[0], dataExtent) - min) / stopsSpan,\r\n\t                    color: stops[i].color\r\n\t                }, {\r\n\t                    offset: (clamp(stops[i].interval[1], dataExtent) - min) / stopsSpan,\r\n\t                    color: stops[i].color\r\n\t                });\r\n\t            }\r\n\t            // Continous\r\n\t            else {\r\n\t                // if (i > 0 && stops[i].value === stops[i - 1].value) {\r\n\t                //     continue;\r\n\t                // }\r\n\t                colorStops.push({\r\n\t                    offset: (stops[i].value - min) / stopsSpan,\r\n\t                    color: stops[i].color\r\n\t                });\r\n\t            }\r\n\t        }\r\n\t        var gradient = new graphic.LinearGradient(\r\n\t            0, 0, 0, 0, colorStops, true\r\n\t        );\r\n\t        var axis = coordSys.getAxis(dimName);\r\n\r\n\t        var start = Math.round(axis.toGlobalCoord(axis.dataToCoord(min)));\r\n\t        var end = Math.round(axis.toGlobalCoord(axis.dataToCoord(max)));\r\n\t        // zrUtil.each(colorStops, function (colorStop) {\r\n\t        //     // Make sure each offset has rounded px to avoid not sharp edge\r\n\t        //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\r\n\t        // });\r\n\r\n\t        gradient[dimName] = start;\r\n\t        gradient[dimName + '2'] = end;\r\n\r\n\t        return gradient;\r\n\t    }\r\n\r\n\t    module.exports = ChartView.extend({\r\n\r\n\t        type: 'line',\r\n\r\n\t        init: function () {\r\n\t            var lineGroup = new graphic.Group();\r\n\r\n\t            var symbolDraw = new SymbolDraw();\r\n\t            this.group.add(symbolDraw.group);\r\n\r\n\t            this._symbolDraw = symbolDraw;\r\n\t            this._lineGroup = lineGroup;\r\n\t        },\r\n\r\n\t        render: function (seriesModel, ecModel, api) {\r\n\t            var coordSys = seriesModel.coordinateSystem;\r\n\t            var group = this.group;\r\n\t            var data = seriesModel.getData();\r\n\t            var lineStyleModel = seriesModel.getModel('lineStyle.normal');\r\n\t            var areaStyleModel = seriesModel.getModel('areaStyle.normal');\r\n\r\n\t            var points = data.mapArray(data.getItemLayout, true);\r\n\r\n\t            var isCoordSysPolar = coordSys.type === 'polar';\r\n\t            var prevCoordSys = this._coordSys;\r\n\r\n\t            var symbolDraw = this._symbolDraw;\r\n\t            var polyline = this._polyline;\r\n\t            var polygon = this._polygon;\r\n\r\n\t            var lineGroup = this._lineGroup;\r\n\r\n\t            var hasAnimation = seriesModel.get('animation');\r\n\r\n\t            var isAreaChart = !areaStyleModel.isEmpty();\r\n\t            var stackedOnPoints = getStackedOnPoints(coordSys, data);\r\n\r\n\t            var showSymbol = seriesModel.get('showSymbol');\r\n\r\n\t            var isSymbolIgnore = showSymbol && !isCoordSysPolar && !seriesModel.get('showAllSymbol')\r\n\t                && this._getSymbolIgnoreFunc(data, coordSys);\r\n\r\n\t            // Remove temporary symbols\r\n\t            var oldData = this._data;\r\n\t            oldData && oldData.eachItemGraphicEl(function (el, idx) {\r\n\t                if (el.__temp) {\r\n\t                    group.remove(el);\r\n\t                    oldData.setItemGraphicEl(idx, null);\r\n\t                }\r\n\t            });\r\n\r\n\t            // Remove previous created symbols if showSymbol changed to false\r\n\t            if (!showSymbol) {\r\n\t                symbolDraw.remove();\r\n\t            }\r\n\r\n\t            group.add(lineGroup);\r\n\r\n\t            // FIXME step not support polar\r\n\t            var step = !isCoordSysPolar && seriesModel.get('step');\r\n\t            // Initialization animation or coordinate system changed\r\n\t            if (\r\n\t                !(polyline && prevCoordSys.type === coordSys.type && step === this._step)\r\n\t            ) {\r\n\t                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\r\n\r\n\t                if (step) {\r\n\t                    // TODO If stacked series is not step\r\n\t                    points = turnPointsIntoStep(points, coordSys, step);\r\n\t                    stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\r\n\t                }\r\n\r\n\t                polyline = this._newPolyline(points, coordSys, hasAnimation);\r\n\t                if (isAreaChart) {\r\n\t                    polygon = this._newPolygon(\r\n\t                        points, stackedOnPoints,\r\n\t                        coordSys, hasAnimation\r\n\t                    );\r\n\t                }\r\n\t                lineGroup.setClipPath(createClipShape(coordSys, true, seriesModel));\r\n\t            }\r\n\t            else {\r\n\t                if (isAreaChart && !polygon) {\r\n\t                    // If areaStyle is added\r\n\t                    polygon = this._newPolygon(\r\n\t                        points, stackedOnPoints,\r\n\t                        coordSys, hasAnimation\r\n\t                    );\r\n\t                }\r\n\t                else if (polygon && !isAreaChart) {\r\n\t                    // If areaStyle is removed\r\n\t                    lineGroup.remove(polygon);\r\n\t                    polygon = this._polygon = null;\r\n\t                }\r\n\r\n\t                // Update clipPath\r\n\t                lineGroup.setClipPath(createClipShape(coordSys, false, seriesModel));\r\n\r\n\t                // Always update, or it is wrong in the case turning on legend\r\n\t                // because points are not changed\r\n\t                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\r\n\r\n\t                // Stop symbol animation and sync with line points\r\n\t                // FIXME performance?\r\n\t                data.eachItemGraphicEl(function (el) {\r\n\t                    el.stopAnimation(true);\r\n\t                });\r\n\r\n\t                // In the case data zoom triggerred refreshing frequently\r\n\t                // Data may not change if line has a category axis. So it should animate nothing\r\n\t                if (!isPointsSame(this._stackedOnPoints, stackedOnPoints)\r\n\t                    || !isPointsSame(this._points, points)\r\n\t                ) {\r\n\t                    if (hasAnimation) {\r\n\t                        this._updateAnimation(\r\n\t                            data, stackedOnPoints, coordSys, api, step\r\n\t                        );\r\n\t                    }\r\n\t                    else {\r\n\t                        polyline.setShape({\r\n\t                            points: points\r\n\t                        });\r\n\t                        polygon && polygon.setShape({\r\n\t                            points: points,\r\n\t                            stackedOnPoints: stackedOnPoints\r\n\t                        });\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\r\n\t            var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\r\n\t            polyline.useStyle(zrUtil.defaults(\r\n\t                // Use color in lineStyle first\r\n\t                lineStyleModel.getLineStyle(),\r\n\t                {\r\n\t                    fill: 'none',\r\n\t                    stroke: visualColor,\r\n\t                    lineJoin: 'bevel'\r\n\t                }\r\n\t            ));\r\n\r\n\t            var smooth = seriesModel.get('smooth');\r\n\t            smooth = getSmooth(seriesModel.get('smooth'));\r\n\t            polyline.setShape({\r\n\t                smooth: smooth,\r\n\t                smoothMonotone: seriesModel.get('smoothMonotone'),\r\n\t                connectNulls: seriesModel.get('connectNulls')\r\n\t            });\r\n\r\n\t            if (polygon) {\r\n\t                var stackedOn = data.stackedOn;\r\n\t                var stackedOnSmooth = 0;\r\n\r\n\t                polygon.useStyle(zrUtil.defaults(\r\n\t                    areaStyleModel.getAreaStyle(),\r\n\t                    {\r\n\t                        fill: visualColor,\r\n\t                        opacity: 0.7,\r\n\t                        lineJoin: 'bevel'\r\n\t                    }\r\n\t                ));\r\n\r\n\t                if (stackedOn) {\r\n\t                    var stackedOnSeries = stackedOn.hostModel;\r\n\t                    stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\r\n\t                }\r\n\r\n\t                polygon.setShape({\r\n\t                    smooth: smooth,\r\n\t                    stackedOnSmooth: stackedOnSmooth,\r\n\t                    smoothMonotone: seriesModel.get('smoothMonotone'),\r\n\t                    connectNulls: seriesModel.get('connectNulls')\r\n\t                });\r\n\t            }\r\n\r\n\t            this._data = data;\r\n\t            // Save the coordinate system for transition animation when data changed\r\n\t            this._coordSys = coordSys;\r\n\t            this._stackedOnPoints = stackedOnPoints;\r\n\t            this._points = points;\r\n\t            this._step = step;\r\n\t        },\r\n\r\n\t        highlight: function (seriesModel, ecModel, api, payload) {\r\n\t            var data = seriesModel.getData();\r\n\t            var dataIndex = queryDataIndex(data, payload);\r\n\r\n\t            if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\r\n\t                var symbol = data.getItemGraphicEl(dataIndex);\r\n\t                if (!symbol) {\r\n\t                    // Create a temporary symbol if it is not exists\r\n\t                    var pt = data.getItemLayout(dataIndex);\r\n\t                    symbol = new Symbol(data, dataIndex);\r\n\t                    symbol.position = pt;\r\n\t                    symbol.setZ(\r\n\t                        seriesModel.get('zlevel'),\r\n\t                        seriesModel.get('z')\r\n\t                    );\r\n\t                    symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\r\n\t                    symbol.__temp = true;\r\n\t                    data.setItemGraphicEl(dataIndex, symbol);\r\n\r\n\t                    // Stop scale animation\r\n\t                    symbol.stopSymbolAnimation(true);\r\n\r\n\t                    this.group.add(symbol);\r\n\t                }\r\n\t                symbol.highlight();\r\n\t            }\r\n\t            else {\r\n\t                // Highlight whole series\r\n\t                ChartView.prototype.highlight.call(\r\n\t                    this, seriesModel, ecModel, api, payload\r\n\t                );\r\n\t            }\r\n\t        },\r\n\r\n\t        downplay: function (seriesModel, ecModel, api, payload) {\r\n\t            var data = seriesModel.getData();\r\n\t            var dataIndex = queryDataIndex(data, payload);\r\n\t            if (dataIndex != null && dataIndex >= 0) {\r\n\t                var symbol = data.getItemGraphicEl(dataIndex);\r\n\t                if (symbol) {\r\n\t                    if (symbol.__temp) {\r\n\t                        data.setItemGraphicEl(dataIndex, null);\r\n\t                        this.group.remove(symbol);\r\n\t                    }\r\n\t                    else {\r\n\t                        symbol.downplay();\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t            else {\r\n\t                // Downplay whole series\r\n\t                ChartView.prototype.downplay.call(\r\n\t                    this, seriesModel, ecModel, api, payload\r\n\t                );\r\n\t            }\r\n\t        },\r\n\r\n\t        /**\r\n\t         * @param {module:zrender/container/Group} group\r\n\t         * @param {Array.<Array.<number>>} points\r\n\t         * @private\r\n\t         */\r\n\t        _newPolyline: function (points) {\r\n\t            var polyline = this._polyline;\r\n\t            // Remove previous created polyline\r\n\t            if (polyline) {\r\n\t                this._lineGroup.remove(polyline);\r\n\t            }\r\n\r\n\t            polyline = new polyHelper.Polyline({\r\n\t                shape: {\r\n\t                    points: points\r\n\t                },\r\n\t                silent: true,\r\n\t                z2: 10\r\n\t            });\r\n\r\n\t            this._lineGroup.add(polyline);\r\n\r\n\t            this._polyline = polyline;\r\n\r\n\t            return polyline;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * @param {module:zrender/container/Group} group\r\n\t         * @param {Array.<Array.<number>>} stackedOnPoints\r\n\t         * @param {Array.<Array.<number>>} points\r\n\t         * @private\r\n\t         */\r\n\t        _newPolygon: function (points, stackedOnPoints) {\r\n\t            var polygon = this._polygon;\r\n\t            // Remove previous created polygon\r\n\t            if (polygon) {\r\n\t                this._lineGroup.remove(polygon);\r\n\t            }\r\n\r\n\t            polygon = new polyHelper.Polygon({\r\n\t                shape: {\r\n\t                    points: points,\r\n\t                    stackedOnPoints: stackedOnPoints\r\n\t                },\r\n\t                silent: true\r\n\t            });\r\n\r\n\t            this._lineGroup.add(polygon);\r\n\r\n\t            this._polygon = polygon;\r\n\t            return polygon;\r\n\t        },\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        _getSymbolIgnoreFunc: function (data, coordSys) {\r\n\t            var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\r\n\t            // `getLabelInterval` is provided by echarts/component/axis\r\n\t            if (categoryAxis && categoryAxis.isLabelIgnored) {\r\n\t                return zrUtil.bind(categoryAxis.isLabelIgnored, categoryAxis);\r\n\t            }\r\n\t        },\r\n\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        // FIXME Two value axis\r\n\t        _updateAnimation: function (data, stackedOnPoints, coordSys, api, step) {\r\n\t            var polyline = this._polyline;\r\n\t            var polygon = this._polygon;\r\n\t            var seriesModel = data.hostModel;\r\n\r\n\t            var diff = lineAnimationDiff(\r\n\t                this._data, data,\r\n\t                this._stackedOnPoints, stackedOnPoints,\r\n\t                this._coordSys, coordSys\r\n\t            );\r\n\r\n\t            var current = diff.current;\r\n\t            var stackedOnCurrent = diff.stackedOnCurrent;\r\n\t            var next = diff.next;\r\n\t            var stackedOnNext = diff.stackedOnNext;\r\n\t            if (step) {\r\n\t                // TODO If stacked series is not step\r\n\t                current = turnPointsIntoStep(diff.current, coordSys, step);\r\n\t                stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\r\n\t                next = turnPointsIntoStep(diff.next, coordSys, step);\r\n\t                stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\r\n\t            }\r\n\t            polyline.shape.__points = diff.current;\r\n\t            polyline.shape.points = current;\r\n\r\n\t            graphic.updateProps(polyline, {\r\n\t                shape: {\r\n\t                    points: next\r\n\t                }\r\n\t            }, seriesModel);\r\n\r\n\t            if (polygon) {\r\n\t                polygon.setShape({\r\n\t                    points: current,\r\n\t                    stackedOnPoints: stackedOnCurrent\r\n\t                });\r\n\t                graphic.updateProps(polygon, {\r\n\t                    shape: {\r\n\t                        points: next,\r\n\t                        stackedOnPoints: stackedOnNext,\r\n\t                        __points: diff.next\r\n\t                    }\r\n\t                }, seriesModel);\r\n\t            }\r\n\r\n\t            var updatedDataInfo = [];\r\n\t            var diffStatus = diff.status;\r\n\r\n\t            for (var i = 0; i < diffStatus.length; i++) {\r\n\t                var cmd = diffStatus[i].cmd;\r\n\t                if (cmd === '=') {\r\n\t                    var el = data.getItemGraphicEl(diffStatus[i].idx1);\r\n\t                    if (el) {\r\n\t                        updatedDataInfo.push({\r\n\t                            el: el,\r\n\t                            ptIdx: i    // Index of points\r\n\t                        });\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\r\n\t            if (polyline.animators && polyline.animators.length) {\r\n\t                polyline.animators[0].during(function () {\r\n\t                    for (var i = 0; i < updatedDataInfo.length; i++) {\r\n\t                        var el = updatedDataInfo[i].el;\r\n\t                        el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\r\n\t                    }\r\n\t                });\r\n\t            }\r\n\t        },\r\n\r\n\t        remove: function (ecModel) {\r\n\t            var group = this.group;\r\n\t            var oldData = this._data;\r\n\t            this._lineGroup.removeAll();\r\n\t            this._symbolDraw.remove(true);\r\n\t            // Remove temporary created elements when highlighting\r\n\t            oldData && oldData.eachItemGraphicEl(function (el, idx) {\r\n\t                if (el.__temp) {\r\n\t                    group.remove(el);\r\n\t                    oldData.setItemGraphicEl(idx, null);\r\n\t                }\r\n\t            });\r\n\r\n\t            this._polyline =\r\n\t            this._polygon =\r\n\t            this._coordSys =\r\n\t            this._points =\r\n\t            this._stackedOnPoints =\r\n\t            this._data = null;\r\n\t        }\r\n\t    });\r\n\r\n\r\n/***/ },\r\n/* 104 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t/**\r\n\t * @module echarts/chart/helper/SymbolDraw\r\n\t */\r\n\r\n\r\n\t    var graphic = __webpack_require__(43);\r\n\t    var Symbol = __webpack_require__(105);\r\n\r\n\t    /**\r\n\t     * @constructor\r\n\t     * @alias module:echarts/chart/helper/SymbolDraw\r\n\t     * @param {module:zrender/graphic/Group} [symbolCtor]\r\n\t     */\r\n\t    function SymbolDraw(symbolCtor) {\r\n\t        this.group = new graphic.Group();\r\n\r\n\t        this._symbolCtor = symbolCtor || Symbol;\r\n\t    }\r\n\r\n\t    var symbolDrawProto = SymbolDraw.prototype;\r\n\r\n\t    function symbolNeedsDraw(data, idx, isIgnore) {\r\n\t        var point = data.getItemLayout(idx);\r\n\t        return point && !isNaN(point[0]) && !isNaN(point[1]) && !(isIgnore && isIgnore(idx))\r\n\t                    && data.getItemVisual(idx, 'symbol') !== 'none';\r\n\t    }\r\n\t    /**\r\n\t     * Update symbols draw by new data\r\n\t     * @param {module:echarts/data/List} data\r\n\t     * @param {Array.<boolean>} [isIgnore]\r\n\t     */\r\n\t    symbolDrawProto.updateData = function (data, isIgnore) {\r\n\t        var group = this.group;\r\n\t        var seriesModel = data.hostModel;\r\n\t        var oldData = this._data;\r\n\r\n\t        var SymbolCtor = this._symbolCtor;\r\n\r\n\t        var seriesScope = {\r\n\t            itemStyle: seriesModel.getModel('itemStyle.normal').getItemStyle(['color']),\r\n\t            hoverItemStyle: seriesModel.getModel('itemStyle.emphasis').getItemStyle(),\r\n\t            symbolRotate: seriesModel.get('symbolRotate'),\r\n\t            symbolOffset: seriesModel.get('symbolOffset'),\r\n\t            hoverAnimation: seriesModel.get('hoverAnimation'),\r\n\r\n\t            labelModel: seriesModel.getModel('label.normal'),\r\n\t            hoverLabelModel: seriesModel.getModel('label.emphasis')\r\n\t        };\r\n\r\n\t        data.diff(oldData)\r\n\t            .add(function (newIdx) {\r\n\t                var point = data.getItemLayout(newIdx);\r\n\t                if (symbolNeedsDraw(data, newIdx, isIgnore)) {\r\n\t                    var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\r\n\t                    symbolEl.attr('position', point);\r\n\t                    data.setItemGraphicEl(newIdx, symbolEl);\r\n\t                    group.add(symbolEl);\r\n\t                }\r\n\t            })\r\n\t            .update(function (newIdx, oldIdx) {\r\n\t                var symbolEl = oldData.getItemGraphicEl(oldIdx);\r\n\t                var point = data.getItemLayout(newIdx);\r\n\t                if (!symbolNeedsDraw(data, newIdx, isIgnore)) {\r\n\t                    group.remove(symbolEl);\r\n\t                    return;\r\n\t                }\r\n\t                if (!symbolEl) {\r\n\t                    symbolEl = new SymbolCtor(data, newIdx);\r\n\t                    symbolEl.attr('position', point);\r\n\t                }\r\n\t                else {\r\n\t                    symbolEl.updateData(data, newIdx, seriesScope);\r\n\t                    graphic.updateProps(symbolEl, {\r\n\t                        position: point\r\n\t                    }, seriesModel);\r\n\t                }\r\n\r\n\t                // Add back\r\n\t                group.add(symbolEl);\r\n\r\n\t                data.setItemGraphicEl(newIdx, symbolEl);\r\n\t            })\r\n\t            .remove(function (oldIdx) {\r\n\t                var el = oldData.getItemGraphicEl(oldIdx);\r\n\t                el && el.fadeOut(function () {\r\n\t                    group.remove(el);\r\n\t                });\r\n\t            })\r\n\t            .execute();\r\n\r\n\t        this._data = data;\r\n\t    };\r\n\r\n\t    symbolDrawProto.updateLayout = function () {\r\n\t        var data = this._data;\r\n\t        if (data) {\r\n\t            // Not use animation\r\n\t            data.eachItemGraphicEl(function (el, idx) {\r\n\t                var point = data.getItemLayout(idx);\r\n\t                el.attr('position', point);\r\n\t            });\r\n\t        }\r\n\t    };\r\n\r\n\t    symbolDrawProto.remove = function (enableAnimation) {\r\n\t        var group = this.group;\r\n\t        var data = this._data;\r\n\t        if (data) {\r\n\t            if (enableAnimation) {\r\n\t                data.eachItemGraphicEl(function (el) {\r\n\t                    el.fadeOut(function () {\r\n\t                        group.remove(el);\r\n\t                    });\r\n\t                });\r\n\t            }\r\n\t            else {\r\n\t                group.removeAll();\r\n\t            }\r\n\t        }\r\n\t    };\r\n\r\n\t    module.exports = SymbolDraw;\r\n\r\n\r\n/***/ },\r\n/* 105 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t/**\r\n\t * @module echarts/chart/helper/Symbol\r\n\t */\r\n\r\n\r\n\t    var zrUtil = __webpack_require__(4);\r\n\t    var symbolUtil = __webpack_require__(106);\r\n\t    var graphic = __webpack_require__(43);\r\n\t    var numberUtil = __webpack_require__(7);\r\n\r\n\t    function normalizeSymbolSize(symbolSize) {\r\n\t        if (!(symbolSize instanceof Array)) {\r\n\t            symbolSize = [+symbolSize, +symbolSize];\r\n\t        }\r\n\t        return symbolSize;\r\n\t    }\r\n\r\n\t    /**\r\n\t     * @constructor\r\n\t     * @alias {module:echarts/chart/helper/Symbol}\r\n\t     * @param {module:echarts/data/List} data\r\n\t     * @param {number} idx\r\n\t     * @extends {module:zrender/graphic/Group}\r\n\t     */\r\n\t    function Symbol(data, idx, seriesScope) {\r\n\t        graphic.Group.call(this);\r\n\r\n\t        this.updateData(data, idx, seriesScope);\r\n\t    }\r\n\r\n\t    var symbolProto = Symbol.prototype;\r\n\r\n\t    function driftSymbol(dx, dy) {\r\n\t        this.parent.drift(dx, dy);\r\n\t    }\r\n\r\n\t    symbolProto._createSymbol = function (symbolType, data, idx) {\r\n\t        // Remove paths created before\r\n\t        this.removeAll();\r\n\r\n\t        var seriesModel = data.hostModel;\r\n\t        var color = data.getItemVisual(idx, 'color');\r\n\r\n\t        var symbolPath = symbolUtil.createSymbol(\r\n\t            symbolType, -0.5, -0.5, 1, 1, color\r\n\t        );\r\n\r\n\t        symbolPath.attr({\r\n\t            z2: 100,\r\n\t            culling: true,\r\n\t            scale: [0, 0]\r\n\t        });\r\n\t        // Rewrite drift method\r\n\t        symbolPath.drift = driftSymbol;\r\n\r\n\t        var size = normalizeSymbolSize(data.getItemVisual(idx, 'symbolSize'));\r\n\r\n\t        graphic.initProps(symbolPath, {\r\n\t            scale: size\r\n\t        }, seriesModel, idx);\r\n\r\n\t        this._symbolType = symbolType;\r\n\r\n\t        this.add(symbolPath);\r\n\t    };\r\n\r\n\t    /**\r\n\t     * Stop animation\r\n\t     * @param {boolean} toLastFrame\r\n\t     */\r\n\t    symbolProto.stopSymbolAnimation = function (toLastFrame) {\r\n\t        this.childAt(0).stopAnimation(toLastFrame);\r\n\t    };\r\n\r\n\t    /**\r\n\t     * Get scale(aka, current symbol size).\r\n\t     * Including the change caused by animation\r\n\t     */\r\n\t    symbolProto.getScale = function () {\r\n\t        return this.childAt(0).scale;\r\n\t    };\r\n\r\n\t    /**\r\n\t     * Highlight symbol\r\n\t     */\r\n\t    symbolProto.highlight = function () {\r\n\t        this.childAt(0).trigger('emphasis');\r\n\t    };\r\n\r\n\t    /**\r\n\t     * Downplay symbol\r\n\t     */\r\n\t    symbolProto.downplay = function () {\r\n\t        this.childAt(0).trigger('normal');\r\n\t    };\r\n\r\n\t    /**\r\n\t     * @param {number} zlevel\r\n\t     * @param {number} z\r\n\t     */\r\n\t    symbolProto.setZ = function (zlevel, z) {\r\n\t        var symbolPath = this.childAt(0);\r\n\t        symbolPath.zlevel = zlevel;\r\n\t        symbolPath.z = z;\r\n\t    };\r\n\r\n\t    symbolProto.setDraggable = function (draggable) {\r\n\t        var symbolPath = this.childAt(0);\r\n\t        symbolPath.draggable = draggable;\r\n\t        symbolPath.cursor = draggable ? 'move' : 'pointer';\r\n\t    };\r\n\r\n\t    /**\r\n\t     * Update symbol properties\r\n\t     * @param  {module:echarts/data/List} data\r\n\t     * @param  {number} idx\r\n\t     */\r\n\t    symbolProto.updateData = function (data, idx, seriesScope) {\r\n\t        this.silent = false;\r\n\r\n\t        var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\r\n\t        var seriesModel = data.hostModel;\r\n\t        var symbolSize = normalizeSymbolSize(data.getItemVisual(idx, 'symbolSize'));\r\n\t        if (symbolType !== this._symbolType) {\r\n\t            this._createSymbol(symbolType, data, idx);\r\n\t        }\r\n\t        else {\r\n\t            var symbolPath = this.childAt(0);\r\n\t            graphic.updateProps(symbolPath, {\r\n\t                scale: symbolSize\r\n\t            }, seriesModel, idx);\r\n\t        }\r\n\t        this._updateCommon(data, idx, symbolSize, seriesScope);\r\n\r\n\t        this._seriesModel = seriesModel;\r\n\t    };\r\n\r\n\t    // Update common properties\r\n\t    var normalStyleAccessPath = ['itemStyle', 'normal'];\r\n\t    var emphasisStyleAccessPath = ['itemStyle', 'emphasis'];\r\n\t    var normalLabelAccessPath = ['label', 'normal'];\r\n\t    var emphasisLabelAccessPath = ['label', 'emphasis'];\r\n\r\n\t    symbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\r\n\t        var symbolPath = this.childAt(0);\r\n\t        var seriesModel = data.hostModel;\r\n\t        var color = data.getItemVisual(idx, 'color');\r\n\r\n\t        // Reset style\r\n\t        if (symbolPath.type !== 'image') {\r\n\t            symbolPath.useStyle({\r\n\t                strokeNoScale: true\r\n\t            });\r\n\t        }\r\n\r\n\t        seriesScope = seriesScope || null;\r\n\r\n\t        var itemStyle = seriesScope && seriesScope.itemStyle;\r\n\t        var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\r\n\t        var symbolRotate = seriesScope && seriesScope.symbolRotate;\r\n\t        var symbolOffset = seriesScope && seriesScope.symbolOffset;\r\n\t        var labelModel = seriesScope && seriesScope.labelModel;\r\n\t        var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\r\n\t        var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\r\n\r\n\t        if (!seriesScope || data.hasItemOption) {\r\n\t            var itemModel = data.getItemModel(idx);\r\n\r\n\t            // Color must be excluded.\r\n\t            // Because symbol provide setColor individually to set fill and stroke\r\n\t            itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\r\n\t            hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\r\n\r\n\t            symbolRotate = itemModel.getShallow('symbolRotate');\r\n\t            symbolOffset = itemModel.getShallow('symbolOffset');\r\n\r\n\t            labelModel = itemModel.getModel(normalLabelAccessPath);\r\n\t            hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\r\n\t            hoverAnimation = itemModel.getShallow('hoverAnimation');\r\n\t        }\r\n\t        else {\r\n\t            hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\r\n\t        }\r\n\r\n\t        var elStyle = symbolPath.style;\r\n\r\n\t        symbolPath.rotation = (symbolRotate || 0) * Math.PI / 180 || 0;\r\n\r\n\t        if (symbolOffset) {\r\n\t            symbolPath.attr('position', [\r\n\t                numberUtil.parsePercent(symbolOffset[0], symbolSize[0]),\r\n\t                numberUtil.parsePercent(symbolOffset[1], symbolSize[1])\r\n\t            ]);\r\n\t        }\r\n\r\n\t        // PENDING setColor before setStyle!!!\r\n\t        symbolPath.setColor(color);\r\n\r\n\t        symbolPath.setStyle(itemStyle);\r\n\r\n\t        var opacity = data.getItemVisual(idx, 'opacity');\r\n\t        if (opacity != null) {\r\n\t            elStyle.opacity = opacity;\r\n\t        }\r\n\r\n\t        // Get last value dim\r\n\t        var dimensions = data.dimensions.slice();\r\n\t        var valueDim;\r\n\t        var dataType;\r\n\t        while (dimensions.length && (\r\n\t            valueDim = dimensions.pop(),\r\n\t            dataType = data.getDimensionInfo(valueDim).type,\r\n\t            dataType === 'ordinal' || dataType === 'time'\r\n\t        )) {} // jshint ignore:line\r\n\r\n\t        if (valueDim != null && labelModel.getShallow('show')) {\r\n\t            graphic.setText(elStyle, labelModel, color);\r\n\t            elStyle.text = zrUtil.retrieve(\r\n\t                seriesModel.getFormattedLabel(idx, 'normal'),\r\n\t                data.get(valueDim, idx)\r\n\t            );\r\n\t        }\r\n\t        else {\r\n\t            elStyle.text = '';\r\n\t        }\r\n\r\n\t        if (valueDim != null && hoverLabelModel.getShallow('show')) {\r\n\t            graphic.setText(hoverItemStyle, hoverLabelModel, color);\r\n\t            hoverItemStyle.text = zrUtil.retrieve(\r\n\t                seriesModel.getFormattedLabel(idx, 'emphasis'),\r\n\t                data.get(valueDim, idx)\r\n\t            );\r\n\t        }\r\n\t        else {\r\n\t            hoverItemStyle.text = '';\r\n\t        }\r\n\r\n\t        var size = normalizeSymbolSize(data.getItemVisual(idx, 'symbolSize'));\r\n\r\n\t        symbolPath.off('mouseover')\r\n\t            .off('mouseout')\r\n\t            .off('emphasis')\r\n\t            .off('normal');\r\n\r\n\t        graphic.setHoverStyle(symbolPath, hoverItemStyle);\r\n\r\n\t        if (hoverAnimation && seriesModel.ifEnableAnimation()) {\r\n\t            var onEmphasis = function() {\r\n\t                var ratio = size[1] / size[0];\r\n\t                this.animateTo({\r\n\t                    scale: [\r\n\t                        Math.max(size[0] * 1.1, size[0] + 3),\r\n\t                        Math.max(size[1] * 1.1, size[1] + 3 * ratio)\r\n\t                    ]\r\n\t                }, 400, 'elasticOut');\r\n\t            };\r\n\t            var onNormal = function() {\r\n\t                this.animateTo({\r\n\t                    scale: size\r\n\t                }, 400, 'elasticOut');\r\n\t            };\r\n\t            symbolPath.on('mouseover', onEmphasis)\r\n\t                .on('mouseout', onNormal)\r\n\t                .on('emphasis', onEmphasis)\r\n\t                .on('normal', onNormal);\r\n\t        }\r\n\t    };\r\n\r\n\t    symbolProto.fadeOut = function (cb) {\r\n\t        var symbolPath = this.childAt(0);\r\n\t        // Avoid mistaken hover when fading out\r\n\t        this.silent = true;\r\n\t        // Not show text when animating\r\n\t        symbolPath.style.text = '';\r\n\t        graphic.updateProps(symbolPath, {\r\n\t            scale: [0, 0]\r\n\t        }, this._seriesModel, this.dataIndex, cb);\r\n\t    };\r\n\r\n\t    zrUtil.inherits(Symbol, graphic.Group);\r\n\r\n\t    module.exports = Symbol;\r\n\r\n\r\n/***/ },\r\n/* 106 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t'use strict';\r\n\t// Symbol factory\r\n\r\n\r\n\t    var graphic = __webpack_require__(43);\r\n\t    var BoundingRect = __webpack_require__(9);\r\n\r\n\t    /**\r\n\t     * Triangle shape\r\n\t     * @inner\r\n\t     */\r\n\t    var Triangle = graphic.extendShape({\r\n\t        type: 'triangle',\r\n\t        shape: {\r\n\t            cx: 0,\r\n\t            cy: 0,\r\n\t            width: 0,\r\n\t            height: 0\r\n\t        },\r\n\t        buildPath: function (path, shape) {\r\n\t            var cx = shape.cx;\r\n\t            var cy = shape.cy;\r\n\t            var width = shape.width / 2;\r\n\t            var height = shape.height / 2;\r\n\t            path.moveTo(cx, cy - height);\r\n\t            path.lineTo(cx + width, cy + height);\r\n\t            path.lineTo(cx - width, cy + height);\r\n\t            path.closePath();\r\n\t        }\r\n\t    });\r\n\t    /**\r\n\t     * Diamond shape\r\n\t     * @inner\r\n\t     */\r\n\t    var Diamond = graphic.extendShape({\r\n\t        type: 'diamond',\r\n\t        shape: {\r\n\t            cx: 0,\r\n\t            cy: 0,\r\n\t            width: 0,\r\n\t            height: 0\r\n\t        },\r\n\t        buildPath: function (path, shape) {\r\n\t            var cx = shape.cx;\r\n\t            var cy = shape.cy;\r\n\t            var width = shape.width / 2;\r\n\t            var height = shape.height / 2;\r\n\t            path.moveTo(cx, cy - height);\r\n\t            path.lineTo(cx + width, cy);\r\n\t            path.lineTo(cx, cy + height);\r\n\t            path.lineTo(cx - width, cy);\r\n\t            path.closePath();\r\n\t        }\r\n\t    });\r\n\r\n\t    /**\r\n\t     * Pin shape\r\n\t     * @inner\r\n\t     */\r\n\t    var Pin = graphic.extendShape({\r\n\t        type: 'pin',\r\n\t        shape: {\r\n\t            // x, y on the cusp\r\n\t            x: 0,\r\n\t            y: 0,\r\n\t            width: 0,\r\n\t            height: 0\r\n\t        },\r\n\r\n\t        buildPath: function (path, shape) {\r\n\t            var x = shape.x;\r\n\t            var y = shape.y;\r\n\t            var w = shape.width / 5 * 3;\r\n\t            // Height must be larger than width\r\n\t            var h = Math.max(w, shape.height);\r\n\t            var r = w / 2;\r\n\r\n\t            // Dist on y with tangent point and circle center\r\n\t            var dy = r * r / (h - r);\r\n\t            var cy = y - h + r + dy;\r\n\t            var angle = Math.asin(dy / r);\r\n\t            // Dist on x with tangent point and circle center\r\n\t            var dx = Math.cos(angle) * r;\r\n\r\n\t            var tanX = Math.sin(angle);\r\n\t            var tanY = Math.cos(angle);\r\n\r\n\t            path.arc(\r\n\t                x, cy, r,\r\n\t                Math.PI - angle,\r\n\t                Math.PI * 2 + angle\r\n\t            );\r\n\r\n\t            var cpLen = r * 0.6;\r\n\t            var cpLen2 = r * 0.7;\r\n\t            path.bezierCurveTo(\r\n\t                x + dx - tanX * cpLen, cy + dy + tanY * cpLen,\r\n\t                x, y - cpLen2,\r\n\t                x, y\r\n\t            );\r\n\t            path.bezierCurveTo(\r\n\t                x, y - cpLen2,\r\n\t                x - dx + tanX * cpLen, cy + dy + tanY * cpLen,\r\n\t                x - dx, cy + dy\r\n\t            );\r\n\t            path.closePath();\r\n\t        }\r\n\t    });\r\n\r\n\t    /**\r\n\t     * Arrow shape\r\n\t     * @inner\r\n\t     */\r\n\t    var Arrow = graphic.extendShape({\r\n\r\n\t        type: 'arrow',\r\n\r\n\t        shape: {\r\n\t            x: 0,\r\n\t            y: 0,\r\n\t            width: 0,\r\n\t            height: 0\r\n\t        },\r\n\r\n\t        buildPath: function (ctx, shape) {\r\n\t            var height = shape.height;\r\n\t            var width = shape.width;\r\n\t            var x = shape.x;\r\n\t            var y = shape.y;\r\n\t            var dx = width / 3 * 2;\r\n\t            ctx.moveTo(x, y);\r\n\t            ctx.lineTo(x + dx, y + height);\r\n\t            ctx.lineTo(x, y + height / 4 * 3);\r\n\t            ctx.lineTo(x - dx, y + height);\r\n\t            ctx.lineTo(x, y);\r\n\t            ctx.closePath();\r\n\t        }\r\n\t    });\r\n\r\n\t    /**\r\n\t     * Map of path contructors\r\n\t     * @type {Object.<string, module:zrender/graphic/Path>}\r\n\t     */\r\n\t    var symbolCtors = {\r\n\t        line: graphic.Line,\r\n\r\n\t        rect: graphic.Rect,\r\n\r\n\t        roundRect: graphic.Rect,\r\n\r\n\t        square: graphic.Rect,\r\n\r\n\t        circle: graphic.Circle,\r\n\r\n\t        diamond: Diamond,\r\n\r\n\t        pin: Pin,\r\n\r\n\t        arrow: Arrow,\r\n\r\n\t        triangle: Triangle\r\n\t    };\r\n\r\n\t    var symbolShapeMakers = {\r\n\r\n\t        line: function (x, y, w, h, shape) {\r\n\t            // FIXME\r\n\t            shape.x1 = x;\r\n\t            shape.y1 = y + h / 2;\r\n\t            shape.x2 = x + w;\r\n\t            shape.y2 = y + h / 2;\r\n\t        },\r\n\r\n\t        rect: function (x, y, w, h, shape) {\r\n\t            shape.x = x;\r\n\t            shape.y = y;\r\n\t            shape.width = w;\r\n\t            shape.height = h;\r\n\t        },\r\n\r\n\t        roundRect: function (x, y, w, h, shape) {\r\n\t            shape.x = x;\r\n\t            shape.y = y;\r\n\t            shape.width = w;\r\n\t            shape.height = h;\r\n\t            shape.r = Math.min(w, h) / 4;\r\n\t        },\r\n\r\n\t        square: function (x, y, w, h, shape) {\r\n\t            var size = Math.min(w, h);\r\n\t            shape.x = x;\r\n\t            shape.y = y;\r\n\t            shape.width = size;\r\n\t            shape.height = size;\r\n\t        },\r\n\r\n\t        circle: function (x, y, w, h, shape) {\r\n\t            // Put circle in the center of square\r\n\t            shape.cx = x + w / 2;\r\n\t            shape.cy = y + h / 2;\r\n\t            shape.r = Math.min(w, h) / 2;\r\n\t        },\r\n\r\n\t        diamond: function (x, y, w, h, shape) {\r\n\t            shape.cx = x + w / 2;\r\n\t            shape.cy = y + h / 2;\r\n\t            shape.width = w;\r\n\t            shape.height = h;\r\n\t        },\r\n\r\n\t        pin: function (x, y, w, h, shape) {\r\n\t            shape.x = x + w / 2;\r\n\t            shape.y = y + h / 2;\r\n\t            shape.width = w;\r\n\t            shape.height = h;\r\n\t        },\r\n\r\n\t        arrow: function (x, y, w, h, shape) {\r\n\t            shape.x = x + w / 2;\r\n\t            shape.y = y + h / 2;\r\n\t            shape.width = w;\r\n\t            shape.height = h;\r\n\t        },\r\n\r\n\t        triangle: function (x, y, w, h, shape) {\r\n\t            shape.cx = x + w / 2;\r\n\t            shape.cy = y + h / 2;\r\n\t            shape.width = w;\r\n\t            shape.height = h;\r\n\t        }\r\n\t    };\r\n\r\n\t    var symbolBuildProxies = {};\r\n\t    for (var name in symbolCtors) {\r\n\t        symbolBuildProxies[name] = new symbolCtors[name]();\r\n\t    }\r\n\r\n\t    var Symbol = graphic.extendShape({\r\n\r\n\t        type: 'symbol',\r\n\r\n\t        shape: {\r\n\t            symbolType: '',\r\n\t            x: 0,\r\n\t            y: 0,\r\n\t            width: 0,\r\n\t            height: 0\r\n\t        },\r\n\r\n\t        beforeBrush: function () {\r\n\t            var style = this.style;\r\n\t            var shape = this.shape;\r\n\t            // FIXME\r\n\t            if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\r\n\t                style.textPosition = ['50%', '40%'];\r\n\t                style.textAlign = 'center';\r\n\t                style.textVerticalAlign = 'middle';\r\n\t            }\r\n\t        },\r\n\r\n\t        buildPath: function (ctx, shape, inBundle) {\r\n\t            var symbolType = shape.symbolType;\r\n\t            var proxySymbol = symbolBuildProxies[symbolType];\r\n\t            if (shape.symbolType !== 'none') {\r\n\t                if (!proxySymbol) {\r\n\t                    // Default rect\r\n\t                    symbolType = 'rect';\r\n\t                    proxySymbol = symbolBuildProxies[symbolType];\r\n\t                }\r\n\t                symbolShapeMakers[symbolType](\r\n\t                    shape.x, shape.y, shape.width, shape.height, proxySymbol.shape\r\n\t                );\r\n\t                proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\r\n\t            }\r\n\t        }\r\n\t    });\r\n\r\n\t    // Provide setColor helper method to avoid determine if set the fill or stroke outside\r\n\t    var symbolPathSetColor = function (color) {\r\n\t        if (this.type !== 'image') {\r\n\t            var symbolStyle = this.style;\r\n\t            var symbolShape = this.shape;\r\n\t            if (symbolShape && symbolShape.symbolType === 'line') {\r\n\t                symbolStyle.stroke = color;\r\n\t            }\r\n\t            else if (this.__isEmptyBrush) {\r\n\t                symbolStyle.stroke = color;\r\n\t                symbolStyle.fill = '#fff';\r\n\t            }\r\n\t            else {\r\n\t                // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\r\n\t                symbolStyle.fill && (symbolStyle.fill = color);\r\n\t                symbolStyle.stroke && (symbolStyle.stroke = color);\r\n\t            }\r\n\t            this.dirty(false);\r\n\t        }\r\n\t    };\r\n\r\n\t    var symbolUtil = {\r\n\t        /**\r\n\t         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\r\n\t         * @param {string} symbolType\r\n\t         * @param {number} x\r\n\t         * @param {number} y\r\n\t         * @param {number} w\r\n\t         * @param {number} h\r\n\t         * @param {string} color\r\n\t         */\r\n\t        createSymbol: function (symbolType, x, y, w, h, color) {\r\n\t            var isEmpty = symbolType.indexOf('empty') === 0;\r\n\t            if (isEmpty) {\r\n\t                symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\r\n\t            }\r\n\t            var symbolPath;\r\n\r\n\t            if (symbolType.indexOf('image://') === 0) {\r\n\t                symbolPath = new graphic.Image({\r\n\t                    style: {\r\n\t                        image: symbolType.slice(8),\r\n\t                        x: x,\r\n\t                        y: y,\r\n\t                        width: w,\r\n\t                        height: h\r\n\t                    }\r\n\t                });\r\n\t            }\r\n\t            else if (symbolType.indexOf('path://') === 0) {\r\n\t                symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h));\r\n\t            }\r\n\t            else {\r\n\t                symbolPath = new Symbol({\r\n\t                    shape: {\r\n\t                        symbolType: symbolType,\r\n\t                        x: x,\r\n\t                        y: y,\r\n\t                        width: w,\r\n\t                        height: h\r\n\t                    }\r\n\t                });\r\n\t            }\r\n\r\n\t            symbolPath.__isEmptyBrush = isEmpty;\r\n\r\n\t            symbolPath.setColor = symbolPathSetColor;\r\n\r\n\t            symbolPath.setColor(color);\r\n\r\n\t            return symbolPath;\r\n\t        }\r\n\t    };\r\n\r\n\t    module.exports = symbolUtil;\r\n\r\n\r\n/***/ },\r\n/* 107 */\r\n/***/ function(module, exports) {\r\n\r\n\t\r\n\r\n\t    // var arrayDiff = require('zrender/lib/core/arrayDiff');\r\n\t    // 'zrender/core/arrayDiff' has been used before, but it did\r\n\t    // not do well in performance when roam with fixed dataZoom window.\r\n\r\n\t    function sign(val) {\r\n\t        return val >= 0 ? 1 : -1;\r\n\t    }\r\n\r\n\t    function getStackedOnPoint(coordSys, data, idx) {\r\n\t        var baseAxis = coordSys.getBaseAxis();\r\n\t        var valueAxis = coordSys.getOtherAxis(baseAxis);\r\n\t        var valueStart = baseAxis.onZero\r\n\t            ? 0 : valueAxis.scale.getExtent()[0];\r\n\r\n\t        var valueDim = valueAxis.dim;\r\n\t        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\r\n\r\n\t        var stackedOnSameSign;\r\n\t        var stackedOn = data.stackedOn;\r\n\t        var val = data.get(valueDim, idx);\r\n\t        // Find first stacked value with same sign\r\n\t        while (stackedOn &&\r\n\t            sign(stackedOn.get(valueDim, idx)) === sign(val)\r\n\t        ) {\r\n\t            stackedOnSameSign = stackedOn;\r\n\t            break;\r\n\t        }\r\n\t        var stackedData = [];\r\n\t        stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\r\n\t        stackedData[1 - baseDataOffset] = stackedOnSameSign\r\n\t            ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\r\n\r\n\t        return coordSys.dataToPoint(stackedData);\r\n\t    }\r\n\r\n\t    // function convertToIntId(newIdList, oldIdList) {\r\n\t    //     // Generate int id instead of string id.\r\n\t    //     // Compare string maybe slow in score function of arrDiff\r\n\r\n\t    //     // Assume id in idList are all unique\r\n\t    //     var idIndicesMap = {};\r\n\t    //     var idx = 0;\r\n\t    //     for (var i = 0; i < newIdList.length; i++) {\r\n\t    //         idIndicesMap[newIdList[i]] = idx;\r\n\t    //         newIdList[i] = idx++;\r\n\t    //     }\r\n\t    //     for (var i = 0; i < oldIdList.length; i++) {\r\n\t    //         var oldId = oldIdList[i];\r\n\t    //         // Same with newIdList\r\n\t    //         if (idIndicesMap[oldId]) {\r\n\t    //             oldIdList[i] = idIndicesMap[oldId];\r\n\t    //         }\r\n\t    //         else {\r\n\t    //             oldIdList[i] = idx++;\r\n\t    //         }\r\n\t    //     }\r\n\t    // }\r\n\r\n\t    function diffData(oldData, newData) {\r\n\t        var diffResult = [];\r\n\r\n\t        newData.diff(oldData)\r\n\t            .add(function (idx) {\r\n\t                diffResult.push({cmd: '+', idx: idx});\r\n\t            })\r\n\t            .update(function (newIdx, oldIdx) {\r\n\t                diffResult.push({cmd: '=', idx: oldIdx, idx1: newIdx});\r\n\t            })\r\n\t            .remove(function (idx) {\r\n\t                diffResult.push({cmd: '-', idx: idx});\r\n\t            })\r\n\t            .execute();\r\n\r\n\t        return diffResult;\r\n\t    }\r\n\r\n\t    module.exports = function (\r\n\t        oldData, newData,\r\n\t        oldStackedOnPoints, newStackedOnPoints,\r\n\t        oldCoordSys, newCoordSys\r\n\t    ) {\r\n\t        var diff = diffData(oldData, newData);\r\n\r\n\t        // var newIdList = newData.mapArray(newData.getId);\r\n\t        // var oldIdList = oldData.mapArray(oldData.getId);\r\n\r\n\t        // convertToIntId(newIdList, oldIdList);\r\n\r\n\t        // // FIXME One data ?\r\n\t        // diff = arrayDiff(oldIdList, newIdList);\r\n\r\n\t        var currPoints = [];\r\n\t        var nextPoints = [];\r\n\t        // Points for stacking base line\r\n\t        var currStackedPoints = [];\r\n\t        var nextStackedPoints = [];\r\n\r\n\t        var status = [];\r\n\t        var sortedIndices = [];\r\n\t        var rawIndices = [];\r\n\t        var dims = newCoordSys.dimensions;\r\n\t        for (var i = 0; i < diff.length; i++) {\r\n\t            var diffItem = diff[i];\r\n\t            var pointAdded = true;\r\n\r\n\t            // FIXME, animation is not so perfect when dataZoom window moves fast\r\n\t            // Which is in case remvoing or add more than one data in the tail or head\r\n\t            switch (diffItem.cmd) {\r\n\t                case '=':\r\n\t                    var currentPt = oldData.getItemLayout(diffItem.idx);\r\n\t                    var nextPt = newData.getItemLayout(diffItem.idx1);\r\n\t                    // If previous data is NaN, use next point directly\r\n\t                    if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\r\n\t                        currentPt = nextPt.slice();\r\n\t                    }\r\n\t                    currPoints.push(currentPt);\r\n\t                    nextPoints.push(nextPt);\r\n\r\n\t                    currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\r\n\t                    nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\r\n\r\n\t                    rawIndices.push(newData.getRawIndex(diffItem.idx1));\r\n\t                    break;\r\n\t                case '+':\r\n\t                    var idx = diffItem.idx;\r\n\t                    currPoints.push(\r\n\t                        oldCoordSys.dataToPoint([\r\n\t                            newData.get(dims[0], idx, true), newData.get(dims[1], idx, true)\r\n\t                        ])\r\n\t                    );\r\n\r\n\t                    nextPoints.push(newData.getItemLayout(idx).slice());\r\n\r\n\t                    currStackedPoints.push(\r\n\t                        getStackedOnPoint(oldCoordSys, newData, idx)\r\n\t                    );\r\n\t                    nextStackedPoints.push(newStackedOnPoints[idx]);\r\n\r\n\t                    rawIndices.push(newData.getRawIndex(idx));\r\n\t                    break;\r\n\t                case '-':\r\n\t                    var idx = diffItem.idx;\r\n\t                    var rawIndex = oldData.getRawIndex(idx);\r\n\t                    // Data is replaced. In the case of dynamic data queue\r\n\t                    // FIXME FIXME FIXME\r\n\t                    if (rawIndex !== idx) {\r\n\t                        currPoints.push(oldData.getItemLayout(idx));\r\n\t                        nextPoints.push(newCoordSys.dataToPoint([\r\n\t                            oldData.get(dims[0], idx, true), oldData.get(dims[1], idx, true)\r\n\t                        ]));\r\n\r\n\t                        currStackedPoints.push(oldStackedOnPoints[idx]);\r\n\t                        nextStackedPoints.push(\r\n\t                            getStackedOnPoint(\r\n\t                                newCoordSys, oldData, idx\r\n\t                            )\r\n\t                        );\r\n\r\n\t                        rawIndices.push(rawIndex);\r\n\t                    }\r\n\t                    else {\r\n\t                        pointAdded = false;\r\n\t                    }\r\n\t            }\r\n\r\n\t            // Original indices\r\n\t            if (pointAdded) {\r\n\t                status.push(diffItem);\r\n\t                sortedIndices.push(sortedIndices.length);\r\n\t            }\r\n\t        }\r\n\r\n\t        // Diff result may be crossed if all items are changed\r\n\t        // Sort by data index\r\n\t        sortedIndices.sort(function (a, b) {\r\n\t            return rawIndices[a] - rawIndices[b];\r\n\t        });\r\n\r\n\t        var sortedCurrPoints = [];\r\n\t        var sortedNextPoints = [];\r\n\r\n\t        var sortedCurrStackedPoints = [];\r\n\t        var sortedNextStackedPoints = [];\r\n\r\n\t        var sortedStatus = [];\r\n\t        for (var i = 0; i < sortedIndices.length; i++) {\r\n\t            var idx = sortedIndices[i];\r\n\t            sortedCurrPoints[i] = currPoints[idx];\r\n\t            sortedNextPoints[i] = nextPoints[idx];\r\n\r\n\t            sortedCurrStackedPoints[i] = currStackedPoints[idx];\r\n\t            sortedNextStackedPoints[i] = nextStackedPoints[idx];\r\n\r\n\t            sortedStatus[i] = status[idx];\r\n\t        }\r\n\r\n\t        return {\r\n\t            current: sortedCurrPoints,\r\n\t            next: sortedNextPoints,\r\n\r\n\t            stackedOnCurrent: sortedCurrStackedPoints,\r\n\t            stackedOnNext: sortedNextStackedPoints,\r\n\r\n\t            status: sortedStatus\r\n\t        };\r\n\t    };\r\n\r\n\r\n/***/ },\r\n/* 108 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t// Poly path support NaN point\r\n\r\n\r\n\t    var Path = __webpack_require__(45);\r\n\t    var vec2 = __webpack_require__(10);\r\n\r\n\t    var vec2Min = vec2.min;\r\n\t    var vec2Max = vec2.max;\r\n\r\n\t    var scaleAndAdd = vec2.scaleAndAdd;\r\n\t    var v2Copy = vec2.copy;\r\n\r\n\t    // Temporary variable\r\n\t    var v = [];\r\n\t    var cp0 = [];\r\n\t    var cp1 = [];\r\n\r\n\t    function isPointNull(p) {\r\n\t        return isNaN(p[0]) || isNaN(p[1]);\r\n\t    }\r\n\r\n\t    function drawSegment(\r\n\t        ctx, points, start, segLen, allLen,\r\n\t        dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls\r\n\t    ) {\r\n\t        var prevIdx = 0;\r\n\t        var idx = start;\r\n\t        for (var k = 0; k < segLen; k++) {\r\n\t            var p = points[idx];\r\n\t            if (idx >= allLen || idx < 0) {\r\n\t                break;\r\n\t            }\r\n\t            if (isPointNull(p)) {\r\n\t                if (connectNulls) {\r\n\t                    idx += dir;\r\n\t                    continue;\r\n\t                }\r\n\t                break;\r\n\t            }\r\n\r\n\t            if (idx === start) {\r\n\t                ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\r\n\t                v2Copy(cp0, p);\r\n\t            }\r\n\t            else {\r\n\t                if (smooth > 0) {\r\n\t                    var nextIdx = idx + dir;\r\n\t                    var nextP = points[nextIdx];\r\n\t                    if (connectNulls) {\r\n\t                        // Find next point not null\r\n\t                        while (nextP && isPointNull(points[nextIdx])) {\r\n\t                            nextIdx += dir;\r\n\t                            nextP = points[nextIdx];\r\n\t                        }\r\n\t                    }\r\n\r\n\t                    var ratioNextSeg = 0.5;\r\n\t                    var prevP = points[prevIdx];\r\n\t                    var nextP = points[nextIdx];\r\n\t                    // Last point\r\n\t                    if (!nextP || isPointNull(nextP)) {\r\n\t                        v2Copy(cp1, p);\r\n\t                    }\r\n\t                    else {\r\n\t                        // If next data is null in not connect case\r\n\t                        if (isPointNull(nextP) && !connectNulls) {\r\n\t                            nextP = p;\r\n\t                        }\r\n\r\n\t                        vec2.sub(v, nextP, prevP);\r\n\r\n\t                        var lenPrevSeg;\r\n\t                        var lenNextSeg;\r\n\t                        if (smoothMonotone === 'x' || smoothMonotone === 'y') {\r\n\t                            var dim = smoothMonotone === 'x' ? 0 : 1;\r\n\t                            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\r\n\t                            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\r\n\t                        }\r\n\t                        else {\r\n\t                            lenPrevSeg = vec2.dist(p, prevP);\r\n\t                            lenNextSeg = vec2.dist(p, nextP);\r\n\t                        }\r\n\r\n\t                        // Use ratio of seg length\r\n\t                        ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\r\n\r\n\t                        scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\r\n\t                    }\r\n\t                    // Smooth constraint\r\n\t                    vec2Min(cp0, cp0, smoothMax);\r\n\t                    vec2Max(cp0, cp0, smoothMin);\r\n\t                    vec2Min(cp1, cp1, smoothMax);\r\n\t                    vec2Max(cp1, cp1, smoothMin);\r\n\r\n\t                    ctx.bezierCurveTo(\r\n\t                        cp0[0], cp0[1],\r\n\t                        cp1[0], cp1[1],\r\n\t                        p[0], p[1]\r\n\t                    );\r\n\t                    // cp0 of next segment\r\n\t                    scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\r\n\t                }\r\n\t                else {\r\n\t                    ctx.lineTo(p[0], p[1]);\r\n\t                }\r\n\t            }\r\n\r\n\t            prevIdx = idx;\r\n\t            idx += dir;\r\n\t        }\r\n\r\n\t        return k;\r\n\t    }\r\n\r\n\t    function getBoundingBox(points, smoothConstraint) {\r\n\t        var ptMin = [Infinity, Infinity];\r\n\t        var ptMax = [-Infinity, -Infinity];\r\n\t        if (smoothConstraint) {\r\n\t            for (var i = 0; i < points.length; i++) {\r\n\t                var pt = points[i];\r\n\t                if (pt[0] < ptMin[0]) { ptMin[0] = pt[0]; }\r\n\t                if (pt[1] < ptMin[1]) { ptMin[1] = pt[1]; }\r\n\t                if (pt[0] > ptMax[0]) { ptMax[0] = pt[0]; }\r\n\t                if (pt[1] > ptMax[1]) { ptMax[1] = pt[1]; }\r\n\t            }\r\n\t        }\r\n\t        return {\r\n\t            min: smoothConstraint ? ptMin : ptMax,\r\n\t            max: smoothConstraint ? ptMax : ptMin\r\n\t        };\r\n\t    }\r\n\r\n\t    module.exports = {\r\n\r\n\t        Polyline: Path.extend({\r\n\r\n\t            type: 'ec-polyline',\r\n\r\n\t            shape: {\r\n\t                points: [],\r\n\r\n\t                smooth: 0,\r\n\r\n\t                smoothConstraint: true,\r\n\r\n\t                smoothMonotone: null,\r\n\r\n\t                connectNulls: false\r\n\t            },\r\n\r\n\t            style: {\r\n\t                fill: null,\r\n\r\n\t                stroke: '#000'\r\n\t            },\r\n\r\n\t            buildPath: function (ctx, shape) {\r\n\t                var points = shape.points;\r\n\r\n\t                var i = 0;\r\n\t                var len = points.length;\r\n\r\n\t                var result = getBoundingBox(points, shape.smoothConstraint);\r\n\r\n\t                if (shape.connectNulls) {\r\n\t                    // Must remove first and last null values avoid draw error in polygon\r\n\t                    for (; len > 0; len--) {\r\n\t                        if (!isPointNull(points[len - 1])) {\r\n\t                            break;\r\n\t                        }\r\n\t                    }\r\n\t                    for (; i < len; i++) {\r\n\t                        if (!isPointNull(points[i])) {\r\n\t                            break;\r\n\t                        }\r\n\t                    }\r\n\t                }\r\n\t                while (i < len) {\r\n\t                    i += drawSegment(\r\n\t                        ctx, points, i, len, len,\r\n\t                        1, result.min, result.max, shape.smooth,\r\n\t                        shape.smoothMonotone, shape.connectNulls\r\n\t                    ) + 1;\r\n\t                }\r\n\t            }\r\n\t        }),\r\n\r\n\t        Polygon: Path.extend({\r\n\r\n\t            type: 'ec-polygon',\r\n\r\n\t            shape: {\r\n\t                points: [],\r\n\r\n\t                // Offset between stacked base points and points\r\n\t                stackedOnPoints: [],\r\n\r\n\t                smooth: 0,\r\n\r\n\t                stackedOnSmooth: 0,\r\n\r\n\t                smoothConstraint: true,\r\n\r\n\t                smoothMonotone: null,\r\n\r\n\t                connectNulls: false\r\n\t            },\r\n\r\n\t            buildPath: function (ctx, shape) {\r\n\t                var points = shape.points;\r\n\t                var stackedOnPoints = shape.stackedOnPoints;\r\n\r\n\t                var i = 0;\r\n\t                var len = points.length;\r\n\t                var smoothMonotone = shape.smoothMonotone;\r\n\t                var bbox = getBoundingBox(points, shape.smoothConstraint);\r\n\t                var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\r\n\r\n\t                if (shape.connectNulls) {\r\n\t                    // Must remove first and last null values avoid draw error in polygon\r\n\t                    for (; len > 0; len--) {\r\n\t                        if (!isPointNull(points[len - 1])) {\r\n\t                            break;\r\n\t                        }\r\n\t                    }\r\n\t                    for (; i < len; i++) {\r\n\t                        if (!isPointNull(points[i])) {\r\n\t                            break;\r\n\t                        }\r\n\t                    }\r\n\t                }\r\n\t                while (i < len) {\r\n\t                    var k = drawSegment(\r\n\t                        ctx, points, i, len, len,\r\n\t                        1, bbox.min, bbox.max, shape.smooth,\r\n\t                        smoothMonotone, shape.connectNulls\r\n\t                    );\r\n\t                    drawSegment(\r\n\t                        ctx, stackedOnPoints, i + k - 1, k, len,\r\n\t                        -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth,\r\n\t                        smoothMonotone, shape.connectNulls\r\n\t                    );\r\n\t                    i += k + 1;\r\n\r\n\t                    ctx.closePath();\r\n\t                }\r\n\t            }\r\n\t        })\r\n\t    };\r\n\r\n\r\n/***/ },\r\n/* 109 */\r\n/***/ function(module, exports) {\r\n\r\n\t\r\n\r\n\t    module.exports = function (seriesType, defaultSymbolType, legendSymbol, ecModel, api) {\r\n\r\n\t        // Encoding visual for all series include which is filtered for legend drawing\r\n\t        ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\r\n\t            var data = seriesModel.getData();\r\n\r\n\t            var symbolType = seriesModel.get('symbol') || defaultSymbolType;\r\n\t            var symbolSize = seriesModel.get('symbolSize');\r\n\r\n\t            data.setVisual({\r\n\t                legendSymbol: legendSymbol || symbolType,\r\n\t                symbol: symbolType,\r\n\t                symbolSize: symbolSize\r\n\t            });\r\n\r\n\t            // Only visible series has each data be visual encoded\r\n\t            if (!ecModel.isSeriesFiltered(seriesModel)) {\r\n\t                if (typeof symbolSize === 'function') {\r\n\t                    data.each(function (idx) {\r\n\t                        var rawValue = seriesModel.getRawValue(idx);\r\n\t                        // FIXME\r\n\t                        var params = seriesModel.getDataParams(idx);\r\n\t                        data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\r\n\t                    });\r\n\t                }\r\n\t                data.each(function (idx) {\r\n\t                    var itemModel = data.getItemModel(idx);\r\n\t                    var itemSymbolType = itemModel.getShallow('symbol', true);\r\n\t                    var itemSymbolSize = itemModel.getShallow('symbolSize', true);\r\n\t                    // If has item symbol\r\n\t                    if (itemSymbolType != null) {\r\n\t                        data.setItemVisual(idx, 'symbol', itemSymbolType);\r\n\t                    }\r\n\t                    if (itemSymbolSize != null) {\r\n\t                        // PENDING Transform symbolSize ?\r\n\t                        data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\r\n\t                    }\r\n\t                });\r\n\t            }\r\n\t        });\r\n\t    };\r\n\r\n\r\n/***/ },\r\n/* 110 */\r\n/***/ function(module, exports) {\r\n\r\n\t\r\n\r\n\t    module.exports = function (seriesType, ecModel) {\r\n\t        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\r\n\t            var data = seriesModel.getData();\r\n\t            var coordSys = seriesModel.coordinateSystem;\r\n\r\n\t            if (coordSys) {\r\n\t                var dims = coordSys.dimensions;\r\n\r\n\t                if (coordSys.type === 'singleAxis') {\r\n\t                    data.each(dims[0], function (x, idx) {\r\n\t                        // Also {Array.<number>}, not undefined to avoid if...else... statement\r\n\t                        data.setItemLayout(idx, isNaN(x) ? [NaN, NaN] : coordSys.dataToPoint(x));\r\n\t                    });\r\n\t                }\r\n\t                else {\r\n\t                    data.each(dims, function (x, y, idx) {\r\n\t                        // Also {Array.<number>}, not undefined to avoid if...else... statement\r\n\t                        data.setItemLayout(\r\n\t                            idx, (isNaN(x) || isNaN(y)) ? [NaN, NaN] : coordSys.dataToPoint([x, y])\r\n\t                        );\r\n\t                    }, true);\r\n\t                }\r\n\t            }\r\n\t        });\r\n\t    };\r\n\r\n\r\n/***/ },\r\n/* 111 */\r\n/***/ function(module, exports) {\r\n\r\n\t\r\n\t    var samplers = {\r\n\t        average: function (frame) {\r\n\t            var sum = 0;\r\n\t            var count = 0;\r\n\t            for (var i = 0; i < frame.length; i++) {\r\n\t                if (!isNaN(frame[i])) {\r\n\t                    sum += frame[i];\r\n\t                    count++;\r\n\t                }\r\n\t            }\r\n\t            // Return NaN if count is 0\r\n\t            return count === 0 ? NaN : sum / count;\r\n\t        },\r\n\t        sum: function (frame) {\r\n\t            var sum = 0;\r\n\t            for (var i = 0; i < frame.length; i++) {\r\n\t                // Ignore NaN\r\n\t                sum += frame[i] || 0;\r\n\t            }\r\n\t            return sum;\r\n\t        },\r\n\t        max: function (frame) {\r\n\t            var max = -Infinity;\r\n\t            for (var i = 0; i < frame.length; i++) {\r\n\t                frame[i] > max && (max = frame[i]);\r\n\t            }\r\n\t            return max;\r\n\t        },\r\n\t        min: function (frame) {\r\n\t            var min = Infinity;\r\n\t            for (var i = 0; i < frame.length; i++) {\r\n\t                frame[i] < min && (min = frame[i]);\r\n\t            }\r\n\t            return min;\r\n\t        },\r\n\t        // TODO\r\n\t        // Median\r\n\t        nearest: function (frame) {\r\n\t            return frame[0];\r\n\t        }\r\n\t    };\r\n\r\n\t    var indexSampler = function (frame, value) {\r\n\t        return Math.round(frame.length / 2);\r\n\t    };\r\n\t    module.exports = function (seriesType, ecModel, api) {\r\n\t        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\r\n\t            var data = seriesModel.getData();\r\n\t            var sampling = seriesModel.get('sampling');\r\n\t            var coordSys = seriesModel.coordinateSystem;\r\n\t            // Only cartesian2d support down sampling\r\n\t            if (coordSys.type === 'cartesian2d' && sampling) {\r\n\t                var baseAxis = coordSys.getBaseAxis();\r\n\t                var valueAxis = coordSys.getOtherAxis(baseAxis);\r\n\t                var extent = baseAxis.getExtent();\r\n\t                // Coordinste system has been resized\r\n\t                var size = extent[1] - extent[0];\r\n\t                var rate = Math.round(data.count() / size);\r\n\t                if (rate > 1) {\r\n\t                    var sampler;\r\n\t                    if (typeof sampling === 'string') {\r\n\t                        sampler = samplers[sampling];\r\n\t                    }\r\n\t                    else if (typeof sampling === 'function') {\r\n\t                        sampler = sampling;\r\n\t                    }\r\n\t                    if (sampler) {\r\n\t                        data = data.downSample(\r\n\t                            valueAxis.dim, 1 / rate, sampler, indexSampler\r\n\t                        );\r\n\t                        seriesModel.setData(data);\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t        }, this);\r\n\t    };\r\n\r\n\r\n/***/ },\r\n/* 112 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t'use strict';\r\n\r\n\r\n\t    var graphic = __webpack_require__(43);\r\n\t    var zrUtil = __webpack_require__(4);\r\n\r\n\t    __webpack_require__(113);\r\n\r\n\t    __webpack_require__(130);\r\n\r\n\t    // Grid view\r\n\t    __webpack_require__(1).extendComponentView({\r\n\r\n\t        type: 'grid',\r\n\r\n\t        render: function (gridModel, ecModel) {\r\n\t            this.group.removeAll();\r\n\t            if (gridModel.get('show')) {\r\n\t                this.group.add(new graphic.Rect({\r\n\t                    shape:gridModel.coordinateSystem.getRect(),\r\n\t                    style: zrUtil.defaults({\r\n\t                        fill: gridModel.get('backgroundColor')\r\n\t                    }, gridModel.getItemStyle()),\r\n\t                    silent: true\r\n\t                }));\r\n\t            }\r\n\t        }\r\n\t    });\r\n\r\n\r\n/***/ },\r\n/* 113 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t/**\r\n\t * Grid is a region which contains at most 4 cartesian systems\r\n\t *\r\n\t * TODO Default cartesian\r\n\t */\r\n\tvar factory = exports;\r\n\r\n\t    var layout = __webpack_require__(21);\r\n\t    var axisHelper = __webpack_require__(114);\r\n\r\n\t    var zrUtil = __webpack_require__(4);\r\n\t    var Cartesian2D = __webpack_require__(120);\r\n\t    var Axis2D = __webpack_require__(122);\r\n\r\n\t    var each = zrUtil.each;\r\n\r\n\t    var ifAxisCrossZero = axisHelper.ifAxisCrossZero;\r\n\t    var niceScaleExtent = axisHelper.niceScaleExtent;\r\n\r\n\t    // 依赖 GridModel, AxisModel 做预处理\r\n\t    __webpack_require__(125);\r\n\r\n\t    /**\r\n\t     * Check if the axis is used in the specified grid\r\n\t     * @inner\r\n\t     */\r\n\t    function isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\r\n\t        return ecModel.getComponent('grid', axisModel.get('gridIndex')) === gridModel;\r\n\t    }\r\n\r\n\t    function getLabelUnionRect(axis) {\r\n\t        var axisModel = axis.model;\r\n\t        var labels = axisModel.getFormattedLabels();\r\n\t        var rect;\r\n\t        var step = 1;\r\n\t        var labelCount = labels.length;\r\n\t        if (labelCount > 40) {\r\n\t            // Simple optimization for large amount of labels\r\n\t            step = Math.ceil(labelCount / 40);\r\n\t        }\r\n\t        for (var i = 0; i < labelCount; i += step) {\r\n\t            if (!axis.isLabelIgnored(i)) {\r\n\t                var singleRect = axisModel.getTextRect(labels[i]);\r\n\t                // FIXME consider label rotate\r\n\t                rect ? rect.union(singleRect) : (rect = singleRect);\r\n\t            }\r\n\t        }\r\n\t        return rect;\r\n\t    }\r\n\r\n\t    function Grid(gridModel, ecModel, api) {\r\n\t        /**\r\n\t         * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\r\n\t         * @private\r\n\t         */\r\n\t        this._coordsMap = {};\r\n\r\n\t        /**\r\n\t         * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\r\n\t         * @private\r\n\t         */\r\n\t        this._coordsList = [];\r\n\r\n\t        /**\r\n\t         * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\r\n\t         * @private\r\n\t         */\r\n\t        this._axesMap = {};\r\n\r\n\t        /**\r\n\t         * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\r\n\t         * @private\r\n\t         */\r\n\t        this._axesList = [];\r\n\r\n\t        this._initCartesian(gridModel, ecModel, api);\r\n\r\n\t        this._model = gridModel;\r\n\t    }\r\n\r\n\t    var gridProto = Grid.prototype;\r\n\r\n\t    gridProto.type = 'grid';\r\n\r\n\t    gridProto.getRect = function () {\r\n\t        return this._rect;\r\n\t    };\r\n\r\n\t    gridProto.update = function (ecModel, api) {\r\n\r\n\t        var axesMap = this._axesMap;\r\n\r\n\t        this._updateScale(ecModel, this._model);\r\n\r\n\t        function ifAxisCanNotOnZero(otherAxisDim) {\r\n\t            var axes = axesMap[otherAxisDim];\r\n\t            for (var idx in axes) {\r\n\t                var axis = axes[idx];\r\n\t                if (axis && (axis.type === 'category' || !ifAxisCrossZero(axis))) {\r\n\t                    return true;\r\n\t                }\r\n\t            }\r\n\t            return false;\r\n\t        }\r\n\r\n\t        each(axesMap.x, function (xAxis) {\r\n\t            niceScaleExtent(xAxis, xAxis.model);\r\n\t        });\r\n\t        each(axesMap.y, function (yAxis) {\r\n\t            niceScaleExtent(yAxis, yAxis.model);\r\n\t        });\r\n\t        // Fix configuration\r\n\t        each(axesMap.x, function (xAxis) {\r\n\t            // onZero can not be enabled in these two situations\r\n\t            // 1. When any other axis is a category axis\r\n\t            // 2. When any other axis not across 0 point\r\n\t            if (ifAxisCanNotOnZero('y')) {\r\n\t                xAxis.onZero = false;\r\n\t            }\r\n\t        });\r\n\t        each(axesMap.y, function (yAxis) {\r\n\t            if (ifAxisCanNotOnZero('x')) {\r\n\t                yAxis.onZero = false;\r\n\t            }\r\n\t        });\r\n\r\n\t        // Resize again if containLabel is enabled\r\n\t        // FIXME It may cause getting wrong grid size in data processing stage\r\n\t        this.resize(this._model, api);\r\n\t    };\r\n\r\n\t    /**\r\n\t     * Resize the grid\r\n\t     * @param {module:echarts/coord/cartesian/GridModel} gridModel\r\n\t     * @param {module:echarts/ExtensionAPI} api\r\n\t     */\r\n\t    gridProto.resize = function (gridModel, api) {\r\n\r\n\t        var gridRect = layout.getLayoutRect(\r\n\t            gridModel.getBoxLayoutParams(), {\r\n\t                width: api.getWidth(),\r\n\t                height: api.getHeight()\r\n\t            });\r\n\r\n\t        this._rect = gridRect;\r\n\r\n\t        var axesList = this._axesList;\r\n\r\n\t        adjustAxes();\r\n\r\n\t        // Minus label size\r\n\t        if (gridModel.get('containLabel')) {\r\n\t            each(axesList, function (axis) {\r\n\t                if (!axis.model.get('axisLabel.inside')) {\r\n\t                    var labelUnionRect = getLabelUnionRect(axis);\r\n\t                    if (labelUnionRect) {\r\n\t                        var dim = axis.isHorizontal() ? 'height' : 'width';\r\n\t                        var margin = axis.model.get('axisLabel.margin');\r\n\t                        gridRect[dim] -= labelUnionRect[dim] + margin;\r\n\t                        if (axis.position === 'top') {\r\n\t                            gridRect.y += labelUnionRect.height + margin;\r\n\t                        }\r\n\t                        else if (axis.position === 'left')  {\r\n\t                            gridRect.x += labelUnionRect.width + margin;\r\n\t                        }\r\n\t                    }\r\n\t                }\r\n\t            });\r\n\r\n\t            adjustAxes();\r\n\t        }\r\n\r\n\t        function adjustAxes() {\r\n\t            each(axesList, function (axis) {\r\n\t                var isHorizontal = axis.isHorizontal();\r\n\t                var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\r\n\t                var idx = axis.inverse ? 1 : 0;\r\n\t                axis.setExtent(extent[idx], extent[1 - idx]);\r\n\t                updateAxisTransfrom(axis, isHorizontal ? gridRect.x : gridRect.y);\r\n\t            });\r\n\t        }\r\n\t    };\r\n\r\n\t    /**\r\n\t     * @param {string} axisType\r\n\t     * @param {ndumber} [axisIndex]\r\n\t     */\r\n\t    gridProto.getAxis = function (axisType, axisIndex) {\r\n\t        var axesMapOnDim = this._axesMap[axisType];\r\n\t        if (axesMapOnDim != null) {\r\n\t            if (axisIndex == null) {\r\n\t                // Find first axis\r\n\t                for (var name in axesMapOnDim) {\r\n\t                    return axesMapOnDim[name];\r\n\t                }\r\n\t            }\r\n\t            return axesMapOnDim[axisIndex];\r\n\t        }\r\n\t    };\r\n\r\n\t    gridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\r\n\t        if (xAxisIndex != null && yAxisIndex != null) {\r\n\t            var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\r\n\t            return this._coordsMap[key];\r\n\t        }\r\n\t        else {\r\n\t            // When only xAxisIndex or yAxisIndex given, find its first cartesian.\r\n\t            for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\r\n\t                if (coordList[i].getAxis('x').index === xAxisIndex\r\n\t                    || coordList[i].getAxis('y').index === yAxisIndex\r\n\t                ) {\r\n\t                    return coordList[i];\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t    };\r\n\r\n\t    /**\r\n\t     * Initialize cartesian coordinate systems\r\n\t     * @private\r\n\t     */\r\n\t    gridProto._initCartesian = function (gridModel, ecModel, api) {\r\n\t        var axisPositionUsed = {\r\n\t            left: false,\r\n\t            right: false,\r\n\t            top: false,\r\n\t            bottom: false\r\n\t        };\r\n\r\n\t        var axesMap = {\r\n\t            x: {},\r\n\t            y: {}\r\n\t        };\r\n\t        var axesCount = {\r\n\t            x: 0,\r\n\t            y: 0\r\n\t        };\r\n\r\n\t        /// Create axis\r\n\t        ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\r\n\t        ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\r\n\r\n\t        if (!axesCount.x || !axesCount.y) {\r\n\t            // Roll back when there no either x or y axis\r\n\t            this._axesMap = {};\r\n\t            this._axesList = [];\r\n\t            return;\r\n\t        }\r\n\r\n\t        this._axesMap = axesMap;\r\n\r\n\t        /// Create cartesian2d\r\n\t        each(axesMap.x, function (xAxis, xAxisIndex) {\r\n\t            each(axesMap.y, function (yAxis, yAxisIndex) {\r\n\t                var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\r\n\t                var cartesian = new Cartesian2D(key);\r\n\r\n\t                cartesian.grid = this;\r\n\r\n\t                this._coordsMap[key] = cartesian;\r\n\t                this._coordsList.push(cartesian);\r\n\r\n\t                cartesian.addAxis(xAxis);\r\n\t                cartesian.addAxis(yAxis);\r\n\t            }, this);\r\n\t        }, this);\r\n\r\n\t        function createAxisCreator(axisType) {\r\n\t            return function (axisModel, idx) {\r\n\t                if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\r\n\t                    return;\r\n\t                }\r\n\r\n\t                var axisPosition = axisModel.get('position');\r\n\t                if (axisType === 'x') {\r\n\t                    // Fix position\r\n\t                    if (axisPosition !== 'top' && axisPosition !== 'bottom') {\r\n\t                        // Default bottom of X\r\n\t                        axisPosition = 'bottom';\r\n\t                        if (axisPositionUsed[axisPosition]) {\r\n\t                            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\r\n\t                        }\r\n\t                    }\r\n\t                }\r\n\t                else {\r\n\t                    // Fix position\r\n\t                    if (axisPosition !== 'left' && axisPosition !== 'right') {\r\n\t                        // Default left of Y\r\n\t                        axisPosition = 'left';\r\n\t                        if (axisPositionUsed[axisPosition]) {\r\n\t                            axisPosition = axisPosition === 'left' ? 'right' : 'left';\r\n\t                        }\r\n\t                    }\r\n\t                }\r\n\t                axisPositionUsed[axisPosition] = true;\r\n\r\n\t                var axis = new Axis2D(\r\n\t                    axisType, axisHelper.createScaleByModel(axisModel),\r\n\t                    [0, 0],\r\n\t                    axisModel.get('type'),\r\n\t                    axisPosition\r\n\t                );\r\n\r\n\t                var isCategory = axis.type === 'category';\r\n\t                axis.onBand = isCategory && axisModel.get('boundaryGap');\r\n\t                axis.inverse = axisModel.get('inverse');\r\n\r\n\t                axis.onZero = axisModel.get('axisLine.onZero');\r\n\r\n\t                // Inject axis into axisModel\r\n\t                axisModel.axis = axis;\r\n\r\n\t                // Inject axisModel into axis\r\n\t                axis.model = axisModel;\r\n\r\n\t                // Inject grid info axis\r\n\t                axis.grid = this;\r\n\r\n\t                // Index of axis, can be used as key\r\n\t                axis.index = idx;\r\n\r\n\t                this._axesList.push(axis);\r\n\r\n\t                axesMap[axisType][idx] = axis;\r\n\t                axesCount[axisType]++;\r\n\t            };\r\n\t        }\r\n\t    };\r\n\r\n\t    /**\r\n\t     * Update cartesian properties from series\r\n\t     * @param  {module:echarts/model/Option} option\r\n\t     * @private\r\n\t     */\r\n\t    gridProto._updateScale = function (ecModel, gridModel) {\r\n\t        // Reset scale\r\n\t        zrUtil.each(this._axesList, function (axis) {\r\n\t            axis.scale.setExtent(Infinity, -Infinity);\r\n\t        });\r\n\t        ecModel.eachSeries(function (seriesModel) {\r\n\t            if (seriesModel.get('coordinateSystem') === 'cartesian2d') {\r\n\t                var xAxisIndex = seriesModel.get('xAxisIndex');\r\n\t                var yAxisIndex = seriesModel.get('yAxisIndex');\r\n\r\n\t                var xAxisModel = ecModel.getComponent('xAxis', xAxisIndex);\r\n\t                var yAxisModel = ecModel.getComponent('yAxis', yAxisIndex);\r\n\r\n\t                if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel)\r\n\t                    || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)\r\n\t                 ) {\r\n\t                    return;\r\n\t                }\r\n\r\n\t                var cartesian = this.getCartesian(xAxisIndex, yAxisIndex);\r\n\t                var data = seriesModel.getData();\r\n\t                var xAxis = cartesian.getAxis('x');\r\n\t                var yAxis = cartesian.getAxis('y');\r\n\r\n\t                if (data.type === 'list') {\r\n\t                    unionExtent(data, xAxis, seriesModel);\r\n\t                    unionExtent(data, yAxis, seriesModel);\r\n\t                }\r\n\t            }\r\n\t        }, this);\r\n\r\n\t        function unionExtent(data, axis, seriesModel) {\r\n\t            each(seriesModel.coordDimToDataDim(axis.dim), function (dim) {\r\n\t                axis.scale.unionExtent(data.getDataExtent(\r\n\t                    dim, axis.scale.type !== 'ordinal'\r\n\t                ));\r\n\t            });\r\n\t        }\r\n\t    };\r\n\r\n\t    /**\r\n\t     * @inner\r\n\t     */\r\n\t    function updateAxisTransfrom(axis, coordBase) {\r\n\t        var axisExtent = axis.getExtent();\r\n\t        var axisExtentSum = axisExtent[0] + axisExtent[1];\r\n\r\n\t        // Fast transform\r\n\t        axis.toGlobalCoord = axis.dim === 'x'\r\n\t            ? function (coord) {\r\n\t                return coord + coordBase;\r\n\t            }\r\n\t            : function (coord) {\r\n\t                return axisExtentSum - coord + coordBase;\r\n\t            };\r\n\t        axis.toLocalCoord = axis.dim === 'x'\r\n\t            ? function (coord) {\r\n\t                return coord - coordBase;\r\n\t            }\r\n\t            : function (coord) {\r\n\t                return axisExtentSum - coord + coordBase;\r\n\t            };\r\n\t    }\r\n\r\n\t    Grid.create = function (ecModel, api) {\r\n\t        var grids = [];\r\n\t        ecModel.eachComponent('grid', function (gridModel, idx) {\r\n\t            var grid = new Grid(gridModel, ecModel, api);\r\n\t            grid.name = 'grid_' + idx;\r\n\t            grid.resize(gridModel, api);\r\n\r\n\t            gridModel.coordinateSystem = grid;\r\n\r\n\t            grids.push(grid);\r\n\t        });\r\n\r\n\t        // Inject the coordinateSystems into seriesModel\r\n\t        ecModel.eachSeries(function (seriesModel) {\r\n\t            if (seriesModel.get('coordinateSystem') !== 'cartesian2d') {\r\n\t                return;\r\n\t            }\r\n\t            var xAxisIndex = seriesModel.get('xAxisIndex');\r\n\t            var yAxisIndex = seriesModel.get('yAxisIndex');\r\n\t            var xAxisModel = ecModel.getComponent('xAxis', xAxisIndex);\r\n\r\n\t            if (true) {\r\n\t                var yAxisModel = ecModel.getComponent('yAxis', yAxisIndex);\r\n\t                if (xAxisModel.get('gridIndex') !== yAxisModel.get('gridIndex')) {\r\n\t                    throw new Error('xAxis and yAxis must use the same grid');\r\n\t                }\r\n\t            }\r\n\t            var grid = grids[xAxisModel.get('gridIndex')];\r\n\t            seriesModel.coordinateSystem = grid.getCartesian(xAxisIndex, yAxisIndex);\r\n\t        });\r\n\r\n\t        return grids;\r\n\t    };\r\n\r\n\t    // For deciding which dimensions to use when creating list data\r\n\t    Grid.dimensions = Cartesian2D.prototype.dimensions;\r\n\r\n\t    __webpack_require__(26).register('cartesian2d', Grid);\r\n\r\n\t    module.exports = Grid;\r\n\r\n\r\n/***/ },\r\n/* 114 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t\r\n\r\n\t    var OrdinalScale = __webpack_require__(115);\r\n\t    var IntervalScale = __webpack_require__(117);\r\n\t    __webpack_require__(118);\r\n\t    __webpack_require__(119);\r\n\t    var Scale = __webpack_require__(116);\r\n\r\n\t    var numberUtil = __webpack_require__(7);\r\n\t    var zrUtil = __webpack_require__(4);\r\n\t    var textContain = __webpack_require__(8);\r\n\t    var axisHelper = {};\r\n\r\n\t    /**\r\n\t     * Get axis scale extent before niced.\r\n\t     */\r\n\t    axisHelper.getScaleExtent = function (axis, model) {\r\n\t        var scale = axis.scale;\r\n\t        var originalExtent = scale.getExtent();\r\n\t        var span = originalExtent[1] - originalExtent[0];\r\n\t        if (scale.type === 'ordinal') {\r\n\t            // If series has no data, scale extent may be wrong\r\n\t            if (!isFinite(span)) {\r\n\t                return [0, 0];\r\n\t            }\r\n\t            else {\r\n\t                return originalExtent;\r\n\t            }\r\n\t        }\r\n\t        var min = model.getMin ? model.getMin() : model.get('min');\r\n\t        var max = model.getMax ? model.getMax() : model.get('max');\r\n\t        var crossZero = model.getNeedCrossZero\r\n\t            ? model.getNeedCrossZero() : !model.get('scale');\r\n\t        var boundaryGap = model.get('boundaryGap');\r\n\t        if (!zrUtil.isArray(boundaryGap)) {\r\n\t            boundaryGap = [boundaryGap || 0, boundaryGap || 0];\r\n\t        }\r\n\t        boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\r\n\t        boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\r\n\t        var fixMin = true;\r\n\t        var fixMax = true;\r\n\t        // Add boundary gap\r\n\t        if (min == null) {\r\n\t            min = originalExtent[0] - boundaryGap[0] * span;\r\n\t            fixMin = false;\r\n\t        }\r\n\t        if (max == null) {\r\n\t            max = originalExtent[1] + boundaryGap[1] * span;\r\n\t            fixMax = false;\r\n\t        }\r\n\t        if (min === 'dataMin') {\r\n\t            min = originalExtent[0];\r\n\t        }\r\n\t        if (max === 'dataMax') {\r\n\t            max = originalExtent[1];\r\n\t        }\r\n\t        // Evaluate if axis needs cross zero\r\n\t        if (crossZero) {\r\n\t            // Axis is over zero and min is not set\r\n\t            if (min > 0 && max > 0 && !fixMin) {\r\n\t                min = 0;\r\n\t            }\r\n\t            // Axis is under zero and max is not set\r\n\t            if (min < 0 && max < 0 && !fixMax) {\r\n\t                max = 0;\r\n\t            }\r\n\t        }\r\n\t        return [min, max];\r\n\t    };\r\n\r\n\t    axisHelper.niceScaleExtent = function (axis, model) {\r\n\t        var scale = axis.scale;\r\n\t        var extent = axisHelper.getScaleExtent(axis, model);\r\n\t        var fixMin = (model.getMin ? model.getMin() : model.get('min')) != null;\r\n\t        var fixMax = (model.getMax ? model.getMax() : model.get('max')) != null;\r\n\t        var splitNumber = model.get('splitNumber');\r\n\t        scale.setExtent(extent[0], extent[1]);\r\n\t        scale.niceExtent(splitNumber, fixMin, fixMax);\r\n\r\n\t        // Use minInterval to constraint the calculated interval.\r\n\t        // If calculated interval is less than minInterval. increase the interval quantity until\r\n\t        // it is larger than minInterval.\r\n\t        // For example:\r\n\t        //  minInterval is 1, calculated interval is 0.2, so increase it to be 1. In this way we can get\r\n\t        //  an integer axis.\r\n\t        var minInterval = model.get('minInterval');\r\n\t        if (isFinite(minInterval) && !fixMin && !fixMax && scale.type === 'interval') {\r\n\t            var interval = scale.getInterval();\r\n\t            var intervalScale = Math.max(Math.abs(interval), minInterval) / interval;\r\n\t            // while (interval < minInterval) {\r\n\t            //     var quantity = numberUtil.quantity(interval);\r\n\t            //     interval = quantity * 10;\r\n\t            //     scaleQuantity *= 10;\r\n\t            // }\r\n\t            extent = scale.getExtent();\r\n\t            scale.setExtent(intervalScale * extent[0], extent[1] * intervalScale);\r\n\t            scale.niceExtent(splitNumber);\r\n\t        }\r\n\r\n\t        // If some one specified the min, max. And the default calculated interval\r\n\t        // is not good enough. He can specify the interval. It is often appeared\r\n\t        // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\r\n\t        // to be 60.\r\n\t        // FIXME\r\n\t        var interval = model.get('interval');\r\n\t        if (interval != null) {\r\n\t            scale.setInterval && scale.setInterval(interval);\r\n\t        }\r\n\t    };\r\n\r\n\t    /**\r\n\t     * @param {module:echarts/model/Model} model\r\n\t     * @param {string} [axisType] Default retrieve from model.type\r\n\t     * @return {module:echarts/scale/*}\r\n\t     */\r\n\t    axisHelper.createScaleByModel = function(model, axisType) {\r\n\t        axisType = axisType || model.get('type');\r\n\t        if (axisType) {\r\n\t            switch (axisType) {\r\n\t                // Buildin scale\r\n\t                case 'category':\r\n\t                    return new OrdinalScale(\r\n\t                        model.getCategories(), [Infinity, -Infinity]\r\n\t                    );\r\n\t                case 'value':\r\n\t                    return new IntervalScale();\r\n\t                // Extended scale, like time and log\r\n\t                default:\r\n\t                    return (Scale.getClass(axisType) || IntervalScale).create(model);\r\n\t            }\r\n\t        }\r\n\t    };\r\n\r\n\t    /**\r\n\t     * Check if the axis corss 0\r\n\t     */\r\n\t    axisHelper.ifAxisCrossZero = function (axis) {\r\n\t        var dataExtent = axis.scale.getExtent();\r\n\t        var min = dataExtent[0];\r\n\t        var max = dataExtent[1];\r\n\t        return !((min > 0 && max > 0) || (min < 0 && max < 0));\r\n\t    };\r\n\r\n\t    /**\r\n\t     * @param {Array.<number>} tickCoords In axis self coordinate.\r\n\t     * @param {Array.<string>} labels\r\n\t     * @param {string} font\r\n\t     * @param {boolean} isAxisHorizontal\r\n\t     * @return {number}\r\n\t     */\r\n\t    axisHelper.getAxisLabelInterval = function (tickCoords, labels, font, isAxisHorizontal) {\r\n\t        // FIXME\r\n\t        // 不同角的axis和label，不只是horizontal和vertical.\r\n\r\n\t        var textSpaceTakenRect;\r\n\t        var autoLabelInterval = 0;\r\n\t        var accumulatedLabelInterval = 0;\r\n\r\n\t        var step = 1;\r\n\t        if (labels.length > 40) {\r\n\t            // Simple optimization for large amount of labels\r\n\t            step = Math.floor(labels.length / 40);\r\n\t        }\r\n\r\n\t        for (var i = 0; i < tickCoords.length; i += step) {\r\n\t            var tickCoord = tickCoords[i];\r\n\t            var rect = textContain.getBoundingRect(\r\n\t                labels[i], font, 'center', 'top'\r\n\t            );\r\n\t            rect[isAxisHorizontal ? 'x' : 'y'] += tickCoord;\r\n\t            // FIXME Magic number 1.5\r\n\t            rect[isAxisHorizontal ? 'width' : 'height'] *= 1.3;\r\n\t            if (!textSpaceTakenRect) {\r\n\t                textSpaceTakenRect = rect.clone();\r\n\t            }\r\n\t            // There is no space for current label;\r\n\t            else if (textSpaceTakenRect.intersect(rect)) {\r\n\t                accumulatedLabelInterval++;\r\n\t                autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\r\n\t            }\r\n\t            else {\r\n\t                textSpaceTakenRect.union(rect);\r\n\t                // Reset\r\n\t                accumulatedLabelInterval = 0;\r\n\t            }\r\n\t        }\r\n\t        if (autoLabelInterval === 0 && step > 1) {\r\n\t            return step;\r\n\t        }\r\n\t        return (autoLabelInterval + 1) * step - 1;\r\n\t    };\r\n\r\n\t    /**\r\n\t     * @param {Object} axis\r\n\t     * @param {Function} labelFormatter\r\n\t     * @return {Array.<string>}\r\n\t     */\r\n\t    axisHelper.getFormattedLabels = function (axis, labelFormatter) {\r\n\t        var scale = axis.scale;\r\n\t        var labels = scale.getTicksLabels();\r\n\t        var ticks = scale.getTicks();\r\n\t        if (typeof labelFormatter === 'string') {\r\n\t            labelFormatter = (function (tpl) {\r\n\t                return function (val) {\r\n\t                    return tpl.replace('{value}', val);\r\n\t                };\r\n\t            })(labelFormatter);\r\n\t            return zrUtil.map(labels, labelFormatter);\r\n\t        }\r\n\t        else if (typeof labelFormatter === 'function') {\r\n\t            return zrUtil.map(ticks, function (tick, idx) {\r\n\t                return labelFormatter(\r\n\t                    axis.type === 'category' ? scale.getLabel(tick) : tick,\r\n\t                    idx\r\n\t                );\r\n\t            }, this);\r\n\t        }\r\n\t        else {\r\n\t            return labels;\r\n\t        }\r\n\t    };\r\n\r\n\t    module.exports = axisHelper;\r\n\r\n\r\n/***/ },\r\n/* 115 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t/**\r\n\t * Linear continuous scale\r\n\t * @module echarts/coord/scale/Ordinal\r\n\t *\r\n\t * http://en.wikipedia.org/wiki/Level_of_measurement\r\n\t */\r\n\r\n\t// FIXME only one data\r\n\r\n\r\n\t    var zrUtil = __webpack_require__(4);\r\n\t    var Scale = __webpack_require__(116);\r\n\r\n\t    var scaleProto = Scale.prototype;\r\n\r\n\t    var OrdinalScale = Scale.extend({\r\n\r\n\t        type: 'ordinal',\r\n\r\n\t        init: function (data, extent) {\r\n\t            this._data = data;\r\n\t            this._extent = extent || [0, data.length - 1];\r\n\t        },\r\n\r\n\t        parse: function (val) {\r\n\t            return typeof val === 'string'\r\n\t                ? zrUtil.indexOf(this._data, val)\r\n\t                // val might be float.\r\n\t                : Math.round(val);\r\n\t        },\r\n\r\n\t        contain: function (rank) {\r\n\t            rank = this.parse(rank);\r\n\t            return scaleProto.contain.call(this, rank)\r\n\t                && this._data[rank] != null;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Normalize given rank or name to linear [0, 1]\r\n\t         * @param {number|string} [val]\r\n\t         * @return {number}\r\n\t         */\r\n\t        normalize: function (val) {\r\n\t            return scaleProto.normalize.call(this, this.parse(val));\r\n\t        },\r\n\r\n\t        scale: function (val) {\r\n\t            return Math.round(scaleProto.scale.call(this, val));\r\n\t        },\r\n\r\n\t        /**\r\n\t         * @return {Array}\r\n\t         */\r\n\t        getTicks: function () {\r\n\t            var ticks = [];\r\n\t            var extent = this._extent;\r\n\t            var rank = extent[0];\r\n\r\n\t            while (rank <= extent[1]) {\r\n\t                ticks.push(rank);\r\n\t                rank++;\r\n\t            }\r\n\r\n\t            return ticks;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Get item on rank n\r\n\t         * @param {number} n\r\n\t         * @return {string}\r\n\t         */\r\n\t        getLabel: function (n) {\r\n\t            return this._data[n];\r\n\t        },\r\n\r\n\t        /**\r\n\t         * @return {number}\r\n\t         */\r\n\t        count: function () {\r\n\t            return this._extent[1] - this._extent[0] + 1;\r\n\t        },\r\n\r\n\t        niceTicks: zrUtil.noop,\r\n\t        niceExtent: zrUtil.noop\r\n\t    });\r\n\r\n\t    /**\r\n\t     * @return {module:echarts/scale/Time}\r\n\t     */\r\n\t    OrdinalScale.create = function () {\r\n\t        return new OrdinalScale();\r\n\t    };\r\n\r\n\t    module.exports = OrdinalScale;\r\n\r\n\r\n/***/ },\r\n/* 116 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t/**\r\n\t * // Scale class management\r\n\t * @module echarts/scale/Scale\r\n\t */\r\n\r\n\r\n\t    var clazzUtil = __webpack_require__(13);\r\n\r\n\t    function Scale() {\r\n\t        /**\r\n\t         * Extent\r\n\t         * @type {Array.<number>}\r\n\t         * @protected\r\n\t         */\r\n\t        this._extent = [Infinity, -Infinity];\r\n\r\n\t        /**\r\n\t         * Step is calculated in adjustExtent\r\n\t         * @type {Array.<number>}\r\n\t         * @protected\r\n\t         */\r\n\t        this._interval = 0;\r\n\r\n\t        this.init && this.init.apply(this, arguments);\r\n\t    }\r\n\r\n\t    var scaleProto = Scale.prototype;\r\n\r\n\t    /**\r\n\t     * Parse input val to valid inner number.\r\n\t     * @param {*} val\r\n\t     * @return {number}\r\n\t     */\r\n\t    scaleProto.parse = function (val) {\r\n\t        // Notice: This would be a trap here, If the implementation\r\n\t        // of this method depends on extent, and this method is used\r\n\t        // before extent set (like in dataZoom), it would be wrong.\r\n\t        // Nevertheless, parse does not depend on extent generally.\r\n\t        return val;\r\n\t    };\r\n\r\n\t    scaleProto.contain = function (val) {\r\n\t        var extent = this._extent;\r\n\t        return val >= extent[0] && val <= extent[1];\r\n\t    };\r\n\r\n\t    /**\r\n\t     * Normalize value to linear [0, 1], return 0.5 if extent span is 0\r\n\t     * @param {number} val\r\n\t     * @return {number}\r\n\t     */\r\n\t    scaleProto.normalize = function (val) {\r\n\t        var extent = this._extent;\r\n\t        if (extent[1] === extent[0]) {\r\n\t            return 0.5;\r\n\t        }\r\n\t        return (val - extent[0]) / (extent[1] - extent[0]);\r\n\t    };\r\n\r\n\t    /**\r\n\t     * Scale normalized value\r\n\t     * @param {number} val\r\n\t     * @return {number}\r\n\t     */\r\n\t    scaleProto.scale = function (val) {\r\n\t        var extent = this._extent;\r\n\t        return val * (extent[1] - extent[0]) + extent[0];\r\n\t    };\r\n\r\n\t    /**\r\n\t     * Set extent from data\r\n\t     * @param {Array.<number>} other\r\n\t     */\r\n\t    scaleProto.unionExtent = function (other) {\r\n\t        var extent = this._extent;\r\n\t        other[0] < extent[0] && (extent[0] = other[0]);\r\n\t        other[1] > extent[1] && (extent[1] = other[1]);\r\n\t        // not setExtent because in log axis it may transformed to power\r\n\t        // this.setExtent(extent[0], extent[1]);\r\n\t    };\r\n\r\n\t    /**\r\n\t     * Get extent\r\n\t     * @return {Array.<number>}\r\n\t     */\r\n\t    scaleProto.getExtent = function () {\r\n\t        return this._extent.slice();\r\n\t    };\r\n\r\n\t    /**\r\n\t     * Set extent\r\n\t     * @param {number} start\r\n\t     * @param {number} end\r\n\t     */\r\n\t    scaleProto.setExtent = function (start, end) {\r\n\t        var thisExtent = this._extent;\r\n\t        if (!isNaN(start)) {\r\n\t            thisExtent[0] = start;\r\n\t        }\r\n\t        if (!isNaN(end)) {\r\n\t            thisExtent[1] = end;\r\n\t        }\r\n\t    };\r\n\r\n\t    /**\r\n\t     * @return {Array.<string>}\r\n\t     */\r\n\t    scaleProto.getTicksLabels = function () {\r\n\t        var labels = [];\r\n\t        var ticks = this.getTicks();\r\n\t        for (var i = 0; i < ticks.length; i++) {\r\n\t            labels.push(this.getLabel(ticks[i]));\r\n\t        }\r\n\t        return labels;\r\n\t    };\r\n\r\n\t    clazzUtil.enableClassExtend(Scale);\r\n\t    clazzUtil.enableClassManagement(Scale, {\r\n\t        registerWhenExtend: true\r\n\t    });\r\n\r\n\t    module.exports = Scale;\r\n\r\n\r\n/***/ },\r\n/* 117 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t/**\r\n\t * Interval scale\r\n\t * @module echarts/scale/Interval\r\n\t */\r\n\r\n\r\n\r\n\t    var numberUtil = __webpack_require__(7);\r\n\t    var formatUtil = __webpack_require__(6);\r\n\t    var Scale = __webpack_require__(116);\r\n\r\n\t    var mathFloor = Math.floor;\r\n\t    var mathCeil = Math.ceil;\r\n\t    /**\r\n\t     * @alias module:echarts/coord/scale/Interval\r\n\t     * @constructor\r\n\t     */\r\n\t    var IntervalScale = Scale.extend({\r\n\r\n\t        type: 'interval',\r\n\r\n\t        _interval: 0,\r\n\r\n\t        setExtent: function (start, end) {\r\n\t            var thisExtent = this._extent;\r\n\t            //start,end may be a Number like '25',so...\r\n\t            if (!isNaN(start)) {\r\n\t                thisExtent[0] = parseFloat(start);\r\n\t            }\r\n\t            if (!isNaN(end)) {\r\n\t                thisExtent[1] = parseFloat(end);\r\n\t            }\r\n\t        },\r\n\r\n\t        unionExtent: function (other) {\r\n\t            var extent = this._extent;\r\n\t            other[0] < extent[0] && (extent[0] = other[0]);\r\n\t            other[1] > extent[1] && (extent[1] = other[1]);\r\n\r\n\t            // unionExtent may called by it's sub classes\r\n\t            IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\r\n\t        },\r\n\t        /**\r\n\t         * Get interval\r\n\t         */\r\n\t        getInterval: function () {\r\n\t            if (!this._interval) {\r\n\t                this.niceTicks();\r\n\t            }\r\n\t            return this._interval;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Set interval\r\n\t         */\r\n\t        setInterval: function (interval) {\r\n\t            this._interval = interval;\r\n\t            // Dropped auto calculated niceExtent and use user setted extent\r\n\t            // We assume user wan't to set both interval, min, max to get a better result\r\n\t            this._niceExtent = this._extent.slice();\r\n\t        },\r\n\r\n\t        /**\r\n\t         * @return {Array.<number>}\r\n\t         */\r\n\t        getTicks: function () {\r\n\t            if (!this._interval) {\r\n\t                this.niceTicks();\r\n\t            }\r\n\t            var interval = this._interval;\r\n\t            var extent = this._extent;\r\n\t            var ticks = [];\r\n\r\n\t            // Consider this case: using dataZoom toolbox, zoom and zoom.\r\n\t            var safeLimit = 10000;\r\n\r\n\t            if (interval) {\r\n\t                var niceExtent = this._niceExtent;\r\n\t                if (extent[0] < niceExtent[0]) {\r\n\t                    ticks.push(extent[0]);\r\n\t                }\r\n\t                var tick = niceExtent[0];\r\n\t                while (tick <= niceExtent[1]) {\r\n\t                    ticks.push(tick);\r\n\t                    // Avoid rounding error\r\n\t                    tick = numberUtil.round(tick + interval);\r\n\t                    if (ticks.length > safeLimit) {\r\n\t                        return [];\r\n\t                    }\r\n\t                }\r\n\t                if (extent[1] > niceExtent[1]) {\r\n\t                    ticks.push(extent[1]);\r\n\t                }\r\n\t            }\r\n\r\n\t            return ticks;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * @return {Array.<string>}\r\n\t         */\r\n\t        getTicksLabels: function () {\r\n\t            var labels = [];\r\n\t            var ticks = this.getTicks();\r\n\t            for (var i = 0; i < ticks.length; i++) {\r\n\t                labels.push(this.getLabel(ticks[i]));\r\n\t            }\r\n\t            return labels;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * @param {number} n\r\n\t         * @return {number}\r\n\t         */\r\n\t        getLabel: function (data) {\r\n\t            return formatUtil.addCommas(data);\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Update interval and extent of intervals for nice ticks\r\n\t         *\r\n\t         * @param {number} [splitNumber = 5] Desired number of ticks\r\n\t         */\r\n\t        niceTicks: function (splitNumber) {\r\n\t            splitNumber = splitNumber || 5;\r\n\t            var extent = this._extent;\r\n\t            var span = extent[1] - extent[0];\r\n\t            if (!isFinite(span)) {\r\n\t                return;\r\n\t            }\r\n\t            // User may set axis min 0 and data are all negative\r\n\t            // FIXME If it needs to reverse ?\r\n\t            if (span < 0) {\r\n\t                span = -span;\r\n\t                extent.reverse();\r\n\t            }\r\n\r\n\t            // From \"Nice Numbers for Graph Labels\" of Graphic Gems\r\n\t            // var niceSpan = numberUtil.nice(span, false);\r\n\t            var step = numberUtil.nice(span / splitNumber, true);\r\n\r\n\t            // Niced extent inside original extent\r\n\t            var niceExtent = [\r\n\t                numberUtil.round(mathCeil(extent[0] / step) * step),\r\n\t                numberUtil.round(mathFloor(extent[1] / step) * step)\r\n\t            ];\r\n\r\n\t            this._interval = step;\r\n\t            this._niceExtent = niceExtent;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Nice extent.\r\n\t         * @param {number} [splitNumber = 5] Given approx tick number\r\n\t         * @param {boolean} [fixMin=false]\r\n\t         * @param {boolean} [fixMax=false]\r\n\t         */\r\n\t        niceExtent: function (splitNumber, fixMin, fixMax) {\r\n\t            var extent = this._extent;\r\n\t            // If extent start and end are same, expand them\r\n\t            if (extent[0] === extent[1]) {\r\n\t                if (extent[0] !== 0) {\r\n\t                    // Expand extent\r\n\t                    var expandSize = extent[0];\r\n\t                    // In the fowllowing case\r\n\t                    //      Axis has been fixed max 100\r\n\t                    //      Plus data are all 100 and axis extent are [100, 100].\r\n\t                    // Extend to the both side will cause expanded max is larger than fixed max.\r\n\t                    // So only expand to the smaller side.\r\n\t                    if (!fixMax) {\r\n\t                        extent[1] += expandSize / 2;\r\n\t                        extent[0] -= expandSize / 2;\r\n\t                    }\r\n\t                    else {\r\n\t                        extent[0] -= expandSize / 2;\r\n\t                    }\r\n\t                }\r\n\t                else {\r\n\t                    extent[1] = 1;\r\n\t                }\r\n\t            }\r\n\t            var span = extent[1] - extent[0];\r\n\t            // If there are no data and extent are [Infinity, -Infinity]\r\n\t            if (!isFinite(span)) {\r\n\t                extent[0] = 0;\r\n\t                extent[1] = 1;\r\n\t            }\r\n\r\n\t            this.niceTicks(splitNumber);\r\n\r\n\t            // var extent = this._extent;\r\n\t            var interval = this._interval;\r\n\r\n\t            if (!fixMin) {\r\n\t                extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\r\n\t            }\r\n\t            if (!fixMax) {\r\n\t                extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\r\n\t            }\r\n\t        }\r\n\t    });\r\n\r\n\t    /**\r\n\t     * @return {module:echarts/scale/Time}\r\n\t     */\r\n\t    IntervalScale.create = function () {\r\n\t        return new IntervalScale();\r\n\t    };\r\n\r\n\t    module.exports = IntervalScale;\r\n\r\n\r\n\r\n/***/ },\r\n/* 118 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t/**\r\n\t * Interval scale\r\n\t * @module echarts/coord/scale/Time\r\n\t */\r\n\r\n\r\n\r\n\t    var zrUtil = __webpack_require__(4);\r\n\t    var numberUtil = __webpack_require__(7);\r\n\t    var formatUtil = __webpack_require__(6);\r\n\r\n\t    var IntervalScale = __webpack_require__(117);\r\n\r\n\t    var intervalScaleProto = IntervalScale.prototype;\r\n\r\n\t    var mathCeil = Math.ceil;\r\n\t    var mathFloor = Math.floor;\r\n\t    var ONE_SECOND = 1000;\r\n\t    var ONE_MINUTE = ONE_SECOND * 60;\r\n\t    var ONE_HOUR = ONE_MINUTE * 60;\r\n\t    var ONE_DAY = ONE_HOUR * 24;\r\n\r\n\t    // FIXME 公用？\r\n\t    var bisect = function (a, x, lo, hi) {\r\n\t        while (lo < hi) {\r\n\t            var mid = lo + hi >>> 1;\r\n\t            if (a[mid][2] < x) {\r\n\t                lo = mid + 1;\r\n\t            }\r\n\t            else {\r\n\t                hi  = mid;\r\n\t            }\r\n\t        }\r\n\t        return lo;\r\n\t    };\r\n\r\n\t    /**\r\n\t     * @alias module:echarts/coord/scale/Time\r\n\t     * @constructor\r\n\t     */\r\n\t    var TimeScale = IntervalScale.extend({\r\n\t        type: 'time',\r\n\r\n\t        // Overwrite\r\n\t        getLabel: function (val) {\r\n\t            var stepLvl = this._stepLvl;\r\n\r\n\t            var date = new Date(val);\r\n\r\n\t            return formatUtil.formatTime(stepLvl[0], date);\r\n\t        },\r\n\r\n\t        // Overwrite\r\n\t        niceExtent: function (approxTickNum, fixMin, fixMax) {\r\n\t            var extent = this._extent;\r\n\t            // If extent start and end are same, expand them\r\n\t            if (extent[0] === extent[1]) {\r\n\t                // Expand extent\r\n\t                extent[0] -= ONE_DAY;\r\n\t                extent[1] += ONE_DAY;\r\n\t            }\r\n\t            // If there are no data and extent are [Infinity, -Infinity]\r\n\t            if (extent[1] === -Infinity && extent[0] === Infinity) {\r\n\t                var d = new Date();\r\n\t                extent[1] = new Date(d.getFullYear(), d.getMonth(), d.getDate());\r\n\t                extent[0] = extent[1] - ONE_DAY;\r\n\t            }\r\n\r\n\t            this.niceTicks(approxTickNum);\r\n\r\n\t            // var extent = this._extent;\r\n\t            var interval = this._interval;\r\n\r\n\t            if (!fixMin) {\r\n\t                extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\r\n\t            }\r\n\t            if (!fixMax) {\r\n\t                extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\r\n\t            }\r\n\t        },\r\n\r\n\t        // Overwrite\r\n\t        niceTicks: function (approxTickNum) {\r\n\t            approxTickNum = approxTickNum || 10;\r\n\r\n\t            var extent = this._extent;\r\n\t            var span = extent[1] - extent[0];\r\n\t            var approxInterval = span / approxTickNum;\r\n\t            var scaleLevelsLen = scaleLevels.length;\r\n\t            var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\r\n\r\n\t            var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\r\n\t            var interval = level[2];\r\n\t            // Same with interval scale if span is much larger than 1 year\r\n\t            if (level[0] === 'year') {\r\n\t                var yearSpan = span / interval;\r\n\r\n\t                // From \"Nice Numbers for Graph Labels\" of Graphic Gems\r\n\t                // var niceYearSpan = numberUtil.nice(yearSpan, false);\r\n\t                var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\r\n\r\n\t                interval *= yearStep;\r\n\t            }\r\n\r\n\t            var niceExtent = [\r\n\t                mathCeil(extent[0] / interval) * interval,\r\n\t                mathFloor(extent[1] / interval) * interval\r\n\t            ];\r\n\r\n\t            this._stepLvl = level;\r\n\t            // Interval will be used in getTicks\r\n\t            this._interval = interval;\r\n\t            this._niceExtent = niceExtent;\r\n\t        },\r\n\r\n\t        parse: function (val) {\r\n\t            // val might be float.\r\n\t            return +numberUtil.parseDate(val);\r\n\t        }\r\n\t    });\r\n\r\n\t    zrUtil.each(['contain', 'normalize'], function (methodName) {\r\n\t        TimeScale.prototype[methodName] = function (val) {\r\n\t            return intervalScaleProto[methodName].call(this, this.parse(val));\r\n\t        };\r\n\t    });\r\n\r\n\t    // Steps from d3\r\n\t    var scaleLevels = [\r\n\t        // Format       step    interval\r\n\t        ['hh:mm:ss',    1,      ONE_SECOND],           // 1s\r\n\t        ['hh:mm:ss',    5,      ONE_SECOND * 5],       // 5s\r\n\t        ['hh:mm:ss',    10,     ONE_SECOND * 10],      // 10s\r\n\t        ['hh:mm:ss',    15,     ONE_SECOND * 15],      // 15s\r\n\t        ['hh:mm:ss',    30,     ONE_SECOND * 30],      // 30s\r\n\t        ['hh:mm\\nMM-dd',1,      ONE_MINUTE],          // 1m\r\n\t        ['hh:mm\\nMM-dd',5,      ONE_MINUTE * 5],      // 5m\r\n\t        ['hh:mm\\nMM-dd',10,     ONE_MINUTE * 10],     // 10m\r\n\t        ['hh:mm\\nMM-dd',15,     ONE_MINUTE * 15],     // 15m\r\n\t        ['hh:mm\\nMM-dd',30,     ONE_MINUTE * 30],     // 30m\r\n\t        ['hh:mm\\nMM-dd',1,      ONE_HOUR],        // 1h\r\n\t        ['hh:mm\\nMM-dd',2,      ONE_HOUR * 2],    // 2h\r\n\t        ['hh:mm\\nMM-dd',6,      ONE_HOUR * 6],    // 6h\r\n\t        ['hh:mm\\nMM-dd',12,     ONE_HOUR * 12],   // 12h\r\n\t        ['MM-dd\\nyyyy', 1,      ONE_DAY],   // 1d\r\n\t        ['week',        7,      ONE_DAY * 7],        // 7d\r\n\t        ['month',       1,      ONE_DAY * 31],       // 1M\r\n\t        ['quarter',     3,      ONE_DAY * 380 / 4],  // 3M\r\n\t        ['half-year',   6,      ONE_DAY * 380 / 2],  // 6M\r\n\t        ['year',        1,      ONE_DAY * 380]       // 1Y\r\n\t    ];\r\n\r\n\t    /**\r\n\t     * @return {module:echarts/scale/Time}\r\n\t     */\r\n\t    TimeScale.create = function () {\r\n\t        return new TimeScale();\r\n\t    };\r\n\r\n\t    module.exports = TimeScale;\r\n\r\n\r\n/***/ },\r\n/* 119 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t/**\r\n\t * Log scale\r\n\t * @module echarts/scale/Log\r\n\t */\r\n\r\n\r\n\t    var zrUtil = __webpack_require__(4);\r\n\t    var Scale = __webpack_require__(116);\r\n\t    var numberUtil = __webpack_require__(7);\r\n\r\n\t    // Use some method of IntervalScale\r\n\t    var IntervalScale = __webpack_require__(117);\r\n\r\n\t    var scaleProto = Scale.prototype;\r\n\t    var intervalScaleProto = IntervalScale.prototype;\r\n\r\n\t    var mathFloor = Math.floor;\r\n\t    var mathCeil = Math.ceil;\r\n\t    var mathPow = Math.pow;\r\n\r\n\t    var LOG_BASE = 10;\r\n\t    var mathLog = Math.log;\r\n\r\n\t    var LogScale = Scale.extend({\r\n\r\n\t        type: 'log',\r\n\r\n\t        /**\r\n\t         * @return {Array.<number>}\r\n\t         */\r\n\t        getTicks: function () {\r\n\t            return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\r\n\t                return numberUtil.round(mathPow(LOG_BASE, val));\r\n\t            });\r\n\t        },\r\n\r\n\t        /**\r\n\t         * @param {number} val\r\n\t         * @return {string}\r\n\t         */\r\n\t        getLabel: intervalScaleProto.getLabel,\r\n\r\n\t        /**\r\n\t         * @param  {number} val\r\n\t         * @return {number}\r\n\t         */\r\n\t        scale: function (val) {\r\n\t            val = scaleProto.scale.call(this, val);\r\n\t            return mathPow(LOG_BASE, val);\r\n\t        },\r\n\r\n\t        /**\r\n\t         * @param {number} start\r\n\t         * @param {number} end\r\n\t         */\r\n\t        setExtent: function (start, end) {\r\n\t            start = mathLog(start) / mathLog(LOG_BASE);\r\n\t            end = mathLog(end) / mathLog(LOG_BASE);\r\n\t            intervalScaleProto.setExtent.call(this, start, end);\r\n\t        },\r\n\r\n\t        /**\r\n\t         * @return {number} end\r\n\t         */\r\n\t        getExtent: function () {\r\n\t            var extent = scaleProto.getExtent.call(this);\r\n\t            extent[0] = mathPow(LOG_BASE, extent[0]);\r\n\t            extent[1] = mathPow(LOG_BASE, extent[1]);\r\n\t            return extent;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * @param  {Array.<number>} extent\r\n\t         */\r\n\t        unionExtent: function (extent) {\r\n\t            extent[0] = mathLog(extent[0]) / mathLog(LOG_BASE);\r\n\t            extent[1] = mathLog(extent[1]) / mathLog(LOG_BASE);\r\n\t            scaleProto.unionExtent.call(this, extent);\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Update interval and extent of intervals for nice ticks\r\n\t         * @param  {number} [approxTickNum = 10] Given approx tick number\r\n\t         */\r\n\t        niceTicks: function (approxTickNum) {\r\n\t            approxTickNum = approxTickNum || 10;\r\n\t            var extent = this._extent;\r\n\t            var span = extent[1] - extent[0];\r\n\t            if (span === Infinity || span <= 0) {\r\n\t                return;\r\n\t            }\r\n\r\n\t            var interval = mathPow(10, mathFloor(mathLog(span / approxTickNum) / Math.LN10));\r\n\t            var err = approxTickNum / span * interval;\r\n\r\n\t            // Filter ticks to get closer to the desired count.\r\n\t            if (err <= 0.5) {\r\n\t                interval *= 10;\r\n\t            }\r\n\t            var niceExtent = [\r\n\t                numberUtil.round(mathCeil(extent[0] / interval) * interval),\r\n\t                numberUtil.round(mathFloor(extent[1] / interval) * interval)\r\n\t            ];\r\n\r\n\t            this._interval = interval;\r\n\t            this._niceExtent = niceExtent;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Nice extent.\r\n\t         * @param {number} [approxTickNum = 10] Given approx tick number\r\n\t         * @param {boolean} [fixMin=false]\r\n\t         * @param {boolean} [fixMax=false]\r\n\t         */\r\n\t        niceExtent: intervalScaleProto.niceExtent\r\n\t    });\r\n\r\n\t    zrUtil.each(['contain', 'normalize'], function (methodName) {\r\n\t        LogScale.prototype[methodName] = function (val) {\r\n\t            val = mathLog(val) / mathLog(LOG_BASE);\r\n\t            return scaleProto[methodName].call(this, val);\r\n\t        };\r\n\t    });\r\n\r\n\t    LogScale.create = function () {\r\n\t        return new LogScale();\r\n\t    };\r\n\r\n\t    module.exports = LogScale;\r\n\r\n\r\n/***/ },\r\n/* 120 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t'use strict';\r\n\r\n\r\n\t    var zrUtil = __webpack_require__(4);\r\n\t    var Cartesian = __webpack_require__(121);\r\n\r\n\t    function Cartesian2D(name) {\r\n\r\n\t        Cartesian.call(this, name);\r\n\t    }\r\n\r\n\t    Cartesian2D.prototype = {\r\n\r\n\t        constructor: Cartesian2D,\r\n\r\n\t        type: 'cartesian2d',\r\n\r\n\t        /**\r\n\t         * @type {Array.<string>}\r\n\t         * @readOnly\r\n\t         */\r\n\t        dimensions: ['x', 'y'],\r\n\r\n\t        /**\r\n\t         * Base axis will be used on stacking.\r\n\t         *\r\n\t         * @return {module:echarts/coord/cartesian/Axis2D}\r\n\t         */\r\n\t        getBaseAxis: function () {\r\n\t            return this.getAxesByScale('ordinal')[0]\r\n\t                || this.getAxesByScale('time')[0]\r\n\t                || this.getAxis('x');\r\n\t        },\r\n\r\n\t        /**\r\n\t         * If contain point\r\n\t         * @param {Array.<number>} point\r\n\t         * @return {boolean}\r\n\t         */\r\n\t        containPoint: function (point) {\r\n\t            var axisX = this.getAxis('x');\r\n\t            var axisY = this.getAxis('y');\r\n\t            return axisX.contain(axisX.toLocalCoord(point[0]))\r\n\t                && axisY.contain(axisY.toLocalCoord(point[1]));\r\n\t        },\r\n\r\n\t        /**\r\n\t         * If contain data\r\n\t         * @param {Array.<number>} data\r\n\t         * @return {boolean}\r\n\t         */\r\n\t        containData: function (data) {\r\n\t            return this.getAxis('x').containData(data[0])\r\n\t                && this.getAxis('y').containData(data[1]);\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Convert series data to an array of points\r\n\t         * @param {module:echarts/data/List} data\r\n\t         * @param {boolean} stack\r\n\t         * @return {Array}\r\n\t         *  Return array of points. For example:\r\n\t         *  `[[10, 10], [20, 20], [30, 30]]`\r\n\t         */\r\n\t        dataToPoints: function (data, stack) {\r\n\t            return data.mapArray(['x', 'y'], function (x, y) {\r\n\t                return this.dataToPoint([x, y]);\r\n\t            }, stack, this);\r\n\t        },\r\n\r\n\t        /**\r\n\t         * @param {Array.<number>} data\r\n\t         * @param {boolean} [clamp=false]\r\n\t         * @return {Array.<number>}\r\n\t         */\r\n\t        dataToPoint: function (data, clamp) {\r\n\t            var xAxis = this.getAxis('x');\r\n\t            var yAxis = this.getAxis('y');\r\n\t            return [\r\n\t                xAxis.toGlobalCoord(xAxis.dataToCoord(data[0], clamp)),\r\n\t                yAxis.toGlobalCoord(yAxis.dataToCoord(data[1], clamp))\r\n\t            ];\r\n\t        },\r\n\r\n\t        /**\r\n\t         * @param {Array.<number>} point\r\n\t         * @param {boolean} [clamp=false]\r\n\t         * @return {Array.<number>}\r\n\t         */\r\n\t        pointToData: function (point, clamp) {\r\n\t            var xAxis = this.getAxis('x');\r\n\t            var yAxis = this.getAxis('y');\r\n\t            return [\r\n\t                xAxis.coordToData(xAxis.toLocalCoord(point[0]), clamp),\r\n\t                yAxis.coordToData(yAxis.toLocalCoord(point[1]), clamp)\r\n\t            ];\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Get other axis\r\n\t         * @param {module:echarts/coord/cartesian/Axis2D} axis\r\n\t         */\r\n\t        getOtherAxis: function (axis) {\r\n\t            return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\r\n\t        }\r\n\t    };\r\n\r\n\t    zrUtil.inherits(Cartesian2D, Cartesian);\r\n\r\n\t    module.exports = Cartesian2D;\r\n\r\n\r\n/***/ },\r\n/* 121 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t'use strict';\r\n\t/**\r\n\t * Cartesian coordinate system\r\n\t * @module  echarts/coord/Cartesian\r\n\t *\r\n\t */\r\n\r\n\r\n\t    var zrUtil = __webpack_require__(4);\r\n\r\n\t    function dimAxisMapper(dim) {\r\n\t        return this._axes[dim];\r\n\t    }\r\n\r\n\t    /**\r\n\t     * @alias module:echarts/coord/Cartesian\r\n\t     * @constructor\r\n\t     */\r\n\t    var Cartesian = function (name) {\r\n\t        this._axes = {};\r\n\r\n\t        this._dimList = [];\r\n\r\n\t        /**\r\n\t         * @type {string}\r\n\t         */\r\n\t        this.name = name || '';\r\n\t    };\r\n\r\n\t    Cartesian.prototype = {\r\n\r\n\t        constructor: Cartesian,\r\n\r\n\t        type: 'cartesian',\r\n\r\n\t        /**\r\n\t         * Get axis\r\n\t         * @param  {number|string} dim\r\n\t         * @return {module:echarts/coord/Cartesian~Axis}\r\n\t         */\r\n\t        getAxis: function (dim) {\r\n\t            return this._axes[dim];\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Get axes list\r\n\t         * @return {Array.<module:echarts/coord/Cartesian~Axis>}\r\n\t         */\r\n\t        getAxes: function () {\r\n\t            return zrUtil.map(this._dimList, dimAxisMapper, this);\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Get axes list by given scale type\r\n\t         */\r\n\t        getAxesByScale: function (scaleType) {\r\n\t            scaleType = scaleType.toLowerCase();\r\n\t            return zrUtil.filter(\r\n\t                this.getAxes(),\r\n\t                function (axis) {\r\n\t                    return axis.scale.type === scaleType;\r\n\t                }\r\n\t            );\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Add axis\r\n\t         * @param {module:echarts/coord/Cartesian.Axis}\r\n\t         */\r\n\t        addAxis: function (axis) {\r\n\t            var dim = axis.dim;\r\n\r\n\t            this._axes[dim] = axis;\r\n\r\n\t            this._dimList.push(dim);\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Convert data to coord in nd space\r\n\t         * @param {Array.<number>|Object.<string, number>} val\r\n\t         * @return {Array.<number>|Object.<string, number>}\r\n\t         */\r\n\t        dataToCoord: function (val) {\r\n\t            return this._dataCoordConvert(val, 'dataToCoord');\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Convert coord in nd space to data\r\n\t         * @param  {Array.<number>|Object.<string, number>} val\r\n\t         * @return {Array.<number>|Object.<string, number>}\r\n\t         */\r\n\t        coordToData: function (val) {\r\n\t            return this._dataCoordConvert(val, 'coordToData');\r\n\t        },\r\n\r\n\t        _dataCoordConvert: function (input, method) {\r\n\t            var dimList = this._dimList;\r\n\r\n\t            var output = input instanceof Array ? [] : {};\r\n\r\n\t            for (var i = 0; i < dimList.length; i++) {\r\n\t                var dim = dimList[i];\r\n\t                var axis = this._axes[dim];\r\n\r\n\t                output[dim] = axis[method](input[dim]);\r\n\t            }\r\n\r\n\t            return output;\r\n\t        }\r\n\t    };\r\n\r\n\t    module.exports = Cartesian;\r\n\r\n\r\n/***/ },\r\n/* 122 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t\r\n\r\n\t    var zrUtil = __webpack_require__(4);\r\n\t    var Axis = __webpack_require__(123);\r\n\t    var axisLabelInterval = __webpack_require__(124);\r\n\r\n\t    /**\r\n\t     * Extend axis 2d\r\n\t     * @constructor module:echarts/coord/cartesian/Axis2D\r\n\t     * @extends {module:echarts/coord/cartesian/Axis}\r\n\t     * @param {string} dim\r\n\t     * @param {*} scale\r\n\t     * @param {Array.<number>} coordExtent\r\n\t     * @param {string} axisType\r\n\t     * @param {string} position\r\n\t     */\r\n\t    var Axis2D = function (dim, scale, coordExtent, axisType, position) {\r\n\t        Axis.call(this, dim, scale, coordExtent);\r\n\t        /**\r\n\t         * Axis type\r\n\t         *  - 'category'\r\n\t         *  - 'value'\r\n\t         *  - 'time'\r\n\t         *  - 'log'\r\n\t         * @type {string}\r\n\t         */\r\n\t        this.type = axisType || 'value';\r\n\r\n\t        /**\r\n\t         * Axis position\r\n\t         *  - 'top'\r\n\t         *  - 'bottom'\r\n\t         *  - 'left'\r\n\t         *  - 'right'\r\n\t         */\r\n\t        this.position = position || 'bottom';\r\n\t    };\r\n\r\n\t    Axis2D.prototype = {\r\n\r\n\t        constructor: Axis2D,\r\n\r\n\t        /**\r\n\t         * Index of axis, can be used as key\r\n\t         */\r\n\t        index: 0,\r\n\t        /**\r\n\t         * If axis is on the zero position of the other axis\r\n\t         * @type {boolean}\r\n\t         */\r\n\t        onZero: false,\r\n\r\n\t        /**\r\n\t         * Axis model\r\n\t         * @param {module:echarts/coord/cartesian/AxisModel}\r\n\t         */\r\n\t        model: null,\r\n\r\n\t        isHorizontal: function () {\r\n\t            var position = this.position;\r\n\t            return position === 'top' || position === 'bottom';\r\n\t        },\r\n\r\n\t        getGlobalExtent: function () {\r\n\t            var ret = this.getExtent();\r\n\t            ret[0] = this.toGlobalCoord(ret[0]);\r\n\t            ret[1] = this.toGlobalCoord(ret[1]);\r\n\t            return ret;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * @return {number}\r\n\t         */\r\n\t        getLabelInterval: function () {\r\n\t            var labelInterval = this._labelInterval;\r\n\t            if (!labelInterval) {\r\n\t                labelInterval = this._labelInterval = axisLabelInterval(this);\r\n\t            }\r\n\t            return labelInterval;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * If label is ignored.\r\n\t         * Automatically used when axis is category and label can not be all shown\r\n\t         * @param  {number}  idx\r\n\t         * @return {boolean}\r\n\t         */\r\n\t        isLabelIgnored: function (idx) {\r\n\t            if (this.type === 'category') {\r\n\t                var labelInterval = this.getLabelInterval();\r\n\t                return ((typeof labelInterval === 'function')\r\n\t                    && !labelInterval(idx, this.scale.getLabel(idx)))\r\n\t                    || idx % (labelInterval + 1);\r\n\t            }\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Transform global coord to local coord,\r\n\t         * i.e. var localCoord = axis.toLocalCoord(80);\r\n\t         * designate by module:echarts/coord/cartesian/Grid.\r\n\t         * @type {Function}\r\n\t         */\r\n\t        toLocalCoord: null,\r\n\r\n\t        /**\r\n\t         * Transform global coord to local coord,\r\n\t         * i.e. var globalCoord = axis.toLocalCoord(40);\r\n\t         * designate by module:echarts/coord/cartesian/Grid.\r\n\t         * @type {Function}\r\n\t         */\r\n\t        toGlobalCoord: null\r\n\r\n\t    };\r\n\t    zrUtil.inherits(Axis2D, Axis);\r\n\r\n\t    module.exports = Axis2D;\r\n\r\n\r\n/***/ },\r\n/* 123 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t\r\n\r\n\t    var numberUtil = __webpack_require__(7);\r\n\t    var linearMap = numberUtil.linearMap;\r\n\t    var zrUtil = __webpack_require__(4);\r\n\r\n\t    function fixExtentWithBands(extent, nTick) {\r\n\t        var size = extent[1] - extent[0];\r\n\t        var len = nTick;\r\n\t        var margin = size / len / 2;\r\n\t        extent[0] += margin;\r\n\t        extent[1] -= margin;\r\n\t    }\r\n\r\n\t    var normalizedExtent = [0, 1];\r\n\t    /**\r\n\t     * @name module:echarts/coord/CartesianAxis\r\n\t     * @constructor\r\n\t     */\r\n\t    var Axis = function (dim, scale, extent) {\r\n\r\n\t        /**\r\n\t         * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\r\n\t         * @type {string}\r\n\t         */\r\n\t        this.dim = dim;\r\n\r\n\t        /**\r\n\t         * Axis scale\r\n\t         * @type {module:echarts/coord/scale/*}\r\n\t         */\r\n\t        this.scale = scale;\r\n\r\n\t        /**\r\n\t         * @type {Array.<number>}\r\n\t         * @private\r\n\t         */\r\n\t        this._extent = extent || [0, 0];\r\n\r\n\t        /**\r\n\t         * @type {boolean}\r\n\t         */\r\n\t        this.inverse = false;\r\n\r\n\t        /**\r\n\t         * Usually true when axis has a ordinal scale\r\n\t         * @type {boolean}\r\n\t         */\r\n\t        this.onBand = false;\r\n\t    };\r\n\r\n\t    Axis.prototype = {\r\n\r\n\t        constructor: Axis,\r\n\r\n\t        /**\r\n\t         * If axis extent contain given coord\r\n\t         * @param {number} coord\r\n\t         * @return {boolean}\r\n\t         */\r\n\t        contain: function (coord) {\r\n\t            var extent = this._extent;\r\n\t            var min = Math.min(extent[0], extent[1]);\r\n\t            var max = Math.max(extent[0], extent[1]);\r\n\t            return coord >= min && coord <= max;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * If axis extent contain given data\r\n\t         * @param {number} data\r\n\t         * @return {boolean}\r\n\t         */\r\n\t        containData: function (data) {\r\n\t            return this.contain(this.dataToCoord(data));\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Get coord extent.\r\n\t         * @return {Array.<number>}\r\n\t         */\r\n\t        getExtent: function () {\r\n\t            var ret = this._extent.slice();\r\n\t            return ret;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Get precision used for formatting\r\n\t         * @param {Array.<number>} [dataExtent]\r\n\t         * @return {number}\r\n\t         */\r\n\t        getPixelPrecision: function (dataExtent) {\r\n\t            return numberUtil.getPixelPrecision(\r\n\t                dataExtent || this.scale.getExtent(),\r\n\t                this._extent\r\n\t            );\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Set coord extent\r\n\t         * @param {number} start\r\n\t         * @param {number} end\r\n\t         */\r\n\t        setExtent: function (start, end) {\r\n\t            var extent = this._extent;\r\n\t            extent[0] = start;\r\n\t            extent[1] = end;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Convert data to coord. Data is the rank if it has a ordinal scale\r\n\t         * @param {number} data\r\n\t         * @param  {boolean} clamp\r\n\t         * @return {number}\r\n\t         */\r\n\t        dataToCoord: function (data, clamp) {\r\n\t            var extent = this._extent;\r\n\t            var scale = this.scale;\r\n\t            data = scale.normalize(data);\r\n\r\n\t            if (this.onBand && scale.type === 'ordinal') {\r\n\t                extent = extent.slice();\r\n\t                fixExtentWithBands(extent, scale.count());\r\n\t            }\r\n\r\n\t            return linearMap(data, normalizedExtent, extent, clamp);\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Convert coord to data. Data is the rank if it has a ordinal scale\r\n\t         * @param {number} coord\r\n\t         * @param  {boolean} clamp\r\n\t         * @return {number}\r\n\t         */\r\n\t        coordToData: function (coord, clamp) {\r\n\t            var extent = this._extent;\r\n\t            var scale = this.scale;\r\n\r\n\t            if (this.onBand && scale.type === 'ordinal') {\r\n\t                extent = extent.slice();\r\n\t                fixExtentWithBands(extent, scale.count());\r\n\t            }\r\n\r\n\t            var t = linearMap(coord, extent, normalizedExtent, clamp);\r\n\r\n\t            return this.scale.scale(t);\r\n\t        },\r\n\t        /**\r\n\t         * @return {Array.<number>}\r\n\t         */\r\n\t        getTicksCoords: function (alignWithLabel) {\r\n\t            if (this.onBand && !alignWithLabel) {\r\n\t                var bands = this.getBands();\r\n\t                var coords = [];\r\n\t                for (var i = 0; i < bands.length; i++) {\r\n\t                    coords.push(bands[i][0]);\r\n\t                }\r\n\t                if (bands[i - 1]) {\r\n\t                    coords.push(bands[i - 1][1]);\r\n\t                }\r\n\t                return coords;\r\n\t            }\r\n\t            else {\r\n\t                return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\r\n\t            }\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Coords of labels are on the ticks or on the middle of bands\r\n\t         * @return {Array.<number>}\r\n\t         */\r\n\t        getLabelsCoords: function () {\r\n\t            return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Get bands.\r\n\t         *\r\n\t         * If axis has labels [1, 2, 3, 4]. Bands on the axis are\r\n\t         * |---1---|---2---|---3---|---4---|.\r\n\t         *\r\n\t         * @return {Array}\r\n\t         */\r\n\t         // FIXME Situation when labels is on ticks\r\n\t        getBands: function () {\r\n\t            var extent = this.getExtent();\r\n\t            var bands = [];\r\n\t            var len = this.scale.count();\r\n\t            var start = extent[0];\r\n\t            var end = extent[1];\r\n\t            var span = end - start;\r\n\r\n\t            for (var i = 0; i < len; i++) {\r\n\t                bands.push([\r\n\t                    span * i / len + start,\r\n\t                    span * (i + 1) / len + start\r\n\t                ]);\r\n\t            }\r\n\t            return bands;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * Get width of band\r\n\t         * @return {number}\r\n\t         */\r\n\t        getBandWidth: function () {\r\n\t            var axisExtent = this._extent;\r\n\t            var dataExtent = this.scale.getExtent();\r\n\r\n\t            var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0);\r\n\t            // Fix #2728, avoid NaN when only one data.\r\n\t            len === 0 && (len = 1);\r\n\r\n\t            var size = Math.abs(axisExtent[1] - axisExtent[0]);\r\n\r\n\t            return Math.abs(size) / len;\r\n\t        }\r\n\t    };\r\n\r\n\t    module.exports = Axis;\r\n\r\n\r\n/***/ },\r\n/* 124 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t'use strict';\r\n\t/**\r\n\t * Helper function for axisLabelInterval calculation\r\n\t */\r\n\r\n\r\n\r\n\t    var zrUtil = __webpack_require__(4);\r\n\t    var axisHelper = __webpack_require__(114);\r\n\r\n\t    module.exports = function (axis) {\r\n\t        var axisModel = axis.model;\r\n\t        var labelModel = axisModel.getModel('axisLabel');\r\n\t        var labelInterval = labelModel.get('interval');\r\n\t        if (!(axis.type === 'category' && labelInterval === 'auto')) {\r\n\t            return labelInterval === 'auto' ? 0 : labelInterval;\r\n\t        }\r\n\r\n\t        return axisHelper.getAxisLabelInterval(\r\n\t            zrUtil.map(axis.scale.getTicks(), axis.dataToCoord, axis),\r\n\t            axisModel.getFormattedLabels(),\r\n\t            labelModel.getModel('textStyle').getFont(),\r\n\t            axis.isHorizontal()\r\n\t        );\r\n\t    };\r\n\r\n\r\n/***/ },\r\n/* 125 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t'use strict';\r\n\t// Grid 是在有直角坐标系的时候必须要存在的\r\n\t// 所以这里也要被 Cartesian2D 依赖\r\n\r\n\r\n\t    __webpack_require__(126);\r\n\t    var ComponentModel = __webpack_require__(19);\r\n\r\n\t    module.exports = ComponentModel.extend({\r\n\r\n\t        type: 'grid',\r\n\r\n\t        dependencies: ['xAxis', 'yAxis'],\r\n\r\n\t        layoutMode: 'box',\r\n\r\n\t        /**\r\n\t         * @type {module:echarts/coord/cartesian/Grid}\r\n\t         */\r\n\t        coordinateSystem: null,\r\n\r\n\t        defaultOption: {\r\n\t            show: false,\r\n\t            zlevel: 0,\r\n\t            z: 0,\r\n\t            left: '10%',\r\n\t            top: 60,\r\n\t            right: '10%',\r\n\t            bottom: 60,\r\n\t            // If grid size contain label\r\n\t            containLabel: false,\r\n\t            // width: {totalWidth} - left - right,\r\n\t            // height: {totalHeight} - top - bottom,\r\n\t            backgroundColor: 'rgba(0,0,0,0)',\r\n\t            borderWidth: 1,\r\n\t            borderColor: '#ccc'\r\n\t        }\r\n\t    });\r\n\r\n\r\n/***/ },\r\n/* 126 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t'use strict';\r\n\r\n\r\n\t    var ComponentModel = __webpack_require__(19);\r\n\t    var zrUtil = __webpack_require__(4);\r\n\t    var axisModelCreator = __webpack_require__(127);\r\n\r\n\t    var AxisModel = ComponentModel.extend({\r\n\r\n\t        type: 'cartesian2dAxis',\r\n\r\n\t        /**\r\n\t         * @type {module:echarts/coord/cartesian/Axis2D}\r\n\t         */\r\n\t        axis: null,\r\n\r\n\t        /**\r\n\t         * @override\r\n\t         */\r\n\t        init: function () {\r\n\t            AxisModel.superApply(this, 'init', arguments);\r\n\t            this._resetRange();\r\n\t        },\r\n\r\n\t        /**\r\n\t         * @override\r\n\t         */\r\n\t        mergeOption: function () {\r\n\t            AxisModel.superApply(this, 'mergeOption', arguments);\r\n\t            this._resetRange();\r\n\t        },\r\n\r\n\t        /**\r\n\t         * @override\r\n\t         */\r\n\t        restoreData: function () {\r\n\t            AxisModel.superApply(this, 'restoreData', arguments);\r\n\t            this._resetRange();\r\n\t        },\r\n\r\n\t        /**\r\n\t         * @public\r\n\t         * @param {number} rangeStart\r\n\t         * @param {number} rangeEnd\r\n\t         */\r\n\t        setRange: function (rangeStart, rangeEnd) {\r\n\t            this.option.rangeStart = rangeStart;\r\n\t            this.option.rangeEnd = rangeEnd;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * @public\r\n\t         * @return {Array.<number|string|Date>}\r\n\t         */\r\n\t        getMin: function () {\r\n\t            var option = this.option;\r\n\t            return option.rangeStart != null ? option.rangeStart : option.min;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * @public\r\n\t         * @return {Array.<number|string|Date>}\r\n\t         */\r\n\t        getMax: function () {\r\n\t            var option = this.option;\r\n\t            return option.rangeEnd != null ? option.rangeEnd : option.max;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * @public\r\n\t         * @return {boolean}\r\n\t         */\r\n\t        getNeedCrossZero: function () {\r\n\t            var option = this.option;\r\n\t            return (option.rangeStart != null || option.rangeEnd != null)\r\n\t                ? false : !option.scale;\r\n\t        },\r\n\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        _resetRange: function () {\r\n\t            // rangeStart and rangeEnd is readonly.\r\n\t            this.option.rangeStart = this.option.rangeEnd = null;\r\n\t        }\r\n\r\n\t    });\r\n\r\n\t    function getAxisType(axisDim, option) {\r\n\t        // Default axis with data is category axis\r\n\t        return option.type || (option.data ? 'category' : 'value');\r\n\t    }\r\n\r\n\t    zrUtil.merge(AxisModel.prototype, __webpack_require__(129));\r\n\r\n\t    var extraOption = {\r\n\t        gridIndex: 0,\r\n\r\n\t        // Offset is for multiple axis on the same position\r\n\t        offset: 0\r\n\t    };\r\n\r\n\t    axisModelCreator('x', AxisModel, getAxisType, extraOption);\r\n\t    axisModelCreator('y', AxisModel, getAxisType, extraOption);\r\n\r\n\t    module.exports = AxisModel;\r\n\r\n\r\n/***/ },\r\n/* 127 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t\r\n\r\n\t    var axisDefault = __webpack_require__(128);\r\n\t    var zrUtil = __webpack_require__(4);\r\n\t    var ComponentModel = __webpack_require__(19);\r\n\t    var layout = __webpack_require__(21);\r\n\r\n\t    // FIXME axisType is fixed ?\r\n\t    var AXIS_TYPES = ['value', 'category', 'time', 'log'];\r\n\r\n\t    /**\r\n\t     * Generate sub axis model class\r\n\t     * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\r\n\t     * @param {module:echarts/model/Component} BaseAxisModelClass\r\n\t     * @param {Function} axisTypeDefaulter\r\n\t     * @param {Object} [extraDefaultOption]\r\n\t     */\r\n\t    module.exports = function (axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\r\n\r\n\t        zrUtil.each(AXIS_TYPES, function (axisType) {\r\n\r\n\t            BaseAxisModelClass.extend({\r\n\r\n\t                type: axisName + 'Axis.' + axisType,\r\n\r\n\t                mergeDefaultAndTheme: function (option, ecModel) {\r\n\t                    var layoutMode = this.layoutMode;\r\n\t                    var inputPositionParams = layoutMode\r\n\t                        ? layout.getLayoutParams(option) : {};\r\n\r\n\t                    var themeModel = ecModel.getTheme();\r\n\t                    zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\r\n\t                    zrUtil.merge(option, this.getDefaultOption());\r\n\r\n\t                    option.type = axisTypeDefaulter(axisName, option);\r\n\r\n\t                    if (layoutMode) {\r\n\t                        layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\r\n\t                    }\r\n\t                },\r\n\r\n\t                defaultOption: zrUtil.mergeAll(\r\n\t                    [\r\n\t                        {},\r\n\t                        axisDefault[axisType + 'Axis'],\r\n\t                        extraDefaultOption\r\n\t                    ],\r\n\t                    true\r\n\t                )\r\n\t            });\r\n\t        });\r\n\r\n\t        ComponentModel.registerSubTypeDefaulter(\r\n\t            axisName + 'Axis',\r\n\t            zrUtil.curry(axisTypeDefaulter, axisName)\r\n\t        );\r\n\t    };\r\n\r\n\r\n/***/ },\r\n/* 128 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t\r\n\r\n\t    var zrUtil = __webpack_require__(4);\r\n\r\n\t    var defaultOption = {\r\n\t        show: true,\r\n\t        zlevel: 0,                  // 一级层叠\r\n\t        z: 0,                       // 二级层叠\r\n\t        // 反向坐标轴\r\n\t        inverse: false,\r\n\r\n\t        // 坐标轴名字，默认为空\r\n\t        name: '',\r\n\t        // 坐标轴名字位置，支持'start' | 'middle' | 'end'\r\n\t        nameLocation: 'end',\r\n\t        // 坐标轴名字旋转，degree。\r\n\t        nameRotate: null, // Adapt to axis rotate, when nameLocation is 'middle'.\r\n\t        nameTruncate: {\r\n\t            maxWidth: null,\r\n\t            ellipsis: '...',\r\n\t            placeholder: '.'\r\n\t        },\r\n\t        // 坐标轴文字样式，默认取全局样式\r\n\t        nameTextStyle: {},\r\n\t        // 文字与轴线距离\r\n\t        nameGap: 15,\r\n\r\n\t        silent: false, // Default false to support tooltip.\r\n\t        triggerEvent: false, // Default false to avoid legacy user event listener fail.\r\n\r\n\t        tooltip: {\r\n\t            show: false\r\n\t        },\r\n\r\n\t        // 坐标轴线\r\n\t        axisLine: {\r\n\t            // 默认显示，属性show控制显示与否\r\n\t            show: true,\r\n\t            onZero: true,\r\n\t            // 属性lineStyle控制线条样式\r\n\t            lineStyle: {\r\n\t                color: '#333',\r\n\t                width: 1,\r\n\t                type: 'solid'\r\n\t            }\r\n\t        },\r\n\t        // 坐标轴小标记\r\n\t        axisTick: {\r\n\t            // 属性show控制显示与否，默认显示\r\n\t            show: true,\r\n\t            // 控制小标记是否在grid里\r\n\t            inside: false,\r\n\t            // 属性length控制线长\r\n\t            length: 5,\r\n\t            // 属性lineStyle控制线条样式\r\n\t            lineStyle: {\r\n\t                width: 1\r\n\t            }\r\n\t        },\r\n\t        // 坐标轴文本标签，详见axis.axisLabel\r\n\t        axisLabel: {\r\n\t            show: true,\r\n\t            // 控制文本标签是否在grid里\r\n\t            inside: false,\r\n\t            rotate: 0,\r\n\t            margin: 8,\r\n\t            // formatter: null,\r\n\t            // 其余属性默认使用全局文本样式，详见TEXTSTYLE\r\n\t            textStyle: {\r\n\t                fontSize: 12\r\n\t            }\r\n\t        },\r\n\t        // 分隔线\r\n\t        splitLine: {\r\n\t            // 默认显示，属性show控制显示与否\r\n\t            show: true,\r\n\t            // 属性lineStyle（详见lineStyle）控制线条样式\r\n\t            lineStyle: {\r\n\t                color: ['#ccc'],\r\n\t                width: 1,\r\n\t                type: 'solid'\r\n\t            }\r\n\t        },\r\n\t        // 分隔区域\r\n\t        splitArea: {\r\n\t            // 默认不显示，属性show控制显示与否\r\n\t            show: false,\r\n\t            // 属性areaStyle（详见areaStyle）控制区域样式\r\n\t            areaStyle: {\r\n\t                color: ['rgba(250,250,250,0.3)','rgba(200,200,200,0.3)']\r\n\t            }\r\n\t        }\r\n\t    };\r\n\r\n\t    var categoryAxis = zrUtil.merge({\r\n\t        // 类目起始和结束两端空白策略\r\n\t        boundaryGap: true,\r\n\t        // splitArea: {\r\n\t            // show: false\r\n\t        // },\r\n\t        splitLine: {\r\n\t            show: false\r\n\t        },\r\n\t        // 坐标轴小标记\r\n\t        axisTick: {\r\n\t            // If tick is align with label when boundaryGap is true\r\n\t            // Default with axisTick\r\n\t            alignWithLabel: false,\r\n\t            interval: 'auto'\r\n\t        },\r\n\t        // 坐标轴文本标签，详见axis.axisLabel\r\n\t        axisLabel: {\r\n\t            interval: 'auto'\r\n\t        }\r\n\t    }, defaultOption);\r\n\r\n\t    var valueAxis = zrUtil.merge({\r\n\t        // 数值起始和结束两端空白策略\r\n\t        boundaryGap: [0, 0],\r\n\t        // 最小值, 设置成 'dataMin' 则从数据中计算最小值\r\n\t        // min: null,\r\n\t        // 最大值，设置成 'dataMax' 则从数据中计算最大值\r\n\t        // max: null,\r\n\t        // Readonly prop, specifies start value of the range when using data zoom.\r\n\t        // rangeStart: null\r\n\t        // Readonly prop, specifies end value of the range when using data zoom.\r\n\t        // rangeEnd: null\r\n\t        // 脱离0值比例，放大聚焦到最终_min，_max区间\r\n\t        // scale: false,\r\n\t        // 分割段数，默认为5\r\n\t        splitNumber: 5\r\n\t        // Minimum interval\r\n\t        // minInterval: null\r\n\t    }, defaultOption);\r\n\r\n\t    // FIXME\r\n\t    var timeAxis = zrUtil.defaults({\r\n\t        scale: true,\r\n\t        min: 'dataMin',\r\n\t        max: 'dataMax'\r\n\t    }, valueAxis);\r\n\t    var logAxis = zrUtil.defaults({}, valueAxis);\r\n\t    logAxis.scale = true;\r\n\r\n\t    module.exports = {\r\n\t        categoryAxis: categoryAxis,\r\n\t        valueAxis: valueAxis,\r\n\t        timeAxis: timeAxis,\r\n\t        logAxis: logAxis\r\n\t    };\r\n\r\n\r\n/***/ },\r\n/* 129 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t\r\n\r\n\t    var zrUtil = __webpack_require__(4);\r\n\t    var axisHelper = __webpack_require__(114);\r\n\r\n\t    function getName(obj) {\r\n\t        if (zrUtil.isObject(obj) && obj.value != null) {\r\n\t            return obj.value;\r\n\t        }\r\n\t        else {\r\n\t            return obj;\r\n\t        }\r\n\t    }\r\n\t    /**\r\n\t     * Get categories\r\n\t     */\r\n\t    function getCategories() {\r\n\t        return this.get('type') === 'category'\r\n\t            && zrUtil.map(this.get('data'), getName);\r\n\t    }\r\n\r\n\t    /**\r\n\t     * Format labels\r\n\t     * @return {Array.<string>}\r\n\t     */\r\n\t    function getFormattedLabels() {\r\n\t        return axisHelper.getFormattedLabels(\r\n\t            this.axis,\r\n\t            this.get('axisLabel.formatter')\r\n\t        );\r\n\t    }\r\n\r\n\t    module.exports = {\r\n\r\n\t        getFormattedLabels: getFormattedLabels,\r\n\r\n\t        getCategories: getCategories\r\n\t    };\r\n\r\n\r\n/***/ },\r\n/* 130 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t'use strict';\r\n\t// TODO boundaryGap\r\n\r\n\r\n\t    __webpack_require__(126);\r\n\r\n\t    __webpack_require__(131);\r\n\r\n\r\n/***/ },\r\n/* 131 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t\r\n\r\n\t    var zrUtil = __webpack_require__(4);\r\n\t    var graphic = __webpack_require__(43);\r\n\t    var AxisBuilder = __webpack_require__(132);\r\n\t    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\r\n\t    var getInterval = AxisBuilder.getInterval;\r\n\r\n\t    var axisBuilderAttrs = [\r\n\t        'axisLine', 'axisLabel', 'axisTick', 'axisName'\r\n\t    ];\r\n\t    var selfBuilderAttrs = [\r\n\t        'splitArea', 'splitLine'\r\n\t    ];\r\n\r\n\t    // function getAlignWithLabel(model, axisModel) {\r\n\t    //     var alignWithLabel = model.get('alignWithLabel');\r\n\t    //     if (alignWithLabel === 'auto') {\r\n\t    //         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\r\n\t    //     }\r\n\t    //     return alignWithLabel;\r\n\t    // }\r\n\r\n\t    var AxisView = __webpack_require__(1).extendComponentView({\r\n\r\n\t        type: 'axis',\r\n\r\n\t        render: function (axisModel, ecModel) {\r\n\r\n\t            this.group.removeAll();\r\n\r\n\t            var oldAxisGroup = this._axisGroup;\r\n\t            this._axisGroup = new graphic.Group();\r\n\r\n\t            this.group.add(this._axisGroup);\r\n\r\n\t            if (!axisModel.get('show')) {\r\n\t                return;\r\n\t            }\r\n\r\n\t            var gridModel = ecModel.getComponent('grid', axisModel.get('gridIndex'));\r\n\r\n\t            var layout = layoutAxis(gridModel, axisModel);\r\n\r\n\t            var axisBuilder = new AxisBuilder(axisModel, layout);\r\n\r\n\t            zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\r\n\r\n\t            this._axisGroup.add(axisBuilder.getGroup());\r\n\r\n\t            zrUtil.each(selfBuilderAttrs, function (name) {\r\n\t                if (axisModel.get(name + '.show')) {\r\n\t                    this['_' + name](axisModel, gridModel, layout.labelInterval);\r\n\t                }\r\n\t            }, this);\r\n\r\n\t            graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\r\n\t        },\r\n\r\n\t        /**\r\n\t         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\r\n\t         * @param {module:echarts/coord/cartesian/GridModel} gridModel\r\n\t         * @param {number|Function} labelInterval\r\n\t         * @private\r\n\t         */\r\n\t        _splitLine: function (axisModel, gridModel, labelInterval) {\r\n\t            var axis = axisModel.axis;\r\n\r\n\t            var splitLineModel = axisModel.getModel('splitLine');\r\n\t            var lineStyleModel = splitLineModel.getModel('lineStyle');\r\n\t            var lineColors = lineStyleModel.get('color');\r\n\r\n\t            var lineInterval = getInterval(splitLineModel, labelInterval);\r\n\r\n\t            lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\r\n\r\n\t            var gridRect = gridModel.coordinateSystem.getRect();\r\n\t            var isHorizontal = axis.isHorizontal();\r\n\r\n\t            var lineCount = 0;\r\n\r\n\t            var ticksCoords = axis.getTicksCoords(\r\n\t                // splitLineModel.get('alignWithLabel')\r\n\t            );\r\n\t            var ticks = axis.scale.getTicks();\r\n\r\n\t            var p1 = [];\r\n\t            var p2 = [];\r\n\t            // Simple optimization\r\n\t            // Batching the lines if color are the same\r\n\t            var lineStyle = lineStyleModel.getLineStyle();\r\n\t            for (var i = 0; i < ticksCoords.length; i++) {\r\n\t                if (ifIgnoreOnTick(axis, i, lineInterval)) {\r\n\t                    continue;\r\n\t                }\r\n\r\n\t                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\r\n\r\n\t                if (isHorizontal) {\r\n\t                    p1[0] = tickCoord;\r\n\t                    p1[1] = gridRect.y;\r\n\t                    p2[0] = tickCoord;\r\n\t                    p2[1] = gridRect.y + gridRect.height;\r\n\t                }\r\n\t                else {\r\n\t                    p1[0] = gridRect.x;\r\n\t                    p1[1] = tickCoord;\r\n\t                    p2[0] = gridRect.x + gridRect.width;\r\n\t                    p2[1] = tickCoord;\r\n\t                }\r\n\r\n\t                var colorIndex = (lineCount++) % lineColors.length;\r\n\t                this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\r\n\t                    anid: 'line_' + ticks[i],\r\n\r\n\t                    shape: {\r\n\t                        x1: p1[0],\r\n\t                        y1: p1[1],\r\n\t                        x2: p2[0],\r\n\t                        y2: p2[1]\r\n\t                    },\r\n\t                    style: zrUtil.defaults({\r\n\t                        stroke: lineColors[colorIndex]\r\n\t                    }, lineStyle),\r\n\t                    silent: true\r\n\t                })));\r\n\t            }\r\n\t        },\r\n\r\n\t        /**\r\n\t         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\r\n\t         * @param {module:echarts/coord/cartesian/GridModel} gridModel\r\n\t         * @param {number|Function} labelInterval\r\n\t         * @private\r\n\t         */\r\n\t        _splitArea: function (axisModel, gridModel, labelInterval) {\r\n\t            var axis = axisModel.axis;\r\n\r\n\t            var splitAreaModel = axisModel.getModel('splitArea');\r\n\t            var areaStyleModel = splitAreaModel.getModel('areaStyle');\r\n\t            var areaColors = areaStyleModel.get('color');\r\n\r\n\t            var gridRect = gridModel.coordinateSystem.getRect();\r\n\r\n\t            var ticksCoords = axis.getTicksCoords(\r\n\t                // splitAreaModel.get('alignWithLabel')\r\n\t            );\r\n\t            var ticks = axis.scale.getTicks();\r\n\r\n\t            var prevX = axis.toGlobalCoord(ticksCoords[0]);\r\n\t            var prevY = axis.toGlobalCoord(ticksCoords[0]);\r\n\r\n\t            var count = 0;\r\n\r\n\t            var areaInterval = getInterval(splitAreaModel, labelInterval);\r\n\r\n\t            var areaStyle = areaStyleModel.getAreaStyle();\r\n\t            areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\r\n\r\n\t            for (var i = 1; i < ticksCoords.length; i++) {\r\n\t                if (ifIgnoreOnTick(axis, i, areaInterval)) {\r\n\t                    continue;\r\n\t                }\r\n\r\n\t                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\r\n\r\n\t                var x;\r\n\t                var y;\r\n\t                var width;\r\n\t                var height;\r\n\t                if (axis.isHorizontal()) {\r\n\t                    x = prevX;\r\n\t                    y = gridRect.y;\r\n\t                    width = tickCoord - x;\r\n\t                    height = gridRect.height;\r\n\t                }\r\n\t                else {\r\n\t                    x = gridRect.x;\r\n\t                    y = prevY;\r\n\t                    width = gridRect.width;\r\n\t                    height = tickCoord - y;\r\n\t                }\r\n\r\n\t                var colorIndex = (count++) % areaColors.length;\r\n\t                this._axisGroup.add(new graphic.Rect({\r\n\t                    anid: 'area_' + ticks[i],\r\n\r\n\t                    shape: {\r\n\t                        x: x,\r\n\t                        y: y,\r\n\t                        width: width,\r\n\t                        height: height\r\n\t                    },\r\n\t                    style: zrUtil.defaults({\r\n\t                        fill: areaColors[colorIndex]\r\n\t                    }, areaStyle),\r\n\t                    silent: true\r\n\t                }));\r\n\r\n\t                prevX = x + width;\r\n\t                prevY = y + height;\r\n\t            }\r\n\t        }\r\n\t    });\r\n\r\n\t    AxisView.extend({\r\n\t        type: 'xAxis'\r\n\t    });\r\n\t    AxisView.extend({\r\n\t        type: 'yAxis'\r\n\t    });\r\n\r\n\t    /**\r\n\t     * @inner\r\n\t     */\r\n\t    function layoutAxis(gridModel, axisModel) {\r\n\t        var grid = gridModel.coordinateSystem;\r\n\t        var axis = axisModel.axis;\r\n\t        var layout = {};\r\n\r\n\t        var rawAxisPosition = axis.position;\r\n\t        var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\r\n\t        var axisDim = axis.dim;\r\n\r\n\t        // [left, right, top, bottom]\r\n\t        var rect = grid.getRect();\r\n\t        var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\r\n\r\n\t        var axisOffset = axisModel.get('offset') || 0;\r\n\r\n\t        var posMap = {\r\n\t            x: { top: rectBound[2] - axisOffset, bottom: rectBound[3] + axisOffset },\r\n\t            y: { left: rectBound[0] - axisOffset, right: rectBound[1] + axisOffset }\r\n\t        };\r\n\r\n\t        posMap.x.onZero = Math.max(Math.min(getZero('y'), posMap.x.bottom), posMap.x.top);\r\n\t        posMap.y.onZero = Math.max(Math.min(getZero('x'), posMap.y.right), posMap.y.left);\r\n\r\n\t        function getZero(dim, val) {\r\n\t            var theAxis = grid.getAxis(dim);\r\n\t            return theAxis.toGlobalCoord(theAxis.dataToCoord(0));\r\n\t        }\r\n\r\n\t        // Axis position\r\n\t        layout.position = [\r\n\t            axisDim === 'y' ? posMap.y[axisPosition] : rectBound[0],\r\n\t            axisDim === 'x' ? posMap.x[axisPosition] : rectBound[3]\r\n\t        ];\r\n\r\n\t        // Axis rotation\r\n\t        layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1);\r\n\r\n\t        // Tick and label direction, x y is axisDim\r\n\t        var dirMap = {top: -1, bottom: 1, left: -1, right: 1};\r\n\r\n\t        layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\r\n\t        if (axis.onZero) {\r\n\t            layout.labelOffset = posMap[axisDim][rawAxisPosition] - posMap[axisDim].onZero;\r\n\t        }\r\n\r\n\t        if (axisModel.getModel('axisTick').get('inside')) {\r\n\t            layout.tickDirection = -layout.tickDirection;\r\n\t        }\r\n\t        if (axisModel.getModel('axisLabel').get('inside')) {\r\n\t            layout.labelDirection = -layout.labelDirection;\r\n\t        }\r\n\r\n\t        // Special label rotation\r\n\t        var labelRotation = axisModel.getModel('axisLabel').get('rotate');\r\n\t        layout.labelRotation = axisPosition === 'top' ? -labelRotation : labelRotation;\r\n\r\n\t        // label interval when auto mode.\r\n\t        layout.labelInterval = axis.getLabelInterval();\r\n\r\n\t        // Over splitLine and splitArea\r\n\t        layout.z2 = 1;\r\n\r\n\t        return layout;\r\n\t    }\r\n\r\n\r\n/***/ },\r\n/* 132 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t\r\n\r\n\t    var zrUtil = __webpack_require__(4);\r\n\t    var formatUtil = __webpack_require__(6);\r\n\t    var graphic = __webpack_require__(43);\r\n\t    var Model = __webpack_require__(12);\r\n\t    var numberUtil = __webpack_require__(7);\r\n\t    var remRadian = numberUtil.remRadian;\r\n\t    var isRadianAroundZero = numberUtil.isRadianAroundZero;\r\n\t    var vec2 = __webpack_require__(10);\r\n\t    var v2ApplyTransform = vec2.applyTransform;\r\n\t    var retrieve = zrUtil.retrieve;\r\n\r\n\t    var PI = Math.PI;\r\n\r\n\t    function makeAxisEventDataBase(axisModel) {\r\n\t        var eventData = {\r\n\t            componentType: axisModel.mainType\r\n\t        };\r\n\t        eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\r\n\t        return eventData;\r\n\t    }\r\n\r\n\t    /**\r\n\t     * A final axis is translated and rotated from a \"standard axis\".\r\n\t     * So opt.position and opt.rotation is required.\r\n\t     *\r\n\t     * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\r\n\t     * for example: (0, 0) ------------> (0, 50)\r\n\t     *\r\n\t     * nameDirection or tickDirection or labelDirection is 1 means tick\r\n\t     * or label is below the standard axis, whereas is -1 means above\r\n\t     * the standard axis. labelOffset means offset between label and axis,\r\n\t     * which is useful when 'onZero', where axisLabel is in the grid and\r\n\t     * label in outside grid.\r\n\t     *\r\n\t     * Tips: like always,\r\n\t     * positive rotation represents anticlockwise, and negative rotation\r\n\t     * represents clockwise.\r\n\t     * The direction of position coordinate is the same as the direction\r\n\t     * of screen coordinate.\r\n\t     *\r\n\t     * Do not need to consider axis 'inverse', which is auto processed by\r\n\t     * axis extent.\r\n\t     *\r\n\t     * @param {module:zrender/container/Group} group\r\n\t     * @param {Object} axisModel\r\n\t     * @param {Object} opt Standard axis parameters.\r\n\t     * @param {Array.<number>} opt.position [x, y]\r\n\t     * @param {number} opt.rotation by radian\r\n\t     * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle'.\r\n\t     * @param {number} [opt.tickDirection=1] 1 or -1\r\n\t     * @param {number} [opt.labelDirection=1] 1 or -1\r\n\t     * @param {number} [opt.labelOffset=0] Usefull when onZero.\r\n\t     * @param {string} [opt.axisLabelShow] default get from axisModel.\r\n\t     * @param {string} [opt.axisName] default get from axisModel.\r\n\t     * @param {number} [opt.axisNameAvailableWidth]\r\n\t     * @param {number} [opt.labelRotation] by degree, default get from axisModel.\r\n\t     * @param {number} [opt.labelInterval] Default label interval when label\r\n\t     *                                     interval from model is null or 'auto'.\r\n\t     * @param {number} [opt.strokeContainThreshold] Default label interval when label\r\n\t     * @param {number} [opt.axisLineSilent=true] If axis line is silent\r\n\t     */\r\n\t    var AxisBuilder = function (axisModel, opt) {\r\n\r\n\t        /**\r\n\t         * @readOnly\r\n\t         */\r\n\t        this.opt = opt;\r\n\r\n\t        /**\r\n\t         * @readOnly\r\n\t         */\r\n\t        this.axisModel = axisModel;\r\n\r\n\t        // Default value\r\n\t        zrUtil.defaults(\r\n\t            opt,\r\n\t            {\r\n\t                labelOffset: 0,\r\n\t                nameDirection: 1,\r\n\t                tickDirection: 1,\r\n\t                labelDirection: 1,\r\n\t                silent: true\r\n\t            }\r\n\t        );\r\n\r\n\t        /**\r\n\t         * @readOnly\r\n\t         */\r\n\t        this.group = new graphic.Group();\r\n\r\n\t        // FIXME Not use a seperate text group?\r\n\t        var dumbGroup = new graphic.Group({\r\n\t            position: opt.position.slice(),\r\n\t            rotation: opt.rotation\r\n\t        });\r\n\r\n\t        // this.group.add(dumbGroup);\r\n\t        // this._dumbGroup = dumbGroup;\r\n\r\n\t        dumbGroup.updateTransform();\r\n\t        this._transform = dumbGroup.transform;\r\n\r\n\t        this._dumbGroup = dumbGroup;\r\n\t    };\r\n\r\n\t    AxisBuilder.prototype = {\r\n\r\n\t        constructor: AxisBuilder,\r\n\r\n\t        hasBuilder: function (name) {\r\n\t            return !!builders[name];\r\n\t        },\r\n\r\n\t        add: function (name) {\r\n\t            builders[name].call(this);\r\n\t        },\r\n\r\n\t        getGroup: function () {\r\n\t            return this.group;\r\n\t        }\r\n\r\n\t    };\r\n\r\n\t    var builders = {\r\n\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        axisLine: function () {\r\n\t            var opt = this.opt;\r\n\t            var axisModel = this.axisModel;\r\n\r\n\t            if (!axisModel.get('axisLine.show')) {\r\n\t                return;\r\n\t            }\r\n\r\n\t            var extent = this.axisModel.axis.getExtent();\r\n\r\n\t            var matrix = this._transform;\r\n\t            var pt1 = [extent[0], 0];\r\n\t            var pt2 = [extent[1], 0];\r\n\t            if (matrix) {\r\n\t                v2ApplyTransform(pt1, pt1, matrix);\r\n\t                v2ApplyTransform(pt2, pt2, matrix);\r\n\t            }\r\n\r\n\t            this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\r\n\r\n\t                // Id for animation\r\n\t                anid: 'line',\r\n\r\n\t                shape: {\r\n\t                    x1: pt1[0],\r\n\t                    y1: pt1[1],\r\n\t                    x2: pt2[0],\r\n\t                    y2: pt2[1]\r\n\t                },\r\n\t                style: zrUtil.extend(\r\n\t                    {lineCap: 'round'},\r\n\t                    axisModel.getModel('axisLine.lineStyle').getLineStyle()\r\n\t                ),\r\n\t                strokeContainThreshold: opt.strokeContainThreshold || 5,\r\n\t                silent: !!opt.axisLineSilent,\r\n\t                z2: 1\r\n\t            })));\r\n\t        },\r\n\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        axisTick: function () {\r\n\t            var axisModel = this.axisModel;\r\n\r\n\t            if (!axisModel.get('axisTick.show')) {\r\n\t                return;\r\n\t            }\r\n\r\n\t            var axis = axisModel.axis;\r\n\t            var tickModel = axisModel.getModel('axisTick');\r\n\t            var opt = this.opt;\r\n\r\n\t            var lineStyleModel = tickModel.getModel('lineStyle');\r\n\t            var tickLen = tickModel.get('length');\r\n\r\n\t            var tickInterval = getInterval(tickModel, opt.labelInterval);\r\n\t            var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel'));\r\n\t            var ticks = axis.scale.getTicks();\r\n\r\n\t            var pt1 = [];\r\n\t            var pt2 = [];\r\n\t            var matrix = this._transform;\r\n\r\n\t            for (var i = 0; i < ticksCoords.length; i++) {\r\n\t                // Only ordinal scale support tick interval\r\n\t                if (ifIgnoreOnTick(axis, i, tickInterval)) {\r\n\t                     continue;\r\n\t                }\r\n\r\n\t                var tickCoord = ticksCoords[i];\r\n\r\n\t                pt1[0] = tickCoord;\r\n\t                pt1[1] = 0;\r\n\t                pt2[0] = tickCoord;\r\n\t                pt2[1] = opt.tickDirection * tickLen;\r\n\r\n\t                if (matrix) {\r\n\t                    v2ApplyTransform(pt1, pt1, matrix);\r\n\t                    v2ApplyTransform(pt2, pt2, matrix);\r\n\t                }\r\n\t                // Tick line, Not use group transform to have better line draw\r\n\t                this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\r\n\r\n\t                    // Id for animation\r\n\t                    anid: 'tick_' + ticks[i],\r\n\r\n\t                    shape: {\r\n\t                        x1: pt1[0],\r\n\t                        y1: pt1[1],\r\n\t                        x2: pt2[0],\r\n\t                        y2: pt2[1]\r\n\t                    },\r\n\t                    style: zrUtil.defaults(\r\n\t                        lineStyleModel.getLineStyle(),\r\n\t                        {\r\n\t                            stroke: axisModel.get('axisLine.lineStyle.color')\r\n\t                        }\r\n\t                    ),\r\n\t                    z2: 2,\r\n\t                    silent: true\r\n\t                })));\r\n\t            }\r\n\t        },\r\n\r\n\t        /**\r\n\t         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\r\n\t         * @param {module:echarts/coord/cartesian/GridModel} gridModel\r\n\t         * @private\r\n\t         */\r\n\t        axisLabel: function () {\r\n\t            var opt = this.opt;\r\n\t            var axisModel = this.axisModel;\r\n\t            var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\r\n\r\n\t            if (!show) {\r\n\t                return;\r\n\t            }\r\n\r\n\t            var axis = axisModel.axis;\r\n\t            var labelModel = axisModel.getModel('axisLabel');\r\n\t            var textStyleModel = labelModel.getModel('textStyle');\r\n\t            var labelMargin = labelModel.get('margin');\r\n\t            var ticks = axis.scale.getTicks();\r\n\t            var labels = axisModel.getFormattedLabels();\r\n\r\n\t            // Special label rotate.\r\n\t            var labelRotation = retrieve(opt.labelRotation, labelModel.get('rotate')) || 0;\r\n\t            // To radian.\r\n\t            labelRotation = labelRotation * PI / 180;\r\n\r\n\t            var labelLayout = innerTextLayout(opt, labelRotation, opt.labelDirection);\r\n\t            var categoryData = axisModel.get('data');\r\n\r\n\t            var textEls = [];\r\n\t            var silent = isSilent(axisModel);\r\n\t            var triggerEvent = axisModel.get('triggerEvent');\r\n\r\n\t            for (var i = 0; i < ticks.length; i++) {\r\n\t                if (ifIgnoreOnTick(axis, i, opt.labelInterval)) {\r\n\t                     continue;\r\n\t                }\r\n\r\n\t                var itemTextStyleModel = textStyleModel;\r\n\t                if (categoryData && categoryData[i] && categoryData[i].textStyle) {\r\n\t                    itemTextStyleModel = new Model(\r\n\t                        categoryData[i].textStyle, textStyleModel, axisModel.ecModel\r\n\t                    );\r\n\t                }\r\n\t                var textColor = itemTextStyleModel.getTextColor()\r\n\t                    || axisModel.get('axisLine.lineStyle.color');\r\n\r\n\t                var tickCoord = axis.dataToCoord(ticks[i]);\r\n\t                var pos = [\r\n\t                    tickCoord,\r\n\t                    opt.labelOffset + opt.labelDirection * labelMargin\r\n\t                ];\r\n\t                var labelBeforeFormat = axis.scale.getLabel(ticks[i]);\r\n\r\n\t                var textEl = new graphic.Text({\r\n\r\n\t                    // Id for animation\r\n\t                    anid: 'label_' + ticks[i],\r\n\r\n\t                    style: {\r\n\t                        text: labels[i],\r\n\t                        textAlign: itemTextStyleModel.get('align', true) || labelLayout.textAlign,\r\n\t                        textVerticalAlign: itemTextStyleModel.get('baseline', true) || labelLayout.verticalAlign,\r\n\t                        textFont: itemTextStyleModel.getFont(),\r\n\t                        fill: typeof textColor === 'function' ? textColor(labelBeforeFormat) : textColor\r\n\t                    },\r\n\t                    position: pos,\r\n\t                    rotation: labelLayout.rotation,\r\n\t                    silent: silent,\r\n\t                    z2: 10\r\n\t                });\r\n\r\n\t                // Pack data for mouse event\r\n\t                if (triggerEvent) {\r\n\t                    textEl.eventData = makeAxisEventDataBase(axisModel);\r\n\t                    textEl.eventData.targetType = 'axisLabel';\r\n\t                    textEl.eventData.value = labelBeforeFormat;\r\n\t                }\r\n\r\n\r\n\t                // FIXME\r\n\t                this._dumbGroup.add(textEl);\r\n\t                textEl.updateTransform();\r\n\r\n\t                textEls.push(textEl);\r\n\t                this.group.add(textEl);\r\n\r\n\t                textEl.decomposeTransform();\r\n\t            }\r\n\r\n\t            function isTwoLabelOverlapped(current, next) {\r\n\t                var firstRect = current && current.getBoundingRect().clone();\r\n\t                var nextRect = next && next.getBoundingRect().clone();\r\n\t                if (firstRect && nextRect) {\r\n\t                    firstRect.applyTransform(current.getLocalTransform());\r\n\t                    nextRect.applyTransform(next.getLocalTransform());\r\n\t                    return firstRect.intersect(nextRect);\r\n\t                }\r\n\t            }\r\n\t            if (axis.type !== 'category') {\r\n\t                // If min or max are user set, we need to check\r\n\t                // If the tick on min(max) are overlap on their neighbour tick\r\n\t                // If they are overlapped, we need to hide the min(max) tick label\r\n\t                if (axisModel.getMin ? axisModel.getMin() : axisModel.get('min')) {\r\n\t                    var firstLabel = textEls[0];\r\n\t                    var nextLabel = textEls[1];\r\n\t                    if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\r\n\t                        firstLabel.ignore = true;\r\n\t                    }\r\n\t                }\r\n\t                if (axisModel.getMax ? axisModel.getMax() : axisModel.get('max')) {\r\n\t                    var lastLabel = textEls[textEls.length - 1];\r\n\t                    var prevLabel = textEls[textEls.length - 2];\r\n\t                    if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\r\n\t                        lastLabel.ignore = true;\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t        },\r\n\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        axisName: function () {\r\n\t            var opt = this.opt;\r\n\t            var axisModel = this.axisModel;\r\n\t            var name = retrieve(opt.axisName, axisModel.get('name'));\r\n\r\n\t            if (!name) {\r\n\t                return;\r\n\t            }\r\n\r\n\t            var nameLocation = axisModel.get('nameLocation');\r\n\t            var nameDirection = opt.nameDirection;\r\n\t            var textStyleModel = axisModel.getModel('nameTextStyle');\r\n\t            var gap = axisModel.get('nameGap') || 0;\r\n\r\n\t            var extent = this.axisModel.axis.getExtent();\r\n\t            var gapSignal = extent[0] > extent[1] ? -1 : 1;\r\n\t            var pos = [\r\n\t                nameLocation === 'start'\r\n\t                    ? extent[0] - gapSignal * gap\r\n\t                    : nameLocation === 'end'\r\n\t                    ? extent[1] + gapSignal * gap\r\n\t                    : (extent[0] + extent[1]) / 2, // 'middle'\r\n\t                // Reuse labelOffset.\r\n\t                nameLocation === 'middle' ? opt.labelOffset + nameDirection * gap : 0\r\n\t            ];\r\n\r\n\t            var labelLayout;\r\n\r\n\t            var nameRotation = axisModel.get('nameRotate');\r\n\t            if (nameRotation != null) {\r\n\t                nameRotation = nameRotation * PI / 180; // To radian.\r\n\t            }\r\n\r\n\t            var axisNameAvailableWidth;\r\n\r\n\t            if (nameLocation === 'middle') {\r\n\t                labelLayout = innerTextLayout(\r\n\t                    opt,\r\n\t                    nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\r\n\t                    nameDirection\r\n\t                );\r\n\t            }\r\n\t            else {\r\n\t                labelLayout = endTextLayout(\r\n\t                    opt, nameLocation, nameRotation || 0, extent\r\n\t                );\r\n\r\n\t                axisNameAvailableWidth = opt.axisNameAvailableWidth;\r\n\t                if (axisNameAvailableWidth != null) {\r\n\t                    axisNameAvailableWidth = Math.abs(\r\n\t                        axisNameAvailableWidth / Math.sin(labelLayout.rotation)\r\n\t                    );\r\n\t                    !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\r\n\t                }\r\n\t            }\r\n\r\n\t            var textFont = textStyleModel.getFont();\r\n\r\n\t            var truncateOpt = axisModel.get('nameTruncate', true) || {};\r\n\t            var ellipsis = truncateOpt.ellipsis;\r\n\t            var maxWidth = retrieve(truncateOpt.maxWidth, axisNameAvailableWidth);\r\n\t            var truncatedText = (ellipsis != null && maxWidth != null)\r\n\t                ? formatUtil.truncateText(\r\n\t                    name, maxWidth, textFont, ellipsis,\r\n\t                    {minChar: 2, placeholder: truncateOpt.placeholder}\r\n\t                )\r\n\t                : name;\r\n\r\n\t            var tooltipOpt = axisModel.get('tooltip', true);\r\n\r\n\t            var mainType = axisModel.mainType;\r\n\t            var formatterParams = {\r\n\t                componentType: mainType,\r\n\t                name: name,\r\n\t                $vars: ['name']\r\n\t            };\r\n\t            formatterParams[mainType + 'Index'] = axisModel.componentIndex;\r\n\r\n\t            var textEl = new graphic.Text({\r\n\r\n\t                // Id for animation\r\n\t                anid: 'name',\r\n\r\n\t                __fullText: name,\r\n\t                __truncatedText: truncatedText,\r\n\r\n\t                style: {\r\n\t                    text: truncatedText,\r\n\t                    textFont: textFont,\r\n\t                    fill: textStyleModel.getTextColor()\r\n\t                        || axisModel.get('axisLine.lineStyle.color'),\r\n\t                    textAlign: labelLayout.textAlign,\r\n\t                    textVerticalAlign: labelLayout.verticalAlign\r\n\t                },\r\n\t                position: pos,\r\n\t                rotation: labelLayout.rotation,\r\n\t                silent: isSilent(axisModel),\r\n\t                z2: 1,\r\n\t                tooltip: (tooltipOpt && tooltipOpt.show)\r\n\t                    ? zrUtil.extend({\r\n\t                        content: name,\r\n\t                        formatter: function () {\r\n\t                            return name;\r\n\t                        },\r\n\t                        formatterParams: formatterParams\r\n\t                    }, tooltipOpt)\r\n\t                    : null\r\n\t            });\r\n\r\n\t            if (axisModel.get('triggerEvent')) {\r\n\t                textEl.eventData = makeAxisEventDataBase(axisModel);\r\n\t                textEl.eventData.targetType = 'axisName';\r\n\t                textEl.eventData.name = name;\r\n\t            }\r\n\r\n\t            // FIXME\r\n\t            this._dumbGroup.add(textEl);\r\n\t            textEl.updateTransform();\r\n\r\n\t            this.group.add(textEl);\r\n\r\n\t            textEl.decomposeTransform();\r\n\t        }\r\n\r\n\t    };\r\n\r\n\t    /**\r\n\t     * @inner\r\n\t     */\r\n\t    function innerTextLayout(opt, textRotation, direction) {\r\n\t        var rotationDiff = remRadian(textRotation - opt.rotation);\r\n\t        var textAlign;\r\n\t        var verticalAlign;\r\n\r\n\t        if (isRadianAroundZero(rotationDiff)) { // Label is parallel with axis line.\r\n\t            verticalAlign = direction > 0 ? 'top' : 'bottom';\r\n\t            textAlign = 'center';\r\n\t        }\r\n\t        else if (isRadianAroundZero(rotationDiff - PI)) { // Label is inverse parallel with axis line.\r\n\t            verticalAlign = direction > 0 ? 'bottom' : 'top';\r\n\t            textAlign = 'center';\r\n\t        }\r\n\t        else {\r\n\t            verticalAlign = 'middle';\r\n\r\n\t            if (rotationDiff > 0 && rotationDiff < PI) {\r\n\t                textAlign = direction > 0 ? 'right' : 'left';\r\n\t            }\r\n\t            else {\r\n\t                textAlign = direction > 0 ? 'left' : 'right';\r\n\t            }\r\n\t        }\r\n\r\n\t        return {\r\n\t            rotation: rotationDiff,\r\n\t            textAlign: textAlign,\r\n\t            verticalAlign: verticalAlign\r\n\t        };\r\n\t    }\r\n\r\n\t    /**\r\n\t     * @inner\r\n\t     */\r\n\t    function endTextLayout(opt, textPosition, textRotate, extent) {\r\n\t        var rotationDiff = remRadian(textRotate - opt.rotation);\r\n\t        var textAlign;\r\n\t        var verticalAlign;\r\n\t        var inverse = extent[0] > extent[1];\r\n\t        var onLeft = (textPosition === 'start' && !inverse)\r\n\t            || (textPosition !== 'start' && inverse);\r\n\r\n\t        if (isRadianAroundZero(rotationDiff - PI / 2)) {\r\n\t            verticalAlign = onLeft ? 'bottom' : 'top';\r\n\t            textAlign = 'center';\r\n\t        }\r\n\t        else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\r\n\t            verticalAlign = onLeft ? 'top' : 'bottom';\r\n\t            textAlign = 'center';\r\n\t        }\r\n\t        else {\r\n\t            verticalAlign = 'middle';\r\n\t            if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\r\n\t                textAlign = onLeft ? 'left' : 'right';\r\n\t            }\r\n\t            else {\r\n\t                textAlign = onLeft ? 'right' : 'left';\r\n\t            }\r\n\t        }\r\n\r\n\t        return {\r\n\t            rotation: rotationDiff,\r\n\t            textAlign: textAlign,\r\n\t            verticalAlign: verticalAlign\r\n\t        };\r\n\t    }\r\n\r\n\t    /**\r\n\t     * @inner\r\n\t     */\r\n\t    function isSilent(axisModel) {\r\n\t        var tooltipOpt = axisModel.get('tooltip');\r\n\t        return axisModel.get('silent')\r\n\t            // Consider mouse cursor, add these restrictions.\r\n\t            || !(\r\n\t                axisModel.get('triggerEvent') || (tooltipOpt && tooltipOpt.show)\r\n\t            );\r\n\t    }\r\n\r\n\t    /**\r\n\t     * @static\r\n\t     */\r\n\t    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval) {\r\n\t        var rawTick;\r\n\t        var scale = axis.scale;\r\n\t        return scale.type === 'ordinal'\r\n\t            && (\r\n\t                typeof interval === 'function'\r\n\t                    ? (\r\n\t                        rawTick = scale.getTicks()[i],\r\n\t                        !interval(rawTick, scale.getLabel(rawTick))\r\n\t                    )\r\n\t                    : i % (interval + 1)\r\n\t            );\r\n\t    };\r\n\r\n\t    /**\r\n\t     * @static\r\n\t     */\r\n\t    var getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\r\n\t        var interval = model.get('interval');\r\n\t        if (interval == null || interval == 'auto') {\r\n\t            interval = labelInterval;\r\n\t        }\r\n\t        return interval;\r\n\t    };\r\n\r\n\t    module.exports = AxisBuilder;\r\n\r\n\r\n\r\n/***/ },\r\n/* 133 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t\r\n\r\n\t    var zrUtil = __webpack_require__(4);\r\n\r\n\t    __webpack_require__(113);\r\n\r\n\t    __webpack_require__(134);\r\n\t    __webpack_require__(135);\r\n\r\n\t    var barLayoutGrid = __webpack_require__(137);\r\n\t    var echarts = __webpack_require__(1);\r\n\r\n\t    echarts.registerLayout(zrUtil.curry(barLayoutGrid, 'bar'));\r\n\t    // Visual coding for legend\r\n\t    echarts.registerVisual(function (ecModel) {\r\n\t        ecModel.eachSeriesByType('bar', function (seriesModel) {\r\n\t            var data = seriesModel.getData();\r\n\t            data.setVisual('legendSymbol', 'roundRect');\r\n\t        });\r\n\t    });\r\n\r\n\t    // In case developer forget to include grid component\r\n\t    __webpack_require__(112);\r\n\r\n\r\n/***/ },\r\n/* 134 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t'use strict';\r\n\r\n\r\n\t    var SeriesModel = __webpack_require__(28);\r\n\t    var createListFromArray = __webpack_require__(101);\r\n\r\n\t    module.exports = SeriesModel.extend({\r\n\r\n\t        type: 'series.bar',\r\n\r\n\t        dependencies: ['grid', 'polar'],\r\n\r\n\t        getInitialData: function (option, ecModel) {\r\n\t            if (true) {\r\n\t                var coordSys = option.coordinateSystem;\r\n\t                if (coordSys !== 'cartesian2d') {\r\n\t                    throw new Error('Bar only support cartesian2d coordinateSystem');\r\n\t                }\r\n\t            }\r\n\t            return createListFromArray(option.data, this, ecModel);\r\n\t        },\r\n\r\n\t        getMarkerPosition: function (value) {\r\n\t            var coordSys = this.coordinateSystem;\r\n\t            if (coordSys) {\r\n\t                // PENDING if clamp ?\r\n\t                var pt = coordSys.dataToPoint(value, true);\r\n\t                var data = this.getData();\r\n\t                var offset = data.getLayout('offset');\r\n\t                var size = data.getLayout('size');\r\n\t                var offsetIndex = coordSys.getBaseAxis().isHorizontal() ? 0 : 1;\r\n\t                pt[offsetIndex] += offset + size / 2;\r\n\t                return pt;\r\n\t            }\r\n\t            return [NaN, NaN];\r\n\t        },\r\n\r\n\t        brushSelector: 'rect',\r\n\r\n\t        defaultOption: {\r\n\t            zlevel: 0,                  // 一级层叠\r\n\t            z: 2,                       // 二级层叠\r\n\t            coordinateSystem: 'cartesian2d',\r\n\t            legendHoverLink: true,\r\n\t            // stack: null\r\n\r\n\t            // Cartesian coordinate system\r\n\t            xAxisIndex: 0,\r\n\t            yAxisIndex: 0,\r\n\r\n\t            // 最小高度改为0\r\n\t            barMinHeight: 0,\r\n\r\n\t            // barMaxWidth: null,\r\n\t            // 默认自适应\r\n\t            // barWidth: null,\r\n\t            // 柱间距离，默认为柱形宽度的30%，可设固定值\r\n\t            // barGap: '30%',\r\n\t            // 类目间柱形距离，默认为类目间距的20%，可设固定值\r\n\t            // barCategoryGap: '20%',\r\n\t            // label: {\r\n\t            //     normal: {\r\n\t            //         show: false\r\n\t            //     }\r\n\t            // },\r\n\t            itemStyle: {\r\n\t                normal: {\r\n\t                    // color: '各异'\r\n\t                },\r\n\t                emphasis: {}\r\n\t            }\r\n\t        }\r\n\t    });\r\n\r\n\r\n/***/ },\r\n/* 135 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t'use strict';\r\n\r\n\r\n\t    var zrUtil = __webpack_require__(4);\r\n\t    var graphic = __webpack_require__(43);\r\n\r\n\t    zrUtil.extend(__webpack_require__(12).prototype, __webpack_require__(136));\r\n\r\n\t    function fixLayoutWithLineWidth(layout, lineWidth) {\r\n\t        var signX = layout.width > 0 ? 1 : -1;\r\n\t        var signY = layout.height > 0 ? 1 : -1;\r\n\t        // In case width or height are too small.\r\n\t        lineWidth = Math.min(lineWidth, Math.abs(layout.width), Math.abs(layout.height));\r\n\t        layout.x += signX * lineWidth / 2;\r\n\t        layout.y += signY * lineWidth / 2;\r\n\t        layout.width -= signX * lineWidth;\r\n\t        layout.height -= signY * lineWidth;\r\n\t    }\r\n\r\n\t    module.exports = __webpack_require__(1).extendChartView({\r\n\r\n\t        type: 'bar',\r\n\r\n\t        render: function (seriesModel, ecModel, api) {\r\n\t            var coordinateSystemType = seriesModel.get('coordinateSystem');\r\n\r\n\t            if (coordinateSystemType === 'cartesian2d') {\r\n\t                this._renderOnCartesian(seriesModel, ecModel, api);\r\n\t            }\r\n\r\n\t            return this.group;\r\n\t        },\r\n\r\n\t        _renderOnCartesian: function (seriesModel, ecModel, api) {\r\n\t            var group = this.group;\r\n\t            var data = seriesModel.getData();\r\n\t            var oldData = this._data;\r\n\r\n\t            var cartesian = seriesModel.coordinateSystem;\r\n\t            var baseAxis = cartesian.getBaseAxis();\r\n\t            var isHorizontal = baseAxis.isHorizontal();\r\n\r\n\t            var enableAnimation = seriesModel.get('animation');\r\n\r\n\t            var barBorderWidthQuery = ['itemStyle', 'normal', 'barBorderWidth'];\r\n\r\n\t            function createRect(dataIndex, isUpdate) {\r\n\t                var layout = data.getItemLayout(dataIndex);\r\n\t                var lineWidth = data.getItemModel(dataIndex).get(barBorderWidthQuery) || 0;\r\n\t                fixLayoutWithLineWidth(layout, lineWidth);\r\n\r\n\t                var rect = new graphic.Rect({\r\n\t                    shape: zrUtil.extend({}, layout)\r\n\t                });\r\n\t                // Animation\r\n\t                if (enableAnimation) {\r\n\t                    var rectShape = rect.shape;\r\n\t                    var animateProperty = isHorizontal ? 'height' : 'width';\r\n\t                    var animateTarget = {};\r\n\t                    rectShape[animateProperty] = 0;\r\n\t                    animateTarget[animateProperty] = layout[animateProperty];\r\n\t                    graphic[isUpdate? 'updateProps' : 'initProps'](rect, {\r\n\t                        shape: animateTarget\r\n\t                    }, seriesModel, dataIndex);\r\n\t                }\r\n\t                return rect;\r\n\t            }\r\n\t            data.diff(oldData)\r\n\t                .add(function (dataIndex) {\r\n\t                    // 空数据\r\n\t                    if (!data.hasValue(dataIndex)) {\r\n\t                        return;\r\n\t                    }\r\n\r\n\t                    var rect = createRect(dataIndex);\r\n\r\n\t                    data.setItemGraphicEl(dataIndex, rect);\r\n\r\n\t                    group.add(rect);\r\n\r\n\t                })\r\n\t                .update(function (newIndex, oldIndex) {\r\n\t                    var rect = oldData.getItemGraphicEl(oldIndex);\r\n\t                    // 空数据\r\n\t                    if (!data.hasValue(newIndex)) {\r\n\t                        group.remove(rect);\r\n\t                        return;\r\n\t                    }\r\n\t                    if (!rect) {\r\n\t                        rect = createRect(newIndex, true);\r\n\t                    }\r\n\r\n\t                    var layout = data.getItemLayout(newIndex);\r\n\t                    var lineWidth = data.getItemModel(newIndex).get(barBorderWidthQuery) || 0;\r\n\t                    fixLayoutWithLineWidth(layout, lineWidth);\r\n\r\n\t                    graphic.updateProps(rect, {\r\n\t                        shape: layout\r\n\t                    }, seriesModel, newIndex);\r\n\r\n\t                    data.setItemGraphicEl(newIndex, rect);\r\n\r\n\t                    // Add back\r\n\t                    group.add(rect);\r\n\t                })\r\n\t                .remove(function (idx) {\r\n\t                    var rect = oldData.getItemGraphicEl(idx);\r\n\t                    if (rect) {\r\n\t                        // Not show text when animating\r\n\t                        rect.style.text = '';\r\n\t                        graphic.updateProps(rect, {\r\n\t                            shape: {\r\n\t                                width: 0\r\n\t                            }\r\n\t                        }, seriesModel, idx, function () {\r\n\t                            group.remove(rect);\r\n\t                        });\r\n\t                    }\r\n\t                })\r\n\t                .execute();\r\n\r\n\t            this._updateStyle(seriesModel, data, isHorizontal);\r\n\r\n\t            this._data = data;\r\n\t        },\r\n\r\n\t        _updateStyle: function (seriesModel, data, isHorizontal) {\r\n\t            function setLabel(style, model, color, labelText, labelPositionOutside) {\r\n\t                graphic.setText(style, model, color);\r\n\t                style.text = labelText;\r\n\t                if (style.textPosition === 'outside') {\r\n\t                    style.textPosition = labelPositionOutside;\r\n\t                }\r\n\t            }\r\n\r\n\t            data.eachItemGraphicEl(function (rect, idx) {\r\n\t                var itemModel = data.getItemModel(idx);\r\n\t                var color = data.getItemVisual(idx, 'color');\r\n\t                var opacity = data.getItemVisual(idx, 'opacity');\r\n\t                var layout = data.getItemLayout(idx);\r\n\t                var itemStyleModel = itemModel.getModel('itemStyle.normal');\r\n\r\n\t                var hoverStyle = itemModel.getModel('itemStyle.emphasis').getBarItemStyle();\r\n\r\n\t                rect.setShape('r', itemStyleModel.get('barBorderRadius') || 0);\r\n\r\n\t                rect.useStyle(zrUtil.defaults(\r\n\t                    {\r\n\t                        fill: color,\r\n\t                        opacity: opacity\r\n\t                    },\r\n\t                    itemStyleModel.getBarItemStyle()\r\n\t                ));\r\n\r\n\t                var labelPositionOutside = isHorizontal\r\n\t                    ? (layout.height > 0 ? 'bottom' : 'top')\r\n\t                    : (layout.width > 0 ? 'left' : 'right');\r\n\r\n\t                var labelModel = itemModel.getModel('label.normal');\r\n\t                var hoverLabelModel = itemModel.getModel('label.emphasis');\r\n\t                var rectStyle = rect.style;\r\n\t                if (labelModel.get('show')) {\r\n\t                    setLabel(\r\n\t                        rectStyle, labelModel, color,\r\n\t                        zrUtil.retrieve(\r\n\t                            seriesModel.getFormattedLabel(idx, 'normal'),\r\n\t                            seriesModel.getRawValue(idx)\r\n\t                        ),\r\n\t                        labelPositionOutside\r\n\t                    );\r\n\t                }\r\n\t                else {\r\n\t                    rectStyle.text = '';\r\n\t                }\r\n\t                if (hoverLabelModel.get('show')) {\r\n\t                    setLabel(\r\n\t                        hoverStyle, hoverLabelModel, color,\r\n\t                        zrUtil.retrieve(\r\n\t                            seriesModel.getFormattedLabel(idx, 'emphasis'),\r\n\t                            seriesModel.getRawValue(idx)\r\n\t                        ),\r\n\t                        labelPositionOutside\r\n\t                    );\r\n\t                }\r\n\t                else {\r\n\t                    hoverStyle.text = '';\r\n\t                }\r\n\t                graphic.setHoverStyle(rect, hoverStyle);\r\n\t            });\r\n\t        },\r\n\r\n\t        remove: function (ecModel, api) {\r\n\t            var group = this.group;\r\n\t            if (ecModel.get('animation')) {\r\n\t                if (this._data) {\r\n\t                    this._data.eachItemGraphicEl(function (el) {\r\n\t                        // Not show text when animating\r\n\t                        el.style.text = '';\r\n\t                        graphic.updateProps(el, {\r\n\t                            shape: {\r\n\t                                width: 0\r\n\t                            }\r\n\t                        }, ecModel, el.dataIndex, function () {\r\n\t                            group.remove(el);\r\n\t                        });\r\n\t                    });\r\n\t                }\r\n\t            }\r\n\t            else {\r\n\t                group.removeAll();\r\n\t            }\r\n\t        }\r\n\t    });\r\n\r\n\r\n/***/ },\r\n/* 136 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t\r\n\r\n\r\n\t    var getBarItemStyle = __webpack_require__(15)(\r\n\t        [\r\n\t            ['fill', 'color'],\r\n\t            ['stroke', 'borderColor'],\r\n\t            ['lineWidth', 'borderWidth'],\r\n\t            // Compatitable with 2\r\n\t            ['stroke', 'barBorderColor'],\r\n\t            ['lineWidth', 'barBorderWidth'],\r\n\t            ['opacity'],\r\n\t            ['shadowBlur'],\r\n\t            ['shadowOffsetX'],\r\n\t            ['shadowOffsetY'],\r\n\t            ['shadowColor']\r\n\t        ]\r\n\t    );\r\n\t    module.exports = {\r\n\t        getBarItemStyle: function (excludes) {\r\n\t            var style = getBarItemStyle.call(this, excludes);\r\n\t            if (this.getBorderLineDash) {\r\n\t                var lineDash = this.getBorderLineDash();\r\n\t                lineDash && (style.lineDash = lineDash);\r\n\t            }\r\n\t            return style;\r\n\t        }\r\n\t    };\r\n\r\n\r\n/***/ },\r\n/* 137 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t'use strict';\r\n\r\n\r\n\t    var zrUtil = __webpack_require__(4);\r\n\t    var numberUtil = __webpack_require__(7);\r\n\t    var parsePercent = numberUtil.parsePercent;\r\n\r\n\t    function getSeriesStackId(seriesModel) {\r\n\t        return seriesModel.get('stack') || '__ec_stack_' + seriesModel.seriesIndex;\r\n\t    }\r\n\r\n\t    function getAxisKey(axis) {\r\n\t        return axis.dim + axis.index;\r\n\t    }\r\n\r\n\t    function calBarWidthAndOffset(barSeries, api) {\r\n\t        // Columns info on each category axis. Key is cartesian name\r\n\t        var columnsMap = {};\r\n\r\n\t        zrUtil.each(barSeries, function (seriesModel, idx) {\r\n\t            var data = seriesModel.getData();\r\n\t            var cartesian = seriesModel.coordinateSystem;\r\n\r\n\t            var baseAxis = cartesian.getBaseAxis();\r\n\t            var axisExtent = baseAxis.getExtent();\r\n\t            var bandWidth = baseAxis.type === 'category'\r\n\t                ? baseAxis.getBandWidth()\r\n\t                : (Math.abs(axisExtent[1] - axisExtent[0]) / data.count());\r\n\r\n\t            var columnsOnAxis = columnsMap[getAxisKey(baseAxis)] || {\r\n\t                bandWidth: bandWidth,\r\n\t                remainedWidth: bandWidth,\r\n\t                autoWidthCount: 0,\r\n\t                categoryGap: '20%',\r\n\t                gap: '30%',\r\n\t                stacks: {}\r\n\t            };\r\n\t            var stacks = columnsOnAxis.stacks;\r\n\t            columnsMap[getAxisKey(baseAxis)] = columnsOnAxis;\r\n\r\n\t            var stackId = getSeriesStackId(seriesModel);\r\n\r\n\t            if (!stacks[stackId]) {\r\n\t                columnsOnAxis.autoWidthCount++;\r\n\t            }\r\n\t            stacks[stackId] = stacks[stackId] || {\r\n\t                width: 0,\r\n\t                maxWidth: 0\r\n\t            };\r\n\r\n\t            var barWidth = parsePercent(\r\n\t                seriesModel.get('barWidth'), bandWidth\r\n\t            );\r\n\t            var barMaxWidth = parsePercent(\r\n\t                seriesModel.get('barMaxWidth'), bandWidth\r\n\t            );\r\n\t            var barGap = seriesModel.get('barGap');\r\n\t            var barCategoryGap = seriesModel.get('barCategoryGap');\r\n\t            // TODO\r\n\t            if (barWidth && !stacks[stackId].width) {\r\n\t                barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\r\n\t                stacks[stackId].width = barWidth;\r\n\t                columnsOnAxis.remainedWidth -= barWidth;\r\n\t            }\r\n\r\n\t            barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\r\n\t            (barGap != null) && (columnsOnAxis.gap = barGap);\r\n\t            (barCategoryGap != null) && (columnsOnAxis.categoryGap = barCategoryGap);\r\n\t        });\r\n\r\n\t        var result = {};\r\n\r\n\t        zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\r\n\r\n\t            result[coordSysName] = {};\r\n\r\n\t            var stacks = columnsOnAxis.stacks;\r\n\t            var bandWidth = columnsOnAxis.bandWidth;\r\n\t            var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\r\n\t            var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\r\n\r\n\t            var remainedWidth = columnsOnAxis.remainedWidth;\r\n\t            var autoWidthCount = columnsOnAxis.autoWidthCount;\r\n\t            var autoWidth = (remainedWidth - categoryGap)\r\n\t                / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\r\n\t            autoWidth = Math.max(autoWidth, 0);\r\n\r\n\t            // Find if any auto calculated bar exceeded maxBarWidth\r\n\t            zrUtil.each(stacks, function (column, stack) {\r\n\t                var maxWidth = column.maxWidth;\r\n\t                if (!column.width && maxWidth && maxWidth < autoWidth) {\r\n\t                    maxWidth = Math.min(maxWidth, remainedWidth);\r\n\t                    remainedWidth -= maxWidth;\r\n\t                    column.width = maxWidth;\r\n\t                    autoWidthCount--;\r\n\t                }\r\n\t            });\r\n\r\n\t            // Recalculate width again\r\n\t            autoWidth = (remainedWidth - categoryGap)\r\n\t                / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\r\n\t            autoWidth = Math.max(autoWidth, 0);\r\n\r\n\t            var widthSum = 0;\r\n\t            var lastColumn;\r\n\t            zrUtil.each(stacks, function (column, idx) {\r\n\t                if (!column.width) {\r\n\t                    column.width = autoWidth;\r\n\t                }\r\n\t                lastColumn = column;\r\n\t                widthSum += column.width * (1 + barGapPercent);\r\n\t            });\r\n\t            if (lastColumn) {\r\n\t                widthSum -= lastColumn.width * barGapPercent;\r\n\t            }\r\n\r\n\t            var offset = -widthSum / 2;\r\n\t            zrUtil.each(stacks, function (column, stackId) {\r\n\t                result[coordSysName][stackId] = result[coordSysName][stackId] || {\r\n\t                    offset: offset,\r\n\t                    width: column.width\r\n\t                };\r\n\r\n\t                offset += column.width * (1 + barGapPercent);\r\n\t            });\r\n\t        });\r\n\r\n\t        return result;\r\n\t    }\r\n\r\n\t    /**\r\n\t     * @param {string} seriesType\r\n\t     * @param {module:echarts/model/Global} ecModel\r\n\t     * @param {module:echarts/ExtensionAPI} api\r\n\t     */\r\n\t    function barLayoutGrid(seriesType, ecModel, api) {\r\n\r\n\t        var barWidthAndOffset = calBarWidthAndOffset(\r\n\t            zrUtil.filter(\r\n\t                ecModel.getSeriesByType(seriesType),\r\n\t                function (seriesModel) {\r\n\t                    return !ecModel.isSeriesFiltered(seriesModel)\r\n\t                        && seriesModel.coordinateSystem\r\n\t                        && seriesModel.coordinateSystem.type === 'cartesian2d';\r\n\t                }\r\n\t            )\r\n\t        );\r\n\r\n\t        var lastStackCoords = {};\r\n\r\n\t        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\r\n\r\n\t            var data = seriesModel.getData();\r\n\t            var cartesian = seriesModel.coordinateSystem;\r\n\t            var baseAxis = cartesian.getBaseAxis();\r\n\r\n\t            var stackId = getSeriesStackId(seriesModel);\r\n\t            var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\r\n\t            var columnOffset = columnLayoutInfo.offset;\r\n\t            var columnWidth = columnLayoutInfo.width;\r\n\t            var valueAxis = cartesian.getOtherAxis(baseAxis);\r\n\r\n\t            var barMinHeight = seriesModel.get('barMinHeight') || 0;\r\n\r\n\t            var valueAxisStart = baseAxis.onZero\r\n\t                ? valueAxis.toGlobalCoord(valueAxis.dataToCoord(0))\r\n\t                : valueAxis.getGlobalExtent()[0];\r\n\r\n\t            var coords = cartesian.dataToPoints(data, true);\r\n\t            lastStackCoords[stackId] = lastStackCoords[stackId] || [];\r\n\r\n\t            data.setLayout({\r\n\t                offset: columnOffset,\r\n\t                size: columnWidth\r\n\t            });\r\n\t            data.each(valueAxis.dim, function (value, idx) {\r\n\t                // 空数据\r\n\t                if (isNaN(value)) {\r\n\t                    return;\r\n\t                }\r\n\t                if (!lastStackCoords[stackId][idx]) {\r\n\t                    lastStackCoords[stackId][idx] = {\r\n\t                        // Positive stack\r\n\t                        p: valueAxisStart,\r\n\t                        // Negative stack\r\n\t                        n: valueAxisStart\r\n\t                    };\r\n\t                }\r\n\t                var sign = value >= 0 ? 'p' : 'n';\r\n\t                var coord = coords[idx];\r\n\t                var lastCoord = lastStackCoords[stackId][idx][sign];\r\n\t                var x, y, width, height;\r\n\t                if (valueAxis.isHorizontal()) {\r\n\t                    x = lastCoord;\r\n\t                    y = coord[1] + columnOffset;\r\n\t                    width = coord[0] - lastCoord;\r\n\t                    height = columnWidth;\r\n\r\n\t                    if (Math.abs(width) < barMinHeight) {\r\n\t                        width = (width < 0 ? -1 : 1) * barMinHeight;\r\n\t                    }\r\n\t                    lastStackCoords[stackId][idx][sign] += width;\r\n\t                }\r\n\t                else {\r\n\t                    x = coord[0] + columnOffset;\r\n\t                    y = lastCoord;\r\n\t                    width = columnWidth;\r\n\t                    height = coord[1] - lastCoord;\r\n\t                    if (Math.abs(height) < barMinHeight) {\r\n\t                        // Include zero to has a positive bar\r\n\t                        height = (height <= 0 ? -1 : 1) * barMinHeight;\r\n\t                    }\r\n\t                    lastStackCoords[stackId][idx][sign] += height;\r\n\t                }\r\n\r\n\t                data.setItemLayout(idx, {\r\n\t                    x: x,\r\n\t                    y: y,\r\n\t                    width: width,\r\n\t                    height: height\r\n\t                });\r\n\t            }, true);\r\n\r\n\t        }, this);\r\n\t    }\r\n\r\n\t    module.exports = barLayoutGrid;\r\n\r\n\r\n/***/ },\r\n/* 138 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t\r\n\r\n\t    var zrUtil = __webpack_require__(4);\r\n\t    var echarts = __webpack_require__(1);\r\n\r\n\t    __webpack_require__(139);\r\n\t    __webpack_require__(141);\r\n\r\n\t    __webpack_require__(142)('pie', [{\r\n\t        type: 'pieToggleSelect',\r\n\t        event: 'pieselectchanged',\r\n\t        method: 'toggleSelected'\r\n\t    }, {\r\n\t        type: 'pieSelect',\r\n\t        event: 'pieselected',\r\n\t        method: 'select'\r\n\t    }, {\r\n\t        type: 'pieUnSelect',\r\n\t        event: 'pieunselected',\r\n\t        method: 'unSelect'\r\n\t    }]);\r\n\r\n\t    echarts.registerVisual(zrUtil.curry(__webpack_require__(143), 'pie'));\r\n\r\n\t    echarts.registerLayout(zrUtil.curry(\r\n\t        __webpack_require__(144), 'pie'\r\n\t    ));\r\n\r\n\t    echarts.registerProcessor(zrUtil.curry(__webpack_require__(146), 'pie'));\r\n\r\n\r\n/***/ },\r\n/* 139 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t'use strict';\r\n\r\n\r\n\t    var List = __webpack_require__(97);\r\n\t    var zrUtil = __webpack_require__(4);\r\n\t    var modelUtil = __webpack_require__(5);\r\n\t    var completeDimensions = __webpack_require__(102);\r\n\r\n\t    var dataSelectableMixin = __webpack_require__(140);\r\n\r\n\t    var PieSeries = __webpack_require__(1).extendSeriesModel({\r\n\r\n\t        type: 'series.pie',\r\n\r\n\t        // Overwrite\r\n\t        init: function (option) {\r\n\t            PieSeries.superApply(this, 'init', arguments);\r\n\r\n\t            // Enable legend selection for each data item\r\n\t            // Use a function instead of direct access because data reference may changed\r\n\t            this.legendDataProvider = function () {\r\n\t                return this._dataBeforeProcessed;\r\n\t            };\r\n\r\n\t            this.updateSelectedMap(option.data);\r\n\r\n\t            this._defaultLabelLine(option);\r\n\t        },\r\n\r\n\t        // Overwrite\r\n\t        mergeOption: function (newOption) {\r\n\t            PieSeries.superCall(this, 'mergeOption', newOption);\r\n\t            this.updateSelectedMap(this.option.data);\r\n\t        },\r\n\r\n\t        getInitialData: function (option, ecModel) {\r\n\t            var dimensions = completeDimensions(['value'], option.data);\r\n\t            var list = new List(dimensions, this);\r\n\t            list.initData(option.data);\r\n\t            return list;\r\n\t        },\r\n\r\n\t        // Overwrite\r\n\t        getDataParams: function (dataIndex) {\r\n\t            var data = this._data;\r\n\t            var params = PieSeries.superCall(this, 'getDataParams', dataIndex);\r\n\t            var sum = data.getSum('value');\r\n\t            // FIXME toFixed?\r\n\t            //\r\n\t            // Percent is 0 if sum is 0\r\n\t            params.percent = !sum ? 0 : +(data.get('value', dataIndex) / sum * 100).toFixed(2);\r\n\r\n\t            params.$vars.push('percent');\r\n\t            return params;\r\n\t        },\r\n\r\n\t        _defaultLabelLine: function (option) {\r\n\t            // Extend labelLine emphasis\r\n\t            modelUtil.defaultEmphasis(option.labelLine, ['show']);\r\n\r\n\t            var labelLineNormalOpt = option.labelLine.normal;\r\n\t            var labelLineEmphasisOpt = option.labelLine.emphasis;\r\n\t            // Not show label line if `label.normal.show = false`\r\n\t            labelLineNormalOpt.show = labelLineNormalOpt.show\r\n\t                && option.label.normal.show;\r\n\t            labelLineEmphasisOpt.show = labelLineEmphasisOpt.show\r\n\t                && option.label.emphasis.show;\r\n\t        },\r\n\r\n\t        defaultOption: {\r\n\t            zlevel: 0,\r\n\t            z: 2,\r\n\t            legendHoverLink: true,\r\n\r\n\t            hoverAnimation: true,\r\n\t            // 默认全局居中\r\n\t            center: ['50%', '50%'],\r\n\t            radius: [0, '75%'],\r\n\t            // 默认顺时针\r\n\t            clockwise: true,\r\n\t            startAngle: 90,\r\n\t            // 最小角度改为0\r\n\t            minAngle: 0,\r\n\t            // 选中是扇区偏移量\r\n\t            selectedOffset: 10,\r\n\r\n\t            // If use strategy to avoid label overlapping\r\n\t            avoidLabelOverlap: true,\r\n\t            // 选择模式，默认关闭，可选single，multiple\r\n\t            // selectedMode: false,\r\n\t            // 南丁格尔玫瑰图模式，'radius'（半径） | 'area'（面积）\r\n\t            // roseType: null,\r\n\r\n\t            label: {\r\n\t                normal: {\r\n\t                    // If rotate around circle\r\n\t                    rotate: false,\r\n\t                    show: true,\r\n\t                    // 'outer', 'inside', 'center'\r\n\t                    position: 'outer'\r\n\t                    // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\r\n\t                    // textStyle: null      // 默认使用全局文本样式，详见TEXTSTYLE\r\n\t                    // distance: 当position为inner时有效，为label位置到圆心的距离与圆半径(环状图为内外半径和)的比例系数\r\n\t                },\r\n\t                emphasis: {}\r\n\t            },\r\n\t            // Enabled when label.normal.position is 'outer'\r\n\t            labelLine: {\r\n\t                normal: {\r\n\t                    show: true,\r\n\t                    // 引导线两段中的第一段长度\r\n\t                    length: 15,\r\n\t                    // 引导线两段中的第二段长度\r\n\t                    length2: 15,\r\n\t                    smooth: false,\r\n\t                    lineStyle: {\r\n\t                        // color: 各异,\r\n\t                        width: 1,\r\n\t                        type: 'solid'\r\n\t                    }\r\n\t                }\r\n\t            },\r\n\t            itemStyle: {\r\n\t                normal: {\r\n\t                    borderWidth: 1\r\n\t                },\r\n\t                emphasis: {}\r\n\t            },\r\n\r\n\t            animationEasing: 'cubicOut',\r\n\r\n\t            data: []\r\n\t        }\r\n\t    });\r\n\r\n\t    zrUtil.mixin(PieSeries, dataSelectableMixin);\r\n\r\n\t    module.exports = PieSeries;\r\n\r\n\r\n/***/ },\r\n/* 140 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t/**\r\n\t * Data selectable mixin for chart series.\r\n\t * To eanble data select, option of series must have `selectedMode`.\r\n\t * And each data item will use `selected` to toggle itself selected status\r\n\t *\r\n\t * @module echarts/chart/helper/DataSelectable\r\n\t */\r\n\r\n\r\n\t    var zrUtil = __webpack_require__(4);\r\n\r\n\t    module.exports = {\r\n\r\n\t        updateSelectedMap: function (targetList) {\r\n\t            this._selectTargetMap = zrUtil.reduce(targetList || [], function (targetMap, target) {\r\n\t                targetMap[target.name] = target;\r\n\t                return targetMap;\r\n\t            }, {});\r\n\t        },\r\n\t        /**\r\n\t         * @param {string} name\r\n\t         */\r\n\t        // PENGING If selectedMode is null ?\r\n\t        select: function (name) {\r\n\t            var targetMap = this._selectTargetMap;\r\n\t            var target = targetMap[name];\r\n\t            var selectedMode = this.get('selectedMode');\r\n\t            if (selectedMode === 'single') {\r\n\t                zrUtil.each(targetMap, function (target) {\r\n\t                    target.selected = false;\r\n\t                });\r\n\t            }\r\n\t            target && (target.selected = true);\r\n\t        },\r\n\r\n\t        /**\r\n\t         * @param {string} name\r\n\t         */\r\n\t        unSelect: function (name) {\r\n\t            var target = this._selectTargetMap[name];\r\n\t            // var selectedMode = this.get('selectedMode');\r\n\t            // selectedMode !== 'single' && target && (target.selected = false);\r\n\t            target && (target.selected = false);\r\n\t        },\r\n\r\n\t        /**\r\n\t         * @param {string} name\r\n\t         */\r\n\t        toggleSelected: function (name) {\r\n\t            var target = this._selectTargetMap[name];\r\n\t            if (target != null) {\r\n\t                this[target.selected ? 'unSelect' : 'select'](name);\r\n\t                return target.selected;\r\n\t            }\r\n\t        },\r\n\r\n\t        /**\r\n\t         * @param {string} name\r\n\t         */\r\n\t        isSelected: function (name) {\r\n\t            var target = this._selectTargetMap[name];\r\n\t            return target && target.selected;\r\n\t        }\r\n\t    };\r\n\r\n\r\n/***/ },\r\n/* 141 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t\r\n\r\n\t    var graphic = __webpack_require__(43);\r\n\t    var zrUtil = __webpack_require__(4);\r\n\r\n\t    /**\r\n\t     * @param {module:echarts/model/Series} seriesModel\r\n\t     * @param {boolean} hasAnimation\r\n\t     * @inner\r\n\t     */\r\n\t    function updateDataSelected(uid, seriesModel, hasAnimation, api) {\r\n\t        var data = seriesModel.getData();\r\n\t        var dataIndex = this.dataIndex;\r\n\t        var name = data.getName(dataIndex);\r\n\t        var selectedOffset = seriesModel.get('selectedOffset');\r\n\r\n\t        api.dispatchAction({\r\n\t            type: 'pieToggleSelect',\r\n\t            from: uid,\r\n\t            name: name,\r\n\t            seriesId: seriesModel.id\r\n\t        });\r\n\r\n\t        data.each(function (idx) {\r\n\t            toggleItemSelected(\r\n\t                data.getItemGraphicEl(idx),\r\n\t                data.getItemLayout(idx),\r\n\t                seriesModel.isSelected(data.getName(idx)),\r\n\t                selectedOffset,\r\n\t                hasAnimation\r\n\t            );\r\n\t        });\r\n\t    }\r\n\r\n\t    /**\r\n\t     * @param {module:zrender/graphic/Sector} el\r\n\t     * @param {Object} layout\r\n\t     * @param {boolean} isSelected\r\n\t     * @param {number} selectedOffset\r\n\t     * @param {boolean} hasAnimation\r\n\t     * @inner\r\n\t     */\r\n\t    function toggleItemSelected(el, layout, isSelected, selectedOffset, hasAnimation) {\r\n\t        var midAngle = (layout.startAngle + layout.endAngle) / 2;\r\n\r\n\t        var dx = Math.cos(midAngle);\r\n\t        var dy = Math.sin(midAngle);\r\n\r\n\t        var offset = isSelected ? selectedOffset : 0;\r\n\t        var position = [dx * offset, dy * offset];\r\n\r\n\t        hasAnimation\r\n\t            // animateTo will stop revious animation like update transition\r\n\t            ? el.animate()\r\n\t                .when(200, {\r\n\t                    position: position\r\n\t                })\r\n\t                .start('bounceOut')\r\n\t            : el.attr('position', position);\r\n\t    }\r\n\r\n\t    /**\r\n\t     * Piece of pie including Sector, Label, LabelLine\r\n\t     * @constructor\r\n\t     * @extends {module:zrender/graphic/Group}\r\n\t     */\r\n\t    function PiePiece(data, idx) {\r\n\r\n\t        graphic.Group.call(this);\r\n\r\n\t        var sector = new graphic.Sector({\r\n\t            z2: 2\r\n\t        });\r\n\t        var polyline = new graphic.Polyline();\r\n\t        var text = new graphic.Text();\r\n\t        this.add(sector);\r\n\t        this.add(polyline);\r\n\t        this.add(text);\r\n\r\n\t        this.updateData(data, idx, true);\r\n\r\n\t        // Hover to change label and labelLine\r\n\t        function onEmphasis() {\r\n\t            polyline.ignore = polyline.hoverIgnore;\r\n\t            text.ignore = text.hoverIgnore;\r\n\t        }\r\n\t        function onNormal() {\r\n\t            polyline.ignore = polyline.normalIgnore;\r\n\t            text.ignore = text.normalIgnore;\r\n\t        }\r\n\t        this.on('emphasis', onEmphasis)\r\n\t            .on('normal', onNormal)\r\n\t            .on('mouseover', onEmphasis)\r\n\t            .on('mouseout', onNormal);\r\n\t    }\r\n\r\n\t    var piePieceProto = PiePiece.prototype;\r\n\r\n\t    function getLabelStyle(data, idx, state, labelModel, labelPosition) {\r\n\t        var textStyleModel = labelModel.getModel('textStyle');\r\n\t        var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\r\n\t        return {\r\n\t            fill: textStyleModel.getTextColor()\r\n\t                || (isLabelInside ? '#fff' : data.getItemVisual(idx, 'color')),\r\n\t            opacity: data.getItemVisual(idx, 'opacity'),\r\n\t            textFont: textStyleModel.getFont(),\r\n\t            text: zrUtil.retrieve(\r\n\t                data.hostModel.getFormattedLabel(idx, state), data.getName(idx)\r\n\t            )\r\n\t        };\r\n\t    }\r\n\r\n\t    piePieceProto.updateData = function (data, idx, firstCreate) {\r\n\r\n\t        var sector = this.childAt(0);\r\n\r\n\t        var seriesModel = data.hostModel;\r\n\t        var itemModel = data.getItemModel(idx);\r\n\t        var layout = data.getItemLayout(idx);\r\n\t        var sectorShape = zrUtil.extend({}, layout);\r\n\t        sectorShape.label = null;\r\n\t        if (firstCreate) {\r\n\t            sector.setShape(sectorShape);\r\n\t            sector.shape.endAngle = layout.startAngle;\r\n\t            graphic.updateProps(sector, {\r\n\t                shape: {\r\n\t                    endAngle: layout.endAngle\r\n\t                }\r\n\t            }, seriesModel, idx);\r\n\t        }\r\n\t        else {\r\n\t            graphic.updateProps(sector, {\r\n\t                shape: sectorShape\r\n\t            }, seriesModel, idx);\r\n\t        }\r\n\r\n\t        // Update common style\r\n\t        var itemStyleModel = itemModel.getModel('itemStyle');\r\n\t        var visualColor = data.getItemVisual(idx, 'color');\r\n\r\n\t        sector.useStyle(\r\n\t            zrUtil.defaults(\r\n\t                {\r\n\t                    lineJoin: 'bevel',\r\n\t                    fill: visualColor\r\n\t                },\r\n\t                itemStyleModel.getModel('normal').getItemStyle()\r\n\t            )\r\n\t        );\r\n\t        sector.hoverStyle = itemStyleModel.getModel('emphasis').getItemStyle();\r\n\r\n\t        // Toggle selected\r\n\t        toggleItemSelected(\r\n\t            this,\r\n\t            data.getItemLayout(idx),\r\n\t            itemModel.get('selected'),\r\n\t            seriesModel.get('selectedOffset'),\r\n\t            seriesModel.get('animation')\r\n\t        );\r\n\r\n\t        function onEmphasis() {\r\n\t            // Sector may has animation of updating data. Force to move to the last frame\r\n\t            // Or it may stopped on the wrong shape\r\n\t            sector.stopAnimation(true);\r\n\t            sector.animateTo({\r\n\t                shape: {\r\n\t                    r: layout.r + 10\r\n\t                }\r\n\t            }, 300, 'elasticOut');\r\n\t        }\r\n\t        function onNormal() {\r\n\t            sector.stopAnimation(true);\r\n\t            sector.animateTo({\r\n\t                shape: {\r\n\t                    r: layout.r\r\n\t                }\r\n\t            }, 300, 'elasticOut');\r\n\t        }\r\n\t        sector.off('mouseover').off('mouseout').off('emphasis').off('normal');\r\n\t        if (itemModel.get('hoverAnimation') && seriesModel.ifEnableAnimation()) {\r\n\t            sector\r\n\t                .on('mouseover', onEmphasis)\r\n\t                .on('mouseout', onNormal)\r\n\t                .on('emphasis', onEmphasis)\r\n\t                .on('normal', onNormal);\r\n\t        }\r\n\r\n\t        this._updateLabel(data, idx);\r\n\r\n\t        graphic.setHoverStyle(this);\r\n\t    };\r\n\r\n\t    piePieceProto._updateLabel = function (data, idx) {\r\n\r\n\t        var labelLine = this.childAt(1);\r\n\t        var labelText = this.childAt(2);\r\n\r\n\t        var seriesModel = data.hostModel;\r\n\t        var itemModel = data.getItemModel(idx);\r\n\t        var layout = data.getItemLayout(idx);\r\n\t        var labelLayout = layout.label;\r\n\t        var visualColor = data.getItemVisual(idx, 'color');\r\n\r\n\t        graphic.updateProps(labelLine, {\r\n\t            shape: {\r\n\t                points: labelLayout.linePoints || [\r\n\t                    [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y]\r\n\t                ]\r\n\t            }\r\n\t        }, seriesModel, idx);\r\n\r\n\t        graphic.updateProps(labelText, {\r\n\t            style: {\r\n\t                x: labelLayout.x,\r\n\t                y: labelLayout.y\r\n\t            }\r\n\t        }, seriesModel, idx);\r\n\t        labelText.attr({\r\n\t            style: {\r\n\t                textVerticalAlign: labelLayout.verticalAlign,\r\n\t                textAlign: labelLayout.textAlign,\r\n\t                textFont: labelLayout.font\r\n\t            },\r\n\t            rotation: labelLayout.rotation,\r\n\t            origin: [labelLayout.x, labelLayout.y],\r\n\t            z2: 10\r\n\t        });\r\n\r\n\t        var labelModel = itemModel.getModel('label.normal');\r\n\t        var labelHoverModel = itemModel.getModel('label.emphasis');\r\n\t        var labelLineModel = itemModel.getModel('labelLine.normal');\r\n\t        var labelLineHoverModel = itemModel.getModel('labelLine.emphasis');\r\n\t        var labelPosition = labelModel.get('position') || labelHoverModel.get('position');\r\n\r\n\t        labelText.setStyle(getLabelStyle(data, idx, 'normal', labelModel, labelPosition));\r\n\r\n\t        labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\r\n\t        labelText.hoverIgnore = !labelHoverModel.get('show');\r\n\r\n\t        labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\r\n\t        labelLine.hoverIgnore = !labelLineHoverModel.get('show');\r\n\r\n\t        // Default use item visual color\r\n\t        labelLine.setStyle({\r\n\t            stroke: visualColor,\r\n\t            opacity: data.getItemVisual(idx, 'opacity')\r\n\t        });\r\n\t        labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\r\n\r\n\t        labelText.hoverStyle = getLabelStyle(data, idx, 'emphasis', labelHoverModel, labelPosition);\r\n\t        labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\r\n\r\n\t        var smooth = labelLineModel.get('smooth');\r\n\t        if (smooth && smooth === true) {\r\n\t            smooth = 0.4;\r\n\t        }\r\n\t        labelLine.setShape({\r\n\t            smooth: smooth\r\n\t        });\r\n\t    };\r\n\r\n\t    zrUtil.inherits(PiePiece, graphic.Group);\r\n\r\n\r\n\t    // Pie view\r\n\t    var Pie = __webpack_require__(42).extend({\r\n\r\n\t        type: 'pie',\r\n\r\n\t        init: function () {\r\n\t            var sectorGroup = new graphic.Group();\r\n\t            this._sectorGroup = sectorGroup;\r\n\t        },\r\n\r\n\t        render: function (seriesModel, ecModel, api, payload) {\r\n\t            if (payload && (payload.from === this.uid)) {\r\n\t                return;\r\n\t            }\r\n\r\n\t            var data = seriesModel.getData();\r\n\t            var oldData = this._data;\r\n\t            var group = this.group;\r\n\r\n\t            var hasAnimation = ecModel.get('animation');\r\n\t            var isFirstRender = !oldData;\r\n\r\n\t            var onSectorClick = zrUtil.curry(\r\n\t                updateDataSelected, this.uid, seriesModel, hasAnimation, api\r\n\t            );\r\n\r\n\t            var selectedMode = seriesModel.get('selectedMode');\r\n\r\n\t            data.diff(oldData)\r\n\t                .add(function (idx) {\r\n\t                    var piePiece = new PiePiece(data, idx);\r\n\t                    if (isFirstRender) {\r\n\t                        piePiece.eachChild(function (child) {\r\n\t                            child.stopAnimation(true);\r\n\t                        });\r\n\t                    }\r\n\r\n\t                    selectedMode && piePiece.on('click', onSectorClick);\r\n\r\n\t                    data.setItemGraphicEl(idx, piePiece);\r\n\r\n\t                    group.add(piePiece);\r\n\t                })\r\n\t                .update(function (newIdx, oldIdx) {\r\n\t                    var piePiece = oldData.getItemGraphicEl(oldIdx);\r\n\r\n\t                    piePiece.updateData(data, newIdx);\r\n\r\n\t                    piePiece.off('click');\r\n\t                    selectedMode && piePiece.on('click', onSectorClick);\r\n\t                    group.add(piePiece);\r\n\t                    data.setItemGraphicEl(newIdx, piePiece);\r\n\t                })\r\n\t                .remove(function (idx) {\r\n\t                    var piePiece = oldData.getItemGraphicEl(idx);\r\n\t                    group.remove(piePiece);\r\n\t                })\r\n\t                .execute();\r\n\r\n\t            if (hasAnimation && isFirstRender && data.count() > 0) {\r\n\t                var shape = data.getItemLayout(0);\r\n\t                var r = Math.max(api.getWidth(), api.getHeight()) / 2;\r\n\r\n\t                var removeClipPath = zrUtil.bind(group.removeClipPath, group);\r\n\t                group.setClipPath(this._createClipPath(\r\n\t                    shape.cx, shape.cy, r, shape.startAngle, shape.clockwise, removeClipPath, seriesModel\r\n\t                ));\r\n\t            }\r\n\r\n\t            this._data = data;\r\n\t        },\r\n\r\n\t        _createClipPath: function (\r\n\t            cx, cy, r, startAngle, clockwise, cb, seriesModel\r\n\t        ) {\r\n\t            var clipPath = new graphic.Sector({\r\n\t                shape: {\r\n\t                    cx: cx,\r\n\t                    cy: cy,\r\n\t                    r0: 0,\r\n\t                    r: r,\r\n\t                    startAngle: startAngle,\r\n\t                    endAngle: startAngle,\r\n\t                    clockwise: clockwise\r\n\t                }\r\n\t            });\r\n\r\n\t            graphic.initProps(clipPath, {\r\n\t                shape: {\r\n\t                    endAngle: startAngle + (clockwise ? 1 : -1) * Math.PI * 2\r\n\t                }\r\n\t            }, seriesModel, cb);\r\n\r\n\t            return clipPath;\r\n\t        }\r\n\t    });\r\n\r\n\t    module.exports = Pie;\r\n\r\n\r\n/***/ },\r\n/* 142 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t\r\n\t    var echarts = __webpack_require__(1);\r\n\t    var zrUtil = __webpack_require__(4);\r\n\t    module.exports = function (seriesType, actionInfos) {\r\n\t        zrUtil.each(actionInfos, function (actionInfo) {\r\n\t            actionInfo.update = 'updateView';\r\n\t            /**\r\n\t             * @payload\r\n\t             * @property {string} seriesName\r\n\t             * @property {string} name\r\n\t             */\r\n\t            echarts.registerAction(actionInfo, function (payload, ecModel) {\r\n\t                var selected = {};\r\n\t                ecModel.eachComponent(\r\n\t                    {mainType: 'series', subType: seriesType, query: payload},\r\n\t                    function (seriesModel) {\r\n\t                        if (seriesModel[actionInfo.method]) {\r\n\t                            seriesModel[actionInfo.method](payload.name);\r\n\t                        }\r\n\t                        var data = seriesModel.getData();\r\n\t                        // Create selected map\r\n\t                        data.each(function (idx) {\r\n\t                            var name = data.getName(idx);\r\n\t                            selected[name] = seriesModel.isSelected(name) || false;\r\n\t                        });\r\n\t                    }\r\n\t                );\r\n\t                return {\r\n\t                    name: payload.name,\r\n\t                    selected: selected\r\n\t                };\r\n\t            });\r\n\t        });\r\n\t    };\r\n\r\n\r\n/***/ },\r\n/* 143 */\r\n/***/ function(module, exports) {\r\n\r\n\t// Pick color from palette for each data item\r\n\r\n\r\n\t    module.exports = function (seriesType, ecModel) {\r\n\t        // Pie and funnel may use diferrent scope\r\n\t        var paletteScope = {};\r\n\t        ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\r\n\t            var dataAll = seriesModel.getRawData();\r\n\t            var idxMap = {};\r\n\t            if (!ecModel.isSeriesFiltered(seriesModel)) {\r\n\t                var data = seriesModel.getData();\r\n\t                data.each(function (idx) {\r\n\t                    var rawIdx = data.getRawIndex(idx);\r\n\t                    idxMap[rawIdx] = idx;\r\n\t                });\r\n\t                dataAll.each(function (rawIdx) {\r\n\t                    // FIXME Performance\r\n\t                    var itemModel = dataAll.getItemModel(rawIdx);\r\n\t                    var filteredIdx = idxMap[rawIdx];\r\n\t                    // If series.itemStyle.normal.color is a function. itemVisual may be encoded\r\n\t                    var singleDataColor = data.getItemVisual(filteredIdx, 'color', true);\r\n\r\n\t                    if (!singleDataColor) {\r\n\t                        var color = itemModel.get('itemStyle.normal.color')\r\n\t                            || seriesModel.getColorFromPalette(dataAll.getName(rawIdx), paletteScope);\r\n\t                        // Legend may use the visual info in data before processed\r\n\t                        dataAll.setItemVisual(rawIdx, 'color', color);\r\n\t                        data.setItemVisual(filteredIdx, 'color', color);\r\n\t                    }\r\n\t                    else {\r\n\t                        // Set data all color for legend\r\n\t                        dataAll.setItemVisual(rawIdx, 'color', singleDataColor);\r\n\t                    }\r\n\t                });\r\n\t            }\r\n\t        });\r\n\t    };\r\n\r\n\r\n/***/ },\r\n/* 144 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t// TODO minAngle\r\n\r\n\r\n\r\n\t    var numberUtil = __webpack_require__(7);\r\n\t    var parsePercent = numberUtil.parsePercent;\r\n\t    var labelLayout = __webpack_require__(145);\r\n\t    var zrUtil = __webpack_require__(4);\r\n\r\n\t    var PI2 = Math.PI * 2;\r\n\t    var RADIAN = Math.PI / 180;\r\n\r\n\t    module.exports = function (seriesType, ecModel, api, payload) {\r\n\t        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\r\n\t            var center = seriesModel.get('center');\r\n\t            var radius = seriesModel.get('radius');\r\n\r\n\t            if (!zrUtil.isArray(radius)) {\r\n\t                radius = [0, radius];\r\n\t            }\r\n\t            if (!zrUtil.isArray(center)) {\r\n\t                center = [center, center];\r\n\t            }\r\n\r\n\t            var width = api.getWidth();\r\n\t            var height = api.getHeight();\r\n\t            var size = Math.min(width, height);\r\n\t            var cx = parsePercent(center[0], width);\r\n\t            var cy = parsePercent(center[1], height);\r\n\t            var r0 = parsePercent(radius[0], size / 2);\r\n\t            var r = parsePercent(radius[1], size / 2);\r\n\r\n\t            var data = seriesModel.getData();\r\n\r\n\t            var startAngle = -seriesModel.get('startAngle') * RADIAN;\r\n\r\n\t            var minAngle = seriesModel.get('minAngle') * RADIAN;\r\n\r\n\t            var sum = data.getSum('value');\r\n\t            // Sum may be 0\r\n\t            var unitRadian = Math.PI / (sum || data.count()) * 2;\r\n\r\n\t            var clockwise = seriesModel.get('clockwise');\r\n\r\n\t            var roseType = seriesModel.get('roseType');\r\n\r\n\t            // [0...max]\r\n\t            var extent = data.getDataExtent('value');\r\n\t            extent[0] = 0;\r\n\r\n\t            // In the case some sector angle is smaller than minAngle\r\n\t            var restAngle = PI2;\r\n\t            var valueSumLargerThanMinAngle = 0;\r\n\r\n\t            var currentAngle = startAngle;\r\n\r\n\t            var dir = clockwise ? 1 : -1;\r\n\t            data.each('value', function (value, idx) {\r\n\t                var angle;\r\n\t                // FIXME 兼容 2.0 但是 roseType 是 area 的时候才是这样？\r\n\t                if (roseType !== 'area') {\r\n\t                    angle = sum === 0 ? unitRadian : (value * unitRadian);\r\n\t                }\r\n\t                else {\r\n\t                    angle = PI2 / (data.count() || 1);\r\n\t                }\r\n\r\n\t                if (angle < minAngle) {\r\n\t                    angle = minAngle;\r\n\t                    restAngle -= minAngle;\r\n\t                }\r\n\t                else {\r\n\t                    valueSumLargerThanMinAngle += value;\r\n\t                }\r\n\r\n\t                var endAngle = currentAngle + dir * angle;\r\n\t                data.setItemLayout(idx, {\r\n\t                    angle: angle,\r\n\t                    startAngle: currentAngle,\r\n\t                    endAngle: endAngle,\r\n\t                    clockwise: clockwise,\r\n\t                    cx: cx,\r\n\t                    cy: cy,\r\n\t                    r0: r0,\r\n\t                    r: roseType\r\n\t                        ? numberUtil.linearMap(value, extent, [r0, r])\r\n\t                        : r\r\n\t                });\r\n\r\n\t                currentAngle = endAngle;\r\n\t            }, true);\r\n\r\n\t            // Some sector is constrained by minAngle\r\n\t            // Rest sectors needs recalculate angle\r\n\t            if (restAngle < PI2) {\r\n\t                // Average the angle if rest angle is not enough after all angles is\r\n\t                // Constrained by minAngle\r\n\t                if (restAngle <= 1e-3) {\r\n\t                    var angle = PI2 / data.count();\r\n\t                    data.each(function (idx) {\r\n\t                        var layout = data.getItemLayout(idx);\r\n\t                        layout.startAngle = startAngle + dir * idx * angle;\r\n\t                        layout.endAngle = startAngle + dir * (idx + 1) * angle;\r\n\t                    });\r\n\t                }\r\n\t                else {\r\n\t                    unitRadian = restAngle / valueSumLargerThanMinAngle;\r\n\t                    currentAngle = startAngle;\r\n\t                    data.each('value', function (value, idx) {\r\n\t                        var layout = data.getItemLayout(idx);\r\n\t                        var angle = layout.angle === minAngle\r\n\t                            ? minAngle : value * unitRadian;\r\n\t                        layout.startAngle = currentAngle;\r\n\t                        layout.endAngle = currentAngle + dir * angle;\r\n\t                        currentAngle += angle;\r\n\t                    });\r\n\t                }\r\n\t            }\r\n\r\n\t            labelLayout(seriesModel, r, width, height);\r\n\t        });\r\n\t    };\r\n\r\n\r\n/***/ },\r\n/* 145 */\r\n/***/ function(module, exports, __webpack_require__) {\r\n\r\n\t'use strict';\r\n\t// FIXME emphasis label position is not same with normal label position\r\n\r\n\r\n\t    var textContain = __webpack_require__(8);\r\n\r\n\t    function adjustSingleSide(list, cx, cy, r, dir, viewWidth, viewHeight) {\r\n\t        list.sort(function (a, b) {\r\n\t            return a.y - b.y;\r\n\t        });\r\n\r\n\t        // 压\r\n\t        function shiftDown(start, end, delta, dir) {\r\n\t            for (var j = start; j < end; j++) {\r\n\t                list[j].y += delta;\r\n\t                if (j > start\r\n\t                    && j + 1 < end\r\n\t                    && list[j + 1].y > list[j].y + list[j].height\r\n\t                ) {\r\n\t                    shiftUp(j, delta / 2);\r\n\t                    return;\r\n\t                }\r\n\t            }\r\n\r\n\t            shiftUp(end - 1, delta / 2);\r\n\t        }\r\n\r\n\t        // 弹\r\n\t        function shiftUp(end, delta) {\r\n\t            for (var j = end; j >= 0; j--) {\r\n\t                list[j].y -= delta;\r\n\t                if (j > 0\r\n\t                    && list[j].y > list[j - 1].y + list[j - 1].height\r\n\t                ) {\r\n\t                    break;\r\n\t                }\r\n\t            }\r\n\t        }\r\n\r\n\t        function changeX(list, isDownList, cx, cy, r, dir) {\r\n\t            var lastDeltaX = dir > 0\r\n\t                ? isDownList                // 右侧\r\n\t                    ? Number.MAX_VALUE      // 下\r\n\t                    : 0                     // 上\r\n\t                : isDownList                // 左侧\r\n\t                    ? Number.MAX_VALUE      // 下\r\n\t                    : 0;                    // 上\r\n\r\n\t            for (var i = 0, l = list.length; i < l; i++) {\r\n\t                // Not change x for center label\r\n\t                if (list[i].position === 'center') {\r\n\t                    continue;\r\n\t                }\r\n\t                var deltaY = Math.abs(list[i].y - cy);\r\n\t                var length = list[i].len;\r\n\t                var length2 = list[i].len2;\r\n\t                var deltaX = (deltaY < r + length)\r\n\t                    ? Math.sqrt(\r\n\t                          (r + length + length2) * (r + length + length2)\r\n\t                          - deltaY * deltaY\r\n\t                      )\r\n\t                    : Math.abs(list[i].x - cx);\r\n\t                if (isDownList && deltaX >= lastDeltaX) {\r\n\t                    // 右下，左下\r\n\t                    deltaX = lastDeltaX - 10;\r\n\t                }\r\n\t                if (!isDownList && deltaX <= lastDeltaX) {\r\n\t                    // 右上，左上\r\n\t                    deltaX = lastDeltaX + 10;\r\n\t                }\r\n\r\n\t                list[i].x = cx + deltaX * dir;\r\n\t                lastDeltaX = deltaX;\r\n\t            }\r\n\t        }\r\n\r\n\t        var lastY = 0;\r\n\t        var delta;\r\n\t        var len = list.length;\r\n\t        var upList = [];\r\n\t        var downList = [];\r\n\t        for (var i = 0; i < len; i++) {\r\n\t            delta = list[i].y - lastY;\r\n\t            if (delta < 0) {\r\n\t                shiftDown(i, len, -delta, dir);\r\n\t            }\r\n\t            lastY = list[i].y + list[i].height;\r\n\t        }\r\n\t        if (viewHeight - lastY < 0) {\r\n\t            shiftUp(len - 1, lastY - viewHeight);\r\n\t        }\r\n\t        for (var i = 0; i < len; i++) {\r\n\t            if (list[i].y >= cy) {\r\n\t                downList.push(list[i]);\r\n\t            }\r\n\t            else {\r\n\t                upList.push(list[i]);\r\n\t            }\r\n\t        }\r\n\t        changeX(upList, false, cx, cy, r, dir);\r\n\t        changeX(downList, true, cx, cy, r, dir);\r\n\t    }\r\n\r\n\t    function avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight) {\r\n\t        var leftList = [];\r\n\t        var rightList = [];\r\n\t        for (var i = 0; i < labelLayoutList.length; i++) {\r\n\t            if (labelLayoutList[i].x < cx) {\r\n\t                leftList.push(labelLayoutList[i]);\r\n\t            }\r\n\t            else {\r\n\t                rightList.push(labelLayoutList[i]);\r\n\t            }\r\n\t        }\r\n\r\n\t        adjustSingleSide(rightList, cx, cy, r, 1, viewWidth, viewHeight);\r\n\t        adjustSingleSide(leftList, cx, cy, r, -1, viewWidth, viewHeight);\r\n\r\n\t        for (var i = 0; i < labelLayoutList.length; i++) {\r\n\t            var linePoints = labelLayoutList[i].linePoints;\r\n\t            if (linePoints) {\r\n\t                var dist = linePoints[1][0] - linePoints[2][0];\r\n\t                if (labelLayoutList[i].x < cx) {\r\n\t                    linePoints[2][0] = labelLayoutList[i].x + 3;\r\n\t                }\r\n\t                else {\r\n\t                    linePoints[2][0] = labelLayoutList[i].x - 3;\r\n\t                }\r\n\t                linePoints[1][1] = linePoints[2][1] = labelLayoutList[i].y;\r\n\t                linePoints[1][0] = linePoints[2][0] + dist;\r\n\t            }\r\n\t        }\r\n\t    }\r\n\r\n\t    module.exports = function (seriesModel, r, viewWidth, viewHeight) {\r\n\t        var data = seriesModel.getData();\r\n\t        var labelLayoutList = [];\r\n\t        var cx;\r\n\t        var cy;\r\n\t        var hasLabelRotate = false;\r\n\r\n\t        data.each(function (idx) {\r\n\t            var layout = data.getItemLayout(idx);\r\n\r\n\t            var itemModel = data.getItemModel(idx);\r\n\t            var labelModel = itemModel.getModel('label.normal');\r\n\t            // Use position in normal or emphasis\r\n\t            var labelPosition = labelModel.get('position') || itemModel.get('label.emphasis.position');\r\n\r\n\t            var labelLineModel = itemModel.getModel('labelLine.normal');\r\n\t            var labelLineLen = labelLineModel.get('length');\r\n\t            var labelLineLen2 = labelLineModel.get('length2');\r\n\r\n\t            var midAngle = (layout.startAngle + layout.endAngle) / 2;\r\n\t            var dx = Math.cos(midAngle);\r\n\t            var dy = Math.sin(midAngle);\r\n\r\n\t            var textX;\r\n\t            var textY;\r\n\t            var linePoints;\r\n\t            var textAlign;\r\n\r\n\t            cx = layout.cx;\r\n\t            cy = layout.cy;\r\n\r\n\t            var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\r\n\t            if (labelPosition === 'center') {\r\n\t                textX = layout.cx;\r\n\t                textY = layout.cy;\r\n\t                textAlign = 'center';\r\n\t            }\r\n\t            else {\r\n\t                var x1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dx : layout.r * dx) + cx;\r\n\t                var y1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dy : layout.r * dy) + cy;\r\n\r\n\t                textX = x1 + dx * 3;\r\n\t                textY = y1 + dy * 3;\r\n\r\n\t                if (!isLabelInside) {\r\n\t                    // For roseType\r\n\t                    var x2 = x1 + dx * (labelLineLen + r - layout.r);\r\n\t                    var y2 = y1 + dy * (labelLineLen + r - layout.r);\r\n\t                    var x3 = x2 + ((dx < 0 ? -1 : 1) * labelLineLen2);\r\n\t                    var y3 = y2;\r\n\r\n\t                    textX = x3 + (dx < 0 ? -5 : 5);\r\n\t                    textY = y3;\r\n\t                    linePoints = [[x1, y1], [x2, y2], [x3, y3]];\r\n\t                }\r\n\r\n\t                textAlign = isLabelInside ? 'center' : (dx > 0 ? 'left' : 'right');\r\n\t            }\r\n\t            var font = labelModel.getModel('textStyle').getFont();\r\n\r\n\t            var labelRotate = labelModel.get('rotate')\r\n\t                ? (dx < 0 ? -midAngle + Math.PI : -midAngle) : 0;\r\n\t            var text = seriesModel.getFormattedLabel(idx, 'normal')\r\n\t                        || data.getName(idx);\r\n\t            var textRect = textContain.getBoundingRect(\r\n\t                text, font, textAlign, 'top'\r\n\t            );\r\n\t            hasLabelRotate = !!labelRotate;\r\n\t            layout.label = {\r\n\t                x: textX,\r\n\t                y: textY,\r\n\t                position: labelPosition,\r\n\t                height: textRect.height,\r\n\t                len: labelLineLen,\r\n\t                len2: labelLineLen2,\r\n\t                linePoints: linePoints,\r\n\t                textAlign: textAlign,\r\n\t                verticalAlign: 'middle',\r\n\t                font: font,\r\n\t                rotation: labelRotate\r\n\t            };\r\n\r\n\t            // Not layout the inside label\r\n\t            if (!isLabelInside) {\r\n\t                labelLayoutList.push(layout.label);\r\n\t            }\r\n\t        });\r\n\t        if (!hasLabelRotate && seriesModel.get('avoidLabelOverlap')) {\r\n\t            avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight);\r\n\t        }\r\n\t    };\r\n\r\n\r\n/***/ },\r\n/* 146 */\r\n/***/ function(module, exports) {\r\n\r\n\t\r\n\t    module.exports = function (seriesType, ecModel) {\r\n\t        var legendModels = ecModel.findComponents({\r\n\t            mainType: 'legend'\r\n\t        });\r\n\t        if (!legendModels || !legendModels.length) {\r\n\t            return;\r\n\t        }\r\n\t        ecModel.eachSeriesByType(seriesType, function (series) {\r\n\t            var data = series.getData();\r\n\t            data.filterSelf(function (idx) {\r\n\t                var name = data.getName(idx);\r\n\t                // If in any legend component the status is not selected.\r\n\t                for (var i = 0; i < legendModels.length; i++) {\r\n\t                    if (!legendModels[i].isSelected(name)) {\r\n\t                        return false;\r\n\t                    }\r\n\t                }\r\n\t                return true;\r\n\t            }, this);\r\n\t        }, this);\r\n\t    };\r\n\r\n\r\n/***/ }\r\n/******/ ])\r\n});\r\n;\n!function(t,e){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=e(require(\"echarts\")):\"function\"==typeof define&&define.amd?define([\"echarts\"],e):\"object\"==typeof exports?exports[\"echarts-wordcloud\"]=e(require(\"echarts\")):t[\"echarts-wordcloud\"]=e(t.echarts)}(this,function(t){return function(t){function e(n){if(r[n])return r[n].exports;var a=r[n]={exports:{},id:n,loaded:!1};return t[n].call(a.exports,a,a.exports,e),a.loaded=!0,a.exports}var r={};return e.m=t,e.c=r,e.p=\"\",e(0)}([function(t,e,r){t.exports=r(14)},function(t,e,r){function n(t){if(\"object\"==typeof t&&null!==t){var e=t;if(t instanceof Array){e=[];for(var r=0,a=t.length;a>r;r++)e[r]=n(t[r])}else if(!I(t)&&!T(t)){e={};for(var i in t)t.hasOwnProperty(i)&&(e[i]=n(t[i]))}return e}return t}function a(t,e,r){if(!C(e)||!C(t))return r?n(e):t;for(var i in e)if(e.hasOwnProperty(i)){var o=t[i],u=e[i];!C(u)||!C(o)||M(u)||M(o)||T(u)||T(o)||I(u)||I(o)?!r&&i in t||(t[i]=n(e[i],!0)):a(o,u,r)}return t}function i(t,e){for(var r=t[0],n=1,i=t.length;i>n;n++)r=a(r,t[n],e);return r}function o(t,e){for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r]);return t}function u(t,e,r){for(var n in e)e.hasOwnProperty(n)&&(r?null!=e[n]:null==t[n])&&(t[n]=e[n]);return t}function c(){return document.createElement(\"canvas\")}function l(){return A||(A=W.createCanvas().getContext(\"2d\")),A}function s(t,e){if(t){if(t.indexOf)return t.indexOf(e);for(var r=0,n=t.length;n>r;r++)if(t[r]===e)return r}return-1}function f(t,e){function r(){}var n=t.prototype;r.prototype=e.prototype,t.prototype=new r;for(var a in n)t.prototype[a]=n[a];t.prototype.constructor=t,t.superClass=e}function h(t,e,r){t=\"prototype\"in t?t.prototype:t,e=\"prototype\"in e?e.prototype:e,u(t,e,r)}function d(t){return t?\"string\"==typeof t?!1:\"number\"==typeof t.length:void 0}function g(t,e,r){if(t&&e)if(t.forEach&&t.forEach===z)t.forEach(e,r);else if(t.length===+t.length)for(var n=0,a=t.length;a>n;n++)e.call(r,t[n],n,t);else for(var i in t)t.hasOwnProperty(i)&&e.call(r,t[i],i,t)}function m(t,e,r){if(t&&e){if(t.map&&t.map===q)return t.map(e,r);for(var n=[],a=0,i=t.length;i>a;a++)n.push(e.call(r,t[a],a,t));return n}}function p(t,e,r,n){if(t&&e){if(t.reduce&&t.reduce===j)return t.reduce(e,r,n);for(var a=0,i=t.length;i>a;a++)r=e.call(n,r,t[a],a,t);return r}}function v(t,e,r){if(t&&e){if(t.filter&&t.filter===L)return t.filter(e,r);for(var n=[],a=0,i=t.length;i>a;a++)e.call(r,t[a],a,t)&&n.push(t[a]);return n}}function y(t,e,r){if(t&&e)for(var n=0,a=t.length;a>n;n++)if(e.call(r,t[n],n,t))return t[n]}function w(t,e){var r=D.call(arguments,2);return function(){return t.apply(e,r.concat(D.call(arguments)))}}function x(t){var e=D.call(arguments,1);return function(){return t.apply(this,e.concat(D.call(arguments)))}}function M(t){return\"[object Array]\"===R.call(t)}function b(t){return\"function\"==typeof t}function S(t){return\"[object String]\"===R.call(t)}function C(t){var e=typeof t;return\"function\"===e||!!t&&\"object\"==e}function I(t){return!!P[R.call(t)]||t instanceof F}function T(t){return t&&1===t.nodeType&&\"string\"==typeof t.nodeName}function N(t){for(var e=0,r=arguments.length;r>e;e++)if(null!=arguments[e])return arguments[e]}function E(){return Function.call.apply(D,arguments)}function k(t,e){if(!t)throw new Error(e)}var A,F=r(10),P={\"[object Function]\":1,\"[object RegExp]\":1,\"[object Date]\":1,\"[object Error]\":1,\"[object CanvasGradient]\":1},R=Object.prototype.toString,O=Array.prototype,z=O.forEach,L=O.filter,D=O.slice,q=O.map,j=O.reduce,W={inherits:f,mixin:h,clone:n,merge:a,mergeAll:i,extend:o,defaults:u,getContext:l,createCanvas:c,indexOf:s,slice:E,find:y,isArrayLike:d,each:g,map:m,reduce:p,filter:v,bind:w,curry:x,isArray:M,isString:S,isObject:C,isFunction:b,isBuildInObject:I,isDom:T,retrieve:N,assert:k,noop:function(){}};t.exports=W},function(e,r){e.exports=t},function(t,e){function r(t){return t.replace(/^\\s+/,\"\").replace(/\\s+$/,\"\")}var n={},a=1e-4;n.linearMap=function(t,e,r,n){var a=e[1]-e[0],i=r[1]-r[0];if(0===a)return 0===i?r[0]:(r[0]+r[1])/2;if(n)if(a>0){if(t<=e[0])return r[0];if(t>=e[1])return r[1]}else{if(t>=e[0])return r[0];if(t<=e[1])return r[1]}else{if(t===e[0])return r[0];if(t===e[1])return r[1]}return(t-e[0])/a*i+r[0]},n.parsePercent=function(t,e){switch(t){case\"center\":case\"middle\":t=\"50%\";break;case\"left\":case\"top\":t=\"0%\";break;case\"right\":case\"bottom\":t=\"100%\"}return\"string\"==typeof t?r(t).match(/%$/)?parseFloat(t)/100*e:parseFloat(t):null==t?NaN:+t},n.round=function(t){return+(+t).toFixed(10)},n.asc=function(t){return t.sort(function(t,e){return t-e}),t},n.getPrecision=function(t){if(isNaN(t))return 0;for(var e=1,r=0;Math.round(t*e)/e!==t;)e*=10,r++;return r},n.getPixelPrecision=function(t,e){var r=Math.log,n=Math.LN10,a=Math.floor(r(t[1]-t[0])/n),i=Math.round(r(Math.abs(e[1]-e[0]))/n);return Math.max(-a+i,0)},n.MAX_SAFE_INTEGER=9007199254740991,n.remRadian=function(t){var e=2*Math.PI;return(t%e+e)%e},n.isRadianAroundZero=function(t){return t>-a&&a>t},n.parseDate=function(t){return t instanceof Date?t:new Date(\"string\"==typeof t?t.replace(/-/g,\"/\"):Math.round(t))},n.quantity=function(t){return Math.pow(10,Math.floor(Math.log(t)/Math.LN10))},n.nice=function(t,e){var r,a=n.quantity(t),i=t/a;return r=e?1.5>i?1:2.5>i?2:4>i?3:7>i?5:10:1>i?1:2>i?2:3>i?3:5>i?5:10,r*a},t.exports=n},function(t,e,r){function n(t,e,r,n){if(!e)return t;var u=i(e[0]),c=o.isArray(u)&&u.length||1;r=r||[],n=n||\"extra\";for(var l=0;c>l;l++)if(!t[l]){var s=r[l]||n+(l-r.length);t[l]=a(e,l)?{type:\"ordinal\",name:s}:s}return t}function a(t,e){for(var r=0,n=t.length;n>r;r++){var a=i(t[r]);if(!o.isArray(a))return!1;var a=a[e];if(null!=a&&isFinite(a))return!1;if(o.isString(a)&&\"-\"!==a)return!0}return!1}function i(t){return o.isArray(t)?t:o.isObject(t)?t.value:t}var o=r(1);t.exports=n},function(t,e,r){function n(t){return isNaN(t)?\"-\":(t=(t+\"\").split(\".\"),t[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g,\"$1,\")+(t.length>1?\".\"+t[1]:\"\"))}function a(t){return t.toLowerCase().replace(/-(.)/g,function(t,e){return e.toUpperCase()})}function i(t){var e=t.length;return\"number\"==typeof t?[t,t,t,t]:2===e?[t[0],t[1],t[0],t[1]]:3===e?[t[0],t[1],t[2],t[1]]:t}function o(t){return String(t).replace(/&/g,\"&amp;\").replace(/</g,\"&lt;\").replace(/>/g,\"&gt;\").replace(/\"/g,\"&quot;\").replace(/'/g,\"&#39;\")}function u(t,e){return\"{\"+t+(null==e?\"\":e)+\"}\"}function c(t,e){f.isArray(e)||(e=[e]);var r=e.length;if(!r)return\"\";for(var n=e[0].$vars,a=0;a<n.length;a++){var i=d[a];t=t.replace(u(i),u(i,0))}for(var o=0;r>o;o++)for(var c=0;c<n.length;c++)t=t.replace(u(d[c],o),e[o][n[c]]);return t}function l(t,e){(\"week\"===t||\"month\"===t||\"quarter\"===t||\"half-year\"===t||\"year\"===t)&&(t=\"MM-dd\\nyyyy\");var r=h.parseDate(e),n=r.getFullYear(),a=r.getMonth()+1,i=r.getDate(),o=r.getHours(),u=r.getMinutes(),c=r.getSeconds();return t=t.replace(\"MM\",s(a)).toLowerCase().replace(\"yyyy\",n).replace(\"yy\",n%100).replace(\"dd\",s(i)).replace(\"d\",i).replace(\"hh\",s(o)).replace(\"h\",o).replace(\"mm\",s(u)).replace(\"m\",u).replace(\"ss\",s(c)).replace(\"s\",c)}function s(t){return 10>t?\"0\"+t:t}var f=r(1),h=r(3),d=[\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\"];t.exports={normalizeCssArray:i,addCommas:n,toCamelCase:a,encodeHTML:o,formatTpl:c,formatTime:l}},function(t,e,r){\"use strict\";function n(t,e,r,n,a){var i=0,o=0;null==n&&(n=1/0),null==a&&(a=1/0);var u=0;e.eachChild(function(c,l){var s,f,h=c.position,d=c.getBoundingRect(),g=e.childAt(l+1),m=g&&g.getBoundingRect();if(\"horizontal\"===t){var p=d.width+(m?-m.x+d.x:0);s=i+p,s>n||c.newline?(i=0,s=p,o+=u+r,u=d.height):u=Math.max(u,d.height)}else{var v=d.height+(m?-m.y+d.y:0);f=o+v,f>a||c.newline?(i+=u+r,o=0,f=v,u=d.width):u=Math.max(u,d.width)}c.newline||(h[0]=i,h[1]=o,\"horizontal\"===t?i=s+r:o=f+r)})}var a=r(1),i=r(7),o=r(3),u=r(5),c=o.parsePercent,l=a.each,s={},f=[\"left\",\"right\",\"top\",\"bottom\",\"width\",\"height\"];s.box=n,s.vbox=a.curry(n,\"vertical\"),s.hbox=a.curry(n,\"horizontal\"),s.getAvailableSize=function(t,e,r){var n=e.width,a=e.height,i=c(t.x,n),o=c(t.y,a),l=c(t.x2,n),s=c(t.y2,a);return(isNaN(i)||isNaN(parseFloat(t.x)))&&(i=0),(isNaN(l)||isNaN(parseFloat(t.x2)))&&(l=n),(isNaN(o)||isNaN(parseFloat(t.y)))&&(o=0),(isNaN(s)||isNaN(parseFloat(t.y2)))&&(s=a),r=u.normalizeCssArray(r||0),{width:Math.max(l-i-r[1]-r[3],0),height:Math.max(s-o-r[0]-r[2],0)}},s.getLayoutRect=function(t,e,r){r=u.normalizeCssArray(r||0);var n=e.width,a=e.height,o=c(t.left,n),l=c(t.top,a),s=c(t.right,n),f=c(t.bottom,a),h=c(t.width,n),d=c(t.height,a),g=r[2]+r[0],m=r[1]+r[3],p=t.aspect;switch(isNaN(h)&&(h=n-s-m-o),isNaN(d)&&(d=a-f-g-l),isNaN(h)&&isNaN(d)&&(p>n/a?h=.8*n:d=.8*a),null!=p&&(isNaN(h)&&(h=p*d),isNaN(d)&&(d=h/p)),isNaN(o)&&(o=n-s-h-m),isNaN(l)&&(l=a-f-d-g),t.left||t.right){case\"center\":o=n/2-h/2-r[3];break;case\"right\":o=n-h-m}switch(t.top||t.bottom){case\"middle\":case\"center\":l=a/2-d/2-r[0];break;case\"bottom\":l=a-d-g}o=o||0,l=l||0,isNaN(h)&&(h=n-o-(s||0)),isNaN(d)&&(d=a-l-(f||0));var v=new i(o+r[3],l+r[0],h,d);return v.margin=r,v},s.positionGroup=function(t,e,r,n){var i=t.getBoundingRect();e=a.extend(a.clone(e),{width:i.width,height:i.height}),e=s.getLayoutRect(e,r,n),t.position=[e.x-i.x,e.y-i.y]},s.mergeLayoutParam=function(t,e,r){function n(n){var a={},u=0,c={},s=0,f=r.ignoreSize?1:2;if(l(n,function(e){c[e]=t[e]}),l(n,function(t){i(e,t)&&(a[t]=c[t]=e[t]),o(a,t)&&u++,o(c,t)&&s++}),s!==f&&u){if(u>=f)return a;for(var h=0;h<n.length;h++){var d=n[h];if(!i(a,d)&&i(t,d)){a[d]=t[d];break}}return a}return c}function i(t,e){return t.hasOwnProperty(e)}function o(t,e){return null!=t[e]&&\"auto\"!==t[e]}function u(t,e,r){l(t,function(t){e[t]=r[t]})}!a.isObject(r)&&(r={});var c=[\"width\",\"left\",\"right\"],s=[\"height\",\"top\",\"bottom\"],f=n(c),h=n(s);u(c,t,f),u(s,t,h)},s.getLayoutParams=function(t){return s.copyLayoutParams({},t)},s.copyLayoutParams=function(t,e){return e&&t&&l(f,function(r){e.hasOwnProperty(r)&&(t[r]=e[r])}),t},t.exports=s},function(t,e,r){\"use strict\";function n(t,e,r,n){this.x=t,this.y=e,this.width=r,this.height=n}var a=r(9),i=r(8),o=a.applyTransform,u=Math.min,c=Math.abs,l=Math.max;n.prototype={constructor:n,union:function(t){var e=u(t.x,this.x),r=u(t.y,this.y);this.width=l(t.x+t.width,this.x+this.width)-e,this.height=l(t.y+t.height,this.y+this.height)-r,this.x=e,this.y=r},applyTransform:function(){var t=[],e=[];return function(r){r&&(t[0]=this.x,t[1]=this.y,e[0]=this.x+this.width,e[1]=this.y+this.height,o(t,t,r),o(e,e,r),this.x=u(t[0],e[0]),this.y=u(t[1],e[1]),this.width=c(e[0]-t[0]),this.height=c(e[1]-t[1]))}}(),calculateTransform:function(t){var e=this,r=t.width/e.width,n=t.height/e.height,a=i.create();return i.translate(a,a,[-e.x,-e.y]),i.scale(a,a,[r,n]),i.translate(a,a,[t.x,t.y]),a},intersect:function(t){var e=this,r=e.x,n=e.x+e.width,a=e.y,i=e.y+e.height,o=t.x,u=t.x+t.width,c=t.y,l=t.y+t.height;return!(o>n||r>u||c>i||a>l)},contain:function(t,e){var r=this;return t>=r.x&&t<=r.x+r.width&&e>=r.y&&e<=r.y+r.height},clone:function(){return new n(this.x,this.y,this.width,this.height)},copy:function(t){this.x=t.x,this.y=t.y,this.width=t.width,this.height=t.height}},t.exports=n},function(t,e){var r=\"undefined\"==typeof Float32Array?Array:Float32Array,n={create:function(){var t=new r(6);return n.identity(t),t},identity:function(t){return t[0]=1,t[1]=0,t[2]=0,t[3]=1,t[4]=0,t[5]=0,t},copy:function(t,e){return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t},mul:function(t,e,r){var n=e[0]*r[0]+e[2]*r[1],a=e[1]*r[0]+e[3]*r[1],i=e[0]*r[2]+e[2]*r[3],o=e[1]*r[2]+e[3]*r[3],u=e[0]*r[4]+e[2]*r[5]+e[4],c=e[1]*r[4]+e[3]*r[5]+e[5];return t[0]=n,t[1]=a,t[2]=i,t[3]=o,t[4]=u,t[5]=c,t},translate:function(t,e,r){return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4]+r[0],t[5]=e[5]+r[1],t},rotate:function(t,e,r){var n=e[0],a=e[2],i=e[4],o=e[1],u=e[3],c=e[5],l=Math.sin(r),s=Math.cos(r);return t[0]=n*s+o*l,t[1]=-n*l+o*s,t[2]=a*s+u*l,t[3]=-a*l+s*u,t[4]=s*i+l*c,t[5]=s*c-l*i,t},scale:function(t,e,r){var n=r[0],a=r[1];return t[0]=e[0]*n,t[1]=e[1]*a,t[2]=e[2]*n,t[3]=e[3]*a,t[4]=e[4]*n,t[5]=e[5]*a,t},invert:function(t,e){var r=e[0],n=e[2],a=e[4],i=e[1],o=e[3],u=e[5],c=r*o-i*n;return c?(c=1/c,t[0]=o*c,t[1]=-i*c,t[2]=-n*c,t[3]=r*c,t[4]=(n*u-o*a)*c,t[5]=(i*a-r*u)*c,t):null}};t.exports=n},function(t,e){var r=\"undefined\"==typeof Float32Array?Array:Float32Array,n={create:function(t,e){var n=new r(2);return n[0]=t||0,n[1]=e||0,n},copy:function(t,e){return t[0]=e[0],t[1]=e[1],t},clone:function(t){var e=new r(2);return e[0]=t[0],e[1]=t[1],e},set:function(t,e,r){return t[0]=e,t[1]=r,t},add:function(t,e,r){return t[0]=e[0]+r[0],t[1]=e[1]+r[1],t},scaleAndAdd:function(t,e,r,n){return t[0]=e[0]+r[0]*n,t[1]=e[1]+r[1]*n,t},sub:function(t,e,r){return t[0]=e[0]-r[0],t[1]=e[1]-r[1],t},len:function(t){return Math.sqrt(this.lenSquare(t))},lenSquare:function(t){return t[0]*t[0]+t[1]*t[1]},mul:function(t,e,r){return t[0]=e[0]*r[0],t[1]=e[1]*r[1],t},div:function(t,e,r){return t[0]=e[0]/r[0],t[1]=e[1]/r[1],t},dot:function(t,e){return t[0]*e[0]+t[1]*e[1]},scale:function(t,e,r){return t[0]=e[0]*r,t[1]=e[1]*r,t},normalize:function(t,e){var r=n.len(e);return 0===r?(t[0]=0,t[1]=0):(t[0]=e[0]/r,t[1]=e[1]/r),t},distance:function(t,e){return Math.sqrt((t[0]-e[0])*(t[0]-e[0])+(t[1]-e[1])*(t[1]-e[1]))},distanceSquare:function(t,e){return(t[0]-e[0])*(t[0]-e[0])+(t[1]-e[1])*(t[1]-e[1])},negate:function(t,e){return t[0]=-e[0],t[1]=-e[1],t},lerp:function(t,e,r,n){return t[0]=e[0]+n*(r[0]-e[0]),t[1]=e[1]+n*(r[1]-e[1]),t},applyTransform:function(t,e,r){var n=e[0],a=e[1];return t[0]=r[0]*n+r[2]*a+r[4],t[1]=r[1]*n+r[3]*a+r[5],t},min:function(t,e,r){return t[0]=Math.min(e[0],r[0]),t[1]=Math.min(e[1],r[1]),t},max:function(t,e,r){return t[0]=Math.max(e[0],r[0]),t[1]=Math.max(e[1],r[1]),t}};n.length=n.len,n.lengthSquare=n.lenSquare,n.dist=n.distance,n.distSquare=n.distanceSquare,t.exports=n},function(t,e){var r=function(t){this.colorStops=t||[]};r.prototype={constructor:r,addColorStop:function(t,e){this.colorStops.push({offset:t,color:e})}},t.exports=r},function(t,e,r){var n=r(4),a=r(2);a.extendSeriesModel({type:\"series.wordCloud\",visualColorAccessPath:\"textStyle.normal.color\",optionUpdated:function(){var t=this.option;t.gridSize=Math.max(Math.floor(t.gridSize),4)},getInitialData:function(t,e){var r=n([\"value\"],t.data),i=new a.List(r,this);return i.initData(t.data),i},defaultOption:{maskImage:null,shape:\"circle\",left:\"center\",top:\"center\",width:\"70%\",height:\"80%\",sizeRange:[12,60],rotationRange:[-90,90],rotationStep:45,gridSize:8,textStyle:{normal:{fontWeight:\"normal\"}}}})},function(t,e,r){function n(t,e){return t&&t.getShallow(e)}var a=r(2);a.extendChartView({type:\"wordCloud\",render:function(t,e,r){var i=this.group;i.removeAll();var o=t.getData(),u=t.get(\"gridSize\");t.layoutInstance.ondraw=function(t,e,r,c){var l=o.getItemModel(r),s=l.getModel(\"textStyle.normal\"),f=l.getModel(\"textStyle.emphasis\"),h=function(t,r){var a=t.ecModel,i=a&&a.getModel(\"textStyle\");return[\"fontStyle\",\"fontWeight\",\"fontSize\",\"fontFamily\"].map(function(a,o){return 2!==o?t.getShallow(a)||r.getShallow(a)||n(i,a):(t.getShallow(a,!0)||Math.round(t===s?e:r.getShallow(a,!0)||e))+\"px\"}).join(\" \")},t=new a.graphic.Text({style:{x:c.info.fillTextOffsetX,y:c.info.fillTextOffsetY+.5*e,text:t,textBaseline:\"middle\",font:h(s,f)},scale:[1/c.info.mu,1/c.info.mu],position:[(c.gx+c.info.gw/2)*u,(c.gy+c.info.gh/2)*u],rotation:c.rot});t.setStyle(s.getItemStyle()),t.setStyle({fill:o.getItemVisual(r,\"color\")}),i.add(t),o.setItemGraphicEl(r,t),a.graphic.setHoverStyle(t,a.util.extend(f.getItemStyle(),{font:h(f,s)}))}}})},function(t,e,r){var n,a;window.setImmediate||(window.setImmediate=function(){return window.msSetImmediate||window.webkitSetImmediate||window.mozSetImmediate||window.oSetImmediate||function(){if(!window.postMessage||!window.addEventListener)return null;var t=[void 0],e=\"zero-timeout-message\",r=function(r){var n=t.length;return t.push(r),window.postMessage(e+n.toString(36),\"*\"),n};return window.addEventListener(\"message\",function(r){if(\"string\"==typeof r.data&&r.data.substr(0,e.length)===e){r.stopImmediatePropagation();var n=parseInt(r.data.substr(e.length),36);t[n]&&(t[n](),t[n]=void 0)}},!0),window.clearImmediate=function(e){t[e]&&(t[e]=void 0)},r}()||function(t){window.setTimeout(t,0)}}()),window.clearImmediate||(window.clearImmediate=function(){return window.msClearImmediate||window.webkitClearImmediate||window.mozClearImmediate||window.oClearImmediate||function(t){window.clearTimeout(t)}}()),function(r){var i=function(){var t=document.createElement(\"canvas\");if(!t||!t.getContext)return!1;var e=t.getContext(\"2d\");return e.getImageData&&e.fillText&&Array.prototype.some&&Array.prototype.push?!0:!1}(),o=function(){if(i){for(var t,e,r=document.createElement(\"canvas\").getContext(\"2d\"),n=20;n;){if(r.font=n.toString(10)+\"px sans-serif\",r.measureText(\"Ｗ\").width===t&&r.measureText(\"m\").width===e)return n+1;t=r.measureText(\"Ｗ\").width,e=r.measureText(\"m\").width,n--}return 0}}(),u=function(t){for(var e,r,n=t.length;n;e=Math.floor(Math.random()*n),r=t[--n],t[n]=t[e],t[e]=r);return t},c=function(t,e){function r(t,e){return\"hsl(\"+(360*Math.random()).toFixed()+\",\"+(30*Math.random()+70).toFixed()+\"%,\"+(Math.random()*(e-t)+t).toFixed()+\"%)\"}if(i){Array.isArray(t)||(t=[t]),t.forEach(function(e,r){if(\"string\"==typeof e){if(t[r]=document.getElementById(e),!t[r])throw\"The element id specified is not found.\"}else if(!e.tagName&&!e.appendChild)throw\"You must pass valid HTML elements, or ID of the element.\"});var n={list:[],fontFamily:'\"Trebuchet MS\", \"Heiti TC\", \"微軟正黑體\", \"Arial Unicode MS\", \"Droid Fallback Sans\", sans-serif',fontWeight:\"normal\",color:\"random-dark\",minSize:0,weightFactor:1,clearCanvas:!0,backgroundColor:\"#fff\",gridSize:8,drawOutOfBound:!1,origin:null,drawMask:!1,maskColor:\"rgba(255,0,0,0.3)\",maskGapWidth:.3,wait:0,abortThreshold:0,abort:function(){},minRotation:-Math.PI/2,maxRotation:Math.PI/2,rotationStep:.1,shuffle:!0,rotateRatio:.1,shape:\"circle\",ellipticity:.65,classes:null,hover:null,click:null};if(e)for(var a in e)a in n&&(n[a]=e[a]);if(\"function\"!=typeof n.weightFactor){var c=n.weightFactor;n.weightFactor=function(t){return t*c}}if(\"function\"!=typeof n.shape)switch(n.shape){case\"circle\":default:n.shape=\"circle\";break;case\"cardioid\":n.shape=function(t){return 1-Math.sin(t)};break;case\"diamond\":case\"square\":n.shape=function(t){var e=t%(2*Math.PI/4);return 1/(Math.cos(e)+Math.sin(e))};break;case\"triangle-forward\":n.shape=function(t){var e=t%(2*Math.PI/3);return 1/(Math.cos(e)+Math.sqrt(3)*Math.sin(e))};break;case\"triangle\":case\"triangle-upright\":n.shape=function(t){var e=(t+3*Math.PI/2)%(2*Math.PI/3);return 1/(Math.cos(e)+Math.sqrt(3)*Math.sin(e))};break;case\"pentagon\":n.shape=function(t){var e=(t+.955)%(2*Math.PI/5);return 1/(Math.cos(e)+.726543*Math.sin(e))};break;case\"star\":n.shape=function(t){var e=(t+.955)%(2*Math.PI/10);return(t+.955)%(2*Math.PI/5)-2*Math.PI/10>=0?1/(Math.cos(2*Math.PI/10-e)+3.07768*Math.sin(2*Math.PI/10-e)):1/(Math.cos(e)+3.07768*Math.sin(e))}}n.gridSize=Math.max(Math.floor(n.gridSize),4);var l,s,f,h,d,g,m,p=n.gridSize,v=p-n.maskGapWidth,y=Math.abs(n.maxRotation-n.minRotation),w=Math.min(n.maxRotation,n.minRotation),x=n.rotationStep;switch(n.color){case\"random-dark\":m=function(){return r(10,50)};break;case\"random-light\":m=function(){return r(50,90)};break;default:\"function\"==typeof n.color&&(m=n.color)}var M=null;\"function\"==typeof n.classes&&(M=n.classes);var b,S=!1,C=[],I=function(t){var e,r,n=t.currentTarget,a=n.getBoundingClientRect();t.touches?(e=t.touches[0].clientX,r=t.touches[0].clientY):(e=t.clientX,r=t.clientY);var i=e-a.left,o=r-a.top,u=Math.floor(i*(n.width/a.width||1)/p),c=Math.floor(o*(n.height/a.height||1)/p);return C[u][c]},T=function(t){var e=I(t);if(b!==e)return b=e,e?void n.hover(e.item,e.dimension,t):void n.hover(void 0,void 0,t)},N=function(t){var e=I(t);e&&(n.click(e.item,e.dimension,t),t.preventDefault())},E=[],k=function(t){if(E[t])return E[t];var e=8*t,r=e,a=[];for(0===t&&a.push([h[0],h[1],0]);r--;){var i=1;\"circle\"!==n.shape&&(i=n.shape(r/e*2*Math.PI)),a.push([h[0]+t*i*Math.cos(-r/e*2*Math.PI),h[1]+t*i*Math.sin(-r/e*2*Math.PI)*n.ellipticity,r/e*2*Math.PI])}return E[t]=a,a},A=function(){return n.abortThreshold>0&&(new Date).getTime()-g>n.abortThreshold},F=function(){return 0===n.rotateRatio?0:Math.random()>n.rotateRatio?0:0===y?w:w+Math.round(Math.random()*y/x)*x},P=function(t,e,r){var a=!1,i=n.weightFactor(e);if(i<=n.minSize)return!1;var u=1;o>i&&(u=function(){for(var t=2;o>t*i;)t+=2;return t}());var c=document.createElement(\"canvas\"),l=c.getContext(\"2d\",{willReadFrequently:!0});l.font=n.fontWeight+\" \"+(i*u).toString(10)+\"px \"+n.fontFamily;var s=l.measureText(t).width/u,f=Math.max(i*u,l.measureText(\"m\").width,l.measureText(\"Ｗ\").width)/u,h=s+2*f,d=3*f,g=Math.ceil(h/p),m=Math.ceil(d/p);h=g*p,d=m*p;var v=-s/2,y=.4*-f,w=Math.ceil((h*Math.abs(Math.sin(r))+d*Math.abs(Math.cos(r)))/p),x=Math.ceil((h*Math.abs(Math.cos(r))+d*Math.abs(Math.sin(r)))/p),M=x*p,b=w*p;c.setAttribute(\"width\",M),c.setAttribute(\"height\",b),a&&(document.body.appendChild(c),l.save()),l.scale(1/u,1/u),l.translate(M*u/2,b*u/2),l.rotate(-r),l.font=n.fontWeight+\" \"+(i*u).toString(10)+\"px \"+n.fontFamily,l.fillStyle=\"#000\",l.textBaseline=\"middle\",l.fillText(t,v*u,(y+.5*i)*u);var S=l.getImageData(0,0,M,b).data;if(A())return!1;a&&(l.strokeRect(v*u,y,s*u,f*u),l.restore());for(var C,I,T,N=[],E=x,k=[w/2,x/2,w/2,x/2];E--;)for(C=w;C--;){T=p;t:{for(;T--;)for(I=p;I--;)if(S[4*((C*p+T)*M+(E*p+I))+3]){N.push([E,C]),E<k[3]&&(k[3]=E),E>k[1]&&(k[1]=E),C<k[0]&&(k[0]=C),C>k[2]&&(k[2]=C),a&&(l.fillStyle=\"rgba(255, 0, 0, 0.5)\",l.fillRect(E*p,C*p,p-.5,p-.5));break t}a&&(l.fillStyle=\"rgba(0, 0, 255, 0.5)\",l.fillRect(E*p,C*p,p-.5,p-.5))}}return a&&(l.fillStyle=\"rgba(0, 255, 0, 0.5)\",l.fillRect(k[3]*p,k[0]*p,(k[1]-k[3]+1)*p,(k[2]-k[0]+1)*p)),{mu:u,occupied:N,bounds:k,gw:x,gh:w,fillTextOffsetX:v,fillTextOffsetY:y,fillTextWidth:s,fillTextHeight:f,fontSize:i}},R=function(t,e,r,a,i){for(var o=i.length;o--;){var u=t+i[o][0],c=e+i[o][1];if(u>=s||c>=f||0>u||0>c){if(!n.drawOutOfBound)return!1}else if(!l[u][c])return!1}return!0},O=function(e,r,a,i,o,u,c,l,s){var f,h=a.fontSize;f=m?m(i,o,h,u,c):n.color;var d;d=M?M(i,o,h,u,c):n.classes;var g,v=a.bounds;g={x:(e+v[3])*p,y:(r+v[0])*p,w:(v[1]-v[3]+1)*p,h:(v[2]-v[0]+1)*p},t.forEach(function(t){if(t.getContext){var o=t.getContext(\"2d\"),u=a.mu;o.save(),o.scale(1/u,1/u),o.font=n.fontWeight+\" \"+(h*u).toString(10)+\"px \"+n.fontFamily,o.fillStyle=f,o.translate((e+a.gw/2)*p*u,(r+a.gh/2)*p*u),0!==l&&o.rotate(-l),o.textBaseline=\"middle\",o.fillText(i,a.fillTextOffsetX*u,(a.fillTextOffsetY+.5*h)*u),o.restore()}else{var c=document.createElement(\"span\"),g=\"\";g=\"rotate(\"+-l/Math.PI*180+\"deg) \",1!==a.mu&&(g+=\"translateX(-\"+a.fillTextWidth/4+\"px) scale(\"+1/a.mu+\")\");var m={position:\"absolute\",display:\"block\",font:n.fontWeight+\" \"+h*a.mu+\"px \"+n.fontFamily,left:(e+a.gw/2)*p+a.fillTextOffsetX+\"px\",top:(r+a.gh/2)*p+a.fillTextOffsetY+\"px\",width:a.fillTextWidth+\"px\",height:a.fillTextHeight+\"px\",lineHeight:h+\"px\",whiteSpace:\"nowrap\",transform:g,webkitTransform:g,msTransform:g,transformOrigin:\"50% 40%\",webkitTransformOrigin:\"50% 40%\",msTransformOrigin:\"50% 40%\"};f&&(m.color=f),c.textContent=i;for(var v in m)c.style[v]=m[v];if(s)for(var y in s)c.setAttribute(y,s[y]);d&&(c.className+=d),t.appendChild(c)}})},z=function(e,r,n,a,i){if(!(e>=s||r>=f||0>e||0>r)){if(l[e][r]=!1,n){var o=t[0].getContext(\"2d\");o.fillRect(e*p,r*p,v,v)}S&&(C[e][r]={item:i,dimension:a})}},L=function(e,r,a,i,o,u){var c,l=o.occupied,h=n.drawMask;h&&(c=t[0].getContext(\"2d\"),c.save(),c.fillStyle=n.maskColor);var d;if(S){var g=o.bounds;d={x:(e+g[3])*p,y:(r+g[0])*p,w:(g[1]-g[3]+1)*p,h:(g[2]-g[0]+1)*p}}for(var m=l.length;m--;){var v=e+l[m][0],y=r+l[m][1];v>=s||y>=f||0>v||0>y||z(v,y,h,d,u)}h&&c.restore()},D=function(t){var e,r,a;Array.isArray(t)?(e=t[0],r=t[1]):(e=t.word,r=t.weight,a=t.attributes);var i=F(),o=P(e,r,i);if(!o)return!1;if(A())return!1;if(!n.drawOutOfBound){var c=o.bounds;if(c[1]-c[3]+1>s||c[2]-c[0]+1>f)return!1}for(var l=d+1,h=function(n){var u=Math.floor(n[0]-o.gw/2),c=Math.floor(n[1]-o.gh/2),s=o.gw,f=o.gh;return R(u,c,s,f,o.occupied)?(O(u,c,o,e,r,d-l,n[2],i,a),L(u,c,s,f,o,t),{gx:u,gy:c,rot:i,info:o}):!1};l--;){var g=k(d-l);n.shuffle&&(g=[].concat(g),u(g));for(var m=0;m<g.length;m++){var p=h(g[m]);if(p)return p}}return null},q=function(e,r,n){return r?!t.some(function(t){var a=document.createEvent(\"CustomEvent\");return a.initCustomEvent(e,!0,r,n||{}),!t.dispatchEvent(a)},this):void t.forEach(function(t){var a=document.createEvent(\"CustomEvent\");a.initCustomEvent(e,!0,r,n||{}),t.dispatchEvent(a)},this)},j=function(){var e=t[0];if(e.getContext)s=Math.ceil(e.width/p),f=Math.ceil(e.height/p);else{var r=e.getBoundingClientRect();s=Math.ceil(r.width/p),f=Math.ceil(r.height/p)}if(q(\"wordcloudstart\",!0)){h=n.origin?[n.origin[0]/p,n.origin[1]/p]:[s/2,f/2],d=Math.floor(Math.sqrt(s*s+f*f)),l=[];var a,i,o;if(!e.getContext||n.clearCanvas)for(t.forEach(function(t){if(t.getContext){var e=t.getContext(\"2d\");e.fillStyle=n.backgroundColor,e.clearRect(0,0,s*(p+1),f*(p+1)),e.fillRect(0,0,s*(p+1),f*(p+1))}else t.textContent=\"\",t.style.backgroundColor=n.backgroundColor,t.style.position=\"relative\"}),a=s;a--;)for(l[a]=[],i=f;i--;)l[a][i]=!0;else{var u=document.createElement(\"canvas\").getContext(\"2d\");u.fillStyle=n.backgroundColor,u.fillRect(0,0,1,1);var c=u.getImageData(0,0,1,1).data,m=e.getContext(\"2d\").getImageData(0,0,s*p,f*p).data;a=s;for(var v,y;a--;)for(l[a]=[],i=f;i--;){y=p;t:for(;y--;)for(v=p;v--;)for(o=4;o--;)if(m[4*((i*p+y)*s*p+(a*p+v))+o]!==c[o]){l[a][i]=!1;break t}l[a][i]!==!1&&(l[a][i]=!0)}m=u=c=void 0}if(n.hover||n.click){for(S=!0,a=s+1;a--;)C[a]=[];n.hover&&e.addEventListener(\"mousemove\",T),n.click&&(e.addEventListener(\"click\",N),e.addEventListener(\"touchstart\",N),e.addEventListener(\"touchend\",function(t){t.preventDefault()}),e.style.webkitTapHighlightColor=\"rgba(0, 0, 0, 0)\"),e.addEventListener(\"wordcloudstart\",function F(){e.removeEventListener(\"wordcloudstart\",F),e.removeEventListener(\"mousemove\",T),e.removeEventListener(\"click\",N),b=void 0})}o=0;var w,x;0!==n.wait?(w=window.setTimeout,x=window.clearTimeout):(w=window.setImmediate,x=window.clearImmediate);var M=function(e,r){t.forEach(function(t){t.addEventListener(e,r)},this)},I=function(e,r){t.forEach(function(t){t.removeEventListener(e,r)},this)},E=function P(){I(\"wordcloudstart\",P),x(k)};M(\"wordcloudstart\",E);var k=w(function R(){if(o>=n.list.length)return x(k),q(\"wordcloudstop\",!1),void I(\"wordcloudstart\",E);g=(new Date).getTime();var t=D(n.list[o]),e=!q(\"wordclouddrawn\",!0,{item:n.list[o],drawn:t});return A()||e?(x(k),n.abort(),q(\"wordcloudabort\",!1),q(\"wordcloudstop\",!1),void I(\"wordcloudstart\",E)):(o++,void(k=w(R,n.wait)))},n.wait)}};j()}};c.isSupported=i,c.minFontSize=o,n=[],a=function(){return c}.apply(e,n),!(void 0!==a&&(t.exports=a))}(this)},function(t,e,r){function n(t){for(var e=t.getContext(\"2d\"),r=e.getImageData(0,0,t.width,t.height),n=e.createImageData(r),a=0;a<r.data.length;a+=4){var i=r.data[a]+r.data[a+1]+r.data[a+2],o=r.data[a+3];128>o||i>384?(n.data[a]=0,n.data[a+1]=0,n.data[a+2]=0,n.data[a+3]=0):(n.data[a]=255,n.data[a+1]=255,n.data[a+2]=255,n.data[a+3]=255)}e.putImageData(n,0,0)}var a=r(2),i=r(6);r(11),r(12);var o=r(13);if(!o.isSupported)throw new Error(\"Sorry your browser not support wordCloud\");a.registerLayout(function(t,e){t.eachSeriesByType(\"wordCloud\",function(r){var u=i.getLayoutRect(r.getBoxLayoutParams(),{width:e.getWidth(),height:e.getHeight()}),c=r.getData(),l=document.createElement(\"canvas\");l.width=u.width,l.height=u.height;var s=l.getContext(\"2d\"),f=r.get(\"maskImage\");if(f)try{s.drawImage(f,0,0,l.width,l.height),n(l)}catch(h){console.error(\"Invalid mask image\"),console.error(h.toString())}var d=r.get(\"sizeRange\"),g=r.get(\"rotationRange\"),m=c.getDataExtent(\"value\"),p=Math.PI/180,v=r.get(\"gridSize\");o(l,{list:c.mapArray(\"value\",function(t,e){var r=c.getItemModel(e);return[c.getName(e),r.get(\"textStyle.normal.textSize\",!0)||a.number.linearMap(t,m,d),e]}).sort(function(t,e){return e[1]-t[1]}),fontFamily:r.get(\"textStyle.normal.fontFamily\")||r.get(\"textStyle.emphasis.fontFamily\")||t.get(\"textStyle.fontFamily\"),fontWeight:r.get(\"textStyle.normal.fontWeight\")||r.get(\"textStyle.emphasis.fontWeight\")||t.get(\"textStyle.fontWeight\"),gridSize:v,ellipticity:u.height/u.width,minRotation:g[0]*p,maxRotation:g[1]*p,clearCanvas:!f,rotateRatio:1,rotationStep:r.get(\"rotationStep\")*p,drawOutOfBound:!1,shuffle:!1,shape:r.get(\"shape\")}),l.addEventListener(\"wordclouddrawn\",function(t){var e=t.detail.item;t.detail.drawn&&r.layoutInstance.ondraw&&(t.detail.drawn.gx+=u.x/v,t.detail.drawn.gy+=u.y/v,r.layoutInstance.ondraw(e[0],e[1],e[2],t.detail.drawn))}),r.layoutInstance={ondraw:null}})})}])});\n</script>\n</head>\n\n<body>\n    <style>\n        html,\n        body,\n        #main {\n            width: 100%;\n            height: 100%;\n            margin: 0;\n        }\n    </style>\n<div id=\"93c9717a70674f2eb8365da02f8d94c5\" style=\"width:1000px;height:620px;\"></div>\n<script type=\"text/javascript\">\n    var myChart_93c9717a70674f2eb8365da02f8d94c5 = echarts.init(document.getElementById('93c9717a70674f2eb8365da02f8d94c5'));\n    var option_93c9717a70674f2eb8365da02f8d94c5 = {\n    \"title\": [\n        {\n            \"text\": \"\\u7ed8\\u5236\\u8bcd\\u4e91\",\n            \"subtext\": \"\",\n            \"left\": \"auto\",\n            \"top\": \"auto\",\n            \"textStyle\": {\n                \"color\": \"#000\",\n                \"fontSize\": 18\n            },\n            \"subtextStyle\": {\n                \"color\": \"#aaa\",\n                \"fontSize\": 12\n            }\n        }\n    ],\n    \"toolbox\": {\n        \"show\": true,\n        \"orient\": \"vertical\",\n        \"left\": \"right\",\n        \"top\": \"center\",\n        \"feature\": {\n            \"saveAsImage\": {\n                \"show\": true\n            }\n        }\n    },\n    \"_index_flag\": 552403,\n    \"tooltip\": {},\n    \"series\": [\n        {\n            \"type\": \"wordCloud\",\n            \"name\": \"\",\n            \"shape\": \"circle\",\n            \"rotationRange\": [\n                -90,\n                90\n            ],\n            \"rotationStep\": 45,\n            \"girdSize\": 20,\n            \"sizeRange\": [\n                20,\n                100\n            ],\n            \"data\": [\n                {\n                    \"name\": \"\\u5e26\\u85aa\\u5e74\\u5047\",\n                    \"value\": 145.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(129,34,149)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u7ee9\\u6548\\u5956\\u91d1\",\n                    \"value\": 115.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(153,96,102)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u80a1\\u7968\\u671f\\u6743\",\n                    \"value\": 101.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(157,49,24)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u6241\\u5e73\\u7ba1\\u7406\",\n                    \"value\": 83.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(117,155,23)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u6280\\u80fd\\u57f9\\u8bad\",\n                    \"value\": 81.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(144,35,38)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u5e74\\u5e95\\u53cc\\u85aa\",\n                    \"value\": 77.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(17,90,146)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u5f39\\u6027\\u5de5\\u4f5c\",\n                    \"value\": 72.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(14,82,102)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u5b9a\\u671f\\u4f53\\u68c0\",\n                    \"value\": 71.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(138,18,52)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u8282\\u65e5\\u793c\\u7269\",\n                    \"value\": 64.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(155,85,47)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u4e94\\u9669\\u4e00\\u91d1\",\n                    \"value\": 62.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(100,111,101)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u5c97\\u4f4d\\u664b\\u5347\",\n                    \"value\": 57.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(74,67,92)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u4e13\\u9879\\u5956\\u91d1\",\n                    \"value\": 52.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(148,64,139)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u5e74\\u5ea6\\u65c5\\u6e38\",\n                    \"value\": 42.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(136,30,59)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u9886\\u5bfc\\u597d\",\n                    \"value\": 36.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(83,11,136)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u5348\\u9910\\u8865\\u52a9\",\n                    \"value\": 35.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(110,41,99)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u4ea4\\u901a\\u8865\\u52a9\",\n                    \"value\": 30.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(128,84,72)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u5e74\\u7ec8\\u5206\\u7ea2\",\n                    \"value\": 18.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(37,144,94)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u7f8e\\u5973\\u591a\",\n                    \"value\": 14.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(131,149,53)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u5e05\\u54e5\\u591a\",\n                    \"value\": 12.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(0,38,114)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u901a\\u8baf\\u6d25\\u8d34\",\n                    \"value\": 11.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(93,119,95)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u516d\\u9669\\u4e00\\u91d1\",\n                    \"value\": 10.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(154,10,94)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u514d\\u8d39\\u73ed\\u8f66\",\n                    \"value\": 9.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(139,120,68)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u7ba1\\u7406\\u89c4\\u8303\",\n                    \"value\": 9.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(71,6,61)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u5e02\\u573a\\u53e3\\u7891\\u4f73\",\n                    \"value\": 7.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(25,40,116)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u6241\\u5e73\\u5316\\u7ba1\\u7406\",\n                    \"value\": 7.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(100,69,17)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"NLP\",\n                    \"value\": 7.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(70,43,147)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u6280\\u672f\\u9886\\u5148\",\n                    \"value\": 7.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(114,144,95)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"AI\\u4eba\\u5de5\\u667a\\u80fd\",\n                    \"value\": 7.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(129,130,78)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u664b\\u5347\\u7a7a\\u95f4\\u5927\",\n                    \"value\": 5.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(0,66,129)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"5\\u661f\\u529e\\u516c\\u73af\\u5883\",\n                    \"value\": 4.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(123,144,73)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u6280\\u672f\\u5927\\u725b\\u96c6\\u805a\",\n                    \"value\": 4.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(19,102,18)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u5e74\\u5e95\\u5956\\u91d1\",\n                    \"value\": 4.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(114,84,38)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u4eba\\u5de5\\u667a\\u80fd\",\n                    \"value\": 4.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(17,46,132)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u6210\\u957f\\u7a7a\\u95f4\",\n                    \"value\": 4.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(36,82,57)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u4e30\\u5bcc\\u6280\\u672f\\u4ea4\\u6d41\",\n                    \"value\": 4.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(17,132,152)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u4e30\\u539a\\u5e74\\u7ec8\",\n                    \"value\": 4.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(52,58,49)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u56e2\\u961f\\u725bB\",\n                    \"value\": 4.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(19,112,79)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u5f71\\u54cd\\u884c\\u4e1a\",\n                    \"value\": 3.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(52,106,18)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"Geek\\u5206\\u4eab\",\n                    \"value\": 3.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(122,0,143)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u6d77\\u5f52\\u7cbe\\u82f1\\u56e2\\u961f\",\n                    \"value\": 3.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(49,93,46)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u8282\\u65e5\\u798f\\u5229\",\n                    \"value\": 3.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(73,108,108)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u514d\\u8d39\\u5348\\u9910\",\n                    \"value\": 2.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(142,84,115)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u7845\\u8c37\\u7ba1\\u7406\\u98ce\\u683c\",\n                    \"value\": 2.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(10,10,107)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u5b66\\u6821\\u73af\\u5883\\u597d\",\n                    \"value\": 2.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(52,82,134)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"N\\u9879\\u7ecf\\u8d39\",\n                    \"value\": 2.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(83,6,102)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u671d\\u5341\\u665a\\u516d\",\n                    \"value\": 2.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(108,47,135)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u5468\\u672b\\u53cc\\u4f11\",\n                    \"value\": 2.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(54,128,99)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u5c31\\u8fd1\\u79df\\u623f\\u8865\\u8d34\",\n                    \"value\": 2.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(154,51,126)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u6587\\u5316open\",\n                    \"value\": 2.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(124,75,20)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u6280\\u672f\\u5927\\u5496\\u4e91\\u96c6\",\n                    \"value\": 2.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(128,151,160)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u4e0b\\u5348\\u8336\",\n                    \"value\": 2.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(101,122,15)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"13~15\\u85aa\",\n                    \"value\": 2.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(67,69,35)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u96f6\\u98df\\u6c34\\u679c\\u4f9b\\u5e94\",\n                    \"value\": 2.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(10,134,93)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u5927\\u6570\\u636e\",\n                    \"value\": 2.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(96,61,16)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u516c\\u53f8\\u5348\\u665a\\u9910\",\n                    \"value\": 2.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(8,85,11)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u521b\\u65b0\\u524d\\u6cbf\",\n                    \"value\": 2.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(26,104,64)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u5de5\\u7a0b\\u5e08\\u6587\\u5316\",\n                    \"value\": 2.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(38,144,96)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"SaaS\\u5e73\\u53f0\",\n                    \"value\": 2.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(13,110,84)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u4e30\\u539a\\u5e74\\u7ec8\\u5956\",\n                    \"value\": 2.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(124,103,18)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u7845\\u8c37\\u8303\\u513f\",\n                    \"value\": 2.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(41,16,53)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u6700\\u4f18\\u79c0\\u7684\\u4f19\\u4f34\",\n                    \"value\": 2.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(27,16,130)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u8206\\u60c5\\u76d1\\u6d4b\",\n                    \"value\": 2.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(53,139,27)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u6c1b\\u56f4\\u8f7b\\u677e\",\n                    \"value\": 2.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(39,141,80)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u80fd\\u529b\\u5b9a\\u85aa\",\n                    \"value\": 2.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(157,148,11)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u5e74\\u8f7b\\u56e2\\u961f\",\n                    \"value\": 2.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(139,34,30)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u524d\\u6cbf\\u79d1\\u6280\",\n                    \"value\": 2.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(147,156,133)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u6301\\u7eed\\u76c8\\u5229\",\n                    \"value\": 2.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(92,10,110)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u5348\\u9910\\u4ea4\\u901a\\u8865\\u52a9\",\n                    \"value\": 2.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(47,153,73)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u5927\\u725b\\u5e26\\u961f\",\n                    \"value\": 2.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(115,150,87)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u5927\\u53a8\\u5b9a\\u5236\\u4e09\\u9910\",\n                    \"value\": 2.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(116,114,12)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u5c0a\\u91cd\\u4e2a\\u6027\",\n                    \"value\": 2.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(24,97,99)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u56fd\\u9645\\u9f99\\u5934\\u4f01\\u4e1a\",\n                    \"value\": 2.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(123,28,74)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u6ce8\\u91cd\\u6210\\u957f\",\n                    \"value\": 2.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(125,45,8)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u745c\\u4f3d\\u623f\",\n                    \"value\": 2.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(17,15,65)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u8865\\u5145\\u516c\\u79ef\\u91d1\",\n                    \"value\": 2.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(64,46,30)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u6781\\u5ba2\\u6c1b\\u56f4\",\n                    \"value\": 2.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(111,150,66)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u9ad8\\u989d\\u516d\\u9669\\u4e00\\u91d1\",\n                    \"value\": 2.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(144,159,9)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u6295\\u8d44\\u673a\\u4f1a\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(125,35,110)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u5065\\u8eab\\u623f\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(71,112,79)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u81ea\\u5e26\\u5149\\u73af\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(100,52,95)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u56fd\\u9645\\u6807\\u51c6\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(88,1,127)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u505a\\u4e94\\u4f11\\u4e8c\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(73,100,129)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u8ba1\\u7b97\\u673a\\u8f6f\\u4ef6\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(154,58,124)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u6ca1\\u6709996\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(57,155,13)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"Mac\\u9ad8\\u914d\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(16,119,14)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u6c34\\u679c\\u96f6\\u98df\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(4,15,121)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u52a0\\u73ed\\u8865\\u8d34\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(50,32,87)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u5168\\u7403\\u5316\\u89c6\\u91ce\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(34,124,80)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"MAC\\u73af\\u5883\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(3,151,15)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u5f39\\u6027\\u5de5\\u4f5c\\u65f6\\u95f4\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(5,22,5)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u5b9a\\u671f\\u57f9\\u8bad\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(133,119,58)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u79d1\\u6280\\u5927\\u725b\\u516c\\u53f8\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(63,58,22)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u5e74\\u7ec8\\u591a\\u85aa\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(21,98,119)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u671f\\u6743\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(77,16,12)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u534a\\u5e74\\u8c03\\u85aa\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(93,64,85)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u6539\\u53d8\\u4e16\\u754c\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(26,2,111)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u4f18\\u79c0\\u540c\\u4e8b\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(76,2,117)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u81ea\\u52a9\\u4e09\\u9910\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(117,66,96)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u6709\\u7231\\u5927\\u5bb6\\u5ead\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(46,107,9)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u90e8\\u95e8\\u65c5\\u6e38\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(10,134,33)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u6708\\u5ea6\\u7ee9\\u6548\\u5956\\u91d1\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(1,100,41)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u73af\\u5883\\u8212\\u9002\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(105,55,149)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"Geek\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(158,33,33)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u8f66\\u5382\\u5408\\u4f5c\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(12,62,8)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u5c0f\\u800c\\u7f8e\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(17,91,0)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u9876\\u7ea7\\u98ce\\u6295\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(95,48,30)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u98ce\\u53e3\\u884c\\u4e1a\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(133,125,23)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u7a0b\\u5e8f\\u733f\\u5360\\u516b\\u6210\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(34,33,84)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u4e0e\\u5927\\u725b\\u5171\\u4e8b\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(86,138,1)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u5e74\\u7ec8\\u5956\\u91d1\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(126,151,11)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u514d\\u8d39\\u6309\\u6469\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(34,81,118)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u7845\\u8c37\\u6280\\u672f\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(127,51,11)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u5927\\u6570\\u636e+AI\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(7,59,55)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u7f8e\\u5973\\u5982\\u4e91\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(48,59,117)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u793e\\u533ao2o\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(133,19,160)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u4f4f\\u623f\\u8865\\u52a9\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(42,32,51)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u798f\\u5229\\u5065\\u5168\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(52,128,75)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u963f\\u91cc\\u7cfb\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(84,78,21)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u4e09\\u9910\\u5168\\u5305\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(82,23,26)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u5496\\u5561\\u8865\\u8d34\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(40,57,78)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u4e00\\u624b\\u5185\\u63a8\\u4fe1\\u606f\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(108,98,152)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u516c\\u53f8\\u6709\\u5c0f\\u53a8\\u623f\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(89,52,10)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u6d77\\u5f52\\u56e2\\u961f\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(11,152,145)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u9876\\u914dMac\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(8,92,8)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u5e74\\u7ec8\\u5956\\u8d85\\u591a\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(89,59,82)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u5f00\\u653e\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(106,64,69)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u5de5\\u4f5c\\u5c45\\u4f4f\\u8bc1\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(84,99,122)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u56e2\\u961f\\u878d\\u6d3d\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(34,122,157)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u540d\\u4f01\\u4fdd\\u9762\\u8bd5\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(146,107,136)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u4e92\\u8054\\u7f51\\u91d1\\u878d\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(2,8,56)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u82b1\\u5f0f\\u4e0b\\u5348\\u8336\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(37,155,104)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u660e\\u661f\\u56e2\\u961f\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(101,40,67)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u8282\\u65e5\\u793c\\u54c1\\u5361\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(127,31,109)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u5927\\u516c\\u53f8\\uff0c\\u7a33\\u5b9a\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(108,12,5)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u53d1\\u5c55\\u524d\\u666f\\u597d\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(14,152,3)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u51fa\\u56fd\\u65c5\\u6e38\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(43,147,41)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u63d0\\u4f9b\\u4f4f\\u5bbf\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(66,28,22)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u5927\\u725b\\u8d85\\u591a\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(20,153,119)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u7cbe\\u51c6\\u9ad8\\u6548\\u5bf9\\u63a5\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(53,117,7)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u5ab2\\u7f8e\\u540d\\u4f01\\u9ad8\\u85aa\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(125,37,143)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u5168\\u5458\\u6301\\u80a1\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(89,79,145)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u7ee9\\u6548\\u5956\\u91d1\\u591a\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(64,14,127)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u5b66\\u9738\\u5927\\u96c6\\u5408\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(71,71,7)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u5176\\u4ed6\\u516c\\u53f8\\u80a1\\u7968\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(40,115,29)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u6708\\u5ea6\\u56e2\\u5efa\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(18,118,96)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u9876\\u914d\\u8bbe\\u5907\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(71,60,94)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u539f\\u59cb\\u80a1\\u6743\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(118,106,127)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u725b\\u4eba\\u591a\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(45,131,60)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u4e1a\\u52a1\\u9910\\u8865\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(119,103,76)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u6d77\\u5916\\u65c5\\u6e38\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(59,21,5)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u4e91\\u8ba1\\u7b97\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(23,13,102)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u8db3\\u7403\\u573a\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(16,8,66)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u8c6a\\u534e\\u56e2\\u961f\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(151,121,64)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u4e30\\u76db\\u4e09\\u9910\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(82,88,83)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u56fd\\u9645\\u5316\\u7ba1\\u7406\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(71,95,100)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u65e0\\u9650\\u91cf\\u96f6\\u98df\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(121,12,95)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u654f\\u6377\\u5f00\\u53d1\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(114,144,119)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u4e92\\u8054\\u7f51+\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(56,110,112)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u9879\\u76ee\\u5956\\u91d1\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(139,24,56)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u5f39\\u6027\\u5de5\\u4f5c\\u5236\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(28,82,65)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u96f6\\u98df\\u81ea\\u53d6\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(105,137,116)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u9876\\u7ea7\\u6280\\u672f\\u56e2\\u961f\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(50,21,53)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u56e2\\u961f\\u6709\\u8da3\\u9ad8\\u6548\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(53,0,107)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u5b66\\u4e60\\u578b\\u7ec4\\u7ec7\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(36,60,55)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u53d1\\u5c55\\u7a7a\\u95f4\\u5927\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(156,121,52)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u4e1a\\u754c\\u5927\\u725b\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(63,107,80)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u6b63\\u80fd\\u91cf\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(38,26,1)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u9876\\u5c16\\u56e2\\u961f\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(69,147,91)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u5b8c\\u6210E\\u8f6e\\u878d\\u8d44\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(138,124,123)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u9ad8\\u85aa\\u65e0\\u8282\\u64cd\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(3,10,124)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u9ad8\\u901f\\u53d1\\u5c55\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(128,89,78)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u514d\\u8d39\\u5305\\u9910\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(130,89,108)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u8d85\\u957f\\u5e26\\u85aa\\u5047\\u671f\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(141,116,32)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u730e\\u5934\\u4e13\\u4e1a\\u670d\\u52a1\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(16,73,66)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u9ad8\\u6210\\u957f\\u6027\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(17,142,111)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u67b6\\u6784\\u4f18\\u5316\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(129,58,16)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u65e0\\u4eba\\u9a7e\\u9a76\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(3,7,79)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u5168\\u7403\\u5e02\\u573a\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(131,44,68)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"15\\u5929\\u5e74\\u5047\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(0,105,66)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u590d\\u5f0f\\u5927\\u522b\\u5885\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(8,141,73)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u91cd\\u804c\\u4e1a\\u89c4\\u5212\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(1,58,38)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u5bb6\\u5ead\\u5f0f\\u4e09\\u9910\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(123,78,110)\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"\\u9876\\u7ea7\\u79d1\\u5b66\\u5bb6\",\n                    \"value\": 1.0,\n                    \"textStyle\": {\n                        \"normal\": {\n                            \"color\": \"rgb(44,105,1)\"\n                        }\n                    }\n                }\n            ]\n        }\n    ],\n    \"legend\": [\n        {\n            \"data\": []\n        }\n    ],\n    \"backgroundColor\": \"#fff\"\n};\n    myChart_93c9717a70674f2eb8365da02f8d94c5.setOption(option_93c9717a70674f2eb8365da02f8d94c5);\n</script>\n</body>\n\n</html>\n"},{"title":"拉勾网可视化分析","url":"/2019/12/24/拉勾网可视化分析/","content":"\n\n\n\n\n```\n# 原作者链接：https://www.jianshu.com/p/24913ef14750\nimport json\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nplt.rcParams['font.sans-serif'] = ['SimHei']  # 用来正常显示中文标签\nplt.rcParams['axes.unicode_minus'] = False  # 用来正常显示负号\n%matplotlib inline\n\ndf=pd.read_csv(\"lagou.csv\",)\n\ndata=df[df[\"companyLabelList\"]!=\"[]\"]\ndata[\"companyLabelList\"].value_counts()[:20].plot(kind=\"barh\")\nplt.show()   #显示图片\n```\n\n\n![png](output_0_0.png)\n\n\n\n```\nimport json\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nplt.rcParams['font.sans-serif'] = ['SimHei']  # 用来正常显示中文标签\nplt.rcParams['axes.unicode_minus'] = False  # 用来正常显示负号\n%matplotlib inline\n\n\ndf=pd.read_csv(\"lagou.csv\",)\ndf.info()#没有缺失值\n```\n\n    <class 'pandas.core.frame.DataFrame'>\n    RangeIndex: 450 entries, 0 to 449\n    Data columns (total 11 columns):\n    positionId          450 non-null int64\n    city                450 non-null object\n    companyFullName     450 non-null object\n    companyLabelList    450 non-null object\n    district            450 non-null object\n    education           450 non-null object\n    firstType           450 non-null object\n    formatCreateTime    450 non-null object\n    positionName        450 non-null object\n    salary              450 non-null object\n    workYear            450 non-null object\n    dtypes: int64(1), object(10)\n    memory usage: 38.8+ KB\n    \n\n\n```\n# 城市python岗位的需求量\nimport seaborn as sns\ncount_by_city=df.groupby([\"city\"])[\"city\"].count()\n\nax=plt.figure(figsize=(10,8)).add_subplot(111)\nsns.barplot(count_by_city.index, count_by_city.values, alpha=0.8)\nax.set_ylim([0,200])\nax.set_xlabel(\"城市\",fontsize=20)\nax.set_ylabel(\"职位数量\",fontsize=20)\nax.set_title('城市python岗位的需求量', size=24)\n\nfor x,y in zip(range(len(df)),count_by_city.values):\n    ax.text(x,y,\"%d\"%y,ha=\"center\",va=\"bottom\",fontsize=16,color=\"r\")\n```\n\n\n![png](output_2_0.png)\n\n\n\n```\n# 取最小值为薪酬值\nimport seaborn as sns\n\ndef avg_salary(salary):\n    salary_list = salary.split('-')\n    salary_min = salary_list[0][:-1]\n    return salary_min\n\ndf['salary_min'] = df['salary'].apply(avg_salary).astype(int)\n\nax4 = plt.figure(figsize=(10, 6)).add_subplot(111)\nsns.distplot(df['salary_min'], kde=False, bins=30)\nax4.set_title('薪酬分布', fontsize=22)\nax4.set_xlabel('薪酬（K/月）', fontsize=18)\nax4.set_xticks(range(5, 60, 5))\nplt.show()\n```\n\n\n![png](output_3_0.png)\n\n\n\n```\n# 学历要求\ncount_by_education=df[\"education\"].value_counts()\n\nax8 = plt.figure(figsize=(10, 8)).add_subplot(111)\nsns.barplot(count_by_education.index, count_by_education.values, alpha=0.8)\nax8.set_title('学历要求分布', fontsize=22)\nax8.set_xlabel('学历', fontsize=20)\nax8.set_ylabel('')\n\nfor x,y in zip(range(4),count_by_education.values):\n    ax8.text(x,y,\"%d\"%y,ha=\"center\",va=\"bottom\",fontsize=16,color=\"r\")\n```\n\n\n![png](output_4_0.png)\n\n\n\n```\n# 薪酬比较\ngroup_by_city = df.groupby(['city'])['salary_min']\ndf_city = []\nfor group in count_by_city.index:\n    v = group_by_city.get_group(group).values\n    df_city.append(v)\n\nax5 = plt.figure(figsize=(15, 6)).add_subplot(111)\nsns.boxplot(data=df_city)\nax5.set_xticklabels(count_by_city.index, fontsize=15)\nax5.set_title('薪酬比较', fontsize=22)\nax5.set_ylabel('薪酬K/月', fontsize=20)\nplt.show()\n```\n\n\n![png](output_5_0.png)\n\n\n\n```\n# 待遇福利\nimport re\nimport pyecharts\nfrom pyecharts import WordCloud\n\ntmp_list=[]\ndef resolution(companyLabelList):#分解\n    c_list = companyLabelList.split(',')\n    for i in c_list:\n        cc = i.replace(\"'\",\"\").replace(\"[\",\"\").replace(\"]\",\"\")\n        if cc !=\"\":\n            tmp_list.append(cc.strip())\ncompanyLabelList=df[df[\"companyLabelList\"]!=\"[]\"][\"companyLabelList\"].apply(resolution)\nword = pd.Series(tmp_list).value_counts()\n\nmyWordCloud = WordCloud(\"绘制词云\",width=1000, height=620)\nmyWordCloud.add(\"\",word.index,word.values,word_size_range=[20,100])\nmyWordCloud.render(path='5-01权重词云.html')\n```\n","categories":["Python"]},{"title":"Python分析 oj 网的题目难度和通过率的关系","url":"/2019/12/15/Python分析 oj 网的题目难度和通过率的关系/","content":"\n```python\n# coding=utf-8\nimport csv\nimport json\nimport requests\nimport gevent\nfrom gevent.queue import Queue\n# 原作链接：http://www.likecs.com/default/index/show?id=51226\n# 自己的网站：https://mixintu.github.io/\nq = Queue( )\n\n\ndef fetch(url):  # 获取源码\n    print(\"get: {}\".format(url))\n    response = requests.get(url)\n    assert response.status_code == 200\n    return parse(response)\n\n\ndef parse(response):  # 解析数据\n    items = []\n    data = json.loads(response.text)['data']['results']\n    if data:\n        for i in range(len(data)):\n            item = {}\n            submissionNo = int(data[i]['submission_number'])\n            acceptedNo = int(data[i]['accepted_number'])\n            try:\n                passingRate = round((acceptedNo / submissionNo) * 100, 2)\n            except ZeroDivisionError as e:\n                passingRate = 0\n\n            item['编号'] = data[i]['_id']\n            item['标题'] = data[i]['title']\n            item['难度'] = data[i]['difficulty']\n            item['提交量'] = submissionNo\n            item['正确数'] = acceptedNo\n            item['正确率'] = f\"{passingRate}%\"\n            items.append(item)\n    q.put(items)\n    gevent.sleep(0)\n\n\ndef save_csv(number):  # 保存至csv文件\n    \"\"\"\n    另外的csv写入方式：https://mixintu.github.io/2019/11/14/lagou/\n    \"\"\"\n    headers = ['编号', '标题', '难度', '提交量', '正确数', '正确率']\n    with open('qiye.csv', 'w', encoding = \"utf-8\") as f:\n        f_scv = csv.DictWriter(f, fieldnames = headers)\n        f_scv.writeheader( )\n        for _ in range(number):\n            items = q.get( )\n            f_scv.writerows(items)\n            print(items)\n\n\nif __name__ == \"__main__\":\n    # 使用gevent实现协程-----------------------------------------------\n    number = 11\n    baseurl = 'http://oj.dgut.edu.cn/api/xproblem/?limit=20&offset={0}'\n    urls = [baseurl.format(i * 20) for i in range(0, number)]\n    jobs = [gevent.spawn(fetch, url) for url in urls]\n    gevent.joinall(jobs)\n    # 打印或保存数据---------------------------------------------------\n    save_csv(number)\n```\n\n    get: http://oj.dgut.edu.cn/api/xproblem/?limit=20&offset=0\n    get: http://oj.dgut.edu.cn/api/xproblem/?limit=20&offset=20\n    get: http://oj.dgut.edu.cn/api/xproblem/?limit=20&offset=40\n    get: http://oj.dgut.edu.cn/api/xproblem/?limit=20&offset=60\n    get: http://oj.dgut.edu.cn/api/xproblem/?limit=20&offset=80\n    get: http://oj.dgut.edu.cn/api/xproblem/?limit=20&offset=100\n    get: http://oj.dgut.edu.cn/api/xproblem/?limit=20&offset=120\n    get: http://oj.dgut.edu.cn/api/xproblem/?limit=20&offset=140\n    get: http://oj.dgut.edu.cn/api/xproblem/?limit=20&offset=160\n    get: http://oj.dgut.edu.cn/api/xproblem/?limit=20&offset=180\n    get: http://oj.dgut.edu.cn/api/xproblem/?limit=20&offset=200\n    [{'编号': '1', '标题': '2^k进制数', '难度': '中等', '提交量': 274, '正确数': 72, '正确率': '26.28%'}, {'编号': '4', '标题': '马拦过河卒', '难度': '中等', '提交量': 288, '正确数': 133, '正确率': '46.18%'}, {'编号': '5', '标题': '产生数', '难度': '困难', '提交量': 310, '正确数': 33, '正确率': '10.65%'}, {'编号': '6', '标题': '【排队买票】', '难度': '中等', '提交量': 445, '正确数': 194, '正确率': '43.6%'}, {'编号': '9', '标题': '【C语言训练】计算t=1+1/2+1/3+...+1/n', '难度': '中等', '提交量': 1522, '正确数': 514, '正确率': '33.77%'}, {'编号': '10', '标题': '检查一个数是否为质数', '难度': '中等', '提交量': 1268, '正确数': 549, '正确率': '43.3%'}, {'编号': '11', '标题': '【C语言训练】素数问题', '难度': '中等', '提交量': 1087, '正确数': 504, '正确率': '46.37%'}, {'编号': '15', '标题': '【C语言训练】求矩阵的两对角线上的元素之和', '难度': '中等', '提交量': 730, '正确数': 350, '正确率': '47.95%'}, {'编号': '16', '标题': '【C语言训练】求素数问题', '难度': '中等', '提交量': 1137, '正确数': 420, '正确率': '36.94%'}, {'编号': '17', '标题': '众数问题', '难度': '中等', '提交量': 651, '正确数': 311, '正确率': '47.77%'}, {'编号': '18', '标题': '复数加法', '难度': '简单', '提交量': 523, '正确数': 342, '正确率': '65.39%'}, {'编号': '20', '标题': 'C语言程序设计教程（第三版）课后习题4.8', '难度': '中等', '提交量': 624, '正确数': 286, '正确率': '45.83%'}, {'编号': '23', '标题': '多输入输出练习1', '难度': '中等', '提交量': 571, '正确数': 241, '正确率': '42.21%'}, {'编号': '24', '标题': '麦森数', '难度': '困难', '提交量': 79, '正确数': 11, '正确率': '13.92%'}, {'编号': '25', '标题': '求组合数', '难度': '中等', '提交量': 378, '正确数': 200, '正确率': '52.91%'}, {'编号': '26', '标题': '文科生的悲哀', '难度': '中等', '提交量': 328, '正确数': 116, '正确率': '35.37%'}, {'编号': '27', '标题': '【C语言训练】计算：t=1-1/(2*2)-1/(3*3)-...-1/(m*m)', '难度': '中等', '提交量': 712, '正确数': 353, '正确率': '49.58%'}, {'编号': '28', '标题': '明明的随机数', '难度': '中等', '提交量': 539, '正确数': 194, '正确率': '35.99%'}, {'编号': '31', '标题': 'K-进制数', '难度': '中等', '提交量': 91, '正确数': 33, '正确率': '36.26%'}, {'编号': '33', '标题': '【作业调度方案】', '难度': '中等', '提交量': 11, '正确数': 10, '正确率': '90.91%'}]\n    [{'编号': '35', '标题': '【C语言训练】角谷猜想', '难度': '简单', '提交量': 585, '正确数': 342, '正确率': '58.46%'}, {'编号': '38', '标题': '数列问题', '难度': '中等', '提交量': 545, '正确数': 283, '正确率': '51.93%'}, {'编号': '39', '标题': '【C语言训练】斐波纳契数列', '难度': '中等', '提交量': 897, '正确数': 350, '正确率': '39.02%'}, {'编号': '40', '标题': '神奇的fans', '难度': '困难', '提交量': 544, '正确数': 136, '正确率': '25.0%'}, {'编号': '41', '标题': '假币问题', '难度': '困难', '提交量': 464, '正确数': 78, '正确率': '16.81%'}, {'编号': '43', '标题': '奖学金', '难度': '中等', '提交量': 190, '正确数': 65, '正确率': '34.21%'}, {'编号': '45', '标题': '【C语言训练】排序问题<2>', '难度': '中等', '提交量': 590, '正确数': 270, '正确率': '45.76%'}, {'编号': '47', '标题': '2^k进制数', '难度': '简单', '提交量': 46, '正确数': 33, '正确率': '71.74%'}, {'编号': '48', '标题': '使用栈实现进制转换', '难度': '简单', '提交量': 91, '正确数': 52, '正确率': '57.14%'}, {'编号': '49', '标题': '半数集问题', '难度': '中等', '提交量': 64, '正确数': 23, '正确率': '35.94%'}, {'编号': '51', '标题': '【矩阵】', '难度': '中等', '提交量': 14, '正确数': 9, '正确率': '64.29%'}, {'编号': '53', '标题': '【偶数求和】', '难度': '中等', '提交量': 271, '正确数': 139, '正确率': '51.29%'}, {'编号': '54', '标题': '【亲和数】', '难度': '简单', '提交量': 339, '正确数': 233, '正确率': '68.73%'}, {'编号': '55', '标题': 'Cylinder', '难度': '简单', '提交量': 35, '正确数': 21, '正确率': '60.0%'}, {'编号': '56', '标题': '最小公倍数', '难度': '简单', '提交量': 749, '正确数': 392, '正确率': '52.34%'}, {'编号': '57', '标题': '取石子游戏', '难度': '中等', '提交量': 74, '正确数': 23, '正确率': '31.08%'}, {'编号': '59', '标题': '【金明的预算方案】', '难度': '中等', '提交量': 18, '正确数': 1, '正确率': '5.56%'}, {'编号': '60', '标题': '孤独的骑士', '难度': '中等', '提交量': 215, '正确数': 76, '正确率': '35.35%'}, {'编号': '61', '标题': '简单的事情', '难度': '中等', '提交量': 296, '正确数': 132, '正确率': '44.59%'}, {'编号': '62', '标题': '三角形', '难度': '中等', '提交量': 160, '正确数': 49, '正确率': '30.63%'}]\n    [{'编号': '63', '标题': '【回文数(二)】', '难度': '中等', '提交量': 102, '正确数': 38, '正确率': '37.25%'}, {'编号': '64', '标题': '【魔板】', '难度': '中等', '提交量': 13, '正确数': 7, '正确率': '53.85%'}, {'编号': '65', '标题': '【数组的距离】', '难度': '简单', '提交量': 392, '正确数': 194, '正确率': '49.49%'}, {'编号': '67', '标题': '筛排处理', '难度': '中等', '提交量': 368, '正确数': 103, '正确率': '27.99%'}, {'编号': '68', '标题': '循环数', '难度': '中等', '提交量': 15, '正确数': 1, '正确率': '6.67%'}, {'编号': '70', '标题': '上车人数', '难度': '简单', '提交量': 110, '正确数': 65, '正确率': '59.09%'}, {'编号': '72', '标题': '【求[X,Y]内被除3余1并且被除5余3的整数的和】', '难度': '简单', '提交量': 329, '正确数': 276, '正确率': '83.89%'}, {'编号': '73', '标题': '【计算直线的交点数】', '难度': '中等', '提交量': 47, '正确数': 20, '正确率': '42.55%'}, {'编号': '74', '标题': '最多约数问题', '难度': '困难', '提交量': 130, '正确数': 1, '正确率': '0.77%'}, {'编号': '75', '标题': '独木桥', '难度': '困难', '提交量': 43, '正确数': 1, '正确率': '2.33%'}, {'编号': '76', '标题': '级数求和', '难度': '中等', '提交量': 446, '正确数': 213, '正确率': '47.76%'}, {'编号': '77', '标题': '数列有序', '难度': '困难', '提交量': 489, '正确数': 115, '正确率': '23.52%'}, {'编号': '78', '标题': '【C语言训练】计算一个整数N的阶乘', '难度': '简单', '提交量': 655, '正确数': 364, '正确率': '55.57%'}, {'编号': '79', '标题': '复数乘积', '难度': '简单', '提交量': 286, '正确数': 209, '正确率': '73.08%'}, {'编号': '80', '标题': '年会', '难度': '中等', '提交量': 1, '正确数': 1, '正确率': '100.0%'}, {'编号': '81', '标题': '开心的金明', '难度': '中等', '提交量': 54, '正确数': 30, '正确率': '55.56%'}, {'编号': '82', '标题': '【出圈】', '难度': '中等', '提交量': 179, '正确数': 65, '正确率': '36.31%'}, {'编号': '83', '标题': '整除的尾数', '难度': '中等', '提交量': 254, '正确数': 91, '正确率': '35.83%'}, {'编号': '85', '标题': '【密码】', '难度': '中等', '提交量': 268, '正确数': 88, '正确率': '32.84%'}, {'编号': '86', '标题': '盐水的故事', '难度': '中等', '提交量': 245, '正确数': 106, '正确率': '43.27%'}]\n    [{'编号': '87', '标题': '【C语言训练】求函数值', '难度': '简单', '提交量': 431, '正确数': 319, '正确率': '74.01%'}, {'编号': '88', '标题': '数字统计', '难度': '简单', '提交量': 218, '正确数': 142, '正确率': '65.14%'}, {'编号': '90', '标题': '小教官', '难度': '中等', '提交量': 2, '正确数': 2, '正确率': '100.0%'}, {'编号': '92', '标题': '【C语言训练】最大数问题', '难度': '中等', '提交量': 675, '正确数': 208, '正确率': '30.81%'}, {'编号': '93', '标题': '【C语言训练】\"水仙花数\"问题1', '难度': '简单', '提交量': 609, '正确数': 328, '正确率': '53.86%'}, {'编号': '94', '标题': '金明的预算方案', '难度': '中等', '提交量': 13, '正确数': 11, '正确率': '84.62%'}, {'编号': '95', '标题': '平方和与立方和', '难度': '中等', '提交量': 293, '正确数': 129, '正确率': '44.03%'}, {'编号': '96', '标题': '青年歌手大奖赛_评委会打分', '难度': '简单', '提交量': 258, '正确数': 144, '正确率': '55.81%'}, {'编号': '97', '标题': 'Ecological Bin Packing', '难度': '中等', '提交量': 4, '正确数': 3, '正确率': '75.0%'}, {'编号': '98', '标题': '老王赛马', '难度': '中等', '提交量': 70, '正确数': 32, '正确率': '45.71%'}, {'编号': '99', '标题': '统计立方数', '难度': '简单', '提交量': 391, '正确数': 218, '正确率': '55.75%'}, {'编号': '100', '标题': '【C语言训练】自由落体问题', '难度': '中等', '提交量': 538, '正确数': 254, '正确率': '47.21%'}, {'编号': '102', '标题': '【简单计算】', '难度': '困难', '提交量': 98, '正确数': 21, '正确率': '21.43%'}, {'编号': '103', '标题': '愚蠢的摄影师', '难度': '中等', '提交量': 32, '正确数': 16, '正确率': '50.0%'}, {'编号': '104', '标题': '【计算球体积】', '难度': '中等', '提交量': 410, '正确数': 192, '正确率': '46.83%'}, {'编号': '105', '标题': '逆反的01串', '难度': '中等', '提交量': 349, '正确数': 172, '正确率': '49.28%'}, {'编号': '106', '标题': 'Jam的计数法', '难度': '中等', '提交量': 11, '正确数': 11, '正确率': '100.0%'}, {'编号': '107', '标题': '破解平方数', '难度': '中等', '提交量': 1, '正确数': 0, '正确率': '0.0%'}, {'编号': '109', '标题': '数列排序', '难度': '中等', '提交量': 182, '正确数': 61, '正确率': '33.52%'}, {'编号': '110', '标题': '【C语言训练】排序问题<1>', '难度': '简单', '提交量': 431, '正确数': 249, '正确率': '57.77%'}]\n    [{'编号': '111', '标题': '哥德巴赫曾猜测', '难度': '简单', '提交量': 225, '正确数': 129, '正确率': '57.33%'}, {'编号': '112', '标题': '【C语言训练】计算1~N之间所有奇数之和', '难度': '简单', '提交量': 414, '正确数': 292, '正确率': '70.53%'}, {'编号': '113', '标题': '【蟠桃记】', '难度': '简单', '提交量': 234, '正确数': 171, '正确率': '73.08%'}, {'编号': '114', '标题': '做幻方', '难度': '中等', '提交量': 59, '正确数': 21, '正确率': '35.59%'}, {'编号': '115', '标题': '考试排名', '难度': '中等', '提交量': 26, '正确数': 9, '正确率': '34.62%'}, {'编号': '116', '标题': '能量项链', '难度': '中等', '提交量': 21, '正确数': 9, '正确率': '42.86%'}, {'编号': '117', '标题': '人见人爱A+B', '难度': '简单', '提交量': 285, '正确数': 129, '正确率': '45.26%'}, {'编号': '118', '标题': '判断升序', '难度': '简单', '提交量': 211, '正确数': 139, '正确率': '65.88%'}, {'编号': '121', '标题': '防御导弹', '难度': '中等', '提交量': 151, '正确数': 39, '正确率': '25.83%'}, {'编号': '124', '标题': '最小重量机器设计问题', '难度': '中等', '提交量': 15, '正确数': 1, '正确率': '6.67%'}, {'编号': '125', '标题': '【C语言训练】立方和不等式', '难度': '简单', '提交量': 406, '正确数': 191, '正确率': '47.04%'}, {'编号': '127', '标题': '排列', '难度': '困难', '提交量': 115, '正确数': 12, '正确率': '10.43%'}, {'编号': '128', '标题': '回文数(一)', '难度': '简单', '提交量': 156, '正确数': 102, '正确率': '65.38%'}, {'编号': '129', '标题': '十->二进制转换', '难度': '中等', '提交量': 300, '正确数': 85, '正确率': '28.33%'}, {'编号': '130', '标题': '通话记录', '难度': '困难', '提交量': 132, '正确数': 34, '正确率': '25.76%'}, {'编号': '131', '标题': '母牛生小牛', '难度': '中等', '提交量': 285, '正确数': 107, '正确率': '37.54%'}, {'编号': '132', '标题': '三进制小数', '难度': '中等', '提交量': 37, '正确数': 20, '正确率': '54.05%'}, {'编号': '133', '标题': '【能量项链】', '难度': '中等', '提交量': 10, '正确数': 3, '正确率': '30.0%'}, {'编号': '135', '标题': '金额的中文大写', '难度': '中等', '提交量': 12, '正确数': 4, '正确率': '33.33%'}, {'编号': '136', '标题': '检查金币', '难度': '简单', '提交量': 84, '正确数': 47, '正确率': '55.95%'}]\n    [{'编号': '137', '标题': '化学品问题', '难度': '中等', '提交量': 50, '正确数': 18, '正确率': '36.0%'}, {'编号': '139', '标题': 'IP判断', '难度': '简单', '提交量': 161, '正确数': 81, '正确率': '50.31%'}, {'编号': '140', '标题': '人民币问题', '难度': '简单', '提交量': 139, '正确数': 110, '正确率': '79.14%'}, {'编号': '146', '标题': '最爱回文串', '难度': '中等', '提交量': 149, '正确数': 60, '正确率': '40.27%'}, {'编号': '147', '标题': '二叉树问题', '难度': '中等', '提交量': 9, '正确数': 9, '正确率': '100.0%'}, {'编号': '148', '标题': '小明的约会', '难度': '困难', '提交量': 108, '正确数': 25, '正确率': '23.15%'}, {'编号': '149', '标题': '朋友圈', '难度': '中等', '提交量': 28, '正确数': 9, '正确率': '32.14%'}, {'编号': '150', '标题': '银行业务队列', '难度': '简单', '提交量': 57, '正确数': 35, '正确率': '61.4%'}, {'编号': '151', '标题': '世界杯来了', '难度': '中等', '提交量': 37, '正确数': 13, '正确率': '35.14%'}, {'编号': '152', '标题': '我是管理员', '难度': '中等', '提交量': 47, '正确数': 18, '正确率': '38.3%'}, {'编号': '153', '标题': '中国好OJ', '难度': '中等', '提交量': 107, '正确数': 23, '正确率': '21.5%'}, {'编号': '154', '标题': '高分笔记叠罗汉', '难度': '中等', '提交量': 8, '正确数': 2, '正确率': '25.0%'}, {'编号': '155', '标题': 'ACM俱乐部大聚会', '难度': '中等', '提交量': 2, '正确数': 0, '正确率': '0.0%'}, {'编号': '156', '标题': '火爆的一乐拉面', '难度': '中等', '提交量': 113, '正确数': 50, '正确率': '44.25%'}, {'编号': '157', '标题': '哆啦A梦的口袋', '难度': '中等', '提交量': 92, '正确数': 29, '正确率': '31.52%'}, {'编号': '158', '标题': '拯救雅典娜', '难度': '简单', '提交量': 23, '正确数': 13, '正确率': '56.52%'}, {'编号': '159', '标题': '帮助名侦探', '难度': '中等', '提交量': 11, '正确数': 2, '正确率': '18.18%'}, {'编号': '160', '标题': '阻击火箭队', '难度': '中等', '提交量': 1, '正确数': 1, '正确率': '100.0%'}, {'编号': '161', '标题': 'Think Different', '难度': '简单', '提交量': 68, '正确数': 34, '正确率': '50.0%'}, {'编号': '162', '标题': '求上网', '难度': '简单', '提交量': 43, '正确数': 29, '正确率': '67.44%'}]\n    [{'编号': '163', '标题': '整理试卷', '难度': '简单', '提交量': 70, '正确数': 47, '正确率': '67.14%'}, {'编号': '164', '标题': '迷瘴', '难度': '中等', '提交量': 8, '正确数': 4, '正确率': '50.0%'}, {'编号': '165', '标题': 'ACM俱乐部密码', '难度': '中等', '提交量': 31, '正确数': 16, '正确率': '51.61%'}, {'编号': '166', '标题': '神奇的工号', '难度': '中等', '提交量': 80, '正确数': 29, '正确率': '36.25%'}, {'编号': '167', '标题': '年终大奖', '难度': '中等', '提交量': 48, '正确数': 13, '正确率': '27.08%'}, {'编号': '168', '标题': '加密', '难度': '中等', '提交量': 117, '正确数': 30, '正确率': '25.64%'}, {'编号': '169', '标题': '搞破坏', '难度': '简单', '提交量': 129, '正确数': 71, '正确率': '55.04%'}, {'编号': '170', '标题': '解密信息', '难度': '中等', '提交量': 136, '正确数': 40, '正确率': '29.41%'}, {'编号': '171', '标题': '老旧的钟表', '难度': '中等', '提交量': 41, '正确数': 16, '正确率': '39.02%'}, {'编号': '172', '标题': '数列3', '难度': '困难', '提交量': 60, '正确数': 6, '正确率': '10.0%'}, {'编号': '173', '标题': '可恶的雾霾天', '难度': '中等', '提交量': 1, '正确数': 1, '正确率': '100.0%'}, {'编号': '174', '标题': '窃贼', '难度': '简单', '提交量': 50, '正确数': 27, '正确率': '54.0%'}, {'编号': '175', '标题': 'N的阶乘', '难度': '困难', '提交量': 499, '正确数': 84, '正确率': '16.83%'}, {'编号': '176', '标题': '简单计算器 ', '难度': '困难', '提交量': 44, '正确数': 13, '正确率': '29.55%'}, {'编号': '177', '标题': '二叉排序树', '难度': '困难', '提交量': 37, '正确数': 4, '正确率': '10.81%'}, {'编号': '178', '标题': '二叉搜索树 ', '难度': '中等', '提交量': 11, '正确数': 7, '正确率': '63.64%'}, {'编号': '179', '标题': '哈夫曼树', '难度': '中等', '提交量': 10, '正确数': 6, '正确率': '60.0%'}, {'编号': '180', '标题': '浮点数加法 ', '难度': '中等', '提交量': 34, '正确数': 12, '正确率': '35.29%'}, {'编号': '181', '标题': '排序', '难度': '困难', '提交量': 227, '正确数': 3, '正确率': '1.32%'}, {'编号': '182', '标题': '成绩排序1', '难度': '中等', '提交量': 187, '正确数': 43, '正确率': '22.99%'}]\n    [{'编号': '183', '标题': '特殊排序', '难度': '困难', '提交量': 309, '正确数': 65, '正确率': '21.04%'}, {'编号': '184', '标题': '字符串内排序', '难度': '中等', '提交量': 184, '正确数': 68, '正确率': '36.96%'}, {'编号': '185', '标题': '日期差值', '难度': '困难', '提交量': 110, '正确数': 22, '正确率': '20.0%'}, {'编号': '186', '标题': '今年的第几天？', '难度': '中等', '提交量': 224, '正确数': 101, '正确率': '45.09%'}, {'编号': '187', '标题': '打印日期', '难度': '中等', '提交量': 248, '正确数': 69, '正确率': '27.82%'}, {'编号': '188', '标题': '统计同成绩学生人数', '难度': '中等', '提交量': 214, '正确数': 102, '正确率': '47.66%'}, {'编号': '190', '标题': '找x', '难度': '中等', '提交量': 324, '正确数': 95, '正确率': '29.32%'}, {'编号': '191', '标题': '打印极值点下标', '难度': '困难', '提交量': 194, '正确数': 30, '正确率': '15.46%'}, {'编号': '192', '标题': '查找1', '难度': '中等', '提交量': 166, '正确数': 70, '正确率': '42.17%'}, {'编号': '193', '标题': '还是A+B', '难度': '中等', '提交量': 186, '正确数': 53, '正确率': '28.49%'}, {'编号': '194', '标题': '守形数', '难度': '中等', '提交量': 183, '正确数': 67, '正确率': '36.61%'}, {'编号': '195', '标题': '反序数', '难度': '简单', '提交量': 300, '正确数': 147, '正确率': '49.0%'}, {'编号': '196', '标题': '又一版 A+B', '难度': '困难', '提交量': 173, '正确数': 45, '正确率': '26.01%'}, {'编号': '197', '标题': '数制转换', '难度': '中等', '提交量': 134, '正确数': 41, '正确率': '30.6%'}, {'编号': '198', '标题': '进制转换1', '难度': '中等', '提交量': 128, '正确数': 41, '正确率': '32.03%'}, {'编号': '199', '标题': '八进制', '难度': '中等', '提交量': 217, '正确数': 102, '正确率': '47.0%'}, {'编号': '200', '标题': '素数', '难度': '中等', '提交量': 322, '正确数': 82, '正确率': '25.47%'}, {'编号': '201', '标题': '质因数的个数', '难度': '简单', '提交量': 132, '正确数': 63, '正确率': '47.73%'}, {'编号': '202', '标题': '进制转换2', '难度': '困难', '提交量': 79, '正确数': 7, '正确率': '8.86%'}, {'编号': '203', '标题': '10进制 VS 2进制', '难度': '困难', '提交量': 67, '正确数': 14, '正确率': '20.9%'}]\n    [{'编号': '204', '标题': '最短路径2', '难度': '困难', '提交量': 14, '正确数': 3, '正确率': '21.43%'}, {'编号': '205', '标题': 'abc', '难度': '简单', '提交量': 232, '正确数': 132, '正确率': '56.9%'}, {'编号': '206', '标题': '全排列', '难度': '困难', '提交量': 56, '正确数': 9, '正确率': '16.07%'}, {'编号': '207', '标题': 'N阶楼梯上楼问题', '难度': '中等', '提交量': 128, '正确数': 31, '正确率': '24.22%'}, {'编号': '208', '标题': '单词替换', '难度': '中等', '提交量': 89, '正确数': 36, '正确率': '40.45%'}, {'编号': '209', '标题': '字符串去特定字符', '难度': '困难', '提交量': 284, '正确数': 58, '正确率': '20.42%'}, {'编号': '210', '标题': '判断三角形类型', '难度': '简单', '提交量': 301, '正确数': 87, '正确率': '28.9%'}, {'编号': '211', '标题': '互换最大最小数', '难度': '困难', '提交量': 376, '正确数': 88, '正确率': '23.4%'}, {'编号': '212', '标题': '数字阶梯求和', '难度': '中等', '提交量': 87, '正确数': 34, '正确率': '39.08%'}, {'编号': '213', '标题': '数组逆置', '难度': '困难', '提交量': 248, '正确数': 57, '正确率': '22.98%'}, {'编号': '214', '标题': '众数', '难度': '中等', '提交量': 153, '正确数': 54, '正确率': '35.29%'}, {'编号': '215', '标题': '百万富翁问题', '难度': '困难', '提交量': 106, '正确数': 16, '正确率': '15.09%'}, {'编号': '216', '标题': '计算两个矩阵的乘积', '难度': '中等', '提交量': 214, '正确数': 56, '正确率': '26.17%'}, {'编号': '217', '标题': '字符串链接', '难度': '简单', '提交量': 128, '正确数': 67, '正确率': '52.34%'}, {'编号': '218', '标题': 'xxx定律', '难度': '简单', '提交量': 198, '正确数': 118, '正确率': '59.6%'}, {'编号': '219', '标题': 'ZOJ', '难度': '简单', '提交量': 87, '正确数': 54, '正确率': '62.07%'}, {'编号': '220', '标题': '继续xxx定律', '难度': '中等', '提交量': 3, '正确数': 3, '正确率': '100.0%'}, {'编号': '221', '标题': '找出直系亲属', '难度': '中等', '提交量': 5, '正确数': 2, '正确率': '40.0%'}, {'编号': '222', '标题': 'Problem C', '难度': '困难', '提交量': 67, '正确数': 14, '正确率': '20.9%'}, {'编号': '223', '标题': 'Problem D', '难度': '简单', '提交量': 14, '正确数': 8, '正确率': '57.14%'}]\n    [{'编号': '224', '标题': 'Problem E', '难度': '困难', '提交量': 15, '正确数': 2, '正确率': '13.33%'}, {'编号': '225', '标题': '字符串处理', '难度': '中等', '提交量': 8, '正确数': 2, '正确率': '25.0%'}, {'编号': '226', '标题': '最短路径问题', '难度': '中等', '提交量': 4, '正确数': 2, '正确率': '50.0%'}, {'编号': '227', '标题': '反序字符串', '难度': '简单', '提交量': 150, '正确数': 91, '正确率': '60.67%'}, {'编号': '228', '标题': '成绩排序2', '难度': '简单', '提交量': 95, '正确数': 73, '正确率': '76.84%'}, {'编号': '229', '标题': '分段函数', '难度': '中等', '提交量': 232, '正确数': 95, '正确率': '40.95%'}, {'编号': '230', '标题': '整数和', '难度': '简单', '提交量': 166, '正确数': 110, '正确率': '66.27%'}, {'编号': '231', '标题': '围圈报数', '难度': '中等', '提交量': 54, '正确数': 26, '正确率': '48.15%'}, {'编号': '232', '标题': 'C语言11.6', '难度': '简单', '提交量': 128, '正确数': 97, '正确率': '75.78%'}, {'编号': '233', '标题': 'C语言11.7', '难度': '简单', '提交量': 92, '正确数': 66, '正确率': '71.74%'}, {'编号': '234', '标题': 'C语言11.8', '难度': '简单', '提交量': 118, '正确数': 68, '正确率': '57.63%'}, {'编号': '235', '标题': 'C语言11.10', '难度': '简单', '提交量': 45, '正确数': 27, '正确率': '60.0%'}, {'编号': '236', '标题': 'C语言11.12', '难度': '中等', '提交量': 43, '正确数': 17, '正确率': '39.53%'}, {'编号': '237', '标题': 'C语言11.13', '难度': '简单', '提交量': 39, '正确数': 20, '正确率': '51.28%'}, {'编号': '238', '标题': 'C语言11.14', '难度': '简单', '提交量': 32, '正确数': 26, '正确率': '81.25%'}, {'编号': '239', '标题': 'C语言12.1', '难度': '中等', '提交量': 128, '正确数': 29, '正确率': '22.66%'}, {'编号': '240', '标题': 'C语言12.2', '难度': '简单', '提交量': 18, '正确数': 16, '正确率': '88.89%'}, {'编号': '241', '标题': 'C语言12.3', '难度': '简单', '提交量': 19, '正确数': 15, '正确率': '78.95%'}, {'编号': '242', '标题': 'C语言12.4', '难度': '简单', '提交量': 17, '正确数': 13, '正确率': '76.47%'}, {'编号': '243', '标题': 'C语言12.5', '难度': '简单', '提交量': 26, '正确数': 14, '正确率': '53.85%'}]\n    [{'编号': '244', '标题': 'C语言12.6', '难度': '简单', '提交量': 41, '正确数': 26, '正确率': '63.41%'}, {'编号': '245', '标题': '算法3-7：银行排队', '难度': '中等', '提交量': 3, '正确数': 3, '正确率': '100.0%'}, {'编号': '246', '标题': '完数', '难度': '困难', '提交量': 260, '正确数': 59, '正确率': '22.69%'}, {'编号': '247', '标题': '字符串连接', '难度': '中等', '提交量': 136, '正确数': 61, '正确率': '44.85%'}, {'编号': '249', '标题': '求最大值', '难度': '中等', '提交量': 228, '正确数': 84, '正确率': '36.84%'}, {'编号': '250', '标题': 'A + B', '难度': '简单', '提交量': 59, '正确数': 34, '正确率': '57.63%'}, {'编号': '251', '标题': '数字求和', '难度': '中等', '提交量': 228, '正确数': 93, '正确率': '40.79%'}, {'编号': '252', '标题': '素数判定', '难度': '中等', '提交量': 324, '正确数': 102, '正确率': '31.48%'}, {'编号': '253', '标题': '计算表达式', '难度': '中等', '提交量': 46, '正确数': 20, '正确率': '43.48%'}, {'编号': '254', '标题': '第二题', '难度': '中等', '提交量': 9, '正确数': 1, '正确率': '11.11%'}, {'编号': '255', '标题': '统计字符', '难度': '中等', '提交量': 103, '正确数': 47, '正确率': '45.63%'}, {'编号': '256', '标题': '密码锁', '难度': '中等', '提交量': 7, '正确数': 2, '正确率': '28.57%'}, {'编号': '257', '标题': '字符串的反码', '难度': '中等', '提交量': 142, '正确数': 50, '正确率': '35.21%'}, {'编号': '259', '标题': '最长&最短文本', '难度': '中等', '提交量': 52, '正确数': 18, '正确率': '34.62%'}, {'编号': '260', '标题': '统计单词', '难度': '中等', '提交量': 127, '正确数': 38, '正确率': '29.92%'}, {'编号': '261', '标题': 'ZOJ问题', '难度': '困难', '提交量': 20, '正确数': 2, '正确率': '10.0%'}, {'编号': '262', '标题': '奥运排序问题 ', '难度': '中等', '提交量': 1, '正确数': 1, '正确率': '100.0%'}, {'编号': '263', '标题': '还是畅通工程', '难度': '困难', '提交量': 15, '正确数': 4, '正确率': '26.67%'}, {'编号': '264', '标题': '剩下的树 ', '难度': '中等', '提交量': 8, '正确数': 5, '正确率': '62.5%'}, {'编号': '265', '标题': '整数奇偶排序 ', '难度': '简单', '提交量': 92, '正确数': 55, '正确率': '59.78%'}]\n    \n\n\n```python\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport matplotlib.style as psl\n%matplotlib inline\n\npsl.use('seaborn-colorblind')    # 设置图表风格\nplt.rcParams['font.sans-serif']=['SimHei'] #用来正常显示中文标签\n\ndata=pd.read_csv(\"qiye.csv\")\ndata.head()#查看前五条数据\n```\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>编号</th>\n      <th>标题</th>\n      <th>难度</th>\n      <th>提交量</th>\n      <th>正确数</th>\n      <th>正确率</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>0</td>\n      <td>1</td>\n      <td>2^k进制数</td>\n      <td>中等</td>\n      <td>274</td>\n      <td>72</td>\n      <td>26.28%</td>\n    </tr>\n    <tr>\n      <td>1</td>\n      <td>4</td>\n      <td>马拦过河卒</td>\n      <td>中等</td>\n      <td>288</td>\n      <td>133</td>\n      <td>46.18%</td>\n    </tr>\n    <tr>\n      <td>2</td>\n      <td>5</td>\n      <td>产生数</td>\n      <td>困难</td>\n      <td>310</td>\n      <td>33</td>\n      <td>10.65%</td>\n    </tr>\n    <tr>\n      <td>3</td>\n      <td>6</td>\n      <td>【排队买票】</td>\n      <td>中等</td>\n      <td>445</td>\n      <td>194</td>\n      <td>43.6%</td>\n    </tr>\n    <tr>\n      <td>4</td>\n      <td>9</td>\n      <td>【C语言训练】计算t=1+1/2+1/3+...+1/n</td>\n      <td>中等</td>\n      <td>1522</td>\n      <td>514</td>\n      <td>33.77%</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n\n```python\ndata.describe()#统计数据信息\n```\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>编号</th>\n      <th>提交量</th>\n      <th>正确数</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>count</td>\n      <td>220.000000</td>\n      <td>220.000000</td>\n      <td>220.000000</td>\n    </tr>\n    <tr>\n      <td>mean</td>\n      <td>143.922727</td>\n      <td>197.554545</td>\n      <td>83.522727</td>\n    </tr>\n    <tr>\n      <td>std</td>\n      <td>74.688812</td>\n      <td>231.494000</td>\n      <td>105.106184</td>\n    </tr>\n    <tr>\n      <td>min</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <td>25%</td>\n      <td>80.750000</td>\n      <td>41.000000</td>\n      <td>13.750000</td>\n    </tr>\n    <tr>\n      <td>50%</td>\n      <td>152.500000</td>\n      <td>128.000000</td>\n      <td>44.000000</td>\n    </tr>\n    <tr>\n      <td>75%</td>\n      <td>208.250000</td>\n      <td>276.500000</td>\n      <td>102.250000</td>\n    </tr>\n    <tr>\n      <td>max</td>\n      <td>265.000000</td>\n      <td>1522.000000</td>\n      <td>549.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n\n```python\n# 1.作者所写\npsl.use(\"seaborn-colorblind\") # 设置图表风格\n\nlevel_values=data[\"难度\"].values\ndifficulties={\n    \"简单\":0,\n    \"中等\":0,\n    \"困难\":0,\n}\nfor value in level_values:\n    if value == '简单':\n        difficulties['简单'] += 1\n    elif value == '中等':\n        difficulties['中等'] += 1\n    else:\n        difficulties['困难'] += 1\n        \n        \nlevel=pd.Series(difficulties)\nprint(level)\nlevel.plot(kind = 'bar', figsize=(6, 7))\nplt.grid(axis='y')\nplt.show()\n```\n\n    简单     59\n    中等    128\n    困难     33\n    dtype: int64\n    \n\n\n![png](output_3_1.png)\n\n\n\n```python\n# 2.个人所写\npsl.use(\"seaborn-colorblind\") # 设置图表风格\n\nlevel=data[\"难度\"].value_counts()\nprint(level)\nlevel.plot(kind = \"bar\", figsize=(6, 7))\nplt.grid(axis=\"y\")\nplt.show()\n```\n\n    中等    128\n    简单     59\n    困难     33\n    Name: 难度, dtype: int64\n    \n\n\n![png](output_4_1.png)\n\n\n\n```python\nimport numpy as np\nfig,axes=plt.subplots(figsize=(15,6))\n\nrelation=data[[\"难度\",\"正确率\"]]\nrate_values=relation[\"正确率\"].values\naxes.scatter(rate_values,level_values)\n\nplt.grid(axis=\"y\")\nplt.xlabel(\"正确率\")\nplt.ylabel(\"难度\")\nplt.xticks([])# 关闭坐标刻度\nplt.show()\n```\n\n\n![png](output_5_0.png)\n\n","categories":["Python"]},{"title":"pandas分析CPU和内存的利用率","url":"/2019/11/28/pandas分析CPU和内存的利用率/","content":"\n\n\n\n\n```python\n# 【https://www.cnblogs.com/ratels/p/11037661.html】\nimport csv\nimport psutil\nfrom time import strftime, localtime, sleep\n\n\nflag = 1\nwith open('record.csv', 'w', newline='') as csvfile:\n    writer = csv.writer(csvfile)\n    writer.writerow([\"date\", \"cpu\", \"memory\"])\n    while flag < 20:\n        result = [(\n            strftime(\"%H:%M:%S\", localtime()),\n            psutil.cpu_percent(1),\n            psutil.virtual_memory().percent,\n        )]\n        print(result)\n        writer.writerows(result)\n        flag += 1\n        sleep(2)\nprint(\"完成\")\n```\n\n    [('19:51:23', 12.6, 65.6)]\n    [('19:51:26', 11.9, 65.5)]\n    [('19:51:29', 14.6, 66.4)]\n    [('19:51:32', 10.8, 66.4)]\n    [('19:51:35', 12.0, 65.9)]\n    [('19:51:38', 7.3, 66.0)]\n    [('19:51:41', 7.0, 66.3)]\n    [('19:51:44', 7.8, 63.8)]\n    [('19:51:47', 10.1, 63.8)]\n    [('19:51:50', 30.9, 64.8)]\n    [('19:51:53', 12.5, 66.3)]\n    [('19:51:56', 6.2, 66.1)]\n    [('19:51:59', 31.3, 68.4)]\n    [('19:52:02', 12.0, 68.9)]\n    [('19:52:05', 7.4, 68.8)]\n    [('19:52:08', 5.4, 68.3)]\n    [('19:52:11', 20.3, 68.3)]\n    [('19:52:14', 2.7, 67.9)]\n    [('19:52:17', 7.7, 67.8)]\n    完成\n    \n\n\n```python\nimport pandas as pd\nfrom pyecharts import Line\n\ndf=pd.read_csv(\"record.csv\")#读取csv文件\n\nline = Line(title = \"折线图\",width = 600,height = 420)\ndate=df[\"date\"].tolist()\ncpu=df[\"cpu\"].tolist()\nmemory=df[\"memory\"].tolist()\n\nprint('统计信息：\\n',df.describe())#统计信息\n\nline.add(name = \"CPU利用率\", x_axis = date, y_axis = cpu,\nline_width = 3,line_color = 'red',is_datazoom_show = True)\nline.add(name = \"内存利用率\", x_axis = date, y_axis = memory,\nline_width = 2,line_color = 'cyan',is_datazoom_show = True)\nline.render( '折线图示范.html')\n\nprint(\"完成\")\n```\n\n    cpu利用率平均值是：\n    12.131579\n    内存利用率平均值是：\n    66.594737\n    统计信息：\n                  cpu     memory\n    count  19.000000  19.000000\n    mean   12.131579  66.594737\n    std     7.741522   1.577084\n    min     2.700000  63.800000\n    25%     7.350000  65.750000\n    50%    10.800000  66.300000\n    75%    12.550000  68.100000\n    max    31.300000  68.900000\n    完成\n    \n\n\n\n![](折线图.png)","categories":["Python"]},{"title":"fabiaoqing","url":"/2019/11/17/fabiaoqing/","content":"\n\n\n\n```python\n# coding=utf-8\nimport time\nimport redis\nimport asyncio\nimport logging\nfrom lxml import etree\nfrom contextlib import closing\nfrom aiohttp import ClientSession\n\nlogging.basicConfig(\n    level = logging.INFO,\n    format = \"%(asctime)s [*] %(message)s\"\n)\nURL = \"https://www.fabiaoqing.com/biaoqing/lists/page/{}.html\"\n\n\n# 提取图片标题，链接\ndef parse(source_, red_):\n    try:\n        response = etree.HTML(source_)\n        tagbqppdiv = response.xpath('//div[@class=\"tagbqppdiv\"]/a')\n        for index, img in enumerate(tagbqppdiv):\n            args = (int(index + 1), img.xpath('@title')[0], img.xpath('img/@data-original')[0])\n            red_.hset(\"mixintu\", args[1], args[2])\n            logging.info('第 %d 张  标题：%r  链接：%r' % args)\n    except Exception as e:\n        print('解析详情页出错！')\n        pass\n\n\n# 获取网页源码\nasync def get_source(url_, red_):\n    try:\n        async with ClientSession( ) as session:\n            async with session.get(url_) as response:\n                source = await response.read( )\n                parse(source, red_)\n    except asyncio.CancelledError:\n        raise\n\n\nasync def main( ):\n    now = time.time( )\n    pool = redis.ConnectionPool(host = 'localhost', port = 6379, db = 1)\n    red = redis.Redis(connection_pool = pool)\n    tasks = [asyncio.ensure_future(get_source(URL.format(i), red))\n             for i in range(1, 11)]\n    # 第一种运行方式-----------------------------------\n    dones, pendings = await asyncio.wait(tasks)\n    # 已完成的协程-------------------------------------\n    # for done in dones:\n    #     logging.info(f\"已完成的协程：{done.result( )}\")\n    # 超时未完成的协程---------------------------------\n    # for pending in pendings:\n    #     logging.info(f\"超时未完成的协程  ：{pending}\")\n    #     pending.cancel( )\n\n    logging.info(f\"总用时:{time.time( ) - now}\")\n\n\nif __name__ == \"__main__\":\n    # 修改了这里\n    with closing(asyncio.get_event_loop( )) as loop:\n        loop.run_until_complete(main( ))\n\n```\n\n![](fabiaoqing.jpg)\n","categories":["Python"]},{"title":"Asyncio Queue","url":"/2019/11/15/Asyncio Queue/","content":"\n\n\n```python\nimport asyncio\nimport random\nimport time\nimport logging\nimport nest_asyncio\nnest_asyncio.apply() # 在jupyter需要这个，不然asyncio运行出错\nlogging.basicConfig(  # 用日志打印输出信息\n    level=logging.INFO,\n    format=\"%(asctime)s %(process)d %(thread)d [*] %(message)s\"\n)\n\n\nasync def newsProducer(myQueue):\n    while True:\n        await asyncio.sleep(1)\n        data = random.randint(1, 5)\n        logging.info(f\"将产品放入队列{data}\")\n        await myQueue.put(data)\n\n\nasync def newsConsumer(id, myQueue):\n    while True:\n        logging.info(\"消费者: {} 试图从队列中获取\".format(id))\n        item = await myQueue.get()\n        if item is None:\n            break\n        logging.info(\"消费者: {} 消耗了ID的商品: {}\".format(id, item))\n\n\nloop = asyncio.get_event_loop()\nmyQueue = asyncio.Queue(loop=loop, maxsize=10)\ntry:\n    loop.run_until_complete(asyncio.gather(\n        newsProducer(myQueue),\n        newsConsumer(\"A\", myQueue),\n        newsConsumer(\"B\", myQueue),\n    ))\nexcept KeyboardInterrupt:\n    asyncio.Task.all_tasks()\n    asyncio.gather(*asyncio.Task.all_tasks()).cancel()\n    loop.stop()\n    # loop.run_forever()  # 在jupyter不能手动关闭\nfinally:\n    pass\n    # loop.close()  # 在jupyter不能手动关闭\n\n```\n\n\n```python\n\n\n    2019-11-15 16:01:57,574 10912 13460 [*] 消费者: A 试图从队列中获取\n    2019-11-15 16:01:57,592 10912 13460 [*] 消费者: B 试图从队列中获取\n    2019-11-15 16:01:58,577 10912 13460 [*] 将产品放入队列1\n    2019-11-15 16:01:58,584 10912 13460 [*] 消费者: A 消耗了ID的商品: 1\n    2019-11-15 16:01:58,589 10912 13460 [*] 消费者: A 试图从队列中获取\n    2019-11-15 16:01:59,580 10912 13460 [*] 将产品放入队列4\n    2019-11-15 16:01:59,585 10912 13460 [*] 消费者: B 消耗了ID的商品: 4\n    2019-11-15 16:01:59,590 10912 13460 [*] 消费者: B 试图从队列中获取\n    2019-11-15 16:02:00,598 10912 13460 [*] 将产品放入队列1\n    2019-11-15 16:02:00,604 10912 13460 [*] 消费者: A 消耗了ID的商品: 1\n    2019-11-15 16:02:00,609 10912 13460 [*] 消费者: A 试图从队列中获取\n    2019-11-15 16:02:01,602 10912 13460 [*] 将产品放入队列2\n    2019-11-15 16:02:01,610 10912 13460 [*] 消费者: B 消耗了ID的商品: 2\n    2019-11-15 16:02:01,618 10912 13460 [*] 消费者: B 试图从队列中获取\n    2019-11-15 16:02:02,609 10912 13460 [*] 将产品放入队列2\n    2019-11-15 16:02:02,619 10912 13460 [*] 消费者: A 消耗了ID的商品: 2\n    2019-11-15 16:02:02,626 10912 13460 [*] 消费者: A 试图从队列中获取\n    2019-11-15 16:02:03,618 10912 13460 [*] 将产品放入队列1\n    2019-11-15 16:02:03,626 10912 13460 [*] 消费者: B 消耗了ID的商品: 1\n    2019-11-15 16:02:03,631 10912 13460 [*] 消费者: B 试图从队列中获取\n    2019-11-15 16:02:04,622 10912 13460 [*] 将产品放入队列5\n    2019-11-15 16:02:04,628 10912 13460 [*] 消费者: A 消耗了ID的商品: 5\n    2019-11-15 16:02:04,632 10912 13460 [*] 消费者: A 试图从队列中获取\n    2019-11-15 16:02:05,623 10912 13460 [*] 将产品放入队列3\n    2019-11-15 16:02:05,631 10912 13460 [*] 消费者: B 消耗了ID的商品: 3\n    2019-11-15 16:02:05,634 10912 13460 [*] 消费者: B 试图从队列中获取\n    \n\n```\n","categories":["Python"]},{"title":"Asyncio Losk","url":"/2019/11/15/Asyncio Losk/","content":"\n\n\n\n```python\nimport asyncio\nimport time\nimport logging\nimport nest_asyncio\nnest_asyncio.apply() # 在jupyter需要这个，不然asyncio运行出错\nlogging.basicConfig(  # 用日志打印输出信息\n    level=logging.INFO,\n    format=\"%(asctime)s %(process)d %(thread)d [*] %(message)s\"\n)\n\n\nasync def myWorker(lock, i):\n    logging.info(f\"试图获得锁定:{i}\")\n    async with lock:\n        logging.info(f\"目前已锁定:{i}\")\n        await asyncio.sleep(3)\n    logging.info(f\"解锁临界区:{i}\")\n\n\nasync def main():\n    lock = asyncio.Lock()\n    return await asyncio.wait([\n        myWorker(lock, 1),\n        myWorker(lock, 2),\n        myWorker(lock, 3),\n    ])\n\n\nif __name__ == '__main__':\n    loop = asyncio.get_event_loop()\n    try:\n        done, pending = loop.run_until_complete(main())\n        logging.info(\"所有任务完成\")\n    except KeyboardInterrupt as e:\n        logging.info(asyncio.Task.all_tasks())\n        logging.info(asyncio.gather(*asyncio.Task.all_tasks()).cancel())\n        loop.stop()\n#         loop.run_forever()  # 在jupyter不能手动关闭\n    finally:\n        pass\n#         loop.close()  # 在jupyter不能手动关闭\n\n```\n\n\n\n```python\n\n    2019-11-15 15:55:23,648 3664 12672 [*] 试图获得锁定:3\n    2019-11-15 15:55:23,651 3664 12672 [*] 目前已锁定:3\n    2019-11-15 15:55:23,652 3664 12672 [*] 试图获得锁定:1\n    2019-11-15 15:55:23,653 3664 12672 [*] 试图获得锁定:2\n    2019-11-15 15:55:26,654 3664 12672 [*] 解锁临界区:3\n    2019-11-15 15:55:26,659 3664 12672 [*] 目前已锁定:1\n    2019-11-15 15:55:29,662 3664 12672 [*] 解锁临界区:1\n    2019-11-15 15:55:29,664 3664 12672 [*] 目前已锁定:2\n    2019-11-15 15:55:32,666 3664 12672 [*] 解锁临界区:2\n    2019-11-15 15:55:32,668 3664 12672 [*] 所有任务完成\n    \n\n```\n","categories":["Python"]},{"title":"拉勾网基础数据分析","url":"/2019/11/14/lagou/","content":"\n\n\n\n\nMore info: [原作者的链接](https://zhuanlan.zhihu.com/p/65081383)\n\n## 1.下载数据\n\n\n``` python\n# coding=utf-8\nimport requests\nimport csv\n\n\ndef get_json(url, x, my_headers):\n    datas = {\n        'first': 'false',\n        'pn'   : x,\n        'kd'   : 'python',\n    }\n    ses = requests.session( )  # 获取 session\n    ses.headers.update(my_headers)  # 更新\n    ses.get(\n        \"https://www.lagou.com/jobs/list_python?city=%E5%85%A8%E5%9B%BD&cl=false&fromSearch=true&labelWords=&suginput=\")\n    content = ses.post(url = url, data = datas)\n    result = content.json( )\n    info = result['content']['positionResult']['result']\n    info_list = []\n    for job in info:\n        information = []\n        information.append(job['positionId'])  # 岗位对应 ID\n        information.append(job['city'])  # 岗位对应城市\n        information.append(job['companyFullName'])  # 公司全名\n        information.append(job['companyLabelList'])  # 福利待遇\n        information.append(job['district'])  # 工作地点\n        information.append(job['education'])  # 学历要求\n        information.append(job['firstType'])  # 工作类型\n        information.append(job['formatCreateTime'])  # 发布时间\n        information.append(job['positionName'])  # 职位名称\n        information.append(job['salary'])  # 薪资\n        information.append(job['workYear'])  # 工作年限\n        info_list.append(information)\n    return info_list\n\n\nif __name__ == '__main__':\n    header = [\n        \"positionId\",\n        \"city\",\n        \"companyFullName\",\n        \"companyLabelList\",\n        \"district\",\n        \"education\",\n        \"firstType\",\n        \"formatCreateTime\",\n        \"positionName\",\n        \"salary\",\n        \"workYear\",\n    ]\n    url = 'https://www.lagou.com/jobs/positionAjax.json?needAddtionalResult=false'\n    my_headers = {\n        \"Content-Type\": \"application/x-www-form-urlencoded;charset = UTF-8\",\n        \"User-Agent\"  : \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) \"\n                        \"Chrome/72.0.3626.119 Safari/537.36\",\n        \"Referer\"     : \"https://www.lagou.com/jobs/list_Python?city=%E5%85%A8%E5%9B%BD&cl=false&fromSearch=true\"\n                        \"&labelWords=&suginput=\",\n    }\n    with open(\"test.csv\", \"w\", newline = \"\", encoding = \"utf-8\") as csv_file:\n        writer = csv.writer(csv_file)\n        writer.writerow(header)\n        for x in range(1, 10):\n            try:\n                info = get_json(url, x)\n            except Exception as msg:\n                info = get_json(url, x, my_headers)\n            print(\"第%s 页正常采集\" % x)\n            writer.writerows(info)\n\n```\n\n\n\n## 2.清洗数据并显示\n\n```python\n# coding=utf-8\nimport csv\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\n\nmpl.rcParams['font.sans-serif'] = ['KaiTi']  # 能显示中文\nlabels = ['北京', '上海', '深圳', '成都', '广州', '杭州', '武汉', '南京', '苏州', '郑州']\ndata = [149, 95, 77, 22, 17, 17, 16, 13, 7, 5]\n\nfile = r\"F:\\python\\Work\\拉勾网数据分析\\test.csv\"\nwith open(file, 'r', encoding = \"utf-8\") as f:\n    reader = csv.reader(f)\n    Shenzhen = []\n    Guangzhou = []\n    Beijing = []\n    Hangzhou = []\n    Shanghai = []\n    for row in reader:\n        # print(row)\n        if row[1] == \"深圳\":\n            Shenzhen.append(row[1])\n        elif row[1] == \"广州\":\n            Guangzhou.append(row[1])\n        elif row[1] == \"北京\":\n            Beijing.append(row[1])\n        elif row[1] == \"杭州\":\n            Hangzhou.append(row[1])\n        elif row[1] == \"上海\":\n            Shanghai.append(row[1])\nindex = [\"深圳\", \"广州\", \"北京\", \"杭州\", \"上海\"]\ndata = [len(Shenzhen), len(Guangzhou), len(Beijing), len(Hangzhou), len(Shanghai)]\nplt.bar(index, data)\nplt.show( )\n\n```\n\n\n![](lagou.jpg)","categories":["Python"]}]